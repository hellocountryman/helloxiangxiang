a.This -> a.a:
    char[] K -> a
    char[] M -> b
    java.lang.String charsetName -> c
    char[] Code(byte[]) -> b
    java.lang.String V(byte[]) -> a
    java.lang.String toString() -> toString
a.thing -> a.b:
    java.lang.String url -> a
    int N -> b
    java.util.Map O -> c
    org.json.JSONObject params -> d
    byte[] Code(java.lang.String,java.lang.String) -> a
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat:
    android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl IMPL -> IMPL
    int CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT -> CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT
    int CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION -> CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION
    int CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY -> CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY
    int CAPABILITY_CAN_FILTER_KEY_EVENTS -> CAPABILITY_CAN_FILTER_KEY_EVENTS
    int FEEDBACK_BRAILLE -> FEEDBACK_BRAILLE
    int FEEDBACK_ALL_MASK -> FEEDBACK_ALL_MASK
    int DEFAULT -> DEFAULT
    int FLAG_INCLUDE_NOT_IMPORTANT_VIEWS -> FLAG_INCLUDE_NOT_IMPORTANT_VIEWS
    int FLAG_REQUEST_TOUCH_EXPLORATION_MODE -> FLAG_REQUEST_TOUCH_EXPLORATION_MODE
    int FLAG_REQUEST_ENHANCED_WEB_ACCESSIBILITY -> FLAG_REQUEST_ENHANCED_WEB_ACCESSIBILITY
    int FLAG_REPORT_VIEW_IDS -> FLAG_REPORT_VIEW_IDS
    int FLAG_REQUEST_FILTER_KEY_EVENTS -> FLAG_REQUEST_FILTER_KEY_EVENTS
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String feedbackTypeToString(int) -> feedbackTypeToString
    java.lang.String flagToString(int) -> flagToString
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
    java.lang.String capabilityToString(int) -> capabilityToString
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoJellyBeanMr2 -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoJellyBeanMr2:
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl:
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatJellyBeanMr2 -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatJellyBeanMr2:
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.app.ActionBarDrawerToggle -> android.support.v4.app.ActionBarDrawerToggle:
    android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl IMPL -> IMPL
    float TOGGLE_DRAWABLE_OFFSET -> TOGGLE_DRAWABLE_OFFSET
    int ID_HOME -> ID_HOME
    android.app.Activity mActivity -> mActivity
    android.support.v4.app.ActionBarDrawerToggle$Delegate mActivityImpl -> mActivityImpl
    android.support.v4.widget.DrawerLayout mDrawerLayout -> mDrawerLayout
    boolean mDrawerIndicatorEnabled -> mDrawerIndicatorEnabled
    android.graphics.drawable.Drawable mThemeImage -> mThemeImage
    android.graphics.drawable.Drawable mDrawerImage -> mDrawerImage
    android.support.v4.app.ActionBarDrawerToggle$SlideDrawable mSlider -> mSlider
    int mDrawerImageResource -> mDrawerImageResource
    int mOpenDrawerContentDescRes -> mOpenDrawerContentDescRes
    int mCloseDrawerContentDescRes -> mCloseDrawerContentDescRes
    java.lang.Object mSetIndicatorInfo -> mSetIndicatorInfo
    void syncState() -> syncState
    void setDrawerIndicatorEnabled(boolean) -> setDrawerIndicatorEnabled
    boolean isDrawerIndicatorEnabled() -> isDrawerIndicatorEnabled
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
    android.app.Activity access$400(android.support.v4.app.ActionBarDrawerToggle) -> access$400
android.support.v4.app.ActionBarDrawerToggle$1 -> android.support.v4.app.ActionBarDrawerToggle$1:
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplJellybeanMR2 -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplJellybeanMR2:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$Delegate -> android.support.v4.app.ActionBarDrawerToggle$Delegate:
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$DelegateProvider -> android.support.v4.app.ActionBarDrawerToggle$DelegateProvider:
    android.support.v4.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
android.support.v4.app.ActionBarDrawerToggle$SlideDrawable -> android.support.v4.app.ActionBarDrawerToggle$SlideDrawable:
    boolean mHasMirroring -> mHasMirroring
    android.graphics.Rect mTmpRect -> mTmpRect
    float mPosition -> mPosition
    float mOffset -> mOffset
    android.support.v4.app.ActionBarDrawerToggle this$0 -> this$0
    void setPosition(float) -> setPosition
    float getPosition() -> getPosition
    void setOffset(float) -> setOffset
    void draw(android.graphics.Canvas) -> draw
android.support.v4.app.ActionBarDrawerToggleHoneycomb -> android.support.v4.app.ActionBarDrawerToggleHoneycomb:
    java.lang.String TAG -> TAG
    int[] THEME_ATTRS -> THEME_ATTRS
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo -> android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo:
    java.lang.reflect.Method setHomeAsUpIndicator -> setHomeAsUpIndicator
    java.lang.reflect.Method setHomeActionContentDescription -> setHomeActionContentDescription
    android.widget.ImageView upIndicatorView -> upIndicatorView
android.support.v4.app.ActionBarDrawerToggleJellybeanMR2 -> android.support.v4.app.ActionBarDrawerToggleJellybeanMR2:
    java.lang.String TAG -> TAG
    int[] THEME_ATTRS -> THEME_ATTRS
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
android.support.v4.app.ActivityCompat -> android.support.v4.app.ActivityCompat:
    boolean invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void startActivity(android.app.Activity,android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void finishAffinity(android.app.Activity) -> finishAffinity
android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.ActivityCompatHoneycomb:
    void invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void dump(android.app.Activity,java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.ActivityCompatJB -> android.support.v4.app.ActivityCompatJB:
    void startActivity(android.content.Context,android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void finishAffinity(android.app.Activity) -> finishAffinity
android.support.v4.app.ActivityOptionsCompat -> android.support.v4.app.ActivityOptionsCompat:
    android.support.v4.app.ActivityOptionsCompat makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    android.support.v4.app.ActivityOptionsCompat makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompat makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB -> android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB:
    android.support.v4.app.ActivityOptionsCompatJB mImpl -> mImpl
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompatJB -> android.support.v4.app.ActivityOptionsCompatJB:
    android.app.ActivityOptions mActivityOptions -> mActivityOptions
    android.support.v4.app.ActivityOptionsCompatJB makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    android.support.v4.app.ActivityOptionsCompatJB makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompatJB makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompatJB) -> update
android.support.v4.app.BackStackRecord -> android.support.v4.app.BackStackRecord:
    java.lang.String TAG -> TAG
    android.support.v4.app.FragmentManagerImpl mManager -> mManager
    int OP_NULL -> OP_NULL
    int OP_ADD -> OP_ADD
    int OP_REPLACE -> OP_REPLACE
    int OP_REMOVE -> OP_REMOVE
    int OP_HIDE -> OP_HIDE
    int OP_SHOW -> OP_SHOW
    int OP_DETACH -> OP_DETACH
    int OP_ATTACH -> OP_ATTACH
    android.support.v4.app.BackStackRecord$Op mHead -> mHead
    android.support.v4.app.BackStackRecord$Op mTail -> mTail
    int mNumOp -> mNumOp
    int mEnterAnim -> mEnterAnim
    int mExitAnim -> mExitAnim
    int mPopEnterAnim -> mPopEnterAnim
    int mPopExitAnim -> mPopExitAnim
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    boolean mAddToBackStack -> mAddToBackStack
    boolean mAllowAddToBackStack -> mAllowAddToBackStack
    java.lang.String mName -> mName
    boolean mCommitted -> mCommitted
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> dump
    int getId() -> getId
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
    void addOp(android.support.v4.app.BackStackRecord$Op) -> addOp
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> doAddOp
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    void bumpBackStackNesting(int) -> bumpBackStackNesting
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
    int commitInternal(boolean) -> commitInternal
    void run() -> run
    void popFromBackStack(boolean) -> popFromBackStack
    java.lang.String getName() -> getName
    int getTransition() -> getTransition
    int getTransitionStyle() -> getTransitionStyle
    boolean isEmpty() -> isEmpty
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.BackStackRecord$Op:
    android.support.v4.app.BackStackRecord$Op next -> next
    android.support.v4.app.BackStackRecord$Op prev -> prev
    int cmd -> cmd
    android.support.v4.app.Fragment fragment -> fragment
    int enterAnim -> enterAnim
    int exitAnim -> exitAnim
    int popEnterAnim -> popEnterAnim
    int popExitAnim -> popExitAnim
    java.util.ArrayList removed -> removed
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> mOps
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    java.lang.String mName -> mName
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.BackStackState$1:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.BackStackState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.DialogFragment -> android.support.v4.app.DialogFragment:
    int STYLE_NORMAL -> STYLE_NORMAL
    int STYLE_NO_TITLE -> STYLE_NO_TITLE
    int STYLE_NO_FRAME -> STYLE_NO_FRAME
    int STYLE_NO_INPUT -> STYLE_NO_INPUT
    java.lang.String SAVED_DIALOG_STATE_TAG -> SAVED_DIALOG_STATE_TAG
    java.lang.String SAVED_STYLE -> SAVED_STYLE
    java.lang.String SAVED_THEME -> SAVED_THEME
    java.lang.String SAVED_CANCELABLE -> SAVED_CANCELABLE
    java.lang.String SAVED_SHOWS_DIALOG -> SAVED_SHOWS_DIALOG
    java.lang.String SAVED_BACK_STACK_ID -> SAVED_BACK_STACK_ID
    int mStyle -> mStyle
    int mTheme -> mTheme
    boolean mCancelable -> mCancelable
    boolean mShowsDialog -> mShowsDialog
    int mBackStackId -> mBackStackId
    android.app.Dialog mDialog -> mDialog
    boolean mViewDestroyed -> mViewDestroyed
    boolean mDismissed -> mDismissed
    boolean mShownByMe -> mShownByMe
    void setStyle(int,int) -> setStyle
    void show(android.support.v4.app.FragmentManager,java.lang.String) -> show
    int show(android.support.v4.app.FragmentTransaction,java.lang.String) -> show
    void dismiss() -> dismiss
    void dismissAllowingStateLoss() -> dismissAllowingStateLoss
    void dismissInternal(boolean) -> dismissInternal
    android.app.Dialog getDialog() -> getDialog
    int getTheme() -> getTheme
    void setCancelable(boolean) -> setCancelable
    boolean isCancelable() -> isCancelable
    void setShowsDialog(boolean) -> setShowsDialog
    boolean getShowsDialog() -> getShowsDialog
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void onCancel(android.content.DialogInterface) -> onCancel
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    android.support.v4.util.SimpleArrayMap sClassMap -> sClassMap
    int INITIALIZING -> INITIALIZING
    int CREATED -> CREATED
    int ACTIVITY_CREATED -> ACTIVITY_CREATED
    int STOPPED -> STOPPED
    int STARTED -> STARTED
    int RESUMED -> RESUMED
    int mState -> mState
    android.view.View mAnimatingAway -> mAnimatingAway
    int mStateAfterAnimating -> mStateAfterAnimating
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.util.SparseArray mSavedViewState -> mSavedViewState
    int mIndex -> mIndex
    java.lang.String mWho -> mWho
    android.os.Bundle mArguments -> mArguments
    android.support.v4.app.Fragment mTarget -> mTarget
    int mTargetIndex -> mTargetIndex
    int mTargetRequestCode -> mTargetRequestCode
    boolean mAdded -> mAdded
    boolean mRemoving -> mRemoving
    boolean mResumed -> mResumed
    boolean mFromLayout -> mFromLayout
    boolean mInLayout -> mInLayout
    boolean mRestored -> mRestored
    int mBackStackNesting -> mBackStackNesting
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> mChildFragmentManager
    android.support.v4.app.Fragment mParentFragment -> mParentFragment
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mHidden -> mHidden
    boolean mDetached -> mDetached
    boolean mRetainInstance -> mRetainInstance
    boolean mRetaining -> mRetaining
    boolean mHasMenu -> mHasMenu
    boolean mMenuVisible -> mMenuVisible
    boolean mCalled -> mCalled
    int mNextAnim -> mNextAnim
    android.view.ViewGroup mContainer -> mContainer
    android.view.View mView -> mView
    android.view.View mInnerView -> mInnerView
    boolean mDeferStart -> mDeferStart
    boolean mUserVisibleHint -> mUserVisibleHint
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> isSupportFragmentClass
    void restoreViewState(android.os.Bundle) -> restoreViewState
    void setIndex(int,android.support.v4.app.Fragment) -> setIndex
    boolean isInBackStack() -> isInBackStack
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getId() -> getId
    java.lang.String getTag() -> getTag
    void setArguments(android.os.Bundle) -> setArguments
    android.os.Bundle getArguments() -> getArguments
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> setInitialSavedState
    void setTargetFragment(android.support.v4.app.Fragment,int) -> setTargetFragment
    android.support.v4.app.Fragment getTargetFragment() -> getTargetFragment
    int getTargetRequestCode() -> getTargetRequestCode
    android.support.v4.app.FragmentActivity getActivity() -> getActivity
    android.content.res.Resources getResources() -> getResources
    java.lang.CharSequence getText(int) -> getText
    java.lang.String getString(int) -> getString
    java.lang.String getString(int,java.lang.Object[]) -> getString
    android.support.v4.app.FragmentManager getFragmentManager() -> getFragmentManager
    android.support.v4.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    android.support.v4.app.Fragment getParentFragment() -> getParentFragment
    boolean isAdded() -> isAdded
    boolean isDetached() -> isDetached
    boolean isRemoving() -> isRemoving
    boolean isInLayout() -> isInLayout
    boolean isResumed() -> isResumed
    boolean isVisible() -> isVisible
    boolean isHidden() -> isHidden
    boolean hasOptionsMenu() -> hasOptionsMenu
    boolean isMenuVisible() -> isMenuVisible
    void onHiddenChanged(boolean) -> onHiddenChanged
    void setRetainInstance(boolean) -> setRetainInstance
    boolean getRetainInstance() -> getRetainInstance
    void setHasOptionsMenu(boolean) -> setHasOptionsMenu
    void setMenuVisibility(boolean) -> setMenuVisibility
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    boolean getUserVisibleHint() -> getUserVisibleHint
    android.support.v4.app.LoaderManager getLoaderManager() -> getLoaderManager
    void startActivity(android.content.Intent) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onAttach(android.app.Activity) -> onAttach
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    android.view.View getView() -> getView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> onPause
    void onStop() -> onStop
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void initState() -> initState
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void registerForContextMenu(android.view.View) -> registerForContextMenu
    void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void instantiateChildFragmentManager() -> instantiateChildFragmentManager
    void performCreate(android.os.Bundle) -> performCreate
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    void performActivityCreated(android.os.Bundle) -> performActivityCreated
    void performStart() -> performStart
    void performResume() -> performResume
    void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    void performLowMemory() -> performLowMemory
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    void performPause() -> performPause
    void performStop() -> performStop
    void performReallyStop() -> performReallyStop
    void performDestroyView() -> performDestroyView
    void performDestroy() -> performDestroy
android.support.v4.app.Fragment$1 -> android.support.v4.app.Fragment$1:
    android.support.v4.app.Fragment this$0 -> this$0
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.Fragment$InstantiationException:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> mState
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.Fragment$SavedState$1:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    java.lang.String TAG -> TAG
    java.lang.String FRAGMENTS_TAG -> FRAGMENTS_TAG
    int HONEYCOMB -> HONEYCOMB
    int MSG_REALLY_STOPPED -> MSG_REALLY_STOPPED
    int MSG_RESUME_PENDING -> MSG_RESUME_PENDING
    android.os.Handler mHandler -> mHandler
    android.support.v4.app.FragmentManagerImpl mFragments -> mFragments
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    boolean mCreated -> mCreated
    boolean mResumed -> mResumed
    boolean mStopped -> mStopped
    boolean mReallyStopped -> mReallyStopped
    boolean mRetaining -> mRetaining
    boolean mOptionsMenuInvalidated -> mOptionsMenuInvalidated
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    android.support.v4.util.SimpleArrayMap mAllLoaderManagers -> mAllLoaderManagers
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> onResumeFragments
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> onPrepareOptionsPanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> onRetainCustomNonConfigurationInstance
    java.lang.Object getLastCustomNonConfigurationInstance() -> getLastCustomNonConfigurationInstance
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> viewToString
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> dumpViewHierarchy
    void doReallyStop(boolean) -> doReallyStop
    void onReallyStop() -> onReallyStop
    void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> startActivityFromFragment
    void invalidateSupportFragment(java.lang.String) -> invalidateSupportFragment
    android.support.v4.app.LoaderManager getSupportLoaderManager() -> getSupportLoaderManager
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> getLoaderManager
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.FragmentActivity$1:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.FragmentActivity$2:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.FragmentActivity$FragmentTag:
    int[] Fragment -> Fragment
    int Fragment_id -> Fragment_id
    int Fragment_name -> Fragment_name
    int Fragment_tag -> Fragment_tag
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.FragmentActivity$NonConfigurationInstances:
    java.lang.Object activity -> activity
    java.lang.Object custom -> custom
    android.support.v4.util.SimpleArrayMap children -> children
    java.util.ArrayList fragments -> fragments
    android.support.v4.util.SimpleArrayMap loaders -> loaders
android.support.v4.app.FragmentContainer -> android.support.v4.app.FragmentContainer:
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.FragmentManager -> android.support.v4.app.FragmentManager:
    int POP_BACK_STACK_INCLUSIVE -> POP_BACK_STACK_INCLUSIVE
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    android.support.v4.app.FragmentTransaction openTransaction() -> openTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    java.util.List getFragments() -> getFragments
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    boolean isDestroyed() -> isDestroyed
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
android.support.v4.app.FragmentManager$BackStackEntry -> android.support.v4.app.FragmentManager$BackStackEntry:
    int getId() -> getId
    java.lang.String getName() -> getName
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.FragmentManager$OnBackStackChangedListener:
    void onBackStackChanged() -> onBackStackChanged
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.FragmentManagerImpl:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    boolean HONEYCOMB -> HONEYCOMB
    java.lang.String TARGET_REQUEST_CODE_STATE_TAG -> TARGET_REQUEST_CODE_STATE_TAG
    java.lang.String TARGET_STATE_TAG -> TARGET_STATE_TAG
    java.lang.String VIEW_STATE_TAG -> VIEW_STATE_TAG
    java.lang.String USER_VISIBLE_HINT_TAG -> USER_VISIBLE_HINT_TAG
    java.util.ArrayList mPendingActions -> mPendingActions
    java.lang.Runnable[] mTmpActions -> mTmpActions
    boolean mExecutingActions -> mExecutingActions
    java.util.ArrayList mActive -> mActive
    java.util.ArrayList mAdded -> mAdded
    java.util.ArrayList mAvailIndices -> mAvailIndices
    java.util.ArrayList mBackStack -> mBackStack
    java.util.ArrayList mCreatedMenus -> mCreatedMenus
    java.util.ArrayList mBackStackIndices -> mBackStackIndices
    java.util.ArrayList mAvailBackStackIndices -> mAvailBackStackIndices
    java.util.ArrayList mBackStackChangeListeners -> mBackStackChangeListeners
    int mCurState -> mCurState
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    android.support.v4.app.Fragment mParent -> mParent
    boolean mNeedMenuInvalidate -> mNeedMenuInvalidate
    boolean mStateSaved -> mStateSaved
    boolean mDestroyed -> mDestroyed
    java.lang.String mNoTransactionsBecause -> mNoTransactionsBecause
    boolean mHavePendingDeferredStart -> mHavePendingDeferredStart
    android.os.Bundle mStateBundle -> mStateBundle
    android.util.SparseArray mStateArray -> mStateArray
    java.lang.Runnable mExecCommit -> mExecCommit
    android.view.animation.Interpolator DECELERATE_QUINT -> DECELERATE_QUINT
    android.view.animation.Interpolator DECELERATE_CUBIC -> DECELERATE_CUBIC
    android.view.animation.Interpolator ACCELERATE_QUINT -> ACCELERATE_QUINT
    android.view.animation.Interpolator ACCELERATE_CUBIC -> ACCELERATE_CUBIC
    int ANIM_DUR -> ANIM_DUR
    int ANIM_STYLE_OPEN_ENTER -> ANIM_STYLE_OPEN_ENTER
    int ANIM_STYLE_OPEN_EXIT -> ANIM_STYLE_OPEN_EXIT
    int ANIM_STYLE_CLOSE_ENTER -> ANIM_STYLE_CLOSE_ENTER
    int ANIM_STYLE_CLOSE_EXIT -> ANIM_STYLE_CLOSE_EXIT
    int ANIM_STYLE_FADE_ENTER -> ANIM_STYLE_FADE_ENTER
    int ANIM_STYLE_FADE_EXIT -> ANIM_STYLE_FADE_EXIT
    void throwException(java.lang.RuntimeException) -> throwException
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    java.util.List getFragments() -> getFragments
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    boolean isDestroyed() -> isDestroyed
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> makeOpenCloseAnimation
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> makeFadeAnimation
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> loadAnimation
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> performPendingDeferredStart
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> moveToState
    void moveToState(android.support.v4.app.Fragment) -> moveToState
    void moveToState(int,boolean) -> moveToState
    void moveToState(int,int,int,boolean) -> moveToState
    void startPendingDeferredFragments() -> startPendingDeferredFragments
    void makeActive(android.support.v4.app.Fragment) -> makeActive
    void makeInactive(android.support.v4.app.Fragment) -> makeInactive
    void addFragment(android.support.v4.app.Fragment,boolean) -> addFragment
    void removeFragment(android.support.v4.app.Fragment,int,int) -> removeFragment
    void hideFragment(android.support.v4.app.Fragment,int,int) -> hideFragment
    void showFragment(android.support.v4.app.Fragment,int,int) -> showFragment
    void detachFragment(android.support.v4.app.Fragment,int,int) -> detachFragment
    void attachFragment(android.support.v4.app.Fragment,int,int) -> attachFragment
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void checkStateLoss() -> checkStateLoss
    void enqueueAction(java.lang.Runnable,boolean) -> enqueueAction
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> allocBackStackIndex
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> setBackStackIndex
    void freeBackStackIndex(int) -> freeBackStackIndex
    boolean execPendingActions() -> execPendingActions
    void reportBackStackChanged() -> reportBackStackChanged
    void addBackStackState(android.support.v4.app.BackStackRecord) -> addBackStackState
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> popBackStackState
    java.util.ArrayList retainNonConfig() -> retainNonConfig
    void saveFragmentViewState(android.support.v4.app.Fragment) -> saveFragmentViewState
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> saveFragmentBasicState
    android.os.Parcelable saveAllState() -> saveAllState
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> restoreAllState
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> attachActivity
    void noteStateNotSaved() -> noteStateNotSaved
    void dispatchCreate() -> dispatchCreate
    void dispatchActivityCreated() -> dispatchActivityCreated
    void dispatchStart() -> dispatchStart
    void dispatchResume() -> dispatchResume
    void dispatchPause() -> dispatchPause
    void dispatchStop() -> dispatchStop
    void dispatchReallyStop() -> dispatchReallyStop
    void dispatchDestroyView() -> dispatchDestroyView
    void dispatchDestroy() -> dispatchDestroy
    void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    void dispatchLowMemory() -> dispatchLowMemory
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    int reverseTransit(int) -> reverseTransit
    int transitToStyleIndex(int,boolean) -> transitToStyleIndex
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.FragmentManagerImpl$1:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$2 -> android.support.v4.app.FragmentManagerImpl$2:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$3 -> android.support.v4.app.FragmentManagerImpl$3:
    java.lang.String val$name -> val$name
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.FragmentManagerImpl$4:
    int val$id -> val$id
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.FragmentManagerImpl$5:
    android.support.v4.app.Fragment val$fragment -> val$fragment
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> mActive
    int[] mAdded -> mAdded
    android.support.v4.app.BackStackState[] mBackStack -> mBackStack
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.FragmentManagerState$1:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentManagerState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentPagerAdapter -> android.support.v4.app.FragmentPagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    long getItemId(int) -> getItemId
    java.lang.String makeFragmentName(int,long) -> makeFragmentName
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> mClassName
    int mIndex -> mIndex
    boolean mFromLayout -> mFromLayout
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mRetainInstance -> mRetainInstance
    boolean mDetached -> mDetached
    android.os.Bundle mArguments -> mArguments
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.support.v4.app.Fragment mInstance -> mInstance
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.FragmentState$1:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentStatePagerAdapter -> android.support.v4.app.FragmentStatePagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    java.util.ArrayList mSavedState -> mSavedState
    java.util.ArrayList mFragments -> mFragments
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> mTabs
    android.widget.FrameLayout mRealTabContent -> mRealTabContent
    android.content.Context mContext -> mContext
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    int mContainerId -> mContainerId
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> mOnTabChangeListener
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> mLastTab
    boolean mAttached -> mAttached
    void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> initFragmentTabHost
    void ensureHierarchy(android.content.Context) -> ensureHierarchy
    void setup() -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager) -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager,int) -> setup
    void ensureContent() -> ensureContent
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle) -> addTab
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> doTabChanged
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.FragmentTabHost$1:
android.support.v4.app.FragmentTabHost$DummyTabFactory -> android.support.v4.app.FragmentTabHost$DummyTabFactory:
    android.content.Context mContext -> mContext
    android.view.View createTabContent(java.lang.String) -> createTabContent
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> curTab
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.FragmentTabHost$SavedState$1:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.FragmentTabHost$TabInfo:
    java.lang.String tag -> tag
    java.lang.Class clss -> clss
    android.os.Bundle args -> args
    android.support.v4.app.Fragment fragment -> fragment
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> access$102
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> access$100
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> access$200
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> access$300
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> access$400
android.support.v4.app.FragmentTransaction -> android.support.v4.app.FragmentTransaction:
    int TRANSIT_ENTER_MASK -> TRANSIT_ENTER_MASK
    int TRANSIT_EXIT_MASK -> TRANSIT_EXIT_MASK
    int TRANSIT_UNSET -> TRANSIT_UNSET
    int TRANSIT_NONE -> TRANSIT_NONE
    int TRANSIT_FRAGMENT_OPEN -> TRANSIT_FRAGMENT_OPEN
    int TRANSIT_FRAGMENT_CLOSE -> TRANSIT_FRAGMENT_CLOSE
    int TRANSIT_FRAGMENT_FADE -> TRANSIT_FRAGMENT_FADE
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    boolean isEmpty() -> isEmpty
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
android.support.v4.app.ListFragment -> android.support.v4.app.ListFragment:
    int INTERNAL_EMPTY_ID -> INTERNAL_EMPTY_ID
    int INTERNAL_PROGRESS_CONTAINER_ID -> INTERNAL_PROGRESS_CONTAINER_ID
    int INTERNAL_LIST_CONTAINER_ID -> INTERNAL_LIST_CONTAINER_ID
    android.os.Handler mHandler -> mHandler
    java.lang.Runnable mRequestFocus -> mRequestFocus
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> mOnClickListener
    android.widget.ListAdapter mAdapter -> mAdapter
    android.widget.ListView mList -> mList
    android.view.View mEmptyView -> mEmptyView
    android.widget.TextView mStandardEmptyView -> mStandardEmptyView
    android.view.View mProgressContainer -> mProgressContainer
    android.view.View mListContainer -> mListContainer
    java.lang.CharSequence mEmptyText -> mEmptyText
    boolean mListShown -> mListShown
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onDestroyView() -> onDestroyView
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    void setListAdapter(android.widget.ListAdapter) -> setListAdapter
    void setSelection(int) -> setSelection
    int getSelectedItemPosition() -> getSelectedItemPosition
    long getSelectedItemId() -> getSelectedItemId
    android.widget.ListView getListView() -> getListView
    void setEmptyText(java.lang.CharSequence) -> setEmptyText
    void setListShown(boolean) -> setListShown
    void setListShownNoAnimation(boolean) -> setListShownNoAnimation
    void setListShown(boolean,boolean) -> setListShown
    android.widget.ListAdapter getListAdapter() -> getListAdapter
    void ensureList() -> ensureList
android.support.v4.app.ListFragment$1 -> android.support.v4.app.ListFragment$1:
    android.support.v4.app.ListFragment this$0 -> this$0
    void run() -> run
android.support.v4.app.ListFragment$2 -> android.support.v4.app.ListFragment$2:
    android.support.v4.app.ListFragment this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v4.app.LoaderManager -> android.support.v4.app.LoaderManager:
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.LoaderManager$LoaderCallbacks:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.LoaderManagerImpl:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.util.SparseArrayCompat mLoaders -> mLoaders
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> mInactiveLoaders
    java.lang.String mWho -> mWho
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mCreatingLoader -> mCreatingLoader
    void updateActivity(android.support.v4.app.FragmentActivity) -> updateActivity
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createLoader
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createAndInstallLoader
    void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo) -> installLoader
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void doStart() -> doStart
    void doStop() -> doStop
    void doRetain() -> doRetain
    void finishRetain() -> finishRetain
    void doReportNextStart() -> doReportNextStart
    void doReportStart() -> doReportStart
    void doDestroy() -> doDestroy
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.LoaderManagerImpl$LoaderInfo:
    int mId -> mId
    android.os.Bundle mArgs -> mArgs
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> mCallbacks
    android.support.v4.content.Loader mLoader -> mLoader
    boolean mHaveData -> mHaveData
    boolean mDeliveredData -> mDeliveredData
    java.lang.Object mData -> mData
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mReportNextStart -> mReportNextStart
    boolean mDestroyed -> mDestroyed
    boolean mListenerRegistered -> mListenerRegistered
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> mPendingLoader
    android.support.v4.app.LoaderManagerImpl this$0 -> this$0
    void start() -> start
    void retain() -> retain
    void finishRetain() -> finishRetain
    void reportStart() -> reportStart
    void stop() -> stop
    void destroy() -> destroy
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> callOnLoadFinished
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.NavUtils -> android.support.v4.app.NavUtils:
    java.lang.String TAG -> TAG
    java.lang.String PARENT_ACTIVITY -> PARENT_ACTIVITY
    android.support.v4.app.NavUtils$NavUtilsImpl IMPL -> IMPL
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpFromSameTask(android.app.Activity) -> navigateUpFromSameTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> getParentActivityIntent
    java.lang.String getParentActivityName(android.app.Activity) -> getParentActivityName
    java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImpl -> android.support.v4.app.NavUtils$NavUtilsImpl:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplBase -> android.support.v4.app.NavUtils$NavUtilsImplBase:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplJB -> android.support.v4.app.NavUtils$NavUtilsImplJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent superGetParentActivityIntent(android.app.Activity) -> superGetParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtilsJB -> android.support.v4.app.NavUtilsJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.NoSaveStateFrameLayout:
    android.view.ViewGroup wrap(android.view.View) -> wrap
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationCompat -> android.support.v4.app.NotificationCompat:
    int FLAG_HIGH_PRIORITY -> FLAG_HIGH_PRIORITY
    int PRIORITY_DEFAULT -> PRIORITY_DEFAULT
    int PRIORITY_LOW -> PRIORITY_LOW
    int PRIORITY_MIN -> PRIORITY_MIN
    int PRIORITY_HIGH -> PRIORITY_HIGH
    int PRIORITY_MAX -> PRIORITY_MAX
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> IMPL
    android.support.v4.app.NotificationCompat$NotificationCompatImpl access$000() -> access$000
android.support.v4.app.NotificationCompat$Action -> android.support.v4.app.NotificationCompat$Action:
    int icon -> icon
    java.lang.CharSequence title -> title
    android.app.PendingIntent actionIntent -> actionIntent
android.support.v4.app.NotificationCompat$BigPictureStyle -> android.support.v4.app.NotificationCompat$BigPictureStyle:
    android.graphics.Bitmap mPicture -> mPicture
    android.graphics.Bitmap mBigLargeIcon -> mBigLargeIcon
    boolean mBigLargeIconSet -> mBigLargeIconSet
    android.support.v4.app.NotificationCompat$BigPictureStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigPictureStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigPictureStyle bigPicture(android.graphics.Bitmap) -> bigPicture
    android.support.v4.app.NotificationCompat$BigPictureStyle bigLargeIcon(android.graphics.Bitmap) -> bigLargeIcon
android.support.v4.app.NotificationCompat$BigTextStyle -> android.support.v4.app.NotificationCompat$BigTextStyle:
    java.lang.CharSequence mBigText -> mBigText
    android.support.v4.app.NotificationCompat$BigTextStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigTextStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence) -> bigText
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.NotificationCompat$Builder:
    android.content.Context mContext -> mContext
    java.lang.CharSequence mContentTitle -> mContentTitle
    java.lang.CharSequence mContentText -> mContentText
    android.app.PendingIntent mContentIntent -> mContentIntent
    android.app.PendingIntent mFullScreenIntent -> mFullScreenIntent
    android.widget.RemoteViews mTickerView -> mTickerView
    android.graphics.Bitmap mLargeIcon -> mLargeIcon
    java.lang.CharSequence mContentInfo -> mContentInfo
    int mNumber -> mNumber
    int mPriority -> mPriority
    boolean mUseChronometer -> mUseChronometer
    android.support.v4.app.NotificationCompat$Style mStyle -> mStyle
    java.lang.CharSequence mSubText -> mSubText
    int mProgressMax -> mProgressMax
    int mProgress -> mProgress
    boolean mProgressIndeterminate -> mProgressIndeterminate
    java.util.ArrayList mActions -> mActions
    android.app.Notification mNotification -> mNotification
    android.support.v4.app.NotificationCompat$Builder setWhen(long) -> setWhen
    android.support.v4.app.NotificationCompat$Builder setUsesChronometer(boolean) -> setUsesChronometer
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int,int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> setContentTitle
    android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> setContentText
    android.support.v4.app.NotificationCompat$Builder setSubText(java.lang.CharSequence) -> setSubText
    android.support.v4.app.NotificationCompat$Builder setNumber(int) -> setNumber
    android.support.v4.app.NotificationCompat$Builder setContentInfo(java.lang.CharSequence) -> setContentInfo
    android.support.v4.app.NotificationCompat$Builder setProgress(int,int,boolean) -> setProgress
    android.support.v4.app.NotificationCompat$Builder setContent(android.widget.RemoteViews) -> setContent
    android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> setContentIntent
    android.support.v4.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent) -> setDeleteIntent
    android.support.v4.app.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean) -> setFullScreenIntent
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri) -> setSound
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri,int) -> setSound
    android.support.v4.app.NotificationCompat$Builder setVibrate(long[]) -> setVibrate
    android.support.v4.app.NotificationCompat$Builder setLights(int,int,int) -> setLights
    android.support.v4.app.NotificationCompat$Builder setOngoing(boolean) -> setOngoing
    android.support.v4.app.NotificationCompat$Builder setOnlyAlertOnce(boolean) -> setOnlyAlertOnce
    android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean) -> setAutoCancel
    android.support.v4.app.NotificationCompat$Builder setDefaults(int) -> setDefaults
    void setFlag(int,boolean) -> setFlag
    android.support.v4.app.NotificationCompat$Builder setPriority(int) -> setPriority
    android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    android.support.v4.app.NotificationCompat$Builder setStyle(android.support.v4.app.NotificationCompat$Style) -> setStyle
    android.app.Notification getNotification() -> getNotification
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompat$InboxStyle -> android.support.v4.app.NotificationCompat$InboxStyle:
    java.util.ArrayList mTexts -> mTexts
    android.support.v4.app.NotificationCompat$InboxStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$InboxStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$InboxStyle addLine(java.lang.CharSequence) -> addLine
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.NotificationCompat$NotificationCompatImpl:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.v4.app.NotificationCompat$NotificationCompatImplBase:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplGingerbread -> android.support.v4.app.NotificationCompat$NotificationCompatImplGingerbread:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich -> android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean -> android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$Style -> android.support.v4.app.NotificationCompat$Style:
    android.support.v4.app.NotificationCompat$Builder mBuilder -> mBuilder
    java.lang.CharSequence mBigContentTitle -> mBigContentTitle
    java.lang.CharSequence mSummaryText -> mSummaryText
    boolean mSummaryTextSet -> mSummaryTextSet
    void setBuilder(android.support.v4.app.NotificationCompat$Builder) -> setBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatGingerbread -> android.support.v4.app.NotificationCompatGingerbread:
    android.app.Notification add(android.app.Notification,android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent,android.app.PendingIntent) -> add
android.support.v4.app.NotificationCompatHoneycomb -> android.support.v4.app.NotificationCompatHoneycomb:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> add
android.support.v4.app.NotificationCompatIceCreamSandwich -> android.support.v4.app.NotificationCompatIceCreamSandwich:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean) -> add
android.support.v4.app.NotificationCompatJellybean -> android.support.v4.app.NotificationCompatJellybean:
    android.app.Notification$Builder b -> b
    void addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    void addBigTextStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> addBigTextStyle
    void addBigPictureStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean) -> addBigPictureStyle
    void addInboxStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> addInboxStyle
    android.app.Notification build() -> build
android.support.v4.app.ServiceCompat -> android.support.v4.app.ServiceCompat:
    int START_STICKY -> START_STICKY
android.support.v4.app.ShareCompat -> android.support.v4.app.ShareCompat:
    java.lang.String EXTRA_CALLING_PACKAGE -> EXTRA_CALLING_PACKAGE
    java.lang.String EXTRA_CALLING_ACTIVITY -> EXTRA_CALLING_ACTIVITY
    android.support.v4.app.ShareCompat$ShareCompatImpl IMPL -> IMPL
    java.lang.String getCallingPackage(android.app.Activity) -> getCallingPackage
    android.content.ComponentName getCallingActivity(android.app.Activity) -> getCallingActivity
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    void configureMenuItem(android.view.Menu,int,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    android.support.v4.app.ShareCompat$ShareCompatImpl access$000() -> access$000
android.support.v4.app.ShareCompat$IntentBuilder -> android.support.v4.app.ShareCompat$IntentBuilder:
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.CharSequence mChooserTitle -> mChooserTitle
    java.util.ArrayList mToAddresses -> mToAddresses
    java.util.ArrayList mCcAddresses -> mCcAddresses
    java.util.ArrayList mBccAddresses -> mBccAddresses
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentBuilder from(android.app.Activity) -> from
    android.content.Intent getIntent() -> getIntent
    android.app.Activity getActivity() -> getActivity
    void combineArrayExtra(java.lang.String,java.util.ArrayList) -> combineArrayExtra
    void combineArrayExtra(java.lang.String,java.lang.String[]) -> combineArrayExtra
    android.content.Intent createChooserIntent() -> createChooserIntent
    void startChooser() -> startChooser
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(java.lang.CharSequence) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(int) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setType(java.lang.String) -> setType
    android.support.v4.app.ShareCompat$IntentBuilder setText(java.lang.CharSequence) -> setText
    android.support.v4.app.ShareCompat$IntentBuilder setHtmlText(java.lang.String) -> setHtmlText
    android.support.v4.app.ShareCompat$IntentBuilder setStream(android.net.Uri) -> setStream
    android.support.v4.app.ShareCompat$IntentBuilder addStream(android.net.Uri) -> addStream
    android.support.v4.app.ShareCompat$IntentBuilder setEmailTo(java.lang.String[]) -> setEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String[]) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder setEmailCc(java.lang.String[]) -> setEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String[]) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder setEmailBcc(java.lang.String[]) -> setEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String[]) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder setSubject(java.lang.String) -> setSubject
android.support.v4.app.ShareCompat$IntentReader -> android.support.v4.app.ShareCompat$IntentReader:
    java.lang.String TAG -> TAG
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.String mCallingPackage -> mCallingPackage
    android.content.ComponentName mCallingActivity -> mCallingActivity
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentReader from(android.app.Activity) -> from
    boolean isShareIntent() -> isShareIntent
    boolean isSingleShare() -> isSingleShare
    boolean isMultipleShare() -> isMultipleShare
    java.lang.String getType() -> getType
    java.lang.CharSequence getText() -> getText
    java.lang.String getHtmlText() -> getHtmlText
    android.net.Uri getStream() -> getStream
    android.net.Uri getStream(int) -> getStream
    int getStreamCount() -> getStreamCount
    java.lang.String[] getEmailTo() -> getEmailTo
    java.lang.String[] getEmailCc() -> getEmailCc
    java.lang.String[] getEmailBcc() -> getEmailBcc
    java.lang.String getSubject() -> getSubject
    java.lang.String getCallingPackage() -> getCallingPackage
    android.content.ComponentName getCallingActivity() -> getCallingActivity
    android.graphics.drawable.Drawable getCallingActivityIcon() -> getCallingActivityIcon
    android.graphics.drawable.Drawable getCallingApplicationIcon() -> getCallingApplicationIcon
    java.lang.CharSequence getCallingApplicationLabel() -> getCallingApplicationLabel
android.support.v4.app.ShareCompat$ShareCompatImpl -> android.support.v4.app.ShareCompat$ShareCompatImpl:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.ShareCompat$ShareCompatImplBase -> android.support.v4.app.ShareCompat$ShareCompatImplBase:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    void withinStyle(java.lang.StringBuilder,java.lang.CharSequence,int,int) -> withinStyle
android.support.v4.app.ShareCompat$ShareCompatImplICS -> android.support.v4.app.ShareCompat$ShareCompatImplICS:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompat$ShareCompatImplJB -> android.support.v4.app.ShareCompat$ShareCompatImplJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompatICS -> android.support.v4.app.ShareCompatICS:
    java.lang.String HISTORY_FILENAME_PREFIX -> HISTORY_FILENAME_PREFIX
    void configureMenuItem(android.view.MenuItem,android.app.Activity,android.content.Intent) -> configureMenuItem
android.support.v4.app.ShareCompatJB -> android.support.v4.app.ShareCompatJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.SuperNotCalledException:
android.support.v4.app.TaskStackBuilder -> android.support.v4.app.TaskStackBuilder:
    java.lang.String TAG -> TAG
    android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl IMPL -> IMPL
    java.util.ArrayList mIntents -> mIntents
    android.content.Context mSourceContext -> mSourceContext
    android.support.v4.app.TaskStackBuilder create(android.content.Context) -> create
    android.support.v4.app.TaskStackBuilder from(android.content.Context) -> from
    android.support.v4.app.TaskStackBuilder addNextIntent(android.content.Intent) -> addNextIntent
    android.support.v4.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent) -> addNextIntentWithParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.app.Activity) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(java.lang.Class) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> addParentStack
    int getIntentCount() -> getIntentCount
    android.content.Intent getIntent(int) -> getIntent
    android.content.Intent editIntentAt(int) -> editIntentAt
    java.util.Iterator iterator() -> iterator
    void startActivities() -> startActivities
    void startActivities(android.os.Bundle) -> startActivities
    android.app.PendingIntent getPendingIntent(int,int) -> getPendingIntent
    android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle) -> getPendingIntent
    android.content.Intent[] getIntents() -> getIntents
android.support.v4.app.TaskStackBuilder$SupportParentable -> android.support.v4.app.TaskStackBuilder$SupportParentable:
    android.content.Intent getSupportParentActivityIntent() -> getSupportParentActivityIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilderHoneycomb -> android.support.v4.app.TaskStackBuilderHoneycomb:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int) -> getActivitiesPendingIntent
android.support.v4.app.TaskStackBuilderJellybean -> android.support.v4.app.TaskStackBuilderJellybean:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int,android.os.Bundle) -> getActivitiesPendingIntent
android.support.v4.content.AsyncTaskLoader -> android.support.v4.content.AsyncTaskLoader:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.content.AsyncTaskLoader$LoadTask mTask -> mTask
    android.support.v4.content.AsyncTaskLoader$LoadTask mCancellingTask -> mCancellingTask
    long mUpdateThrottle -> mUpdateThrottle
    long mLastLoadCompleteTime -> mLastLoadCompleteTime
    android.os.Handler mHandler -> mHandler
    void setUpdateThrottle(long) -> setUpdateThrottle
    void onForceLoad() -> onForceLoad
    boolean cancelLoad() -> cancelLoad
    void onCanceled(java.lang.Object) -> onCanceled
    void executePendingTask() -> executePendingTask
    void dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnCancelled
    void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnLoadComplete
    java.lang.Object loadInBackground() -> loadInBackground
    java.lang.Object onLoadInBackground() -> onLoadInBackground
    void waitForLoader() -> waitForLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.AsyncTaskLoader$LoadTask -> android.support.v4.content.AsyncTaskLoader$LoadTask:
    java.lang.Object result -> result
    boolean waiting -> waiting
    java.util.concurrent.CountDownLatch done -> done
    android.support.v4.content.AsyncTaskLoader this$0 -> this$0
    java.lang.Object doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onCancelled() -> onCancelled
    void run() -> run
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    java.util.concurrent.CountDownLatch access$000(android.support.v4.content.AsyncTaskLoader$LoadTask) -> access$000
android.support.v4.content.ContextCompat -> android.support.v4.content.ContextCompat:
    java.lang.String DIR_ANDROID -> DIR_ANDROID
    java.lang.String DIR_DATA -> DIR_DATA
    java.lang.String DIR_OBB -> DIR_OBB
    java.lang.String DIR_FILES -> DIR_FILES
    java.lang.String DIR_CACHE -> DIR_CACHE
    boolean startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
    java.io.File[] getObbDirs(android.content.Context) -> getObbDirs
    java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
android.support.v4.content.ContextCompatFroyo -> android.support.v4.content.ContextCompatFroyo:
    java.io.File getExternalCacheDir(android.content.Context) -> getExternalCacheDir
    java.io.File getExternalFilesDir(android.content.Context,java.lang.String) -> getExternalFilesDir
android.support.v4.content.ContextCompatHoneycomb -> android.support.v4.content.ContextCompatHoneycomb:
    void startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    java.io.File getObbDir(android.content.Context) -> getObbDir
android.support.v4.content.ContextCompatJellybean -> android.support.v4.content.ContextCompatJellybean:
    void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
android.support.v4.content.ContextCompatKitKat -> android.support.v4.content.ContextCompatKitKat:
    java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    java.io.File[] getObbDirs(android.content.Context) -> getObbDirs
android.support.v4.content.CursorLoader -> android.support.v4.content.CursorLoader:
    android.support.v4.content.Loader$ForceLoadContentObserver mObserver -> mObserver
    android.net.Uri mUri -> mUri
    java.lang.String[] mProjection -> mProjection
    java.lang.String mSelection -> mSelection
    java.lang.String[] mSelectionArgs -> mSelectionArgs
    java.lang.String mSortOrder -> mSortOrder
    android.database.Cursor mCursor -> mCursor
    android.database.Cursor loadInBackground() -> loadInBackground
    void deliverResult(android.database.Cursor) -> deliverResult
    void onStartLoading() -> onStartLoading
    void onStopLoading() -> onStopLoading
    void onCanceled(android.database.Cursor) -> onCanceled
    void onReset() -> onReset
    android.net.Uri getUri() -> getUri
    void setUri(android.net.Uri) -> setUri
    java.lang.String[] getProjection() -> getProjection
    void setProjection(java.lang.String[]) -> setProjection
    java.lang.String getSelection() -> getSelection
    void setSelection(java.lang.String) -> setSelection
    java.lang.String[] getSelectionArgs() -> getSelectionArgs
    void setSelectionArgs(java.lang.String[]) -> setSelectionArgs
    java.lang.String getSortOrder() -> getSortOrder
    void setSortOrder(java.lang.String) -> setSortOrder
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.Object loadInBackground() -> loadInBackground
    void onCanceled(java.lang.Object) -> onCanceled
    void deliverResult(java.lang.Object) -> deliverResult
android.support.v4.content.FileProvider -> android.support.v4.content.FileProvider:
    java.lang.String[] COLUMNS -> COLUMNS
    java.lang.String META_DATA_FILE_PROVIDER_PATHS -> META_DATA_FILE_PROVIDER_PATHS
    java.lang.String TAG_ROOT_PATH -> TAG_ROOT_PATH
    java.lang.String TAG_FILES_PATH -> TAG_FILES_PATH
    java.lang.String TAG_CACHE_PATH -> TAG_CACHE_PATH
    java.lang.String TAG_EXTERNAL -> TAG_EXTERNAL
    java.lang.String ATTR_NAME -> ATTR_NAME
    java.lang.String ATTR_PATH -> ATTR_PATH
    java.io.File DEVICE_ROOT -> DEVICE_ROOT
    java.util.HashMap sCache -> sCache
    android.support.v4.content.FileProvider$PathStrategy mStrategy -> mStrategy
    boolean onCreate() -> onCreate
    void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File) -> getUriForFile
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    android.support.v4.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String) -> getPathStrategy
    android.support.v4.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String) -> parsePathStrategy
    int modeToMode(java.lang.String) -> modeToMode
    java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
    java.lang.String[] copyOf(java.lang.String[],int) -> copyOf
    java.lang.Object[] copyOf(java.lang.Object[],int) -> copyOf
android.support.v4.content.FileProvider$PathStrategy -> android.support.v4.content.FileProvider$PathStrategy:
    android.net.Uri getUriForFile(java.io.File) -> getUriForFile
    java.io.File getFileForUri(android.net.Uri) -> getFileForUri
android.support.v4.content.FileProvider$SimplePathStrategy -> android.support.v4.content.FileProvider$SimplePathStrategy:
    java.lang.String mAuthority -> mAuthority
    java.util.HashMap mRoots -> mRoots
    void addRoot(java.lang.String,java.io.File) -> addRoot
    android.net.Uri getUriForFile(java.io.File) -> getUriForFile
    java.io.File getFileForUri(android.net.Uri) -> getFileForUri
android.support.v4.content.IntentCompat -> android.support.v4.content.IntentCompat:
    android.support.v4.content.IntentCompat$IntentCompatImpl IMPL -> IMPL
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_AVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_AVAILABLE
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE
    java.lang.String EXTRA_CHANGED_PACKAGE_LIST -> EXTRA_CHANGED_PACKAGE_LIST
    java.lang.String EXTRA_CHANGED_UID_LIST -> EXTRA_CHANGED_UID_LIST
    java.lang.String EXTRA_HTML_TEXT -> EXTRA_HTML_TEXT
    int FLAG_ACTIVITY_TASK_ON_HOME -> FLAG_ACTIVITY_TASK_ON_HOME
    int FLAG_ACTIVITY_CLEAR_TASK -> FLAG_ACTIVITY_CLEAR_TASK
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImpl -> android.support.v4.content.IntentCompat$IntentCompatImpl:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplBase -> android.support.v4.content.IntentCompat$IntentCompatImplBase:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplHC -> android.support.v4.content.IntentCompat$IntentCompatImplHC:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1 -> android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1:
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.content.IntentCompatHoneycomb -> android.support.v4.content.IntentCompatHoneycomb:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompatIcsMr1 -> android.support.v4.content.IntentCompatIcsMr1:
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.content.Loader -> android.support.v4.content.Loader:
    int mId -> mId
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> mListener
    android.content.Context mContext -> mContext
    boolean mStarted -> mStarted
    boolean mAbandoned -> mAbandoned
    boolean mReset -> mReset
    boolean mContentChanged -> mContentChanged
    boolean mProcessingChange -> mProcessingChange
    void deliverResult(java.lang.Object) -> deliverResult
    android.content.Context getContext() -> getContext
    int getId() -> getId
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> registerListener
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> unregisterListener
    boolean isStarted() -> isStarted
    boolean isAbandoned() -> isAbandoned
    boolean isReset() -> isReset
    void startLoading() -> startLoading
    void onStartLoading() -> onStartLoading
    void forceLoad() -> forceLoad
    void onForceLoad() -> onForceLoad
    void stopLoading() -> stopLoading
    void onStopLoading() -> onStopLoading
    void abandon() -> abandon
    void onAbandon() -> onAbandon
    void reset() -> reset
    void onReset() -> onReset
    boolean takeContentChanged() -> takeContentChanged
    void commitContentChanged() -> commitContentChanged
    void rollbackContentChanged() -> rollbackContentChanged
    void onContentChanged() -> onContentChanged
    java.lang.String dataToString(java.lang.Object) -> dataToString
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.Loader$ForceLoadContentObserver -> android.support.v4.content.Loader$ForceLoadContentObserver:
    android.support.v4.content.Loader this$0 -> this$0
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.content.Loader$OnLoadCompleteListener:
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
android.support.v4.content.LocalBroadcastManager -> android.support.v4.content.LocalBroadcastManager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.content.Context mAppContext -> mAppContext
    java.util.HashMap mReceivers -> mReceivers
    java.util.HashMap mActions -> mActions
    java.util.ArrayList mPendingBroadcasts -> mPendingBroadcasts
    int MSG_EXEC_PENDING_BROADCASTS -> MSG_EXEC_PENDING_BROADCASTS
    android.os.Handler mHandler -> mHandler
    java.lang.Object mLock -> mLock
    android.support.v4.content.LocalBroadcastManager mInstance -> mInstance
    android.support.v4.content.LocalBroadcastManager getInstance(android.content.Context) -> getInstance
    void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter) -> registerReceiver
    void unregisterReceiver(android.content.BroadcastReceiver) -> unregisterReceiver
    boolean sendBroadcast(android.content.Intent) -> sendBroadcast
    void sendBroadcastSync(android.content.Intent) -> sendBroadcastSync
    void executePendingBroadcasts() -> executePendingBroadcasts
    void access$000(android.support.v4.content.LocalBroadcastManager) -> access$000
android.support.v4.content.LocalBroadcastManager$1 -> android.support.v4.content.LocalBroadcastManager$1:
    android.support.v4.content.LocalBroadcastManager this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.LocalBroadcastManager$BroadcastRecord -> android.support.v4.content.LocalBroadcastManager$BroadcastRecord:
    android.content.Intent intent -> intent
    java.util.ArrayList receivers -> receivers
android.support.v4.content.LocalBroadcastManager$ReceiverRecord -> android.support.v4.content.LocalBroadcastManager$ReceiverRecord:
    android.content.IntentFilter filter -> filter
    android.content.BroadcastReceiver receiver -> receiver
    boolean broadcasting -> broadcasting
    java.lang.String toString() -> toString
android.support.v4.content.ModernAsyncTask -> android.support.v4.content.ModernAsyncTask:
    java.lang.String LOG_TAG -> LOG_TAG
    int CORE_POOL_SIZE -> CORE_POOL_SIZE
    int MAXIMUM_POOL_SIZE -> MAXIMUM_POOL_SIZE
    int KEEP_ALIVE -> KEEP_ALIVE
    java.util.concurrent.ThreadFactory sThreadFactory -> sThreadFactory
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> sPoolWorkQueue
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> THREAD_POOL_EXECUTOR
    int MESSAGE_POST_RESULT -> MESSAGE_POST_RESULT
    int MESSAGE_POST_PROGRESS -> MESSAGE_POST_PROGRESS
    android.support.v4.content.ModernAsyncTask$InternalHandler sHandler -> sHandler
    java.util.concurrent.Executor sDefaultExecutor -> sDefaultExecutor
    android.support.v4.content.ModernAsyncTask$WorkerRunnable mWorker -> mWorker
    java.util.concurrent.FutureTask mFuture -> mFuture
    android.support.v4.content.ModernAsyncTask$Status mStatus -> mStatus
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> mTaskInvoked
    void init() -> init
    void setDefaultExecutor(java.util.concurrent.Executor) -> setDefaultExecutor
    void postResultIfNotInvoked(java.lang.Object) -> postResultIfNotInvoked
    java.lang.Object postResult(java.lang.Object) -> postResult
    android.support.v4.content.ModernAsyncTask$Status getStatus() -> getStatus
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onCancelled(java.lang.Object) -> onCancelled
    void onCancelled() -> onCancelled
    boolean isCancelled() -> isCancelled
    boolean cancel(boolean) -> cancel
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    android.support.v4.content.ModernAsyncTask execute(java.lang.Object[]) -> execute
    android.support.v4.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> executeOnExecutor
    void execute(java.lang.Runnable) -> execute
    void publishProgress(java.lang.Object[]) -> publishProgress
    void finish(java.lang.Object) -> finish
    java.util.concurrent.atomic.AtomicBoolean access$200(android.support.v4.content.ModernAsyncTask) -> access$200
    java.lang.Object access$300(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$300
    void access$400(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$400
    void access$500(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$500
android.support.v4.content.ModernAsyncTask$1 -> android.support.v4.content.ModernAsyncTask$1:
    java.util.concurrent.atomic.AtomicInteger mCount -> mCount
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
android.support.v4.content.ModernAsyncTask$2 -> android.support.v4.content.ModernAsyncTask$2:
    android.support.v4.content.ModernAsyncTask this$0 -> this$0
    java.lang.Object call() -> call
android.support.v4.content.ModernAsyncTask$3 -> android.support.v4.content.ModernAsyncTask$3:
    android.support.v4.content.ModernAsyncTask this$0 -> this$0
    void done() -> done
android.support.v4.content.ModernAsyncTask$4 -> android.support.v4.content.ModernAsyncTask$4:
    int[] $SwitchMap$android$support$v4$content$ModernAsyncTask$Status -> $SwitchMap$android$support$v4$content$ModernAsyncTask$Status
android.support.v4.content.ModernAsyncTask$AsyncTaskResult -> android.support.v4.content.ModernAsyncTask$AsyncTaskResult:
    android.support.v4.content.ModernAsyncTask mTask -> mTask
    java.lang.Object[] mData -> mData
android.support.v4.content.ModernAsyncTask$InternalHandler -> android.support.v4.content.ModernAsyncTask$InternalHandler:
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.ModernAsyncTask$Status -> android.support.v4.content.ModernAsyncTask$Status:
    android.support.v4.content.ModernAsyncTask$Status PENDING -> PENDING
    android.support.v4.content.ModernAsyncTask$Status RUNNING -> RUNNING
    android.support.v4.content.ModernAsyncTask$Status FINISHED -> FINISHED
    android.support.v4.content.ModernAsyncTask$Status[] $VALUES -> $VALUES
    android.support.v4.content.ModernAsyncTask$Status[] values() -> values
    android.support.v4.content.ModernAsyncTask$Status valueOf(java.lang.String) -> valueOf
android.support.v4.content.ModernAsyncTask$WorkerRunnable -> android.support.v4.content.ModernAsyncTask$WorkerRunnable:
    java.lang.Object[] mParams -> mParams
android.support.v4.content.WakefulBroadcastReceiver -> android.support.v4.content.WakefulBroadcastReceiver:
    java.lang.String EXTRA_WAKE_LOCK_ID -> EXTRA_WAKE_LOCK_ID
    android.util.SparseArray mActiveWakeLocks -> mActiveWakeLocks
    int mNextId -> mNextId
    android.content.ComponentName startWakefulService(android.content.Context,android.content.Intent) -> startWakefulService
    boolean completeWakefulIntent(android.content.Intent) -> completeWakefulIntent
android.support.v4.content.pm.ActivityInfoCompat -> android.support.v4.content.pm.ActivityInfoCompat:
    int CONFIG_UI_MODE -> CONFIG_UI_MODE
android.support.v4.database.DatabaseUtilsCompat -> android.support.v4.database.DatabaseUtilsCompat:
    java.lang.String concatenateWhere(java.lang.String,java.lang.String) -> concatenateWhere
    java.lang.String[] appendSelectionArgs(java.lang.String[],java.lang.String[]) -> appendSelectionArgs
android.support.v4.graphics.drawable.DrawableCompat -> android.support.v4.graphics.drawable.DrawableCompat:
    android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl IMPL -> IMPL
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl:
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableCompatHoneycomb -> android.support.v4.graphics.drawable.DrawableCompatHoneycomb:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
android.support.v4.graphics.drawable.DrawableCompatKitKat -> android.support.v4.graphics.drawable.DrawableCompatKitKat:
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.hardware.display.DisplayManagerCompat -> android.support.v4.hardware.display.DisplayManagerCompat:
    java.util.WeakHashMap sInstances -> sInstances
    java.lang.String DISPLAY_CATEGORY_PRESENTATION -> DISPLAY_CATEGORY_PRESENTATION
    android.support.v4.hardware.display.DisplayManagerCompat getInstance(android.content.Context) -> getInstance
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerCompat$JellybeanMr1Impl -> android.support.v4.hardware.display.DisplayManagerCompat$JellybeanMr1Impl:
    java.lang.Object mDisplayManagerObj -> mDisplayManagerObj
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerCompat$LegacyImpl -> android.support.v4.hardware.display.DisplayManagerCompat$LegacyImpl:
    android.view.WindowManager mWindowManager -> mWindowManager
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerJellybeanMr1 -> android.support.v4.hardware.display.DisplayManagerJellybeanMr1:
    java.lang.Object getDisplayManager(android.content.Context) -> getDisplayManager
    android.view.Display getDisplay(java.lang.Object,int) -> getDisplay
    android.view.Display[] getDisplays(java.lang.Object) -> getDisplays
    android.view.Display[] getDisplays(java.lang.Object,java.lang.String) -> getDisplays
android.support.v4.internal.view.SupportMenu -> android.support.v4.internal.view.SupportMenu:
    int USER_MASK -> USER_MASK
    int USER_SHIFT -> USER_SHIFT
    int CATEGORY_MASK -> CATEGORY_MASK
    int CATEGORY_SHIFT -> CATEGORY_SHIFT
android.support.v4.internal.view.SupportMenuItem -> android.support.v4.internal.view.SupportMenuItem:
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    void setShowAsAction(int) -> setShowAsAction
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.View getActionView() -> getActionView
    android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> setSupportActionProvider
    android.support.v4.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.support.v4.internal.view.SupportMenuItem setSupportOnActionExpandListener(android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setSupportOnActionExpandListener
android.support.v4.internal.view.SupportSubMenu -> android.support.v4.internal.view.SupportSubMenu:
android.support.v4.media.TransportController -> android.support.v4.media.TransportController:
    void registerStateListener(android.support.v4.media.TransportStateListener) -> registerStateListener
    void unregisterStateListener(android.support.v4.media.TransportStateListener) -> unregisterStateListener
    void startPlaying() -> startPlaying
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    long getDuration() -> getDuration
    long getCurrentPosition() -> getCurrentPosition
    void seekTo(long) -> seekTo
    boolean isPlaying() -> isPlaying
    int getBufferPercentage() -> getBufferPercentage
    int getTransportControlFlags() -> getTransportControlFlags
android.support.v4.media.TransportMediator -> android.support.v4.media.TransportMediator:
    android.content.Context mContext -> mContext
    android.support.v4.media.TransportPerformer mCallbacks -> mCallbacks
    android.media.AudioManager mAudioManager -> mAudioManager
    android.view.View mView -> mView
    java.lang.Object mDispatcherState -> mDispatcherState
    android.support.v4.media.TransportMediatorJellybeanMR2 mController -> mController
    java.util.ArrayList mListeners -> mListeners
    android.support.v4.media.TransportMediatorCallback mTransportKeyCallback -> mTransportKeyCallback
    int KEYCODE_MEDIA_PLAY -> KEYCODE_MEDIA_PLAY
    int KEYCODE_MEDIA_PAUSE -> KEYCODE_MEDIA_PAUSE
    int KEYCODE_MEDIA_RECORD -> KEYCODE_MEDIA_RECORD
    int FLAG_KEY_MEDIA_PREVIOUS -> FLAG_KEY_MEDIA_PREVIOUS
    int FLAG_KEY_MEDIA_REWIND -> FLAG_KEY_MEDIA_REWIND
    int FLAG_KEY_MEDIA_PLAY -> FLAG_KEY_MEDIA_PLAY
    int FLAG_KEY_MEDIA_PLAY_PAUSE -> FLAG_KEY_MEDIA_PLAY_PAUSE
    int FLAG_KEY_MEDIA_PAUSE -> FLAG_KEY_MEDIA_PAUSE
    int FLAG_KEY_MEDIA_STOP -> FLAG_KEY_MEDIA_STOP
    int FLAG_KEY_MEDIA_FAST_FORWARD -> FLAG_KEY_MEDIA_FAST_FORWARD
    int FLAG_KEY_MEDIA_NEXT -> FLAG_KEY_MEDIA_NEXT
    android.view.KeyEvent$Callback mKeyEventCallback -> mKeyEventCallback
    boolean isMediaKey(int) -> isMediaKey
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void registerStateListener(android.support.v4.media.TransportStateListener) -> registerStateListener
    void unregisterStateListener(android.support.v4.media.TransportStateListener) -> unregisterStateListener
    android.support.v4.media.TransportStateListener[] getListeners() -> getListeners
    void reportPlayingChanged() -> reportPlayingChanged
    void reportTransportControlsChanged() -> reportTransportControlsChanged
    void pushControllerState() -> pushControllerState
    void refreshState() -> refreshState
    void startPlaying() -> startPlaying
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    long getDuration() -> getDuration
    long getCurrentPosition() -> getCurrentPosition
    void seekTo(long) -> seekTo
    boolean isPlaying() -> isPlaying
    int getBufferPercentage() -> getBufferPercentage
    int getTransportControlFlags() -> getTransportControlFlags
    void destroy() -> destroy
android.support.v4.media.TransportMediator$1 -> android.support.v4.media.TransportMediator$1:
    android.support.v4.media.TransportMediator this$0 -> this$0
    void handleKey(android.view.KeyEvent) -> handleKey
    void handleAudioFocusChange(int) -> handleAudioFocusChange
    long getPlaybackPosition() -> getPlaybackPosition
    void playbackPositionUpdate(long) -> playbackPositionUpdate
android.support.v4.media.TransportMediator$2 -> android.support.v4.media.TransportMediator$2:
    android.support.v4.media.TransportMediator this$0 -> this$0
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyLongPress(int,android.view.KeyEvent) -> onKeyLongPress
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    boolean onKeyMultiple(int,int,android.view.KeyEvent) -> onKeyMultiple
android.support.v4.media.TransportMediatorCallback -> android.support.v4.media.TransportMediatorCallback:
    void handleKey(android.view.KeyEvent) -> handleKey
    void handleAudioFocusChange(int) -> handleAudioFocusChange
    long getPlaybackPosition() -> getPlaybackPosition
    void playbackPositionUpdate(long) -> playbackPositionUpdate
android.support.v4.media.TransportMediatorJellybeanMR2 -> android.support.v4.media.TransportMediatorJellybeanMR2:
    android.content.Context mContext -> mContext
    android.media.AudioManager mAudioManager -> mAudioManager
    android.view.View mTargetView -> mTargetView
    android.support.v4.media.TransportMediatorCallback mTransportCallback -> mTransportCallback
    java.lang.String mReceiverAction -> mReceiverAction
    android.content.IntentFilter mReceiverFilter -> mReceiverFilter
    android.content.Intent mIntent -> mIntent
    android.view.ViewTreeObserver$OnWindowAttachListener mWindowAttachListener -> mWindowAttachListener
    android.view.ViewTreeObserver$OnWindowFocusChangeListener mWindowFocusListener -> mWindowFocusListener
    android.content.BroadcastReceiver mMediaButtonReceiver -> mMediaButtonReceiver
    android.media.AudioManager$OnAudioFocusChangeListener mAudioFocusChangeListener -> mAudioFocusChangeListener
    android.app.PendingIntent mPendingIntent -> mPendingIntent
    android.media.RemoteControlClient mRemoteControl -> mRemoteControl
    boolean mFocused -> mFocused
    int mPlayState -> mPlayState
    boolean mAudioFocused -> mAudioFocused
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    void destroy() -> destroy
    void windowAttached() -> windowAttached
    void gainFocus() -> gainFocus
    void takeAudioFocus() -> takeAudioFocus
    void startPlaying() -> startPlaying
    long onGetPlaybackPosition() -> onGetPlaybackPosition
    void onPlaybackPositionUpdate(long) -> onPlaybackPositionUpdate
    void refreshState(boolean,long,int) -> refreshState
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    void dropAudioFocus() -> dropAudioFocus
    void loseFocus() -> loseFocus
    void windowDetached() -> windowDetached
android.support.v4.media.TransportMediatorJellybeanMR2$1 -> android.support.v4.media.TransportMediatorJellybeanMR2$1:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void onWindowAttached() -> onWindowAttached
    void onWindowDetached() -> onWindowDetached
android.support.v4.media.TransportMediatorJellybeanMR2$2 -> android.support.v4.media.TransportMediatorJellybeanMR2$2:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
android.support.v4.media.TransportMediatorJellybeanMR2$3 -> android.support.v4.media.TransportMediatorJellybeanMR2$3:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
android.support.v4.media.TransportMediatorJellybeanMR2$4 -> android.support.v4.media.TransportMediatorJellybeanMR2$4:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void onAudioFocusChange(int) -> onAudioFocusChange
android.support.v4.media.TransportPerformer -> android.support.v4.media.TransportPerformer:
    int AUDIOFOCUS_GAIN -> AUDIOFOCUS_GAIN
    int AUDIOFOCUS_GAIN_TRANSIENT -> AUDIOFOCUS_GAIN_TRANSIENT
    int AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK -> AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK
    int AUDIOFOCUS_LOSS -> AUDIOFOCUS_LOSS
    int AUDIOFOCUS_LOSS_TRANSIENT -> AUDIOFOCUS_LOSS_TRANSIENT
    int AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK -> AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK
    void onStart() -> onStart
    void onPause() -> onPause
    void onStop() -> onStop
    long onGetDuration() -> onGetDuration
    long onGetCurrentPosition() -> onGetCurrentPosition
    void onSeekTo(long) -> onSeekTo
    boolean onIsPlaying() -> onIsPlaying
    int onGetBufferPercentage() -> onGetBufferPercentage
    int onGetTransportControlFlags() -> onGetTransportControlFlags
    boolean onMediaButtonDown(int,android.view.KeyEvent) -> onMediaButtonDown
    boolean onMediaButtonUp(int,android.view.KeyEvent) -> onMediaButtonUp
    void onAudioFocusChange(int) -> onAudioFocusChange
android.support.v4.media.TransportStateListener -> android.support.v4.media.TransportStateListener:
    void onPlayingChanged(android.support.v4.media.TransportController) -> onPlayingChanged
    void onTransportControlsChanged(android.support.v4.media.TransportController) -> onTransportControlsChanged
android.support.v4.net.ConnectivityManagerCompat -> android.support.v4.net.ConnectivityManagerCompat:
    android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl IMPL -> IMPL
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
    android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent) -> getNetworkInfoFromBroadcast
android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatGingerbread -> android.support.v4.net.ConnectivityManagerCompatGingerbread:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatHoneycombMR2 -> android.support.v4.net.ConnectivityManagerCompatHoneycombMR2:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatJellyBean -> android.support.v4.net.ConnectivityManagerCompatJellyBean:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.TrafficStatsCompat -> android.support.v4.net.TrafficStatsCompat:
    android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl IMPL -> IMPL
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$1 -> android.support.v4.net.TrafficStatsCompat$1:
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl:
    java.lang.ThreadLocal mThreadSocketTags -> mThreadSocketTags
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1 -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1:
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl this$0 -> this$0
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags:
    int statsTag -> statsTag
android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompatIcs -> android.support.v4.net.TrafficStatsCompatIcs:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.os.EnvironmentCompat -> android.support.v4.os.EnvironmentCompat:
    java.lang.String TAG -> TAG
    java.lang.String MEDIA_UNKNOWN -> MEDIA_UNKNOWN
    java.lang.String getStorageState(java.io.File) -> getStorageState
android.support.v4.os.EnvironmentCompatKitKat -> android.support.v4.os.EnvironmentCompatKitKat:
    java.lang.String getStorageState(java.io.File) -> getStorageState
android.support.v4.os.ParcelableCompat -> android.support.v4.os.ParcelableCompat:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> newCreator
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.os.ParcelableCompat$CompatCreator:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> mCallbacks
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.os.ParcelableCompatCreatorCallbacks:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.os.ParcelableCompatCreatorHoneycombMR2:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> mCallbacks
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> instantiate
android.support.v4.print.PrintHelper -> android.support.v4.print.PrintHelper:
    int SCALE_MODE_FIT -> SCALE_MODE_FIT
    int SCALE_MODE_FILL -> SCALE_MODE_FILL
    int COLOR_MODE_MONOCHROME -> COLOR_MODE_MONOCHROME
    int COLOR_MODE_COLOR -> COLOR_MODE_COLOR
    int ORIENTATION_LANDSCAPE -> ORIENTATION_LANDSCAPE
    int ORIENTATION_PORTRAIT -> ORIENTATION_PORTRAIT
    android.support.v4.print.PrintHelper$PrintHelperVersionImpl mImpl -> mImpl
    boolean systemSupportsPrint() -> systemSupportsPrint
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
android.support.v4.print.PrintHelper$1 -> android.support.v4.print.PrintHelper$1:
android.support.v4.print.PrintHelper$PrintHelperKitkatImpl -> android.support.v4.print.PrintHelper$PrintHelperKitkatImpl:
    android.support.v4.print.PrintHelperKitkat mPrintHelper -> mPrintHelper
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
android.support.v4.print.PrintHelper$PrintHelperStubImpl -> android.support.v4.print.PrintHelper$PrintHelperStubImpl:
    int mScaleMode -> mScaleMode
    int mColorMode -> mColorMode
    int mOrientation -> mOrientation
    void setScaleMode(int) -> setScaleMode
    int getColorMode() -> getColorMode
    void setColorMode(int) -> setColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    int getScaleMode() -> getScaleMode
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
android.support.v4.print.PrintHelper$PrintHelperVersionImpl -> android.support.v4.print.PrintHelper$PrintHelperVersionImpl:
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
android.support.v4.print.PrintHelperKitkat -> android.support.v4.print.PrintHelperKitkat:
    java.lang.String LOG_TAG -> LOG_TAG
    int MAX_PRINT_SIZE -> MAX_PRINT_SIZE
    android.content.Context mContext -> mContext
    android.graphics.BitmapFactory$Options mDecodeOptions -> mDecodeOptions
    java.lang.Object mLock -> mLock
    int SCALE_MODE_FIT -> SCALE_MODE_FIT
    int SCALE_MODE_FILL -> SCALE_MODE_FILL
    int ORIENTATION_LANDSCAPE -> ORIENTATION_LANDSCAPE
    int ORIENTATION_PORTRAIT -> ORIENTATION_PORTRAIT
    int COLOR_MODE_MONOCHROME -> COLOR_MODE_MONOCHROME
    int COLOR_MODE_COLOR -> COLOR_MODE_COLOR
    int mScaleMode -> mScaleMode
    int mColorMode -> mColorMode
    int mOrientation -> mOrientation
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    int getColorMode() -> getColorMode
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    android.graphics.Matrix getMatrix(int,int,android.graphics.RectF,int) -> getMatrix
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
    android.graphics.Bitmap loadConstrainedBitmap(android.net.Uri,int) -> loadConstrainedBitmap
    android.graphics.Bitmap loadBitmap(android.net.Uri,android.graphics.BitmapFactory$Options) -> loadBitmap
    android.graphics.Matrix access$000(android.support.v4.print.PrintHelperKitkat,int,int,android.graphics.RectF,int) -> access$000
    android.graphics.Bitmap access$200(android.support.v4.print.PrintHelperKitkat,android.net.Uri,int) -> access$200
    java.lang.Object access$300(android.support.v4.print.PrintHelperKitkat) -> access$300
android.support.v4.print.PrintHelperKitkat$1 -> android.support.v4.print.PrintHelperKitkat$1:
    android.print.PrintAttributes mAttributes -> mAttributes
    java.lang.String val$jobName -> val$jobName
    android.graphics.Bitmap val$bitmap -> val$bitmap
    int val$fittingMode -> val$fittingMode
    android.support.v4.print.PrintHelperKitkat this$0 -> this$0
    void onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle) -> onLayout
    void onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback) -> onWrite
android.support.v4.print.PrintHelperKitkat$2 -> android.support.v4.print.PrintHelperKitkat$2:
    android.print.PrintAttributes mAttributes -> mAttributes
    android.os.AsyncTask loadBitmap -> loadBitmap
    android.graphics.Bitmap mBitmap -> mBitmap
    java.lang.String val$jobName -> val$jobName
    android.net.Uri val$imageFile -> val$imageFile
    int val$fittingMode -> val$fittingMode
    android.support.v4.print.PrintHelperKitkat this$0 -> this$0
    void onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle) -> onLayout
    void cancelLoad() -> cancelLoad
    void onFinish() -> onFinish
    void onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback) -> onWrite
    void access$100(android.support.v4.print.PrintHelperKitkat$2) -> access$100
android.support.v4.print.PrintHelperKitkat$2$1 -> android.support.v4.print.PrintHelperKitkat$2$1:
    android.os.CancellationSignal val$cancellationSignal -> val$cancellationSignal
    android.print.PrintAttributes val$newPrintAttributes -> val$newPrintAttributes
    android.print.PrintAttributes val$oldPrintAttributes -> val$oldPrintAttributes
    android.print.PrintDocumentAdapter$LayoutResultCallback val$layoutResultCallback -> val$layoutResultCallback
    android.support.v4.print.PrintHelperKitkat$2 this$1 -> this$1
    void onPreExecute() -> onPreExecute
    android.graphics.Bitmap doInBackground(android.net.Uri[]) -> doInBackground
    void onPostExecute(android.graphics.Bitmap) -> onPostExecute
    void onCancelled(android.graphics.Bitmap) -> onCancelled
    void onCancelled(java.lang.Object) -> onCancelled
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
android.support.v4.print.PrintHelperKitkat$2$1$1 -> android.support.v4.print.PrintHelperKitkat$2$1$1:
    android.support.v4.print.PrintHelperKitkat$2$1 this$2 -> this$2
    void onCancel() -> onCancel
android.support.v4.text.BidiFormatter -> android.support.v4.text.BidiFormatter:
    android.support.v4.text.TextDirectionHeuristicCompat DEFAULT_TEXT_DIRECTION_HEURISTIC -> DEFAULT_TEXT_DIRECTION_HEURISTIC
    char LRE -> LRE
    char RLE -> RLE
    char PDF -> PDF
    char LRM -> LRM
    char RLM -> RLM
    java.lang.String LRM_STRING -> LRM_STRING
    java.lang.String RLM_STRING -> RLM_STRING
    java.lang.String EMPTY_STRING -> EMPTY_STRING
    int FLAG_STEREO_RESET -> FLAG_STEREO_RESET
    int DEFAULT_FLAGS -> DEFAULT_FLAGS
    android.support.v4.text.BidiFormatter DEFAULT_LTR_INSTANCE -> DEFAULT_LTR_INSTANCE
    android.support.v4.text.BidiFormatter DEFAULT_RTL_INSTANCE -> DEFAULT_RTL_INSTANCE
    boolean mIsRtlContext -> mIsRtlContext
    int mFlags -> mFlags
    android.support.v4.text.TextDirectionHeuristicCompat mDefaultTextDirectionHeuristicCompat -> mDefaultTextDirectionHeuristicCompat
    int DIR_LTR -> DIR_LTR
    int DIR_UNKNOWN -> DIR_UNKNOWN
    int DIR_RTL -> DIR_RTL
    android.support.v4.text.BidiFormatter getInstance() -> getInstance
    android.support.v4.text.BidiFormatter getInstance(boolean) -> getInstance
    android.support.v4.text.BidiFormatter getInstance(java.util.Locale) -> getInstance
    boolean isRtlContext() -> isRtlContext
    boolean getStereoReset() -> getStereoReset
    java.lang.String markAfter(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> markAfter
    java.lang.String markBefore(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> markBefore
    boolean isRtl(java.lang.String) -> isRtl
    java.lang.String unicodeWrap(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat,boolean) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String,boolean) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String) -> unicodeWrap
    boolean isRtlLocale(java.util.Locale) -> isRtlLocale
    int getExitDir(java.lang.String) -> getExitDir
    int getEntryDir(java.lang.String) -> getEntryDir
    boolean access$000(java.util.Locale) -> access$000
    android.support.v4.text.TextDirectionHeuristicCompat access$100() -> access$100
    android.support.v4.text.BidiFormatter access$200() -> access$200
    android.support.v4.text.BidiFormatter access$300() -> access$300
android.support.v4.text.BidiFormatter$1 -> android.support.v4.text.BidiFormatter$1:
android.support.v4.text.BidiFormatter$Builder -> android.support.v4.text.BidiFormatter$Builder:
    boolean mIsRtlContext -> mIsRtlContext
    int mFlags -> mFlags
    android.support.v4.text.TextDirectionHeuristicCompat mTextDirectionHeuristicCompat -> mTextDirectionHeuristicCompat
    void initialize(boolean) -> initialize
    android.support.v4.text.BidiFormatter$Builder stereoReset(boolean) -> stereoReset
    android.support.v4.text.BidiFormatter$Builder setTextDirectionHeuristic(android.support.v4.text.TextDirectionHeuristicCompat) -> setTextDirectionHeuristic
    android.support.v4.text.BidiFormatter getDefaultInstanceFromContext(boolean) -> getDefaultInstanceFromContext
    android.support.v4.text.BidiFormatter build() -> build
android.support.v4.text.BidiFormatter$DirectionalityEstimator -> android.support.v4.text.BidiFormatter$DirectionalityEstimator:
    int DIR_TYPE_CACHE_SIZE -> DIR_TYPE_CACHE_SIZE
    byte[] DIR_TYPE_CACHE -> DIR_TYPE_CACHE
    java.lang.String text -> text
    boolean isHtml -> isHtml
    int length -> length
    int charIndex -> charIndex
    char lastChar -> lastChar
    int getEntryDir() -> getEntryDir
    int getExitDir() -> getExitDir
    byte getCachedDirectionality(char) -> getCachedDirectionality
    byte dirTypeForward() -> dirTypeForward
    byte dirTypeBackward() -> dirTypeBackward
    byte skipTagForward() -> skipTagForward
    byte skipTagBackward() -> skipTagBackward
    byte skipEntityForward() -> skipEntityForward
    byte skipEntityBackward() -> skipEntityBackward
android.support.v4.text.ICUCompat -> android.support.v4.text.ICUCompat:
    android.support.v4.text.ICUCompat$ICUCompatImpl IMPL -> IMPL
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompat$ICUCompatImpl -> android.support.v4.text.ICUCompat$ICUCompatImpl:
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompat$ICUCompatImplBase -> android.support.v4.text.ICUCompat$ICUCompatImplBase:
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompat$ICUCompatImplIcs -> android.support.v4.text.ICUCompat$ICUCompatImplIcs:
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompatIcs -> android.support.v4.text.ICUCompatIcs:
    java.lang.String TAG -> TAG
    java.lang.reflect.Method sGetScriptMethod -> sGetScriptMethod
    java.lang.reflect.Method sAddLikelySubtagsMethod -> sAddLikelySubtagsMethod
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.TextDirectionHeuristicCompat -> android.support.v4.text.TextDirectionHeuristicCompat:
    boolean isRtl(char[],int,int) -> isRtl
    boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
android.support.v4.text.TextDirectionHeuristicsCompat -> android.support.v4.text.TextDirectionHeuristicsCompat:
    android.support.v4.text.TextDirectionHeuristicCompat LTR -> LTR
    android.support.v4.text.TextDirectionHeuristicCompat RTL -> RTL
    android.support.v4.text.TextDirectionHeuristicCompat FIRSTSTRONG_LTR -> FIRSTSTRONG_LTR
    android.support.v4.text.TextDirectionHeuristicCompat FIRSTSTRONG_RTL -> FIRSTSTRONG_RTL
    android.support.v4.text.TextDirectionHeuristicCompat ANYRTL_LTR -> ANYRTL_LTR
    android.support.v4.text.TextDirectionHeuristicCompat LOCALE -> LOCALE
    int STATE_TRUE -> STATE_TRUE
    int STATE_FALSE -> STATE_FALSE
    int STATE_UNKNOWN -> STATE_UNKNOWN
    int isRtlText(int) -> isRtlText
    int isRtlTextOrFormat(int) -> isRtlTextOrFormat
    int access$100(int) -> access$100
    int access$200(int) -> access$200
android.support.v4.text.TextDirectionHeuristicsCompat$1 -> android.support.v4.text.TextDirectionHeuristicsCompat$1:
android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong -> android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong:
    boolean mLookForRtl -> mLookForRtl
    android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_RTL -> INSTANCE_RTL
    android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_LTR -> INSTANCE_LTR
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong -> android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong:
    android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong INSTANCE -> INSTANCE
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm:
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl:
    android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm mAlgorithm -> mAlgorithm
    boolean defaultIsRtl() -> defaultIsRtl
    boolean isRtl(char[],int,int) -> isRtl
    boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
    boolean doCheck(java.lang.CharSequence,int,int) -> doCheck
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal:
    boolean mDefaultIsRtl -> mDefaultIsRtl
    boolean defaultIsRtl() -> defaultIsRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale:
    android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale INSTANCE -> INSTANCE
    boolean defaultIsRtl() -> defaultIsRtl
android.support.v4.text.TextUtilsCompat -> android.support.v4.text.TextUtilsCompat:
    java.util.Locale ROOT -> ROOT
    java.lang.String ARAB_SCRIPT_SUBTAG -> ARAB_SCRIPT_SUBTAG
    java.lang.String HEBR_SCRIPT_SUBTAG -> HEBR_SCRIPT_SUBTAG
    java.lang.String htmlEncode(java.lang.String) -> htmlEncode
    int getLayoutDirectionFromLocale(java.util.Locale) -> getLayoutDirectionFromLocale
    int getLayoutDirectionFromFirstChar(java.util.Locale) -> getLayoutDirectionFromFirstChar
android.support.v4.util.ArrayMap -> android.support.v4.util.ArrayMap:
    android.support.v4.util.MapCollections mCollections -> mCollections
    android.support.v4.util.MapCollections getCollection() -> getCollection
    boolean containsAll(java.util.Collection) -> containsAll
    void putAll(java.util.Map) -> putAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
android.support.v4.util.ArrayMap$1 -> android.support.v4.util.ArrayMap$1:
    android.support.v4.util.ArrayMap this$0 -> this$0
    int colGetSize() -> colGetSize
    java.lang.Object colGetEntry(int,int) -> colGetEntry
    int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    java.util.Map colGetMap() -> colGetMap
    void colPut(java.lang.Object,java.lang.Object) -> colPut
    java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
    void colRemoveAt(int) -> colRemoveAt
    void colClear() -> colClear
android.support.v4.util.AtomicFile -> android.support.v4.util.AtomicFile:
    java.io.File mBaseName -> mBaseName
    java.io.File mBackupName -> mBackupName
    java.io.File getBaseFile() -> getBaseFile
    void delete() -> delete
    java.io.FileOutputStream startWrite() -> startWrite
    void finishWrite(java.io.FileOutputStream) -> finishWrite
    void failWrite(java.io.FileOutputStream) -> failWrite
    java.io.FileInputStream openRead() -> openRead
    byte[] readFully() -> readFully
    boolean sync(java.io.FileOutputStream) -> sync
android.support.v4.util.ContainerHelpers -> android.support.v4.util.ContainerHelpers:
    int[] EMPTY_INTS -> EMPTY_INTS
    long[] EMPTY_LONGS -> EMPTY_LONGS
    java.lang.Object[] EMPTY_OBJECTS -> EMPTY_OBJECTS
    int idealIntArraySize(int) -> idealIntArraySize
    int idealLongArraySize(int) -> idealLongArraySize
    int idealByteArraySize(int) -> idealByteArraySize
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    int binarySearch(int[],int,int) -> binarySearch
    int binarySearch(long[],int,long) -> binarySearch
android.support.v4.util.DebugUtils -> android.support.v4.util.DebugUtils:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> buildShortClassTag
android.support.v4.util.LogWriter -> android.support.v4.util.LogWriter:
    java.lang.String mTag -> mTag
    java.lang.StringBuilder mBuilder -> mBuilder
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> flushBuilder
android.support.v4.util.LongSparseArray -> android.support.v4.util.LongSparseArray:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    long[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    android.support.v4.util.LongSparseArray clone() -> clone
    java.lang.Object get(long) -> get
    java.lang.Object get(long,java.lang.Object) -> get
    void delete(long) -> delete
    void remove(long) -> remove
    void removeAt(int) -> removeAt
    void gc() -> gc
    void put(long,java.lang.Object) -> put
    int size() -> size
    long keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(long) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(long,java.lang.Object) -> append
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.util.LruCache -> android.support.v4.util.LruCache:
    java.util.LinkedHashMap map -> map
    int size -> size
    int maxSize -> maxSize
    int putCount -> putCount
    int createCount -> createCount
    int evictionCount -> evictionCount
    int hitCount -> hitCount
    int missCount -> missCount
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void trimToSize(int) -> trimToSize
    java.lang.Object remove(java.lang.Object) -> remove
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    java.lang.Object create(java.lang.Object) -> create
    int safeSizeOf(java.lang.Object,java.lang.Object) -> safeSizeOf
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    void evictAll() -> evictAll
    int size() -> size
    int maxSize() -> maxSize
    int hitCount() -> hitCount
    int missCount() -> missCount
    int createCount() -> createCount
    int putCount() -> putCount
    int evictionCount() -> evictionCount
    java.util.Map snapshot() -> snapshot
    java.lang.String toString() -> toString
android.support.v4.util.MapCollections -> android.support.v4.util.MapCollections:
    android.support.v4.util.MapCollections$EntrySet mEntrySet -> mEntrySet
    android.support.v4.util.MapCollections$KeySet mKeySet -> mKeySet
    android.support.v4.util.MapCollections$ValuesCollection mValues -> mValues
    boolean containsAllHelper(java.util.Map,java.util.Collection) -> containsAllHelper
    boolean removeAllHelper(java.util.Map,java.util.Collection) -> removeAllHelper
    boolean retainAllHelper(java.util.Map,java.util.Collection) -> retainAllHelper
    java.lang.Object[] toArrayHelper(int) -> toArrayHelper
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> toArrayHelper
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> equalsSetHelper
    java.util.Set getEntrySet() -> getEntrySet
    java.util.Set getKeySet() -> getKeySet
    java.util.Collection getValues() -> getValues
    int colGetSize() -> colGetSize
    java.lang.Object colGetEntry(int,int) -> colGetEntry
    int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    java.util.Map colGetMap() -> colGetMap
    void colPut(java.lang.Object,java.lang.Object) -> colPut
    java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
    void colRemoveAt(int) -> colRemoveAt
    void colClear() -> colClear
android.support.v4.util.MapCollections$ArrayIterator -> android.support.v4.util.MapCollections$ArrayIterator:
    int mOffset -> mOffset
    int mSize -> mSize
    int mIndex -> mIndex
    boolean mCanRemove -> mCanRemove
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
android.support.v4.util.MapCollections$EntrySet -> android.support.v4.util.MapCollections$EntrySet:
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean add(java.util.Map$Entry) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean add(java.lang.Object) -> add
android.support.v4.util.MapCollections$KeySet -> android.support.v4.util.MapCollections$KeySet:
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v4.util.MapCollections$MapIterator -> android.support.v4.util.MapCollections$MapIterator:
    int mEnd -> mEnd
    int mIndex -> mIndex
    boolean mEntryValid -> mEntryValid
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> next
    void remove() -> remove
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object next() -> next
android.support.v4.util.MapCollections$ValuesCollection -> android.support.v4.util.MapCollections$ValuesCollection:
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.SimpleArrayMap -> android.support.v4.util.SimpleArrayMap:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    int BASE_SIZE -> BASE_SIZE
    int CACHE_SIZE -> CACHE_SIZE
    java.lang.Object[] mBaseCache -> mBaseCache
    int mBaseCacheSize -> mBaseCacheSize
    java.lang.Object[] mTwiceBaseCache -> mTwiceBaseCache
    int mTwiceBaseCacheSize -> mTwiceBaseCacheSize
    int[] mHashes -> mHashes
    java.lang.Object[] mArray -> mArray
    int mSize -> mSize
    int indexOf(java.lang.Object,int) -> indexOf
    int indexOfNull() -> indexOfNull
    void allocArrays(int) -> allocArrays
    void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    void clear() -> clear
    void ensureCapacity(int) -> ensureCapacity
    boolean containsKey(java.lang.Object) -> containsKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    java.lang.Object setValueAt(int,java.lang.Object) -> setValueAt
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void putAll(android.support.v4.util.SimpleArrayMap) -> putAll
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeAt(int) -> removeAt
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.util.SparseArrayCompat:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    int[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    android.support.v4.util.SparseArrayCompat clone() -> clone
    java.lang.Object get(int) -> get
    java.lang.Object get(int,java.lang.Object) -> get
    void delete(int) -> delete
    void remove(int) -> remove
    void removeAt(int) -> removeAt
    void removeAtRange(int,int) -> removeAtRange
    void gc() -> gc
    void put(int,java.lang.Object) -> put
    int size() -> size
    int keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(int) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(int,java.lang.Object) -> append
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.util.TimeUtils -> android.support.v4.util.TimeUtils:
    int HUNDRED_DAY_FIELD_LEN -> HUNDRED_DAY_FIELD_LEN
    int SECONDS_PER_MINUTE -> SECONDS_PER_MINUTE
    int SECONDS_PER_HOUR -> SECONDS_PER_HOUR
    int SECONDS_PER_DAY -> SECONDS_PER_DAY
    java.lang.Object sFormatSync -> sFormatSync
    char[] sFormatStr -> sFormatStr
    int accumField(int,int,boolean,int) -> accumField
    int printField(char[],int,char,int,boolean,int) -> printField
    int formatDurationLocked(long,int) -> formatDurationLocked
    void formatDuration(long,java.lang.StringBuilder) -> formatDuration
    void formatDuration(long,java.io.PrintWriter,int) -> formatDuration
    void formatDuration(long,java.io.PrintWriter) -> formatDuration
    void formatDuration(long,long,java.io.PrintWriter) -> formatDuration
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.AccessibilityDelegateCompat:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> IMPL
    java.lang.Object DEFAULT_DELEGATE -> DEFAULT_DELEGATE
    java.lang.Object mBridge -> mBridge
    java.lang.Object getBridge() -> getBridge
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> val$compat
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> this$0
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> val$compat
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> this$0
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.AccessibilityDelegateCompatIcs:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> newAccessibilityDelegateDefaultImpl
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> newAccessibilityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.AccessibilityDelegateCompatIcs$1:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> val$bridge
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> newAccessibilityDelegateBridge
    java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.AccessibilityDelegateCompatJellyBean$1:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> val$bridge
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.ActionProvider -> android.support.v4.view.ActionProvider:
    java.lang.String TAG -> TAG
    android.content.Context mContext -> mContext
    android.support.v4.view.ActionProvider$SubUiVisibilityListener mSubUiVisibilityListener -> mSubUiVisibilityListener
    android.support.v4.view.ActionProvider$VisibilityListener mVisibilityListener -> mVisibilityListener
    android.content.Context getContext() -> getContext
    android.view.View onCreateActionView() -> onCreateActionView
    android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    boolean overridesItemVisibility() -> overridesItemVisibility
    boolean isVisible() -> isVisible
    void refreshVisibility() -> refreshVisibility
    boolean onPerformDefaultAction() -> onPerformDefaultAction
    boolean hasSubMenu() -> hasSubMenu
    void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
    void subUiVisibilityChanged(boolean) -> subUiVisibilityChanged
    void setSubUiVisibilityListener(android.support.v4.view.ActionProvider$SubUiVisibilityListener) -> setSubUiVisibilityListener
    void setVisibilityListener(android.support.v4.view.ActionProvider$VisibilityListener) -> setVisibilityListener
android.support.v4.view.ActionProvider$SubUiVisibilityListener -> android.support.v4.view.ActionProvider$SubUiVisibilityListener:
    void onSubUiVisibilityChanged(boolean) -> onSubUiVisibilityChanged
android.support.v4.view.ActionProvider$VisibilityListener -> android.support.v4.view.ActionProvider$VisibilityListener:
    void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
android.support.v4.view.GestureDetectorCompat -> android.support.v4.view.GestureDetectorCompat:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl mImpl -> mImpl
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl:
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase:
    int mTouchSlopSquare -> mTouchSlopSquare
    int mDoubleTapSlopSquare -> mDoubleTapSlopSquare
    int mMinimumFlingVelocity -> mMinimumFlingVelocity
    int mMaximumFlingVelocity -> mMaximumFlingVelocity
    int LONGPRESS_TIMEOUT -> LONGPRESS_TIMEOUT
    int TAP_TIMEOUT -> TAP_TIMEOUT
    int DOUBLE_TAP_TIMEOUT -> DOUBLE_TAP_TIMEOUT
    int SHOW_PRESS -> SHOW_PRESS
    int LONG_PRESS -> LONG_PRESS
    int TAP -> TAP
    android.os.Handler mHandler -> mHandler
    android.view.GestureDetector$OnGestureListener mListener -> mListener
    android.view.GestureDetector$OnDoubleTapListener mDoubleTapListener -> mDoubleTapListener
    boolean mStillDown -> mStillDown
    boolean mDeferConfirmSingleTap -> mDeferConfirmSingleTap
    boolean mInLongPress -> mInLongPress
    boolean mAlwaysInTapRegion -> mAlwaysInTapRegion
    boolean mAlwaysInBiggerTapRegion -> mAlwaysInBiggerTapRegion
    android.view.MotionEvent mCurrentDownEvent -> mCurrentDownEvent
    android.view.MotionEvent mPreviousUpEvent -> mPreviousUpEvent
    boolean mIsDoubleTapping -> mIsDoubleTapping
    float mLastFocusX -> mLastFocusX
    float mLastFocusY -> mLastFocusY
    float mDownFocusX -> mDownFocusX
    float mDownFocusY -> mDownFocusY
    boolean mIsLongpressEnabled -> mIsLongpressEnabled
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    void init(android.content.Context) -> init
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void cancel() -> cancel
    void cancelTaps() -> cancelTaps
    boolean isConsideredDoubleTap(android.view.MotionEvent,android.view.MotionEvent,android.view.MotionEvent) -> isConsideredDoubleTap
    void dispatchLongPress() -> dispatchLongPress
    android.view.MotionEvent access$000(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$000
    android.view.GestureDetector$OnGestureListener access$100(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$100
    void access$200(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$200
    android.view.GestureDetector$OnDoubleTapListener access$300(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$300
    boolean access$400(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$400
    boolean access$502(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase,boolean) -> access$502
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2 -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2:
    android.view.GestureDetector mDetector -> mDetector
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GravityCompat -> android.support.v4.view.GravityCompat:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> IMPL
    int RELATIVE_LAYOUT_DIRECTION -> RELATIVE_LAYOUT_DIRECTION
    int START -> START
    int END -> END
    int RELATIVE_HORIZONTAL_GRAVITY_MASK -> RELATIVE_HORIZONTAL_GRAVITY_MASK
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.GravityCompat$GravityCompatImpl:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.GravityCompat$GravityCompatImplBase:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.GravityCompatJellybeanMr1:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.KeyEventCompat -> android.support.v4.view.KeyEventCompat:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> IMPL
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    boolean hasModifiers(android.view.KeyEvent,int) -> hasModifiers
    boolean hasNoModifiers(android.view.KeyEvent) -> hasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl:
    int META_MODIFIER_MASK -> META_MODIFIER_MASK
    int META_ALL_MASK -> META_ALL_MASK
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> metaStateFilterDirectionalModifiers
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl:
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$KeyEventVersionImpl:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.KeyEventCompatEclair:
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.KeyEventCompatHoneycomb:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.MarginLayoutParamsCompat -> android.support.v4.view.MarginLayoutParamsCompat:
    android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl IMPL -> IMPL
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl -> android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase -> android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1 -> android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1 -> android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MenuCompat -> android.support.v4.view.MenuCompat:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuItemCompat -> android.support.v4.view.MenuItemCompat:
    java.lang.String TAG -> TAG
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    android.support.v4.view.MenuItemCompat$MenuVersionImpl IMPL -> IMPL
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    android.view.MenuItem setActionProvider(android.view.MenuItem,android.support.v4.view.ActionProvider) -> setActionProvider
    android.support.v4.view.ActionProvider getActionProvider(android.view.MenuItem) -> getActionProvider
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl -> android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl -> android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl -> android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl:
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl$1 -> android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl$1:
    android.support.v4.view.MenuItemCompat$OnActionExpandListener val$listener -> val$listener
    android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl this$0 -> this$0
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompat$MenuVersionImpl -> android.support.v4.view.MenuItemCompat$MenuVersionImpl:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$OnActionExpandListener -> android.support.v4.view.MenuItemCompat$OnActionExpandListener:
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompatHoneycomb -> android.support.v4.view.MenuItemCompatHoneycomb:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
android.support.v4.view.MenuItemCompatIcs -> android.support.v4.view.MenuItemCompatIcs:
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompatIcs$OnActionExpandListenerWrapper -> android.support.v4.view.MenuItemCompatIcs$OnActionExpandListenerWrapper:
    android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy mWrapped -> mWrapped
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy -> android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy:
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MotionEventCompat -> android.support.v4.view.MotionEventCompat:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> IMPL
    int ACTION_MASK -> ACTION_MASK
    int ACTION_POINTER_DOWN -> ACTION_POINTER_DOWN
    int ACTION_POINTER_UP -> ACTION_POINTER_UP
    int ACTION_HOVER_MOVE -> ACTION_HOVER_MOVE
    int ACTION_SCROLL -> ACTION_SCROLL
    int ACTION_POINTER_INDEX_MASK -> ACTION_POINTER_INDEX_MASK
    int ACTION_POINTER_INDEX_SHIFT -> ACTION_POINTER_INDEX_SHIFT
    int ACTION_HOVER_ENTER -> ACTION_HOVER_ENTER
    int ACTION_HOVER_EXIT -> ACTION_HOVER_EXIT
    int getActionMasked(android.view.MotionEvent) -> getActionMasked
    int getActionIndex(android.view.MotionEvent) -> getActionIndex
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$MotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.MotionEventCompatEclair:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.PagerAdapter -> android.support.v4.view.PagerAdapter:
    android.database.DataSetObservable mObservable -> mObservable
    int POSITION_UNCHANGED -> POSITION_UNCHANGED
    int POSITION_NONE -> POSITION_NONE
    int getCount() -> getCount
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    void startUpdate(android.view.View) -> startUpdate
    java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.View) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    int getItemPosition(java.lang.Object) -> getItemPosition
    void notifyDataSetChanged() -> notifyDataSetChanged
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    java.lang.CharSequence getPageTitle(int) -> getPageTitle
    float getPageWidth(int) -> getPageWidth
android.support.v4.view.PagerTabStrip -> android.support.v4.view.PagerTabStrip:
    java.lang.String TAG -> TAG
    int INDICATOR_HEIGHT -> INDICATOR_HEIGHT
    int MIN_PADDING_BOTTOM -> MIN_PADDING_BOTTOM
    int TAB_PADDING -> TAB_PADDING
    int TAB_SPACING -> TAB_SPACING
    int MIN_TEXT_SPACING -> MIN_TEXT_SPACING
    int FULL_UNDERLINE_HEIGHT -> FULL_UNDERLINE_HEIGHT
    int MIN_STRIP_HEIGHT -> MIN_STRIP_HEIGHT
    int mIndicatorColor -> mIndicatorColor
    int mIndicatorHeight -> mIndicatorHeight
    int mMinPaddingBottom -> mMinPaddingBottom
    int mMinTextSpacing -> mMinTextSpacing
    int mMinStripHeight -> mMinStripHeight
    int mTabPadding -> mTabPadding
    android.graphics.Paint mTabPaint -> mTabPaint
    android.graphics.Rect mTempRect -> mTempRect
    int mTabAlpha -> mTabAlpha
    boolean mDrawFullUnderline -> mDrawFullUnderline
    boolean mDrawFullUnderlineSet -> mDrawFullUnderlineSet
    int mFullUnderlineHeight -> mFullUnderlineHeight
    boolean mIgnoreTap -> mIgnoreTap
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    int mTouchSlop -> mTouchSlop
    void setTabIndicatorColor(int) -> setTabIndicatorColor
    void setTabIndicatorColorResource(int) -> setTabIndicatorColorResource
    int getTabIndicatorColor() -> getTabIndicatorColor
    void setPadding(int,int,int,int) -> setPadding
    void setTextSpacing(int) -> setTextSpacing
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setBackgroundColor(int) -> setBackgroundColor
    void setBackgroundResource(int) -> setBackgroundResource
    void setDrawFullUnderline(boolean) -> setDrawFullUnderline
    boolean getDrawFullUnderline() -> getDrawFullUnderline
    int getMinHeight() -> getMinHeight
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onDraw(android.graphics.Canvas) -> onDraw
    void updateTextPositions(int,float,boolean) -> updateTextPositions
android.support.v4.view.PagerTabStrip$1 -> android.support.v4.view.PagerTabStrip$1:
    android.support.v4.view.PagerTabStrip this$0 -> this$0
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTabStrip$2 -> android.support.v4.view.PagerTabStrip$2:
    android.support.v4.view.PagerTabStrip this$0 -> this$0
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    java.lang.String TAG -> TAG
    android.support.v4.view.ViewPager mPager -> mPager
    android.widget.TextView mPrevText -> mPrevText
    android.widget.TextView mCurrText -> mCurrText
    android.widget.TextView mNextText -> mNextText
    int mLastKnownCurrentPage -> mLastKnownCurrentPage
    float mLastKnownPositionOffset -> mLastKnownPositionOffset
    int mScaledTextSpacing -> mScaledTextSpacing
    int mGravity -> mGravity
    boolean mUpdatingText -> mUpdatingText
    boolean mUpdatingPositions -> mUpdatingPositions
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> mPageListener
    java.lang.ref.WeakReference mWatchingAdapter -> mWatchingAdapter
    int[] ATTRS -> ATTRS
    int[] TEXT_ATTRS -> TEXT_ATTRS
    float SIDE_ALPHA -> SIDE_ALPHA
    int TEXT_SPACING -> TEXT_SPACING
    int mNonPrimaryAlpha -> mNonPrimaryAlpha
    int mTextColor -> mTextColor
    android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl IMPL -> IMPL
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
    void setTextSpacing(int) -> setTextSpacing
    int getTextSpacing() -> getTextSpacing
    void setNonPrimaryAlpha(float) -> setNonPrimaryAlpha
    void setTextColor(int) -> setTextColor
    void setTextSize(int,float) -> setTextSize
    void setGravity(int) -> setGravity
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateText(int,android.support.v4.view.PagerAdapter) -> updateText
    void requestLayout() -> requestLayout
    void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> updateAdapter
    void updateTextPositions(int,float,boolean) -> updateTextPositions
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getMinHeight() -> getMinHeight
    float access$100(android.support.v4.view.PagerTitleStrip) -> access$100
android.support.v4.view.PagerTitleStrip$1 -> android.support.v4.view.PagerTitleStrip$1:
android.support.v4.view.PagerTitleStrip$PageListener -> android.support.v4.view.PagerTitleStrip$PageListener:
    int mScrollState -> mScrollState
    android.support.v4.view.PagerTitleStrip this$0 -> this$0
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
    void onChanged() -> onChanged
android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStripIcs -> android.support.v4.view.PagerTitleStripIcs:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform -> android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform:
    java.lang.String TAG -> TAG
    java.util.Locale mLocale -> mLocale
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
android.support.v4.view.ScaleGestureDetectorCompat -> android.support.v4.view.ScaleGestureDetectorCompat:
    android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl IMPL -> IMPL
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompat$1 -> android.support.v4.view.ScaleGestureDetectorCompat$1:
android.support.v4.view.ScaleGestureDetectorCompat$BaseScaleGestureDetectorImpl -> android.support.v4.view.ScaleGestureDetectorCompat$BaseScaleGestureDetectorImpl:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorCompatKitKatImpl -> android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorCompatKitKatImpl:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl -> android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompatKitKat -> android.support.v4.view.ScaleGestureDetectorCompatKitKat:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.VelocityTrackerCompat:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> IMPL
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.VelocityTrackerCompatHoneycomb:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.ViewCompat -> android.support.v4.view.ViewCompat:
    int OVER_SCROLL_ALWAYS -> OVER_SCROLL_ALWAYS
    int OVER_SCROLL_IF_CONTENT_SCROLLS -> OVER_SCROLL_IF_CONTENT_SCROLLS
    int OVER_SCROLL_NEVER -> OVER_SCROLL_NEVER
    long FAKE_FRAME_TIME -> FAKE_FRAME_TIME
    int IMPORTANT_FOR_ACCESSIBILITY_AUTO -> IMPORTANT_FOR_ACCESSIBILITY_AUTO
    int IMPORTANT_FOR_ACCESSIBILITY_YES -> IMPORTANT_FOR_ACCESSIBILITY_YES
    int IMPORTANT_FOR_ACCESSIBILITY_NO -> IMPORTANT_FOR_ACCESSIBILITY_NO
    int IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS -> IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS
    int ACCESSIBILITY_LIVE_REGION_NONE -> ACCESSIBILITY_LIVE_REGION_NONE
    int ACCESSIBILITY_LIVE_REGION_POLITE -> ACCESSIBILITY_LIVE_REGION_POLITE
    int ACCESSIBILITY_LIVE_REGION_ASSERTIVE -> ACCESSIBILITY_LIVE_REGION_ASSERTIVE
    int LAYER_TYPE_NONE -> LAYER_TYPE_NONE
    int LAYER_TYPE_SOFTWARE -> LAYER_TYPE_SOFTWARE
    int LAYER_TYPE_HARDWARE -> LAYER_TYPE_HARDWARE
    int LAYOUT_DIRECTION_LTR -> LAYOUT_DIRECTION_LTR
    int LAYOUT_DIRECTION_RTL -> LAYOUT_DIRECTION_RTL
    int LAYOUT_DIRECTION_INHERIT -> LAYOUT_DIRECTION_INHERIT
    int LAYOUT_DIRECTION_LOCALE -> LAYOUT_DIRECTION_LOCALE
    int MEASURED_SIZE_MASK -> MEASURED_SIZE_MASK
    int MEASURED_STATE_MASK -> MEASURED_STATE_MASK
    int MEASURED_HEIGHT_STATE_SHIFT -> MEASURED_HEIGHT_STATE_SHIFT
    int MEASURED_STATE_TOO_SMALL -> MEASURED_STATE_TOO_SMALL
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> IMPL
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.ViewCompat$BaseViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    long getFrameTime() -> getFrameTime
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl:
    boolean isOpaque(android.view.View) -> isOpaque
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.ViewCompat$GBViewCompatImpl:
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ViewCompat$HCViewCompatImpl:
    long getFrameTime() -> getFrameTime
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ViewCompat$ICSViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.ViewCompat$JBViewCompatImpl:
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl:
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
android.support.v4.view.ViewCompat$KitKatViewCompatImpl -> android.support.v4.view.ViewCompat$KitKatViewCompatImpl:
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.ViewCompat$ViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
android.support.v4.view.ViewCompatEclairMr1 -> android.support.v4.view.ViewCompatEclairMr1:
    boolean isOpaque(android.view.View) -> isOpaque
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.ViewCompatGingerbread:
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewCompatHC -> android.support.v4.view.ViewCompatHC:
    long getFrameTime() -> getFrameTime
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
android.support.v4.view.ViewCompatICS -> android.support.v4.view.ViewCompatICS:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> setAccessibilityDelegate
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ViewCompatJB:
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.ViewCompatJellybeanMr1:
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
android.support.v4.view.ViewCompatKitKat -> android.support.v4.view.ViewCompatKitKat:
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.ViewConfigurationCompat:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> IMPL
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.ViewConfigurationCompatFroyo:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewGroupCompat -> android.support.v4.view.ViewGroupCompat:
    int LAYOUT_MODE_CLIP_BOUNDS -> LAYOUT_MODE_CLIP_BOUNDS
    int LAYOUT_MODE_OPTICAL_BOUNDS -> LAYOUT_MODE_OPTICAL_BOUNDS
    android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl IMPL -> IMPL
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl:
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompatHC -> android.support.v4.view.ViewGroupCompatHC:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
android.support.v4.view.ViewGroupCompatIcs -> android.support.v4.view.ViewGroupCompatIcs:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompatJellybeanMR2 -> android.support.v4.view.ViewGroupCompatJellybeanMR2:
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    boolean USE_CACHE -> USE_CACHE
    int DEFAULT_OFFSCREEN_PAGES -> DEFAULT_OFFSCREEN_PAGES
    int MAX_SETTLE_DURATION -> MAX_SETTLE_DURATION
    int MIN_DISTANCE_FOR_FLING -> MIN_DISTANCE_FOR_FLING
    int DEFAULT_GUTTER_SIZE -> DEFAULT_GUTTER_SIZE
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    int mExpectedAdapterCount -> mExpectedAdapterCount
    java.util.Comparator COMPARATOR -> COMPARATOR
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    java.util.ArrayList mItems -> mItems
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> mTempItem
    android.graphics.Rect mTempRect -> mTempRect
    android.support.v4.view.PagerAdapter mAdapter -> mAdapter
    int mCurItem -> mCurItem
    int mRestoredCurItem -> mRestoredCurItem
    android.os.Parcelable mRestoredAdapterState -> mRestoredAdapterState
    java.lang.ClassLoader mRestoredClassLoader -> mRestoredClassLoader
    android.widget.Scroller mScroller -> mScroller
    android.support.v4.view.ViewPager$PagerObserver mObserver -> mObserver
    int mPageMargin -> mPageMargin
    android.graphics.drawable.Drawable mMarginDrawable -> mMarginDrawable
    int mTopPageBounds -> mTopPageBounds
    int mBottomPageBounds -> mBottomPageBounds
    float mFirstOffset -> mFirstOffset
    float mLastOffset -> mLastOffset
    int mChildWidthMeasureSpec -> mChildWidthMeasureSpec
    int mChildHeightMeasureSpec -> mChildHeightMeasureSpec
    boolean mInLayout -> mInLayout
    boolean mScrollingCacheEnabled -> mScrollingCacheEnabled
    boolean mPopulatePending -> mPopulatePending
    int mOffscreenPageLimit -> mOffscreenPageLimit
    boolean mIsBeingDragged -> mIsBeingDragged
    boolean mIsUnableToDrag -> mIsUnableToDrag
    boolean mIgnoreGutter -> mIgnoreGutter
    int mDefaultGutterSize -> mDefaultGutterSize
    int mGutterSize -> mGutterSize
    int mTouchSlop -> mTouchSlop
    float mLastMotionX -> mLastMotionX
    float mLastMotionY -> mLastMotionY
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    int mActivePointerId -> mActivePointerId
    int INVALID_POINTER -> INVALID_POINTER
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    int mMinimumVelocity -> mMinimumVelocity
    int mMaximumVelocity -> mMaximumVelocity
    int mFlingDistance -> mFlingDistance
    int mCloseEnough -> mCloseEnough
    int CLOSE_ENOUGH -> CLOSE_ENOUGH
    boolean mFakeDragging -> mFakeDragging
    long mFakeDragBeginTime -> mFakeDragBeginTime
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> mLeftEdge
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> mRightEdge
    boolean mFirstLayout -> mFirstLayout
    boolean mNeedCalculatePageOffsets -> mNeedCalculatePageOffsets
    boolean mCalledSuper -> mCalledSuper
    int mDecorChildCount -> mDecorChildCount
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> mOnPageChangeListener
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> mInternalPageChangeListener
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> mAdapterChangeListener
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> mPageTransformer
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> mSetChildrenDrawingOrderEnabled
    int DRAW_ORDER_DEFAULT -> DRAW_ORDER_DEFAULT
    int DRAW_ORDER_FORWARD -> DRAW_ORDER_FORWARD
    int DRAW_ORDER_REVERSE -> DRAW_ORDER_REVERSE
    int mDrawingOrder -> mDrawingOrder
    java.util.ArrayList mDrawingOrderedChildren -> mDrawingOrderedChildren
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> sPositionComparator
    int SCROLL_STATE_IDLE -> SCROLL_STATE_IDLE
    int SCROLL_STATE_DRAGGING -> SCROLL_STATE_DRAGGING
    int SCROLL_STATE_SETTLING -> SCROLL_STATE_SETTLING
    java.lang.Runnable mEndScrollRunnable -> mEndScrollRunnable
    int mScrollState -> mScrollState
    void initViewPager() -> initViewPager
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> removeNonDecorViews
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> setCurrentItem
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> setCurrentItemInternal
    void setCurrentItemInternal(int,boolean,boolean,int) -> setCurrentItemInternal
    void scrollToItem(int,boolean,int,boolean) -> scrollToItem
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setPageTransformer(boolean,android.support.v4.view.ViewPager$PageTransformer) -> setPageTransformer
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setInternalPageChangeListener
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    void smoothScrollTo(int,int) -> smoothScrollTo
    void smoothScrollTo(int,int,int) -> smoothScrollTo
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> addNewItem
    void dataSetChanged() -> dataSetChanged
    void populate() -> populate
    void populate(int) -> populate
    void sortChildDrawingOrder() -> sortChildDrawingOrder
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> calculatePageOffsets
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> infoForChild
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> infoForAnyChild
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> infoForPosition
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> recomputeScrollPosition
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> pageScrolled
    void onPageScrolled(int,float,int) -> onPageScrolled
    void completeScroll(boolean) -> completeScroll
    boolean isGutterDrag(float,float) -> isGutterDrag
    void enableLayers(boolean) -> enableLayers
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestParentDisallowInterceptTouchEvent(boolean) -> requestParentDisallowInterceptTouchEvent
    boolean performDrag(float) -> performDrag
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> infoForCurrentScrollPosition
    int determineTargetPage(int,float,int,int) -> determineTargetPage
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean beginFakeDrag() -> beginFakeDrag
    void endFakeDrag() -> endFakeDrag
    void fakeDragBy(float) -> fakeDragBy
    boolean isFakeDragging() -> isFakeDragging
    void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    void endDrag() -> endDrag
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    boolean arrowScroll(int) -> arrowScroll
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> getChildRectInPagerCoordinates
    boolean pageLeft() -> pageLeft
    boolean pageRight() -> pageRight
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000(android.support.v4.view.ViewPager,int) -> access$000
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> access$200
    int access$300(android.support.v4.view.ViewPager) -> access$300
    int[] access$400() -> access$400
android.support.v4.view.ViewPager$1 -> android.support.v4.view.ViewPager$1:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ViewPager$2:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.ViewPager$3:
    android.support.v4.view.ViewPager this$0 -> this$0
    void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ViewPager$Decor:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.ViewPager$ItemInfo:
    java.lang.Object object -> object
    int position -> position
    boolean scrolling -> scrolling
    float widthFactor -> widthFactor
    float offset -> offset
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> isDecor
    int gravity -> gravity
    float widthFactor -> widthFactor
    boolean needsMeasure -> needsMeasure
    int position -> position
    int childIndex -> childIndex
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.ViewPager$MyAccessibilityDelegate:
    android.support.v4.view.ViewPager this$0 -> this$0
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    boolean canScroll() -> canScroll
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ViewPager$OnAdapterChangeListener:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ViewPager$OnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.ViewPager$PageTransformer:
    void transformPage(android.view.View,float) -> transformPage
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ViewPager$PagerObserver:
    android.support.v4.view.ViewPager this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> position
    android.os.Parcelable adapterState -> adapterState
    java.lang.ClassLoader loader -> loader
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.ViewPager$SavedState$1:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
android.support.v4.view.ViewPager$SimpleOnPageChangeListener -> android.support.v4.view.ViewPager$SimpleOnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.ViewPager$ViewPositionComparator:
    int compare(android.view.View,android.view.View) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewParentCompat -> android.support.v4.view.ViewParentCompat:
    android.support.v4.view.ViewParentCompat$ViewParentCompatImpl IMPL -> IMPL
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompat$ViewParentCompatICSImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatICSImpl:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompat$ViewParentCompatImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatImpl:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompatICS -> android.support.v4.view.ViewParentCompatICS:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.WindowCompat -> android.support.v4.view.WindowCompat:
    int FEATURE_ACTION_BAR -> FEATURE_ACTION_BAR
    int FEATURE_ACTION_BAR_OVERLAY -> FEATURE_ACTION_BAR_OVERLAY
    int FEATURE_ACTION_MODE_OVERLAY -> FEATURE_ACTION_MODE_OVERLAY
android.support.v4.view.accessibility.AccessibilityEventCompat -> android.support.v4.view.accessibility.AccessibilityEventCompat:
    android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl IMPL -> IMPL
    int TYPE_VIEW_HOVER_ENTER -> TYPE_VIEW_HOVER_ENTER
    int TYPE_VIEW_HOVER_EXIT -> TYPE_VIEW_HOVER_EXIT
    int TYPE_TOUCH_EXPLORATION_GESTURE_START -> TYPE_TOUCH_EXPLORATION_GESTURE_START
    int TYPE_TOUCH_EXPLORATION_GESTURE_END -> TYPE_TOUCH_EXPLORATION_GESTURE_END
    int TYPE_WINDOW_CONTENT_CHANGED -> TYPE_WINDOW_CONTENT_CHANGED
    int TYPE_VIEW_SCROLLED -> TYPE_VIEW_SCROLLED
    int TYPE_VIEW_TEXT_SELECTION_CHANGED -> TYPE_VIEW_TEXT_SELECTION_CHANGED
    int TYPE_ANNOUNCEMENT -> TYPE_ANNOUNCEMENT
    int TYPE_VIEW_ACCESSIBILITY_FOCUSED -> TYPE_VIEW_ACCESSIBILITY_FOCUSED
    int TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED -> TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED
    int TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY -> TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY
    int TYPE_GESTURE_DETECTION_START -> TYPE_GESTURE_DETECTION_START
    int TYPE_GESTURE_DETECTION_END -> TYPE_GESTURE_DETECTION_END
    int TYPE_TOUCH_INTERACTION_START -> TYPE_TOUCH_INTERACTION_START
    int TYPE_TOUCH_INTERACTION_END -> TYPE_TOUCH_INTERACTION_END
    int TYPES_ALL_MASK -> TYPES_ALL_MASK
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,android.support.v4.view.accessibility.AccessibilityRecordCompat) -> appendRecord
    android.support.v4.view.accessibility.AccessibilityRecordCompat getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    android.support.v4.view.accessibility.AccessibilityRecordCompat asRecord(android.view.accessibility.AccessibilityEvent) -> asRecord
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityEventCompatIcs -> android.support.v4.view.accessibility.AccessibilityEventCompatIcs:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityManagerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl IMPL -> IMPL
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl access$000() -> access$000
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1 -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat val$listener -> val$listener
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl this$0 -> this$0
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat:
    java.lang.Object mListener -> mListener
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs:
    java.lang.Object newAccessibilityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge) -> newAccessibilityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1 -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1:
    android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge val$bridge -> val$bridge
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge:
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> IMPL
    java.lang.Object mInfo -> mInfo
    int ACTION_FOCUS -> ACTION_FOCUS
    int ACTION_CLEAR_FOCUS -> ACTION_CLEAR_FOCUS
    int ACTION_SELECT -> ACTION_SELECT
    int ACTION_CLEAR_SELECTION -> ACTION_CLEAR_SELECTION
    int ACTION_CLICK -> ACTION_CLICK
    int ACTION_LONG_CLICK -> ACTION_LONG_CLICK
    int ACTION_ACCESSIBILITY_FOCUS -> ACTION_ACCESSIBILITY_FOCUS
    int ACTION_CLEAR_ACCESSIBILITY_FOCUS -> ACTION_CLEAR_ACCESSIBILITY_FOCUS
    int ACTION_NEXT_AT_MOVEMENT_GRANULARITY -> ACTION_NEXT_AT_MOVEMENT_GRANULARITY
    int ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY -> ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
    int ACTION_NEXT_HTML_ELEMENT -> ACTION_NEXT_HTML_ELEMENT
    int ACTION_PREVIOUS_HTML_ELEMENT -> ACTION_PREVIOUS_HTML_ELEMENT
    int ACTION_SCROLL_FORWARD -> ACTION_SCROLL_FORWARD
    int ACTION_SCROLL_BACKWARD -> ACTION_SCROLL_BACKWARD
    int ACTION_COPY -> ACTION_COPY
    int ACTION_PASTE -> ACTION_PASTE
    int ACTION_CUT -> ACTION_CUT
    int ACTION_SET_SELECTION -> ACTION_SET_SELECTION
    java.lang.String ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT -> ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT
    java.lang.String ACTION_ARGUMENT_HTML_ELEMENT_STRING -> ACTION_ARGUMENT_HTML_ELEMENT_STRING
    java.lang.String ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN -> ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN
    java.lang.String ACTION_ARGUMENT_SELECTION_START_INT -> ACTION_ARGUMENT_SELECTION_START_INT
    java.lang.String ACTION_ARGUMENT_SELECTION_END_INT -> ACTION_ARGUMENT_SELECTION_END_INT
    int FOCUS_INPUT -> FOCUS_INPUT
    int FOCUS_ACCESSIBILITY -> FOCUS_ACCESSIBILITY
    int MOVEMENT_GRANULARITY_CHARACTER -> MOVEMENT_GRANULARITY_CHARACTER
    int MOVEMENT_GRANULARITY_WORD -> MOVEMENT_GRANULARITY_WORD
    int MOVEMENT_GRANULARITY_LINE -> MOVEMENT_GRANULARITY_LINE
    int MOVEMENT_GRANULARITY_PARAGRAPH -> MOVEMENT_GRANULARITY_PARAGRAPH
    int MOVEMENT_GRANULARITY_PAGE -> MOVEMENT_GRANULARITY_PAGE
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object) -> wrapNonNullInstance
    java.lang.Object getInfo() -> getInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View,int) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain() -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat focusSearch(int) -> focusSearch
    int getWindowId() -> getWindowId
    int getChildCount() -> getChildCount
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getChild(int) -> getChild
    void addChild(android.view.View) -> addChild
    void addChild(android.view.View,int) -> addChild
    int getActions() -> getActions
    void addAction(int) -> addAction
    boolean performAction(int) -> performAction
    boolean performAction(int,android.os.Bundle) -> performAction
    void setMovementGranularities(int) -> setMovementGranularities
    int getMovementGranularities() -> getMovementGranularities
    java.util.List findAccessibilityNodeInfosByText(java.lang.String) -> findAccessibilityNodeInfosByText
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getParent() -> getParent
    void setParent(android.view.View) -> setParent
    void setParent(android.view.View,int) -> setParent
    void getBoundsInParent(android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable() -> isCheckable
    void setCheckable(boolean) -> setCheckable
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isFocusable() -> isFocusable
    void setFocusable(boolean) -> setFocusable
    boolean isFocused() -> isFocused
    void setFocused(boolean) -> setFocused
    boolean isVisibleToUser() -> isVisibleToUser
    void setVisibleToUser(boolean) -> setVisibleToUser
    boolean isAccessibilityFocused() -> isAccessibilityFocused
    void setAccessibilityFocused(boolean) -> setAccessibilityFocused
    boolean isSelected() -> isSelected
    void setSelected(boolean) -> setSelected
    boolean isClickable() -> isClickable
    void setClickable(boolean) -> setClickable
    boolean isLongClickable() -> isLongClickable
    void setLongClickable(boolean) -> setLongClickable
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    java.lang.CharSequence getPackageName() -> getPackageName
    void setPackageName(java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText() -> getText
    void setText(java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    void recycle() -> recycle
    void setViewIdResourceName(java.lang.String) -> setViewIdResourceName
    java.lang.String getViewIdResourceName() -> getViewIdResourceName
    int getLiveRegion() -> getLiveRegion
    void setLiveRegion(int) -> setLiveRegion
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String getActionSymbolicName(int) -> getActionSymbolicName
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    java.lang.Object obtain(android.view.View,int) -> obtain
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    int getWindowId(java.lang.Object) -> getWindowId
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    void addChild(java.lang.Object,android.view.View) -> addChild
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    int getActions(java.lang.Object) -> getActions
    void addAction(java.lang.Object,int) -> addAction
    boolean performAction(java.lang.Object,int) -> performAction
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    java.lang.Object getParent(java.lang.Object) -> getParent
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    void setParent(java.lang.Object,android.view.View) -> setParent
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable(java.lang.Object) -> isCheckable
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    void setChecked(java.lang.Object,boolean) -> setChecked
    boolean isFocusable(java.lang.Object) -> isFocusable
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    void setFocused(java.lang.Object,boolean) -> setFocused
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    boolean isSelected(java.lang.Object) -> isSelected
    void setSelected(java.lang.Object,boolean) -> setSelected
    boolean isClickable(java.lang.Object) -> isClickable
    void setClickable(java.lang.Object,boolean) -> setClickable
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    boolean isPassword(java.lang.Object) -> isPassword
    void setPassword(java.lang.Object,boolean) -> setPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText(java.lang.Object) -> getText
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void recycle(java.lang.Object) -> recycle
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl:
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    void setParent(java.lang.Object,android.view.View,int) -> setParent
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl:
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl:
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean:
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccesibilityFocused(java.lang.Object,boolean) -> setAccesibilityFocused
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2 -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2:
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat:
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> IMPL
    java.lang.Object mProvider -> mProvider
    java.lang.Object getProvider() -> getProvider
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> val$compat
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> this$0
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> val$compat
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl this$0 -> this$0
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.lang.Object findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> val$bridge
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge:
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge val$bridge -> val$bridge
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
    android.view.accessibility.AccessibilityNodeInfo findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge:
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.accessibility.AccessibilityRecordCompat:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> IMPL
    java.lang.Object mRecord -> mRecord
    java.lang.Object getImpl() -> getImpl
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain(android.support.v4.view.accessibility.AccessibilityRecordCompat) -> obtain
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource() -> getSource
    int getWindowId() -> getWindowId
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isFullScreen() -> isFullScreen
    void setFullScreen(boolean) -> setFullScreen
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    int getItemCount() -> getItemCount
    void setItemCount(int) -> setItemCount
    int getCurrentItemIndex() -> getCurrentItemIndex
    void setCurrentItemIndex(int) -> setCurrentItemIndex
    int getFromIndex() -> getFromIndex
    void setFromIndex(int) -> setFromIndex
    int getToIndex() -> getToIndex
    void setToIndex(int) -> setToIndex
    int getScrollX() -> getScrollX
    void setScrollX(int) -> setScrollX
    int getScrollY() -> getScrollY
    void setScrollY(int) -> setScrollY
    int getMaxScrollX() -> getMaxScrollX
    void setMaxScrollX(int) -> setMaxScrollX
    int getMaxScrollY() -> getMaxScrollY
    void setMaxScrollY(int) -> setMaxScrollY
    int getAddedCount() -> getAddedCount
    void setAddedCount(int) -> setAddedCount
    int getRemovedCount() -> getRemovedCount
    void setRemovedCount(int) -> setRemovedCount
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.util.List getText() -> getText
    java.lang.CharSequence getBeforeText() -> getBeforeText
    void setBeforeText(java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData() -> getParcelableData
    void setParcelableData(android.os.Parcelable) -> setParcelableData
    void recycle() -> recycle
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl:
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    void setChecked(java.lang.Object,boolean) -> setChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    boolean isPassword(java.lang.Object) -> isPassword
    void setPassword(java.lang.Object,boolean) -> setPassword
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    boolean isScrollable(java.lang.Object) -> isScrollable
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    int getItemCount(java.lang.Object) -> getItemCount
    void setItemCount(java.lang.Object,int) -> setItemCount
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    int getToIndex(java.lang.Object) -> getToIndex
    void setToIndex(java.lang.Object,int) -> setToIndex
    int getScrollX(java.lang.Object) -> getScrollX
    void setScrollX(java.lang.Object,int) -> setScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    void setScrollY(java.lang.Object,int) -> setScrollY
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    int getAddedCount(java.lang.Object) -> getAddedCount
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    java.util.List getText(java.lang.Object) -> getText
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl:
    void setSource(java.lang.Object,android.view.View,int) -> setSource
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs -> android.support.v4.view.accessibility.AccessibilityRecordCompatIcs:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    java.lang.Object getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1 -> android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1:
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean:
    void setSource(java.lang.Object,android.view.View,int) -> setSource
android.support.v4.widget.AutoScrollHelper -> android.support.v4.widget.AutoScrollHelper:
    float RELATIVE_UNSPECIFIED -> RELATIVE_UNSPECIFIED
    float NO_MAX -> NO_MAX
    float NO_MIN -> NO_MIN
    int EDGE_TYPE_INSIDE -> EDGE_TYPE_INSIDE
    int EDGE_TYPE_INSIDE_EXTEND -> EDGE_TYPE_INSIDE_EXTEND
    int EDGE_TYPE_OUTSIDE -> EDGE_TYPE_OUTSIDE
    int HORIZONTAL -> HORIZONTAL
    int VERTICAL -> VERTICAL
    android.support.v4.widget.AutoScrollHelper$ClampedScroller mScroller -> mScroller
    android.view.animation.Interpolator mEdgeInterpolator -> mEdgeInterpolator
    android.view.View mTarget -> mTarget
    java.lang.Runnable mRunnable -> mRunnable
    float[] mRelativeEdges -> mRelativeEdges
    float[] mMaximumEdges -> mMaximumEdges
    int mEdgeType -> mEdgeType
    int mActivationDelay -> mActivationDelay
    float[] mRelativeVelocity -> mRelativeVelocity
    float[] mMinimumVelocity -> mMinimumVelocity
    float[] mMaximumVelocity -> mMaximumVelocity
    boolean mAlreadyDelayed -> mAlreadyDelayed
    boolean mNeedsReset -> mNeedsReset
    boolean mNeedsCancel -> mNeedsCancel
    boolean mAnimating -> mAnimating
    boolean mEnabled -> mEnabled
    boolean mExclusive -> mExclusive
    int DEFAULT_EDGE_TYPE -> DEFAULT_EDGE_TYPE
    int DEFAULT_MINIMUM_VELOCITY_DIPS -> DEFAULT_MINIMUM_VELOCITY_DIPS
    int DEFAULT_MAXIMUM_VELOCITY_DIPS -> DEFAULT_MAXIMUM_VELOCITY_DIPS
    float DEFAULT_MAXIMUM_EDGE -> DEFAULT_MAXIMUM_EDGE
    float DEFAULT_RELATIVE_EDGE -> DEFAULT_RELATIVE_EDGE
    float DEFAULT_RELATIVE_VELOCITY -> DEFAULT_RELATIVE_VELOCITY
    int DEFAULT_ACTIVATION_DELAY -> DEFAULT_ACTIVATION_DELAY
    int DEFAULT_RAMP_UP_DURATION -> DEFAULT_RAMP_UP_DURATION
    int DEFAULT_RAMP_DOWN_DURATION -> DEFAULT_RAMP_DOWN_DURATION
    android.support.v4.widget.AutoScrollHelper setEnabled(boolean) -> setEnabled
    boolean isEnabled() -> isEnabled
    android.support.v4.widget.AutoScrollHelper setExclusive(boolean) -> setExclusive
    boolean isExclusive() -> isExclusive
    android.support.v4.widget.AutoScrollHelper setMaximumVelocity(float,float) -> setMaximumVelocity
    android.support.v4.widget.AutoScrollHelper setMinimumVelocity(float,float) -> setMinimumVelocity
    android.support.v4.widget.AutoScrollHelper setRelativeVelocity(float,float) -> setRelativeVelocity
    android.support.v4.widget.AutoScrollHelper setEdgeType(int) -> setEdgeType
    android.support.v4.widget.AutoScrollHelper setRelativeEdges(float,float) -> setRelativeEdges
    android.support.v4.widget.AutoScrollHelper setMaximumEdges(float,float) -> setMaximumEdges
    android.support.v4.widget.AutoScrollHelper setActivationDelay(int) -> setActivationDelay
    android.support.v4.widget.AutoScrollHelper setRampUpDuration(int) -> setRampUpDuration
    android.support.v4.widget.AutoScrollHelper setRampDownDuration(int) -> setRampDownDuration
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    boolean shouldAnimate() -> shouldAnimate
    void startAnimating() -> startAnimating
    void requestStop() -> requestStop
    float computeTargetVelocity(int,float,float,float) -> computeTargetVelocity
    void scrollTargetBy(int,int) -> scrollTargetBy
    boolean canTargetScrollHorizontally(int) -> canTargetScrollHorizontally
    boolean canTargetScrollVertically(int) -> canTargetScrollVertically
    float getEdgeValue(float,float,float,float) -> getEdgeValue
    float constrainEdgeValue(float,float) -> constrainEdgeValue
    int constrain(int,int,int) -> constrain
    float constrain(float,float,float) -> constrain
    void cancelTargetTouch() -> cancelTargetTouch
    boolean access$100(android.support.v4.widget.AutoScrollHelper) -> access$100
    boolean access$200(android.support.v4.widget.AutoScrollHelper) -> access$200
    boolean access$202(android.support.v4.widget.AutoScrollHelper,boolean) -> access$202
    android.support.v4.widget.AutoScrollHelper$ClampedScroller access$300(android.support.v4.widget.AutoScrollHelper) -> access$300
    boolean access$400(android.support.v4.widget.AutoScrollHelper) -> access$400
    boolean access$102(android.support.v4.widget.AutoScrollHelper,boolean) -> access$102
    boolean access$500(android.support.v4.widget.AutoScrollHelper) -> access$500
    boolean access$502(android.support.v4.widget.AutoScrollHelper,boolean) -> access$502
    void access$600(android.support.v4.widget.AutoScrollHelper) -> access$600
    android.view.View access$700(android.support.v4.widget.AutoScrollHelper) -> access$700
    int access$800(int,int,int) -> access$800
    float access$900(float,float,float) -> access$900
android.support.v4.widget.AutoScrollHelper$1 -> android.support.v4.widget.AutoScrollHelper$1:
android.support.v4.widget.AutoScrollHelper$ClampedScroller -> android.support.v4.widget.AutoScrollHelper$ClampedScroller:
    int mRampUpDuration -> mRampUpDuration
    int mRampDownDuration -> mRampDownDuration
    float mTargetVelocityX -> mTargetVelocityX
    float mTargetVelocityY -> mTargetVelocityY
    long mStartTime -> mStartTime
    long mDeltaTime -> mDeltaTime
    int mDeltaX -> mDeltaX
    int mDeltaY -> mDeltaY
    long mStopTime -> mStopTime
    float mStopValue -> mStopValue
    int mEffectiveRampDown -> mEffectiveRampDown
    void setRampUpDuration(int) -> setRampUpDuration
    void setRampDownDuration(int) -> setRampDownDuration
    void start() -> start
    void requestStop() -> requestStop
    boolean isFinished() -> isFinished
    float getValueAt(long) -> getValueAt
    float interpolateValue(float) -> interpolateValue
    void computeScrollDelta() -> computeScrollDelta
    void setTargetVelocity(float,float) -> setTargetVelocity
    int getHorizontalDirection() -> getHorizontalDirection
    int getVerticalDirection() -> getVerticalDirection
    int getDeltaX() -> getDeltaX
    int getDeltaY() -> getDeltaY
android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable -> android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable:
    android.support.v4.widget.AutoScrollHelper this$0 -> this$0
    void run() -> run
android.support.v4.widget.BakedBezierInterpolator -> android.support.v4.widget.BakedBezierInterpolator:
    android.support.v4.widget.BakedBezierInterpolator INSTANCE -> INSTANCE
    float[] VALUES -> VALUES
    float STEP_SIZE -> STEP_SIZE
    android.support.v4.widget.BakedBezierInterpolator getInstance() -> getInstance
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ContentLoadingProgressBar -> android.support.v4.widget.ContentLoadingProgressBar:
    int MIN_SHOW_TIME -> MIN_SHOW_TIME
    int MIN_DELAY -> MIN_DELAY
    long mStartTime -> mStartTime
    boolean mPostedHide -> mPostedHide
    boolean mPostedShow -> mPostedShow
    boolean mDismissed -> mDismissed
    java.lang.Runnable mDelayedHide -> mDelayedHide
    java.lang.Runnable mDelayedShow -> mDelayedShow
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void removeCallbacks() -> removeCallbacks
    void hide() -> hide
    void show() -> show
    boolean access$002(android.support.v4.widget.ContentLoadingProgressBar,boolean) -> access$002
    long access$102(android.support.v4.widget.ContentLoadingProgressBar,long) -> access$102
    boolean access$202(android.support.v4.widget.ContentLoadingProgressBar,boolean) -> access$202
    boolean access$300(android.support.v4.widget.ContentLoadingProgressBar) -> access$300
android.support.v4.widget.ContentLoadingProgressBar$1 -> android.support.v4.widget.ContentLoadingProgressBar$1:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> this$0
    void run() -> run
android.support.v4.widget.ContentLoadingProgressBar$2 -> android.support.v4.widget.ContentLoadingProgressBar$2:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> this$0
    void run() -> run
android.support.v4.widget.CursorAdapter -> android.support.v4.widget.CursorAdapter:
    boolean mDataValid -> mDataValid
    boolean mAutoRequery -> mAutoRequery
    android.database.Cursor mCursor -> mCursor
    android.content.Context mContext -> mContext
    int mRowIDColumn -> mRowIDColumn
    android.support.v4.widget.CursorAdapter$ChangeObserver mChangeObserver -> mChangeObserver
    android.database.DataSetObserver mDataSetObserver -> mDataSetObserver
    android.support.v4.widget.CursorFilter mCursorFilter -> mCursorFilter
    android.widget.FilterQueryProvider mFilterQueryProvider -> mFilterQueryProvider
    int FLAG_AUTO_REQUERY -> FLAG_AUTO_REQUERY
    int FLAG_REGISTER_CONTENT_OBSERVER -> FLAG_REGISTER_CONTENT_OBSERVER
    void init(android.content.Context,android.database.Cursor,boolean) -> init
    void init(android.content.Context,android.database.Cursor,int) -> init
    android.database.Cursor getCursor() -> getCursor
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    void changeCursor(android.database.Cursor) -> changeCursor
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.widget.Filter getFilter() -> getFilter
    android.widget.FilterQueryProvider getFilterQueryProvider() -> getFilterQueryProvider
    void setFilterQueryProvider(android.widget.FilterQueryProvider) -> setFilterQueryProvider
    void onContentChanged() -> onContentChanged
android.support.v4.widget.CursorAdapter$1 -> android.support.v4.widget.CursorAdapter$1:
android.support.v4.widget.CursorAdapter$ChangeObserver -> android.support.v4.widget.CursorAdapter$ChangeObserver:
    android.support.v4.widget.CursorAdapter this$0 -> this$0
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.widget.CursorAdapter$MyDataSetObserver -> android.support.v4.widget.CursorAdapter$MyDataSetObserver:
    android.support.v4.widget.CursorAdapter this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.widget.CursorFilter -> android.support.v4.widget.CursorFilter:
    android.support.v4.widget.CursorFilter$CursorFilterClient mClient -> mClient
    java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
android.support.v4.widget.CursorFilter$CursorFilterClient -> android.support.v4.widget.CursorFilter$CursorFilterClient:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.database.Cursor getCursor() -> getCursor
    void changeCursor(android.database.Cursor) -> changeCursor
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    java.lang.String TAG -> TAG
    int STATE_IDLE -> STATE_IDLE
    int STATE_DRAGGING -> STATE_DRAGGING
    int STATE_SETTLING -> STATE_SETTLING
    int LOCK_MODE_UNLOCKED -> LOCK_MODE_UNLOCKED
    int LOCK_MODE_LOCKED_CLOSED -> LOCK_MODE_LOCKED_CLOSED
    int LOCK_MODE_LOCKED_OPEN -> LOCK_MODE_LOCKED_OPEN
    int MIN_DRAWER_MARGIN -> MIN_DRAWER_MARGIN
    int DEFAULT_SCRIM_COLOR -> DEFAULT_SCRIM_COLOR
    int PEEK_DELAY -> PEEK_DELAY
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    boolean ALLOW_EDGE_LOCK -> ALLOW_EDGE_LOCK
    boolean CHILDREN_DISALLOW_INTERCEPT -> CHILDREN_DISALLOW_INTERCEPT
    float TOUCH_SLOP_SENSITIVITY -> TOUCH_SLOP_SENSITIVITY
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    int mMinDrawerMargin -> mMinDrawerMargin
    int mScrimColor -> mScrimColor
    float mScrimOpacity -> mScrimOpacity
    android.graphics.Paint mScrimPaint -> mScrimPaint
    android.support.v4.widget.ViewDragHelper mLeftDragger -> mLeftDragger
    android.support.v4.widget.ViewDragHelper mRightDragger -> mRightDragger
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> mLeftCallback
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> mRightCallback
    int mDrawerState -> mDrawerState
    boolean mInLayout -> mInLayout
    boolean mFirstLayout -> mFirstLayout
    int mLockModeLeft -> mLockModeLeft
    int mLockModeRight -> mLockModeRight
    boolean mDisallowInterceptRequested -> mDisallowInterceptRequested
    boolean mChildrenCanceledTouch -> mChildrenCanceledTouch
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> mListener
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    android.graphics.drawable.Drawable mShadowLeft -> mShadowLeft
    android.graphics.drawable.Drawable mShadowRight -> mShadowRight
    java.lang.CharSequence mTitleLeft -> mTitleLeft
    java.lang.CharSequence mTitleRight -> mTitleRight
    void setDrawerShadow(android.graphics.drawable.Drawable,int) -> setDrawerShadow
    void setDrawerShadow(int,int) -> setDrawerShadow
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> setDrawerLockMode
    void setDrawerLockMode(int,android.view.View) -> setDrawerLockMode
    int getDrawerLockMode(int) -> getDrawerLockMode
    int getDrawerLockMode(android.view.View) -> getDrawerLockMode
    void setDrawerTitle(int,java.lang.CharSequence) -> setDrawerTitle
    java.lang.CharSequence getDrawerTitle(int) -> getDrawerTitle
    void updateDrawerState(int,int,android.view.View) -> updateDrawerState
    void dispatchOnDrawerClosed(android.view.View) -> dispatchOnDrawerClosed
    void dispatchOnDrawerOpened(android.view.View) -> dispatchOnDrawerOpened
    void dispatchOnDrawerSlide(android.view.View,float) -> dispatchOnDrawerSlide
    void setDrawerViewOffset(android.view.View,float) -> setDrawerViewOffset
    float getDrawerViewOffset(android.view.View) -> getDrawerViewOffset
    int getDrawerViewAbsoluteGravity(android.view.View) -> getDrawerViewAbsoluteGravity
    boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> checkDrawerViewAbsoluteGravity
    android.view.View findOpenDrawer() -> findOpenDrawer
    void moveDrawerToOffset(android.view.View,float) -> moveDrawerToOffset
    android.view.View findDrawerWithGravity(int) -> findDrawerWithGravity
    java.lang.String gravityToString(int) -> gravityToString
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> hasOpaqueBackground
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> isContentView
    boolean isDrawerView(android.view.View) -> isDrawerView
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> closeDrawers
    void closeDrawers(boolean) -> closeDrawers
    void openDrawer(android.view.View) -> openDrawer
    void openDrawer(int) -> openDrawer
    void closeDrawer(android.view.View) -> closeDrawer
    void closeDrawer(int) -> closeDrawer
    boolean isDrawerOpen(android.view.View) -> isDrawerOpen
    boolean isDrawerOpen(int) -> isDrawerOpen
    boolean isDrawerVisible(android.view.View) -> isDrawerVisible
    boolean isDrawerVisible(int) -> isDrawerVisible
    boolean hasPeekingDrawer() -> hasPeekingDrawer
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean hasVisibleDrawer() -> hasVisibleDrawer
    android.view.View findVisibleDrawer() -> findVisibleDrawer
    void cancelChildViewTouch() -> cancelChildViewTouch
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    int[] access$100() -> access$100
    android.view.View access$200(android.support.v4.widget.DrawerLayout) -> access$200
android.support.v4.widget.DrawerLayout$AccessibilityDelegate -> android.support.v4.widget.DrawerLayout$AccessibilityDelegate:
    android.graphics.Rect mTmpRect -> mTmpRect
    android.support.v4.widget.DrawerLayout this$0 -> this$0
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void addChildrenForAccessibility(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.view.ViewGroup) -> addChildrenForAccessibility
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    boolean filter(android.view.View) -> filter
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> copyNodeInfoNoChildren
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.DrawerLayout$DrawerListener:
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.DrawerLayout$LayoutParams:
    int gravity -> gravity
    float onScreen -> onScreen
    boolean isPeeking -> isPeeking
    boolean knownOpen -> knownOpen
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> openDrawerGravity
    int lockModeLeft -> lockModeLeft
    int lockModeRight -> lockModeRight
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.DrawerLayout$SavedState$1:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$SimpleDrawerListener -> android.support.v4.widget.DrawerLayout$SimpleDrawerListener:
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.DrawerLayout$ViewDragCallback:
    int mAbsGravity -> mAbsGravity
    android.support.v4.widget.ViewDragHelper mDragger -> mDragger
    java.lang.Runnable mPeekRunnable -> mPeekRunnable
    android.support.v4.widget.DrawerLayout this$0 -> this$0
    void setDragger(android.support.v4.widget.ViewDragHelper) -> setDragger
    void removeCallbacks() -> removeCallbacks
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void closeOtherDrawer() -> closeOtherDrawer
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    void onEdgeTouched(int,int) -> onEdgeTouched
    void peekDrawer() -> peekDrawer
    boolean onEdgeLock(int) -> onEdgeLock
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    void access$000(android.support.v4.widget.DrawerLayout$ViewDragCallback) -> access$000
android.support.v4.widget.DrawerLayout$ViewDragCallback$1 -> android.support.v4.widget.DrawerLayout$ViewDragCallback$1:
    android.support.v4.widget.DrawerLayout$ViewDragCallback this$1 -> this$1
    void run() -> run
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.EdgeEffectCompat:
    java.lang.Object mEdgeEffect -> mEdgeEffect
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> IMPL
    void setSize(int,int) -> setSize
    boolean isFinished() -> isFinished
    void finish() -> finish
    boolean onPull(float) -> onPull
    boolean onRelease() -> onRelease
    boolean onAbsorb(int) -> onAbsorb
    boolean draw(android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.EdgeEffectCompatIcs:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.ExploreByTouchHelper -> android.support.v4.widget.ExploreByTouchHelper:
    int INVALID_ID -> INVALID_ID
    java.lang.String DEFAULT_CLASS_NAME -> DEFAULT_CLASS_NAME
    android.graphics.Rect mTempScreenRect -> mTempScreenRect
    android.graphics.Rect mTempParentRect -> mTempParentRect
    android.graphics.Rect mTempVisibleRect -> mTempVisibleRect
    int[] mTempGlobalRect -> mTempGlobalRect
    android.view.accessibility.AccessibilityManager mManager -> mManager
    android.view.View mView -> mView
    android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider mNodeProvider -> mNodeProvider
    int mFocusedVirtualViewId -> mFocusedVirtualViewId
    int mHoveredVirtualViewId -> mHoveredVirtualViewId
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    boolean sendEventForVirtualView(int,int) -> sendEventForVirtualView
    void invalidateRoot() -> invalidateRoot
    void invalidateVirtualView(int) -> invalidateVirtualView
    int getFocusedVirtualView() -> getFocusedVirtualView
    void updateHoveredVirtualView(int) -> updateHoveredVirtualView
    android.view.accessibility.AccessibilityEvent createEvent(int,int) -> createEvent
    android.view.accessibility.AccessibilityEvent createEventForHost(int) -> createEventForHost
    android.view.accessibility.AccessibilityEvent createEventForChild(int,int) -> createEventForChild
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNode(int) -> createNode
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNodeForHost() -> createNodeForHost
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int) -> createNodeForChild
    boolean performAction(int,int,android.os.Bundle) -> performAction
    boolean performActionForHost(int,android.os.Bundle) -> performActionForHost
    boolean performActionForChild(int,int,android.os.Bundle) -> performActionForChild
    boolean manageFocusForChild(int,int,android.os.Bundle) -> manageFocusForChild
    boolean intersectVisibleToUser(android.graphics.Rect) -> intersectVisibleToUser
    boolean isAccessibilityFocused(int) -> isAccessibilityFocused
    boolean requestAccessibilityFocus(int) -> requestAccessibilityFocus
    boolean clearAccessibilityFocus(int) -> clearAccessibilityFocus
    int getVirtualViewAt(float,float) -> getVirtualViewAt
    void getVisibleVirtualViews(java.util.List) -> getVisibleVirtualViews
    void onPopulateEventForVirtualView(int,android.view.accessibility.AccessibilityEvent) -> onPopulateEventForVirtualView
    void onPopulateNodeForVirtualView(int,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onPopulateNodeForVirtualView
    boolean onPerformActionForVirtualView(int,int,android.os.Bundle) -> onPerformActionForVirtualView
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat access$100(android.support.v4.widget.ExploreByTouchHelper,int) -> access$100
    boolean access$200(android.support.v4.widget.ExploreByTouchHelper,int,int,android.os.Bundle) -> access$200
android.support.v4.widget.ExploreByTouchHelper$1 -> android.support.v4.widget.ExploreByTouchHelper$1:
android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider -> android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider:
    android.support.v4.widget.ExploreByTouchHelper this$0 -> this$0
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.widget.ListPopupWindowCompat -> android.support.v4.widget.ListPopupWindowCompat:
    android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl IMPL -> IMPL
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompat$BaseListPopupWindowImpl -> android.support.v4.widget.ListPopupWindowCompat$BaseListPopupWindowImpl:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompat$KitKatListPopupWindowImpl -> android.support.v4.widget.ListPopupWindowCompat$KitKatListPopupWindowImpl:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl -> android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompatKitKat -> android.support.v4.widget.ListPopupWindowCompatKitKat:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListViewAutoScrollHelper -> android.support.v4.widget.ListViewAutoScrollHelper:
    android.widget.ListView mTarget -> mTarget
    void scrollTargetBy(int,int) -> scrollTargetBy
    boolean canTargetScrollHorizontally(int) -> canTargetScrollHorizontally
    boolean canTargetScrollVertically(int) -> canTargetScrollVertically
android.support.v4.widget.PopupMenuCompat -> android.support.v4.widget.PopupMenuCompat:
    android.support.v4.widget.PopupMenuCompat$PopupMenuImpl IMPL -> IMPL
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompat$BasePopupMenuImpl -> android.support.v4.widget.PopupMenuCompat$BasePopupMenuImpl:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompat$KitKatPopupMenuImpl -> android.support.v4.widget.PopupMenuCompat$KitKatPopupMenuImpl:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompat$PopupMenuImpl -> android.support.v4.widget.PopupMenuCompat$PopupMenuImpl:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompatKitKat -> android.support.v4.widget.PopupMenuCompatKitKat:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.ResourceCursorAdapter -> android.support.v4.widget.ResourceCursorAdapter:
    int mLayout -> mLayout
    int mDropDownLayout -> mDropDownLayout
    android.view.LayoutInflater mInflater -> mInflater
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void setViewResource(int) -> setViewResource
    void setDropDownViewResource(int) -> setDropDownViewResource
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.ScrollerCompat:
    java.lang.Object mScroller -> mScroller
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl IMPL -> IMPL
    android.support.v4.widget.ScrollerCompat create(android.content.Context) -> create
    android.support.v4.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator) -> create
    boolean isFinished() -> isFinished
    int getCurrX() -> getCurrX
    int getCurrY() -> getCurrY
    int getFinalX() -> getFinalX
    int getFinalY() -> getFinalY
    float getCurrVelocity() -> getCurrVelocity
    boolean computeScrollOffset() -> computeScrollOffset
    void startScroll(int,int,int,int) -> startScroll
    void startScroll(int,int,int,int,int) -> startScroll
    void fling(int,int,int,int,int,int,int,int) -> fling
    void fling(int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation() -> abortAnimation
    void notifyHorizontalEdgeReached(int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled() -> isOverScrolled
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs:
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
android.support.v4.widget.ScrollerCompatGingerbread -> android.support.v4.widget.ScrollerCompatGingerbread:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompatIcs -> android.support.v4.widget.ScrollerCompatIcs:
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
android.support.v4.widget.SearchViewCompat -> android.support.v4.widget.SearchViewCompat:
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl IMPL -> IMPL
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    void setOnQueryTextListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> setOnQueryTextListener
    void setOnCloseListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl access$000() -> access$000
android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat -> android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat:
    java.lang.Object mListener -> mListener
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat -> android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat:
    java.lang.Object mListener -> mListener
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1 -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1:
    android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat val$listener -> val$listener
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> this$0
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2 -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2:
    android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat val$listener -> val$listener
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> this$0
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompatHoneycomb -> android.support.v4.widget.SearchViewCompatHoneycomb:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompatHoneycomb$1 -> android.support.v4.widget.SearchViewCompatHoneycomb$1:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge val$listener -> val$listener
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompatHoneycomb$2 -> android.support.v4.widget.SearchViewCompatHoneycomb$2:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge val$listener -> val$listener
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge -> android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge:
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge -> android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge:
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompatIcs -> android.support.v4.widget.SearchViewCompatIcs:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
android.support.v4.widget.SearchViewCompatIcs$MySearchView -> android.support.v4.widget.SearchViewCompatIcs$MySearchView:
    void onActionViewCollapsed() -> onActionViewCollapsed
android.support.v4.widget.SimpleCursorAdapter -> android.support.v4.widget.SimpleCursorAdapter:
    int[] mFrom -> mFrom
    int[] mTo -> mTo
    int mStringConversionColumn -> mStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter mCursorToStringConverter -> mCursorToStringConverter
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder mViewBinder -> mViewBinder
    java.lang.String[] mOriginalFrom -> mOriginalFrom
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder getViewBinder() -> getViewBinder
    void setViewBinder(android.support.v4.widget.SimpleCursorAdapter$ViewBinder) -> setViewBinder
    void setViewImage(android.widget.ImageView,java.lang.String) -> setViewImage
    void setViewText(android.widget.TextView,java.lang.String) -> setViewText
    int getStringConversionColumn() -> getStringConversionColumn
    void setStringConversionColumn(int) -> setStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter getCursorToStringConverter() -> getCursorToStringConverter
    void setCursorToStringConverter(android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter) -> setCursorToStringConverter
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    void findColumns(java.lang.String[]) -> findColumns
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    void changeCursorAndColumns(android.database.Cursor,java.lang.String[],int[]) -> changeCursorAndColumns
android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter -> android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
android.support.v4.widget.SimpleCursorAdapter$ViewBinder -> android.support.v4.widget.SimpleCursorAdapter$ViewBinder:
    boolean setViewValue(android.view.View,android.database.Cursor,int) -> setViewValue
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    java.lang.String TAG -> TAG
    int DEFAULT_OVERHANG_SIZE -> DEFAULT_OVERHANG_SIZE
    int DEFAULT_FADE_COLOR -> DEFAULT_FADE_COLOR
    int mSliderFadeColor -> mSliderFadeColor
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    int mCoveredFadeColor -> mCoveredFadeColor
    android.graphics.drawable.Drawable mShadowDrawable -> mShadowDrawable
    int mOverhangSize -> mOverhangSize
    boolean mCanSlide -> mCanSlide
    android.view.View mSlideableView -> mSlideableView
    float mSlideOffset -> mSlideOffset
    float mParallaxOffset -> mParallaxOffset
    int mSlideRange -> mSlideRange
    boolean mIsUnableToDrag -> mIsUnableToDrag
    int mParallaxBy -> mParallaxBy
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> mPanelSlideListener
    android.support.v4.widget.ViewDragHelper mDragHelper -> mDragHelper
    boolean mPreservedOpenState -> mPreservedOpenState
    boolean mFirstLayout -> mFirstLayout
    android.graphics.Rect mTmpRect -> mTmpRect
    java.util.ArrayList mPostedRunnables -> mPostedRunnables
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> IMPL
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void dispatchOnPanelSlide(android.view.View) -> dispatchOnPanelSlide
    void dispatchOnPanelOpened(android.view.View) -> dispatchOnPanelOpened
    void dispatchOnPanelClosed(android.view.View) -> dispatchOnPanelClosed
    void updateObscuredViewsVisibility(android.view.View) -> updateObscuredViewsVisibility
    void setAllChildrenVisible() -> setAllChildrenVisible
    boolean viewIsOpaque(android.view.View) -> viewIsOpaque
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> closePane
    boolean openPane(android.view.View,int) -> openPane
    void smoothSlideOpen() -> smoothSlideOpen
    boolean openPane() -> openPane
    void smoothSlideClosed() -> smoothSlideClosed
    boolean closePane() -> closePane
    boolean isOpen() -> isOpen
    boolean canSlide() -> canSlide
    boolean isSlideable() -> isSlideable
    void onPanelDragged(int) -> onPanelDragged
    void dimChildView(android.view.View,float,int) -> dimChildView
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> invalidateChildRegion
    boolean smoothSlideTo(float,int) -> smoothSlideTo
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowResource(int) -> setShadowResource
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> parallaxOtherViews
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean isDimmed(android.view.View) -> isDimmed
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean access$100(android.support.v4.widget.SlidingPaneLayout) -> access$100
    android.support.v4.widget.ViewDragHelper access$200(android.support.v4.widget.SlidingPaneLayout) -> access$200
    float access$300(android.support.v4.widget.SlidingPaneLayout) -> access$300
    android.view.View access$400(android.support.v4.widget.SlidingPaneLayout) -> access$400
    boolean access$502(android.support.v4.widget.SlidingPaneLayout,boolean) -> access$502
    void access$600(android.support.v4.widget.SlidingPaneLayout,int) -> access$600
    int access$700(android.support.v4.widget.SlidingPaneLayout) -> access$700
    void access$900(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> access$900
    java.util.ArrayList access$1000(android.support.v4.widget.SlidingPaneLayout) -> access$1000
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.SlidingPaneLayout$1:
android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate -> android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate:
    android.graphics.Rect mTmpRect -> mTmpRect
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    boolean filter(android.view.View) -> filter
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> copyNodeInfoNoChildren
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable:
    android.view.View mChildView -> mChildView
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$DragHelperCallback -> android.support.v4.widget.SlidingPaneLayout$DragHelperCallback:
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.SlidingPaneLayout$LayoutParams:
    int[] ATTRS -> ATTRS
    float weight -> weight
    boolean slideable -> slideable
    boolean dimWhenOffset -> dimWhenOffset
    android.graphics.Paint dimPaint -> dimPaint
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.SlidingPaneLayout$PanelSlideListener:
    void onPanelSlide(android.view.View,float) -> onPanelSlide
    void onPanelOpened(android.view.View) -> onPanelOpened
    void onPanelClosed(android.view.View) -> onPanelClosed
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> isOpen
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.SlidingPaneLayout$SavedState$1:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener -> android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener:
    void onPanelSlide(android.view.View,float) -> onPanelSlide
    void onPanelOpened(android.view.View) -> onPanelOpened
    void onPanelClosed(android.view.View) -> onPanelClosed
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB:
    java.lang.reflect.Method mGetDisplayList -> mGetDisplayList
    java.lang.reflect.Field mRecreateDisplayList -> mRecreateDisplayList
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SwipeProgressBar -> android.support.v4.widget.SwipeProgressBar:
    int COLOR1 -> COLOR1
    int COLOR2 -> COLOR2
    int COLOR3 -> COLOR3
    int COLOR4 -> COLOR4
    int ANIMATION_DURATION_MS -> ANIMATION_DURATION_MS
    int FINISH_ANIMATION_DURATION_MS -> FINISH_ANIMATION_DURATION_MS
    android.view.animation.Interpolator INTERPOLATOR -> INTERPOLATOR
    android.graphics.Paint mPaint -> mPaint
    android.graphics.RectF mClipRect -> mClipRect
    float mTriggerPercentage -> mTriggerPercentage
    long mStartTime -> mStartTime
    long mFinishTime -> mFinishTime
    boolean mRunning -> mRunning
    int mColor1 -> mColor1
    int mColor2 -> mColor2
    int mColor3 -> mColor3
    int mColor4 -> mColor4
    android.view.View mParent -> mParent
    android.graphics.Rect mBounds -> mBounds
    void setColorScheme(int,int,int,int) -> setColorScheme
    void setTriggerPercentage(float) -> setTriggerPercentage
    void start() -> start
    void stop() -> stop
    boolean isRunning() -> isRunning
    void draw(android.graphics.Canvas) -> draw
    void drawTrigger(android.graphics.Canvas,int,int) -> drawTrigger
    void drawCircle(android.graphics.Canvas,float,float,int,float) -> drawCircle
    void setBounds(int,int,int,int) -> setBounds
android.support.v4.widget.SwipeRefreshLayout -> android.support.v4.widget.SwipeRefreshLayout:
    long RETURN_TO_ORIGINAL_POSITION_TIMEOUT -> RETURN_TO_ORIGINAL_POSITION_TIMEOUT
    float ACCELERATE_INTERPOLATION_FACTOR -> ACCELERATE_INTERPOLATION_FACTOR
    float DECELERATE_INTERPOLATION_FACTOR -> DECELERATE_INTERPOLATION_FACTOR
    float PROGRESS_BAR_HEIGHT -> PROGRESS_BAR_HEIGHT
    float MAX_SWIPE_DISTANCE_FACTOR -> MAX_SWIPE_DISTANCE_FACTOR
    int REFRESH_TRIGGER_DISTANCE -> REFRESH_TRIGGER_DISTANCE
    android.support.v4.widget.SwipeProgressBar mProgressBar -> mProgressBar
    android.view.View mTarget -> mTarget
    int mOriginalOffsetTop -> mOriginalOffsetTop
    android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener mListener -> mListener
    android.view.MotionEvent mDownEvent -> mDownEvent
    int mFrom -> mFrom
    boolean mRefreshing -> mRefreshing
    int mTouchSlop -> mTouchSlop
    float mDistanceToTriggerSync -> mDistanceToTriggerSync
    float mPrevY -> mPrevY
    int mMediumAnimationDuration -> mMediumAnimationDuration
    float mFromPercentage -> mFromPercentage
    float mCurrPercentage -> mCurrPercentage
    int mProgressBarHeight -> mProgressBarHeight
    int mCurrentTargetOffsetTop -> mCurrentTargetOffsetTop
    boolean mReturningToStart -> mReturningToStart
    android.view.animation.DecelerateInterpolator mDecelerateInterpolator -> mDecelerateInterpolator
    android.view.animation.AccelerateInterpolator mAccelerateInterpolator -> mAccelerateInterpolator
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    android.view.animation.Animation mAnimateToStartPosition -> mAnimateToStartPosition
    android.view.animation.Animation mShrinkTrigger -> mShrinkTrigger
    android.view.animation.Animation$AnimationListener mReturnToStartPositionListener -> mReturnToStartPositionListener
    android.view.animation.Animation$AnimationListener mShrinkAnimationListener -> mShrinkAnimationListener
    java.lang.Runnable mReturnToStartPosition -> mReturnToStartPosition
    java.lang.Runnable mCancel -> mCancel
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void animateOffsetToStartPosition(int,android.view.animation.Animation$AnimationListener) -> animateOffsetToStartPosition
    void setOnRefreshListener(android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener) -> setOnRefreshListener
    void setTriggerPercentage(float) -> setTriggerPercentage
    void setRefreshing(boolean) -> setRefreshing
    void setColorScheme(int,int,int,int) -> setColorScheme
    boolean isRefreshing() -> isRefreshing
    void ensureTarget() -> ensureTarget
    void draw(android.graphics.Canvas) -> draw
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    boolean canChildScrollUp() -> canChildScrollUp
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void startRefresh() -> startRefresh
    void updateContentOffsetTop(int) -> updateContentOffsetTop
    void setTargetOffsetTopAndBottom(int) -> setTargetOffsetTopAndBottom
    void updatePositionTimeout() -> updatePositionTimeout
    int access$000(android.support.v4.widget.SwipeRefreshLayout) -> access$000
    int access$100(android.support.v4.widget.SwipeRefreshLayout) -> access$100
    android.view.View access$200(android.support.v4.widget.SwipeRefreshLayout) -> access$200
    void access$300(android.support.v4.widget.SwipeRefreshLayout,int) -> access$300
    float access$400(android.support.v4.widget.SwipeRefreshLayout) -> access$400
    android.support.v4.widget.SwipeProgressBar access$500(android.support.v4.widget.SwipeRefreshLayout) -> access$500
    int access$702(android.support.v4.widget.SwipeRefreshLayout,int) -> access$702
    float access$802(android.support.v4.widget.SwipeRefreshLayout,float) -> access$802
    boolean access$902(android.support.v4.widget.SwipeRefreshLayout,boolean) -> access$902
    int access$700(android.support.v4.widget.SwipeRefreshLayout) -> access$700
    android.view.animation.Animation$AnimationListener access$1000(android.support.v4.widget.SwipeRefreshLayout) -> access$1000
    void access$1100(android.support.v4.widget.SwipeRefreshLayout,int,android.view.animation.Animation$AnimationListener) -> access$1100
    float access$402(android.support.v4.widget.SwipeRefreshLayout,float) -> access$402
    float access$800(android.support.v4.widget.SwipeRefreshLayout) -> access$800
    int access$1200(android.support.v4.widget.SwipeRefreshLayout) -> access$1200
    android.view.animation.Animation access$1300(android.support.v4.widget.SwipeRefreshLayout) -> access$1300
    android.view.animation.Animation$AnimationListener access$1400(android.support.v4.widget.SwipeRefreshLayout) -> access$1400
    android.view.animation.DecelerateInterpolator access$1500(android.support.v4.widget.SwipeRefreshLayout) -> access$1500
android.support.v4.widget.SwipeRefreshLayout$1 -> android.support.v4.widget.SwipeRefreshLayout$1:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$2 -> android.support.v4.widget.SwipeRefreshLayout$2:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$3 -> android.support.v4.widget.SwipeRefreshLayout$3:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
android.support.v4.widget.SwipeRefreshLayout$4 -> android.support.v4.widget.SwipeRefreshLayout$4:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
android.support.v4.widget.SwipeRefreshLayout$5 -> android.support.v4.widget.SwipeRefreshLayout$5:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void run() -> run
android.support.v4.widget.SwipeRefreshLayout$6 -> android.support.v4.widget.SwipeRefreshLayout$6:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void run() -> run
android.support.v4.widget.SwipeRefreshLayout$BaseAnimationListener -> android.support.v4.widget.SwipeRefreshLayout$BaseAnimationListener:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener -> android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener:
    void onRefresh() -> onRefresh
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.ViewDragHelper:
    java.lang.String TAG -> TAG
    int INVALID_POINTER -> INVALID_POINTER
    int STATE_IDLE -> STATE_IDLE
    int STATE_DRAGGING -> STATE_DRAGGING
    int STATE_SETTLING -> STATE_SETTLING
    int EDGE_LEFT -> EDGE_LEFT
    int EDGE_RIGHT -> EDGE_RIGHT
    int EDGE_TOP -> EDGE_TOP
    int EDGE_BOTTOM -> EDGE_BOTTOM
    int EDGE_ALL -> EDGE_ALL
    int DIRECTION_HORIZONTAL -> DIRECTION_HORIZONTAL
    int DIRECTION_VERTICAL -> DIRECTION_VERTICAL
    int DIRECTION_ALL -> DIRECTION_ALL
    int EDGE_SIZE -> EDGE_SIZE
    int BASE_SETTLE_DURATION -> BASE_SETTLE_DURATION
    int MAX_SETTLE_DURATION -> MAX_SETTLE_DURATION
    int mDragState -> mDragState
    int mTouchSlop -> mTouchSlop
    int mActivePointerId -> mActivePointerId
    float[] mInitialMotionX -> mInitialMotionX
    float[] mInitialMotionY -> mInitialMotionY
    float[] mLastMotionX -> mLastMotionX
    float[] mLastMotionY -> mLastMotionY
    int[] mInitialEdgesTouched -> mInitialEdgesTouched
    int[] mEdgeDragsInProgress -> mEdgeDragsInProgress
    int[] mEdgeDragsLocked -> mEdgeDragsLocked
    int mPointersDown -> mPointersDown
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    float mMaxVelocity -> mMaxVelocity
    float mMinVelocity -> mMinVelocity
    int mEdgeSize -> mEdgeSize
    int mTrackingEdges -> mTrackingEdges
    android.support.v4.widget.ScrollerCompat mScroller -> mScroller
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> mCallback
    android.view.View mCapturedView -> mCapturedView
    boolean mReleaseInProgress -> mReleaseInProgress
    android.view.ViewGroup mParentView -> mParentView
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    java.lang.Runnable mSetIdleRunnable -> mSetIdleRunnable
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback) -> create
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback) -> create
    void setMinVelocity(float) -> setMinVelocity
    float getMinVelocity() -> getMinVelocity
    int getViewDragState() -> getViewDragState
    void setEdgeTrackingEnabled(int) -> setEdgeTrackingEnabled
    int getEdgeSize() -> getEdgeSize
    void captureChildView(android.view.View,int) -> captureChildView
    android.view.View getCapturedView() -> getCapturedView
    int getActivePointerId() -> getActivePointerId
    int getTouchSlop() -> getTouchSlop
    void cancel() -> cancel
    void abort() -> abort
    boolean smoothSlideViewTo(android.view.View,int,int) -> smoothSlideViewTo
    boolean settleCapturedViewAt(int,int) -> settleCapturedViewAt
    boolean forceSettleCapturedViewAt(int,int,int,int) -> forceSettleCapturedViewAt
    int computeSettleDuration(android.view.View,int,int,int,int) -> computeSettleDuration
    int computeAxisDuration(int,int,int) -> computeAxisDuration
    int clampMag(int,int,int) -> clampMag
    float clampMag(float,float,float) -> clampMag
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    void flingCapturedView(int,int,int,int) -> flingCapturedView
    boolean continueSettling(boolean) -> continueSettling
    void dispatchViewReleased(float,float) -> dispatchViewReleased
    void clearMotionHistory() -> clearMotionHistory
    void clearMotionHistory(int) -> clearMotionHistory
    void ensureMotionHistorySizeForId(int) -> ensureMotionHistorySizeForId
    void saveInitialMotion(float,float,int) -> saveInitialMotion
    void saveLastMotion(android.view.MotionEvent) -> saveLastMotion
    boolean isPointerDown(int) -> isPointerDown
    void setDragState(int) -> setDragState
    boolean tryCaptureViewForDrag(android.view.View,int) -> tryCaptureViewForDrag
    boolean canScroll(android.view.View,boolean,int,int,int,int) -> canScroll
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> shouldInterceptTouchEvent
    void processTouchEvent(android.view.MotionEvent) -> processTouchEvent
    void reportNewEdgeDrags(float,float,int) -> reportNewEdgeDrags
    boolean checkNewEdgeDrag(float,float,int,int) -> checkNewEdgeDrag
    boolean checkTouchSlop(android.view.View,float,float) -> checkTouchSlop
    boolean checkTouchSlop(int) -> checkTouchSlop
    boolean checkTouchSlop(int,int) -> checkTouchSlop
    boolean isEdgeTouched(int) -> isEdgeTouched
    boolean isEdgeTouched(int,int) -> isEdgeTouched
    void releaseViewForPointerUp() -> releaseViewForPointerUp
    void dragTo(int,int,int,int) -> dragTo
    boolean isCapturedViewUnder(int,int) -> isCapturedViewUnder
    boolean isViewUnder(android.view.View,int,int) -> isViewUnder
    android.view.View findTopChildUnder(int,int) -> findTopChildUnder
    int getEdgesTouched(int,int) -> getEdgesTouched
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.ViewDragHelper$1:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$2 -> android.support.v4.widget.ViewDragHelper$2:
    android.support.v4.widget.ViewDragHelper this$0 -> this$0
    void run() -> run
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.ViewDragHelper$Callback:
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    void onEdgeTouched(int,int) -> onEdgeTouched
    boolean onEdgeLock(int) -> onEdgeLock
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    int getOrderedChildIndex(int) -> getOrderedChildIndex
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int getViewVerticalDragRange(android.view.View) -> getViewVerticalDragRange
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
android.support.v7.app.ActionBar -> android.support.v7.app.ActionBar:
    void setDisplayHomeAsUpEnabled(boolean) -> a
    int getDisplayOptions() -> a
    void hide() -> b
    void setHomeButtonEnabled(boolean) -> b
    android.content.Context getThemedContext() -> c
    void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> a
    void setHomeActionContentDescription(int) -> a
android.support.v7.app.ActionBar$Callback -> android.support.v7.app.a:
android.support.v7.app.ActionBar$LayoutParams -> android.support.v7.app.ActionBar$LayoutParams:
    int gravity -> a
android.support.v7.app.ActionBar$OnNavigationListener -> android.support.v7.app.b:
    boolean onNavigationItemSelected(int,long) -> a
android.support.v7.app.ActionBar$Tab -> android.support.v7.app.c:
    android.graphics.drawable.Drawable getIcon() -> a
    java.lang.CharSequence getText() -> b
    android.view.View getCustomView() -> c
    void select() -> d
    java.lang.CharSequence getContentDescription() -> e
android.support.v7.app.ActionBarActivity -> android.support.v7.app.ActionBarActivity:
    android.support.v7.app.ActionBarActivityDelegate mImpl -> a
    android.support.v7.app.ActionBar getSupportActionBar() -> a
    android.view.MenuInflater getMenuInflater() -> getMenuInflater
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void onCreate(android.os.Bundle) -> onCreate
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onStop() -> onStop
    void onPostResume() -> onPostResume
    android.view.View onCreatePanelView(int) -> onCreatePanelView
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    void onSupportActionModeStarted(android.support.v7.view.ActionMode) -> a
    void onSupportActionModeFinished(android.support.v7.view.ActionMode) -> b
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> onPrepareOptionsPanel
    void superSetContentView(int) -> a
    void superSetContentView(android.view.View) -> a
    void superSetContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    void superAddContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> b
    boolean superOnCreatePanelMenu(int,android.view.Menu) -> a
    boolean superOnPreparePanel(int,android.view.View,android.view.Menu) -> a
    boolean superOnPrepareOptionsPanel(android.view.View,android.view.Menu) -> a
    boolean superOnMenuItemSelected(int,android.view.MenuItem) -> a
    void onBackPressed() -> onBackPressed
    void onCreateSupportNavigateUpTaskStack(android.support.v4.app.TaskStackBuilder) -> a
    void onPrepareSupportNavigateUpTaskStack(android.support.v4.app.TaskStackBuilder) -> b
    boolean onSupportNavigateUp() -> b
    android.content.Intent getSupportParentActivityIntent() -> getSupportParentActivityIntent
    boolean supportShouldUpRecreateTask(android.content.Intent) -> a
    void supportNavigateUpTo(android.content.Intent) -> b
    android.support.v4.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
    void onContentChanged() -> onContentChanged
    void onSupportContentChanged() -> c
android.support.v7.app.ActionBarActivityDelegate -> android.support.v7.app.d:
    android.support.v7.app.ActionBarActivity mActivity -> a
    android.support.v7.app.ActionBar mActionBar -> d
    android.view.MenuInflater mMenuInflater -> e
    boolean mHasActionBar -> b
    boolean mOverlayActionBar -> c
    boolean mEnableDefaultActionBarUp -> f
    android.support.v7.app.ActionBarActivityDelegate createDelegate(android.support.v7.app.ActionBarActivity) -> a
    android.support.v7.app.ActionBar createSupportActionBar() -> a
    android.support.v7.app.ActionBar getSupportActionBar() -> b
    android.view.MenuInflater getMenuInflater() -> c
    void onCreate(android.os.Bundle) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> a
    void onStop() -> d
    void onPostResume() -> e
    void setContentView(android.view.View) -> a
    void setContentView(int) -> a
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> b
    void onTitleChanged(java.lang.CharSequence) -> a
    void supportInvalidateOptionsMenu() -> f
    android.view.View onCreatePanelView(int) -> b
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> a
    boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> a
    boolean onCreatePanelMenu(int,android.view.Menu) -> a
    boolean onMenuItemSelected(int,android.view.MenuItem) -> a
    boolean onBackPressed() -> g
    android.support.v4.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> h
    int getHomeAsUpIndicatorAttrId() -> i
    void onContentChanged() -> j
    java.lang.String getUiOptionsFromMetadata() -> k
    android.content.Context getActionBarThemedContext() -> l
android.support.v7.app.ActionBarActivityDelegate$1 -> android.support.v7.app.e:
android.support.v7.app.ActionBarActivityDelegate$ActionBarDrawableToggleImpl -> android.support.v7.app.f:
    android.support.v7.app.ActionBarActivityDelegate this$0 -> a
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
android.support.v7.app.ActionBarActivityDelegateBase -> android.support.v7.app.g:
    int[] ACTION_BAR_DRAWABLE_TOGGLE_ATTRS -> d
    android.support.v7.internal.widget.ActionBarView mActionBarView -> e
    android.support.v7.internal.view.menu.ListMenuPresenter mListMenuPresenter -> f
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> g
    android.support.v7.view.ActionMode mActionMode -> h
    boolean mSubDecorInstalled -> i
    java.lang.CharSequence mTitleToSet -> j
    boolean mFeatureProgress -> k
    boolean mFeatureIndeterminateProgress -> l
    boolean mClosingActionMenu -> m
    boolean mPanelIsPrepared -> n
    boolean mPanelRefreshContent -> o
    android.os.Bundle mPanelFrozenActionViewState -> p
    android.support.v7.app.ActionBar createSupportActionBar() -> a
    void onConfigurationChanged(android.content.res.Configuration) -> a
    void onStop() -> d
    void onPostResume() -> e
    void setContentView(android.view.View) -> a
    void setContentView(int) -> a
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> b
    void onContentChanged() -> j
    void ensureSubDecor() -> m
    void applyFixedSizeWindow() -> n
    void onTitleChanged(java.lang.CharSequence) -> a
    android.view.View onCreatePanelView(int) -> b
    boolean onCreatePanelMenu(int,android.view.Menu) -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> a
    boolean onMenuItemSelected(int,android.view.MenuItem) -> a
    boolean onMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem) -> a
    void onMenuModeChange(android.support.v7.internal.view.menu.MenuBuilder) -> a
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    boolean onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder) -> b
    void supportInvalidateOptionsMenu() -> f
    void reopenMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> b
    android.support.v7.internal.view.menu.MenuView getListMenuView(android.content.Context,android.support.v7.internal.view.menu.MenuPresenter$Callback) -> a
    boolean onBackPressed() -> g
    int getHomeAsUpIndicatorAttrId() -> i
    boolean initializePanelMenu() -> o
    boolean preparePanel() -> p
android.support.v7.app.ActionBarActivityDelegateBase$1 -> android.support.v7.app.h:
    android.support.v7.app.ActionBarActivityDelegateBase this$0 -> a
    void run() -> run
android.support.v7.app.ActionBarActivityDelegateHC -> android.support.v7.app.i:
    android.support.v7.app.ActionBar createSupportActionBar() -> a
android.support.v7.app.ActionBarActivityDelegateICS -> android.support.v7.app.j:
    android.view.Menu mMenu -> d
    android.support.v7.app.ActionBar createSupportActionBar() -> a
    void onCreate(android.os.Bundle) -> a
    android.view.Window$Callback createWindowCallbackWrapper(android.view.Window$Callback) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> a
    void onStop() -> d
    void onPostResume() -> e
    void setContentView(android.view.View) -> a
    void setContentView(int) -> a
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> b
    void onContentChanged() -> j
    android.view.View onCreatePanelView(int) -> b
    boolean onCreatePanelMenu(int,android.view.Menu) -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> a
    boolean onMenuItemSelected(int,android.view.MenuItem) -> a
    void onTitleChanged(java.lang.CharSequence) -> a
    void onActionModeStarted(android.view.ActionMode) -> a
    void onActionModeFinished(android.view.ActionMode) -> b
    void supportInvalidateOptionsMenu() -> f
    boolean onBackPressed() -> g
    int getHomeAsUpIndicatorAttrId() -> i
    android.support.v7.internal.view.ActionModeWrapper createActionModeWrapper(android.content.Context,android.view.ActionMode) -> a
android.support.v7.app.ActionBarActivityDelegateICS$WindowCallbackWrapper -> android.support.v7.app.k:
    android.view.Window$Callback mWrapped -> a
    android.support.v7.app.ActionBarActivityDelegateICS this$0 -> b
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    boolean dispatchTrackballEvent(android.view.MotionEvent) -> dispatchTrackballEvent
    boolean dispatchGenericMotionEvent(android.view.MotionEvent) -> dispatchGenericMotionEvent
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.View onCreatePanelView(int) -> onCreatePanelView
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onWindowAttributesChanged(android.view.WindowManager$LayoutParams) -> onWindowAttributesChanged
    void onContentChanged() -> onContentChanged
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean onSearchRequested() -> onSearchRequested
    android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback) -> onWindowStartingActionMode
    void onActionModeStarted(android.view.ActionMode) -> onActionModeStarted
    void onActionModeFinished(android.view.ActionMode) -> onActionModeFinished
android.support.v7.app.ActionBarActivityDelegateJB -> android.support.v7.app.l:
    android.support.v7.app.ActionBar createSupportActionBar() -> a
    android.support.v7.internal.view.ActionModeWrapper createActionModeWrapper(android.content.Context,android.view.ActionMode) -> a
android.support.v7.app.ActionBarActivityDelegateJBMR2 -> android.support.v7.app.m:
    android.support.v7.app.ActionBar createSupportActionBar() -> a
android.support.v7.app.ActionBarImplBase -> android.support.v7.app.n:
    android.content.Context mContext -> b
    android.content.Context mThemedContext -> c
    android.support.v7.app.ActionBarActivity mActivity -> d
    android.support.v7.internal.widget.ActionBarOverlayLayout mOverlayLayout -> e
    android.support.v7.internal.widget.ActionBarContainer mContainerView -> f
    android.view.ViewGroup mTopVisibilityView -> g
    android.support.v7.internal.widget.ActionBarView mActionView -> h
    android.support.v7.internal.widget.ActionBarContextView mContextView -> i
    android.support.v7.internal.widget.ActionBarContainer mSplitView -> j
    android.support.v7.internal.widget.ScrollingTabContainerView mTabScrollView -> k
    java.util.ArrayList mTabs -> l
    int mSavedTabPosition -> m
    boolean mDisplayHomeAsUpSet -> n
    java.util.ArrayList mMenuVisibilityListeners -> o
    int mContextDisplayMode -> p
    boolean mHasEmbeddedTabs -> q
    android.os.Handler mHandler -> a
    int mCurWindowVisibility -> r
    boolean mHiddenByApp -> s
    boolean mHiddenBySystem -> t
    boolean mShowingForMode -> u
    boolean mNowShowing -> v
    boolean mShowHideAnimationEnabled -> w
    android.support.v7.app.ActionBar$Callback mCallback -> x
    void init(android.support.v7.app.ActionBarActivity) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> a
    void setHasEmbeddedTabs(boolean) -> f
    void setTitle(java.lang.CharSequence) -> a
    void setDisplayOptions(int,int) -> a
    void setDisplayHomeAsUpEnabled(boolean) -> a
    void setHomeButtonEnabled(boolean) -> b
    int getNavigationMode() -> d
    int getDisplayOptions() -> a
    android.content.Context getThemedContext() -> c
    void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> a
    void showForActionMode() -> e
    void hide() -> b
    void hideForActionMode() -> f
    boolean checkShowingFlags(boolean,boolean,boolean) -> a
    void updateVisibility(boolean) -> g
    void setShowHideAnimationEnabled(boolean) -> c
    void doShow(boolean) -> d
    void doHide(boolean) -> e
    boolean isShowHideAnimationEnabled() -> g
android.support.v7.app.ActionBarImplHC -> android.support.v7.app.o:
    android.support.v7.internal.widget.NativeActionModeAwareLayout mNativeActionModeAwareLayout -> b
    android.view.ActionMode mCurActionMode -> c
    android.view.ActionMode$Callback onActionModeForChild(android.view.ActionMode$Callback) -> a
    void hide() -> b
    boolean isShowHideAnimationEnabled() -> g
    android.view.ActionMode access$002(android.support.v7.app.ActionBarImplHC,android.view.ActionMode) -> a
android.support.v7.app.ActionBarImplHC$CallbackWrapper -> android.support.v7.app.p:
    android.view.ActionMode$Callback mWrappedCallback -> b
    android.support.v7.app.ActionBarImplHC this$0 -> a
    boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
    boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
android.support.v7.app.ActionBarImplICS -> android.support.v7.app.q:
    android.app.Activity mActivity -> a
    android.support.v7.app.ActionBar$Callback mCallback -> b
    android.app.ActionBar mActionBar -> c
    android.widget.ImageView mHomeActionView -> d
    java.util.ArrayList mAddedMenuVisWrappers -> e
    void setDisplayHomeAsUpEnabled(boolean) -> a
    int getDisplayOptions() -> a
    android.content.Context getThemedContext() -> c
    void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> a
    void hide() -> b
    void setHomeButtonEnabled(boolean) -> b
    android.widget.ImageView getHomeActionView() -> d
    android.graphics.drawable.Drawable getThemeDefaultUpIndicator() -> e
android.support.v7.app.ActionBarImplJB -> android.support.v7.app.r:
    void setHomeButtonEnabled(boolean) -> b
    void hide() -> b
    void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> a
    android.content.Context getThemedContext() -> c
    int getDisplayOptions() -> a
    void setDisplayHomeAsUpEnabled(boolean) -> a
android.support.v7.app.ActionBarImplJBMR2 -> android.support.v7.app.s:
    void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> a
    void setHomeActionContentDescription(int) -> a
android.support.v7.appcompat.R -> android.support.v7.appcompat.R:
android.support.v7.appcompat.R$anim -> android.support.v7.appcompat.R$anim:
    int abc_fade_in -> abc_fade_in
    int abc_fade_out -> abc_fade_out
    int abc_slide_in_bottom -> abc_slide_in_bottom
    int abc_slide_in_top -> abc_slide_in_top
    int abc_slide_out_bottom -> abc_slide_out_bottom
    int abc_slide_out_top -> abc_slide_out_top
android.support.v7.appcompat.R$attr -> android.support.v7.appcompat.R$attr:
    int actionBarDivider -> actionBarDivider
    int actionBarItemBackground -> actionBarItemBackground
    int actionBarSize -> actionBarSize
    int actionBarSplitStyle -> actionBarSplitStyle
    int actionBarStyle -> actionBarStyle
    int actionBarTabBarStyle -> actionBarTabBarStyle
    int actionBarTabStyle -> actionBarTabStyle
    int actionBarTabTextStyle -> actionBarTabTextStyle
    int actionBarWidgetTheme -> actionBarWidgetTheme
    int actionButtonStyle -> actionButtonStyle
    int actionDropDownStyle -> actionDropDownStyle
    int actionLayout -> actionLayout
    int actionMenuTextAppearance -> actionMenuTextAppearance
    int actionMenuTextColor -> actionMenuTextColor
    int actionModeBackground -> actionModeBackground
    int actionModeCloseButtonStyle -> actionModeCloseButtonStyle
    int actionModeCloseDrawable -> actionModeCloseDrawable
    int actionModeCopyDrawable -> actionModeCopyDrawable
    int actionModeCutDrawable -> actionModeCutDrawable
    int actionModeFindDrawable -> actionModeFindDrawable
    int actionModePasteDrawable -> actionModePasteDrawable
    int actionModePopupWindowStyle -> actionModePopupWindowStyle
    int actionModeSelectAllDrawable -> actionModeSelectAllDrawable
    int actionModeShareDrawable -> actionModeShareDrawable
    int actionModeSplitBackground -> actionModeSplitBackground
    int actionModeStyle -> actionModeStyle
    int actionModeWebSearchDrawable -> actionModeWebSearchDrawable
    int actionOverflowButtonStyle -> actionOverflowButtonStyle
    int actionProviderClass -> actionProviderClass
    int actionViewClass -> actionViewClass
    int activityChooserViewStyle -> activityChooserViewStyle
    int background -> background
    int backgroundSplit -> backgroundSplit
    int backgroundStacked -> backgroundStacked
    int buttonBarButtonStyle -> buttonBarButtonStyle
    int buttonBarStyle -> buttonBarStyle
    int customNavigationLayout -> customNavigationLayout
    int disableChildrenWhenDisabled -> disableChildrenWhenDisabled
    int displayOptions -> displayOptions
    int divider -> divider
    int dividerHorizontal -> dividerHorizontal
    int dividerPadding -> dividerPadding
    int dividerVertical -> dividerVertical
    int dropDownListViewStyle -> dropDownListViewStyle
    int dropdownListPreferredItemHeight -> dropdownListPreferredItemHeight
    int expandActivityOverflowButtonDrawable -> expandActivityOverflowButtonDrawable
    int height -> height
    int homeAsUpIndicator -> homeAsUpIndicator
    int homeLayout -> homeLayout
    int icon -> icon
    int iconifiedByDefault -> iconifiedByDefault
    int indeterminateProgressStyle -> indeterminateProgressStyle
    int initialActivityCount -> initialActivityCount
    int isLightTheme -> isLightTheme
    int itemPadding -> itemPadding
    int listChoiceBackgroundIndicator -> listChoiceBackgroundIndicator
    int listPopupWindowStyle -> listPopupWindowStyle
    int listPreferredItemHeight -> listPreferredItemHeight
    int listPreferredItemHeightLarge -> listPreferredItemHeightLarge
    int listPreferredItemHeightSmall -> listPreferredItemHeightSmall
    int listPreferredItemPaddingLeft -> listPreferredItemPaddingLeft
    int listPreferredItemPaddingRight -> listPreferredItemPaddingRight
    int logo -> logo
    int navigationMode -> navigationMode
    int paddingEnd -> paddingEnd
    int paddingStart -> paddingStart
    int panelMenuListTheme -> panelMenuListTheme
    int panelMenuListWidth -> panelMenuListWidth
    int popupMenuStyle -> popupMenuStyle
    int popupPromptView -> popupPromptView
    int progressBarPadding -> progressBarPadding
    int progressBarStyle -> progressBarStyle
    int prompt -> prompt
    int queryHint -> queryHint
    int searchDropdownBackground -> searchDropdownBackground
    int searchResultListItemHeight -> searchResultListItemHeight
    int searchViewAutoCompleteTextView -> searchViewAutoCompleteTextView
    int searchViewCloseIcon -> searchViewCloseIcon
    int searchViewEditQuery -> searchViewEditQuery
    int searchViewEditQueryBackground -> searchViewEditQueryBackground
    int searchViewGoIcon -> searchViewGoIcon
    int searchViewSearchIcon -> searchViewSearchIcon
    int searchViewTextField -> searchViewTextField
    int searchViewTextFieldRight -> searchViewTextFieldRight
    int searchViewVoiceIcon -> searchViewVoiceIcon
    int selectableItemBackground -> selectableItemBackground
    int showAsAction -> showAsAction
    int showDividers -> showDividers
    int spinnerDropDownItemStyle -> spinnerDropDownItemStyle
    int spinnerMode -> spinnerMode
    int spinnerStyle -> spinnerStyle
    int subtitle -> subtitle
    int subtitleTextStyle -> subtitleTextStyle
    int textAllCaps -> textAllCaps
    int textAppearanceLargePopupMenu -> textAppearanceLargePopupMenu
    int textAppearanceListItem -> textAppearanceListItem
    int textAppearanceListItemSmall -> textAppearanceListItemSmall
    int textAppearanceSearchResultSubtitle -> textAppearanceSearchResultSubtitle
    int textAppearanceSearchResultTitle -> textAppearanceSearchResultTitle
    int textAppearanceSmallPopupMenu -> textAppearanceSmallPopupMenu
    int textColorSearchUrl -> textColorSearchUrl
    int title -> title
    int titleTextStyle -> titleTextStyle
    int windowActionBar -> windowActionBar
    int windowActionBarOverlay -> windowActionBarOverlay
    int windowFixedHeightMajor -> windowFixedHeightMajor
    int windowFixedHeightMinor -> windowFixedHeightMinor
    int windowFixedWidthMajor -> windowFixedWidthMajor
    int windowFixedWidthMinor -> windowFixedWidthMinor
    int windowSplitActionBar -> windowSplitActionBar
android.support.v7.appcompat.R$bool -> android.support.v7.appcompat.R$bool:
    int abc_action_bar_embed_tabs_pre_jb -> abc_action_bar_embed_tabs_pre_jb
    int abc_action_bar_expanded_action_views_exclusive -> abc_action_bar_expanded_action_views_exclusive
    int abc_config_actionMenuItemAllCaps -> abc_config_actionMenuItemAllCaps
    int abc_config_allowActionMenuItemTextWithIcon -> abc_config_allowActionMenuItemTextWithIcon
    int abc_config_showMenuShortcutsWhenKeyboardPresent -> abc_config_showMenuShortcutsWhenKeyboardPresent
    int abc_split_action_bar_is_narrow -> abc_split_action_bar_is_narrow
android.support.v7.appcompat.R$color -> android.support.v7.appcompat.R$color:
    int abc_search_url_text_holo -> abc_search_url_text_holo
    int abc_search_url_text_normal -> abc_search_url_text_normal
    int abc_search_url_text_pressed -> abc_search_url_text_pressed
    int abc_search_url_text_selected -> abc_search_url_text_selected
android.support.v7.appcompat.R$dimen -> android.support.v7.appcompat.R$dimen:
    int abc_action_bar_default_height -> abc_action_bar_default_height
    int abc_action_bar_icon_vertical_padding -> abc_action_bar_icon_vertical_padding
    int abc_action_bar_progress_bar_size -> abc_action_bar_progress_bar_size
    int abc_action_bar_stacked_max_height -> abc_action_bar_stacked_max_height
    int abc_action_bar_stacked_tab_max_width -> abc_action_bar_stacked_tab_max_width
    int abc_action_bar_subtitle_bottom_margin -> abc_action_bar_subtitle_bottom_margin
    int abc_action_bar_subtitle_text_size -> abc_action_bar_subtitle_text_size
    int abc_action_bar_subtitle_top_margin -> abc_action_bar_subtitle_top_margin
    int abc_action_bar_title_text_size -> abc_action_bar_title_text_size
    int abc_action_button_min_width -> abc_action_button_min_width
    int abc_config_prefDialogWidth -> abc_config_prefDialogWidth
    int abc_dropdownitem_icon_width -> abc_dropdownitem_icon_width
    int abc_dropdownitem_text_padding_left -> abc_dropdownitem_text_padding_left
    int abc_dropdownitem_text_padding_right -> abc_dropdownitem_text_padding_right
    int abc_panel_menu_list_width -> abc_panel_menu_list_width
    int abc_search_view_preferred_width -> abc_search_view_preferred_width
    int abc_search_view_text_min_width -> abc_search_view_text_min_width
    int dialog_fixed_height_major -> dialog_fixed_height_major
    int dialog_fixed_height_minor -> dialog_fixed_height_minor
    int dialog_fixed_width_major -> dialog_fixed_width_major
    int dialog_fixed_width_minor -> dialog_fixed_width_minor
android.support.v7.appcompat.R$drawable -> android.support.v7.appcompat.R$drawable:
    int abc_ab_bottom_solid_dark_holo -> abc_ab_bottom_solid_dark_holo
    int abc_ab_bottom_solid_light_holo -> abc_ab_bottom_solid_light_holo
    int abc_ab_bottom_transparent_dark_holo -> abc_ab_bottom_transparent_dark_holo
    int abc_ab_bottom_transparent_light_holo -> abc_ab_bottom_transparent_light_holo
    int abc_ab_share_pack_holo_dark -> abc_ab_share_pack_holo_dark
    int abc_ab_share_pack_holo_light -> abc_ab_share_pack_holo_light
    int abc_ab_solid_dark_holo -> abc_ab_solid_dark_holo
    int abc_ab_solid_light_holo -> abc_ab_solid_light_holo
    int abc_ab_stacked_solid_dark_holo -> abc_ab_stacked_solid_dark_holo
    int abc_ab_stacked_solid_light_holo -> abc_ab_stacked_solid_light_holo
    int abc_ab_stacked_transparent_dark_holo -> abc_ab_stacked_transparent_dark_holo
    int abc_ab_stacked_transparent_light_holo -> abc_ab_stacked_transparent_light_holo
    int abc_ab_transparent_dark_holo -> abc_ab_transparent_dark_holo
    int abc_ab_transparent_light_holo -> abc_ab_transparent_light_holo
    int abc_cab_background_bottom_holo_dark -> abc_cab_background_bottom_holo_dark
    int abc_cab_background_bottom_holo_light -> abc_cab_background_bottom_holo_light
    int abc_cab_background_top_holo_dark -> abc_cab_background_top_holo_dark
    int abc_cab_background_top_holo_light -> abc_cab_background_top_holo_light
    int abc_ic_ab_back_holo_dark -> abc_ic_ab_back_holo_dark
    int abc_ic_ab_back_holo_light -> abc_ic_ab_back_holo_light
    int abc_ic_cab_done_holo_dark -> abc_ic_cab_done_holo_dark
    int abc_ic_cab_done_holo_light -> abc_ic_cab_done_holo_light
    int abc_ic_clear -> abc_ic_clear
    int abc_ic_clear_disabled -> abc_ic_clear_disabled
    int abc_ic_clear_holo_light -> abc_ic_clear_holo_light
    int abc_ic_clear_normal -> abc_ic_clear_normal
    int abc_ic_clear_search_api_disabled_holo_light -> abc_ic_clear_search_api_disabled_holo_light
    int abc_ic_clear_search_api_holo_light -> abc_ic_clear_search_api_holo_light
    int abc_ic_commit_search_api_holo_dark -> abc_ic_commit_search_api_holo_dark
    int abc_ic_commit_search_api_holo_light -> abc_ic_commit_search_api_holo_light
    int abc_ic_go -> abc_ic_go
    int abc_ic_go_search_api_holo_light -> abc_ic_go_search_api_holo_light
    int abc_ic_menu_moreoverflow_normal_holo_dark -> abc_ic_menu_moreoverflow_normal_holo_dark
    int abc_ic_menu_moreoverflow_normal_holo_light -> abc_ic_menu_moreoverflow_normal_holo_light
    int abc_ic_menu_share_holo_dark -> abc_ic_menu_share_holo_dark
    int abc_ic_menu_share_holo_light -> abc_ic_menu_share_holo_light
    int abc_ic_search -> abc_ic_search
    int abc_ic_search_api_holo_light -> abc_ic_search_api_holo_light
    int abc_ic_voice_search -> abc_ic_voice_search
    int abc_ic_voice_search_api_holo_light -> abc_ic_voice_search_api_holo_light
    int abc_item_background_holo_dark -> abc_item_background_holo_dark
    int abc_item_background_holo_light -> abc_item_background_holo_light
    int abc_list_divider_holo_dark -> abc_list_divider_holo_dark
    int abc_list_divider_holo_light -> abc_list_divider_holo_light
    int abc_list_focused_holo -> abc_list_focused_holo
    int abc_list_longpressed_holo -> abc_list_longpressed_holo
    int abc_list_pressed_holo_dark -> abc_list_pressed_holo_dark
    int abc_list_pressed_holo_light -> abc_list_pressed_holo_light
    int abc_list_selector_background_transition_holo_dark -> abc_list_selector_background_transition_holo_dark
    int abc_list_selector_background_transition_holo_light -> abc_list_selector_background_transition_holo_light
    int abc_list_selector_disabled_holo_dark -> abc_list_selector_disabled_holo_dark
    int abc_list_selector_disabled_holo_light -> abc_list_selector_disabled_holo_light
    int abc_list_selector_holo_dark -> abc_list_selector_holo_dark
    int abc_list_selector_holo_light -> abc_list_selector_holo_light
    int abc_menu_dropdown_panel_holo_dark -> abc_menu_dropdown_panel_holo_dark
    int abc_menu_dropdown_panel_holo_light -> abc_menu_dropdown_panel_holo_light
    int abc_menu_hardkey_panel_holo_dark -> abc_menu_hardkey_panel_holo_dark
    int abc_menu_hardkey_panel_holo_light -> abc_menu_hardkey_panel_holo_light
    int abc_search_dropdown_dark -> abc_search_dropdown_dark
    int abc_search_dropdown_light -> abc_search_dropdown_light
    int abc_spinner_ab_default_holo_dark -> abc_spinner_ab_default_holo_dark
    int abc_spinner_ab_default_holo_light -> abc_spinner_ab_default_holo_light
    int abc_spinner_ab_disabled_holo_dark -> abc_spinner_ab_disabled_holo_dark
    int abc_spinner_ab_disabled_holo_light -> abc_spinner_ab_disabled_holo_light
    int abc_spinner_ab_focused_holo_dark -> abc_spinner_ab_focused_holo_dark
    int abc_spinner_ab_focused_holo_light -> abc_spinner_ab_focused_holo_light
    int abc_spinner_ab_holo_dark -> abc_spinner_ab_holo_dark
    int abc_spinner_ab_holo_light -> abc_spinner_ab_holo_light
    int abc_spinner_ab_pressed_holo_dark -> abc_spinner_ab_pressed_holo_dark
    int abc_spinner_ab_pressed_holo_light -> abc_spinner_ab_pressed_holo_light
    int abc_tab_indicator_ab_holo -> abc_tab_indicator_ab_holo
    int abc_tab_selected_focused_holo -> abc_tab_selected_focused_holo
    int abc_tab_selected_holo -> abc_tab_selected_holo
    int abc_tab_selected_pressed_holo -> abc_tab_selected_pressed_holo
    int abc_tab_unselected_pressed_holo -> abc_tab_unselected_pressed_holo
    int abc_textfield_search_default_holo_dark -> abc_textfield_search_default_holo_dark
    int abc_textfield_search_default_holo_light -> abc_textfield_search_default_holo_light
    int abc_textfield_search_right_default_holo_dark -> abc_textfield_search_right_default_holo_dark
    int abc_textfield_search_right_default_holo_light -> abc_textfield_search_right_default_holo_light
    int abc_textfield_search_right_selected_holo_dark -> abc_textfield_search_right_selected_holo_dark
    int abc_textfield_search_right_selected_holo_light -> abc_textfield_search_right_selected_holo_light
    int abc_textfield_search_selected_holo_dark -> abc_textfield_search_selected_holo_dark
    int abc_textfield_search_selected_holo_light -> abc_textfield_search_selected_holo_light
    int abc_textfield_searchview_holo_dark -> abc_textfield_searchview_holo_dark
    int abc_textfield_searchview_holo_light -> abc_textfield_searchview_holo_light
    int abc_textfield_searchview_right_holo_dark -> abc_textfield_searchview_right_holo_dark
    int abc_textfield_searchview_right_holo_light -> abc_textfield_searchview_right_holo_light
android.support.v7.appcompat.R$id -> android.support.v7.appcompat.R$id:
    int action_bar -> action_bar
    int action_bar_activity_content -> action_bar_activity_content
    int action_bar_container -> action_bar_container
    int action_bar_overlay_layout -> action_bar_overlay_layout
    int action_bar_root -> action_bar_root
    int action_bar_subtitle -> action_bar_subtitle
    int action_bar_title -> action_bar_title
    int action_context_bar -> action_context_bar
    int action_menu_divider -> action_menu_divider
    int action_menu_presenter -> action_menu_presenter
    int action_mode_close_button -> action_mode_close_button
    int activity_chooser_view_content -> activity_chooser_view_content
    int always -> always
    int beginning -> beginning
    int checkbox -> checkbox
    int collapseActionView -> collapseActionView
    int default_activity_button -> default_activity_button
    int dialog -> dialog
    int disableHome -> disableHome
    int dropdown -> dropdown
    int edit_query -> edit_query
    int end -> end
    int expand_activities_button -> expand_activities_button
    int expanded_menu -> expanded_menu
    int home -> home
    int homeAsUp -> homeAsUp
    int icon -> icon
    int ifRoom -> ifRoom
    int image -> image
    int listMode -> listMode
    int list_item -> list_item
    int middle -> middle
    int never -> never
    int none -> none
    int normal -> normal
    int progress_circular -> progress_circular
    int progress_horizontal -> progress_horizontal
    int radio -> radio
    int search_badge -> search_badge
    int search_bar -> search_bar
    int search_button -> search_button
    int search_close_btn -> search_close_btn
    int search_edit_frame -> search_edit_frame
    int search_go_btn -> search_go_btn
    int search_mag_icon -> search_mag_icon
    int search_plate -> search_plate
    int search_src_text -> search_src_text
    int search_voice_btn -> search_voice_btn
    int shortcut -> shortcut
    int showCustom -> showCustom
    int showHome -> showHome
    int showTitle -> showTitle
    int split_action_bar -> split_action_bar
    int submit_area -> submit_area
    int tabMode -> tabMode
    int title -> title
    int top_action_bar -> top_action_bar
    int up -> up
    int useLogo -> useLogo
    int withText -> withText
android.support.v7.appcompat.R$integer -> android.support.v7.appcompat.R$integer:
    int abc_max_action_buttons -> abc_max_action_buttons
android.support.v7.appcompat.R$layout -> android.support.v7.appcompat.R$layout:
    int abc_action_bar_decor -> abc_action_bar_decor
    int abc_action_bar_decor_include -> abc_action_bar_decor_include
    int abc_action_bar_decor_overlay -> abc_action_bar_decor_overlay
    int abc_action_bar_home -> abc_action_bar_home
    int abc_action_bar_tab -> abc_action_bar_tab
    int abc_action_bar_tabbar -> abc_action_bar_tabbar
    int abc_action_bar_title_item -> abc_action_bar_title_item
    int abc_action_bar_view_list_nav_layout -> abc_action_bar_view_list_nav_layout
    int abc_action_menu_item_layout -> abc_action_menu_item_layout
    int abc_action_menu_layout -> abc_action_menu_layout
    int abc_action_mode_bar -> abc_action_mode_bar
    int abc_action_mode_close_item -> abc_action_mode_close_item
    int abc_activity_chooser_view -> abc_activity_chooser_view
    int abc_activity_chooser_view_include -> abc_activity_chooser_view_include
    int abc_activity_chooser_view_list_item -> abc_activity_chooser_view_list_item
    int abc_expanded_menu_layout -> abc_expanded_menu_layout
    int abc_list_menu_item_checkbox -> abc_list_menu_item_checkbox
    int abc_list_menu_item_icon -> abc_list_menu_item_icon
    int abc_list_menu_item_layout -> abc_list_menu_item_layout
    int abc_list_menu_item_radio -> abc_list_menu_item_radio
    int abc_popup_menu_item_layout -> abc_popup_menu_item_layout
    int abc_search_dropdown_item_icons_2line -> abc_search_dropdown_item_icons_2line
    int abc_search_view -> abc_search_view
    int abc_simple_decor -> abc_simple_decor
    int support_simple_spinner_dropdown_item -> support_simple_spinner_dropdown_item
android.support.v7.appcompat.R$string -> android.support.v7.appcompat.R$string:
    int abc_action_bar_home_description -> abc_action_bar_home_description
    int abc_action_bar_up_description -> abc_action_bar_up_description
    int abc_action_menu_overflow_description -> abc_action_menu_overflow_description
    int abc_action_mode_done -> abc_action_mode_done
    int abc_activity_chooser_view_see_all -> abc_activity_chooser_view_see_all
    int abc_activitychooserview_choose_application -> abc_activitychooserview_choose_application
    int abc_searchview_description_clear -> abc_searchview_description_clear
    int abc_searchview_description_query -> abc_searchview_description_query
    int abc_searchview_description_search -> abc_searchview_description_search
    int abc_searchview_description_submit -> abc_searchview_description_submit
    int abc_searchview_description_voice -> abc_searchview_description_voice
    int abc_shareactionprovider_share_with -> abc_shareactionprovider_share_with
    int abc_shareactionprovider_share_with_application -> abc_shareactionprovider_share_with_application
android.support.v7.appcompat.R$style -> android.support.v7.appcompat.R$style:
    int TextAppearance_AppCompat_Base_CompactMenu_Dialog -> TextAppearance_AppCompat_Base_CompactMenu_Dialog
    int TextAppearance_AppCompat_Base_SearchResult -> TextAppearance_AppCompat_Base_SearchResult
    int TextAppearance_AppCompat_Base_SearchResult_Subtitle -> TextAppearance_AppCompat_Base_SearchResult_Subtitle
    int TextAppearance_AppCompat_Base_SearchResult_Title -> TextAppearance_AppCompat_Base_SearchResult_Title
    int TextAppearance_AppCompat_Base_Widget_PopupMenu_Large -> TextAppearance_AppCompat_Base_Widget_PopupMenu_Large
    int TextAppearance_AppCompat_Base_Widget_PopupMenu_Small -> TextAppearance_AppCompat_Base_Widget_PopupMenu_Small
    int TextAppearance_AppCompat_Light_Base_SearchResult -> TextAppearance_AppCompat_Light_Base_SearchResult
    int TextAppearance_AppCompat_Light_Base_SearchResult_Subtitle -> TextAppearance_AppCompat_Light_Base_SearchResult_Subtitle
    int TextAppearance_AppCompat_Light_Base_SearchResult_Title -> TextAppearance_AppCompat_Light_Base_SearchResult_Title
    int TextAppearance_AppCompat_Light_Base_Widget_PopupMenu_Large -> TextAppearance_AppCompat_Light_Base_Widget_PopupMenu_Large
    int TextAppearance_AppCompat_Light_Base_Widget_PopupMenu_Small -> TextAppearance_AppCompat_Light_Base_Widget_PopupMenu_Small
    int TextAppearance_AppCompat_Light_SearchResult_Subtitle -> TextAppearance_AppCompat_Light_SearchResult_Subtitle
    int TextAppearance_AppCompat_Light_SearchResult_Title -> TextAppearance_AppCompat_Light_SearchResult_Title
    int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large -> TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
    int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small -> TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
    int TextAppearance_AppCompat_SearchResult_Subtitle -> TextAppearance_AppCompat_SearchResult_Subtitle
    int TextAppearance_AppCompat_SearchResult_Title -> TextAppearance_AppCompat_SearchResult_Title
    int TextAppearance_AppCompat_Widget_ActionBar_Menu -> TextAppearance_AppCompat_Widget_ActionBar_Menu
    int TextAppearance_AppCompat_Widget_ActionBar_Subtitle -> TextAppearance_AppCompat_Widget_ActionBar_Subtitle
    int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse -> TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
    int TextAppearance_AppCompat_Widget_ActionBar_Title -> TextAppearance_AppCompat_Widget_ActionBar_Title
    int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse -> TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
    int TextAppearance_AppCompat_Widget_ActionMode_Subtitle -> TextAppearance_AppCompat_Widget_ActionMode_Subtitle
    int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse -> TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse
    int TextAppearance_AppCompat_Widget_ActionMode_Title -> TextAppearance_AppCompat_Widget_ActionMode_Title
    int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse -> TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse
    int TextAppearance_AppCompat_Widget_Base_ActionBar_Menu -> TextAppearance_AppCompat_Widget_Base_ActionBar_Menu
    int TextAppearance_AppCompat_Widget_Base_ActionBar_Subtitle -> TextAppearance_AppCompat_Widget_Base_ActionBar_Subtitle
    int TextAppearance_AppCompat_Widget_Base_ActionBar_Subtitle_Inverse -> TextAppearance_AppCompat_Widget_Base_ActionBar_Subtitle_Inverse
    int TextAppearance_AppCompat_Widget_Base_ActionBar_Title -> TextAppearance_AppCompat_Widget_Base_ActionBar_Title
    int TextAppearance_AppCompat_Widget_Base_ActionBar_Title_Inverse -> TextAppearance_AppCompat_Widget_Base_ActionBar_Title_Inverse
    int TextAppearance_AppCompat_Widget_Base_ActionMode_Subtitle -> TextAppearance_AppCompat_Widget_Base_ActionMode_Subtitle
    int TextAppearance_AppCompat_Widget_Base_ActionMode_Subtitle_Inverse -> TextAppearance_AppCompat_Widget_Base_ActionMode_Subtitle_Inverse
    int TextAppearance_AppCompat_Widget_Base_ActionMode_Title -> TextAppearance_AppCompat_Widget_Base_ActionMode_Title
    int TextAppearance_AppCompat_Widget_Base_ActionMode_Title_Inverse -> TextAppearance_AppCompat_Widget_Base_ActionMode_Title_Inverse
    int TextAppearance_AppCompat_Widget_Base_DropDownItem -> TextAppearance_AppCompat_Widget_Base_DropDownItem
    int TextAppearance_AppCompat_Widget_DropDownItem -> TextAppearance_AppCompat_Widget_DropDownItem
    int TextAppearance_AppCompat_Widget_PopupMenu_Large -> TextAppearance_AppCompat_Widget_PopupMenu_Large
    int TextAppearance_AppCompat_Widget_PopupMenu_Small -> TextAppearance_AppCompat_Widget_PopupMenu_Small
    int TextAppearance_Widget_AppCompat_Base_ExpandedMenu_Item -> TextAppearance_Widget_AppCompat_Base_ExpandedMenu_Item
    int TextAppearance_Widget_AppCompat_ExpandedMenu_Item -> TextAppearance_Widget_AppCompat_ExpandedMenu_Item
    int Theme_AppCompat -> Theme_AppCompat
    int Theme_AppCompat_Base_CompactMenu -> Theme_AppCompat_Base_CompactMenu
    int Theme_AppCompat_Base_CompactMenu_Dialog -> Theme_AppCompat_Base_CompactMenu_Dialog
    int Theme_AppCompat_CompactMenu -> Theme_AppCompat_CompactMenu
    int Theme_AppCompat_CompactMenu_Dialog -> Theme_AppCompat_CompactMenu_Dialog
    int Theme_AppCompat_DialogWhenLarge -> Theme_AppCompat_DialogWhenLarge
    int Theme_AppCompat_Light -> Theme_AppCompat_Light
    int Theme_AppCompat_Light_DarkActionBar -> Theme_AppCompat_Light_DarkActionBar
    int Theme_AppCompat_Light_DialogWhenLarge -> Theme_AppCompat_Light_DialogWhenLarge
    int Theme_Base -> Theme_Base
    int Theme_Base_AppCompat -> Theme_Base_AppCompat
    int Theme_Base_AppCompat_DialogWhenLarge -> Theme_Base_AppCompat_DialogWhenLarge
    int Theme_Base_AppCompat_DialogWhenLarge_Base -> Theme_Base_AppCompat_DialogWhenLarge_Base
    int Theme_Base_AppCompat_Dialog_FixedSize -> Theme_Base_AppCompat_Dialog_FixedSize
    int Theme_Base_AppCompat_Dialog_Light_FixedSize -> Theme_Base_AppCompat_Dialog_Light_FixedSize
    int Theme_Base_AppCompat_Light -> Theme_Base_AppCompat_Light
    int Theme_Base_AppCompat_Light_DarkActionBar -> Theme_Base_AppCompat_Light_DarkActionBar
    int Theme_Base_AppCompat_Light_DialogWhenLarge -> Theme_Base_AppCompat_Light_DialogWhenLarge
    int Theme_Base_AppCompat_Light_DialogWhenLarge_Base -> Theme_Base_AppCompat_Light_DialogWhenLarge_Base
    int Theme_Base_Light -> Theme_Base_Light
    int Widget_AppCompat_ActionBar -> Widget_AppCompat_ActionBar
    int Widget_AppCompat_ActionBar_Solid -> Widget_AppCompat_ActionBar_Solid
    int Widget_AppCompat_ActionBar_TabBar -> Widget_AppCompat_ActionBar_TabBar
    int Widget_AppCompat_ActionBar_TabText -> Widget_AppCompat_ActionBar_TabText
    int Widget_AppCompat_ActionBar_TabView -> Widget_AppCompat_ActionBar_TabView
    int Widget_AppCompat_ActionButton -> Widget_AppCompat_ActionButton
    int Widget_AppCompat_ActionButton_CloseMode -> Widget_AppCompat_ActionButton_CloseMode
    int Widget_AppCompat_ActionButton_Overflow -> Widget_AppCompat_ActionButton_Overflow
    int Widget_AppCompat_ActionMode -> Widget_AppCompat_ActionMode
    int Widget_AppCompat_ActivityChooserView -> Widget_AppCompat_ActivityChooserView
    int Widget_AppCompat_AutoCompleteTextView -> Widget_AppCompat_AutoCompleteTextView
    int Widget_AppCompat_Base_ActionBar -> Widget_AppCompat_Base_ActionBar
    int Widget_AppCompat_Base_ActionBar_Solid -> Widget_AppCompat_Base_ActionBar_Solid
    int Widget_AppCompat_Base_ActionBar_TabBar -> Widget_AppCompat_Base_ActionBar_TabBar
    int Widget_AppCompat_Base_ActionBar_TabText -> Widget_AppCompat_Base_ActionBar_TabText
    int Widget_AppCompat_Base_ActionBar_TabView -> Widget_AppCompat_Base_ActionBar_TabView
    int Widget_AppCompat_Base_ActionButton -> Widget_AppCompat_Base_ActionButton
    int Widget_AppCompat_Base_ActionButton_CloseMode -> Widget_AppCompat_Base_ActionButton_CloseMode
    int Widget_AppCompat_Base_ActionButton_Overflow -> Widget_AppCompat_Base_ActionButton_Overflow
    int Widget_AppCompat_Base_ActionMode -> Widget_AppCompat_Base_ActionMode
    int Widget_AppCompat_Base_ActivityChooserView -> Widget_AppCompat_Base_ActivityChooserView
    int Widget_AppCompat_Base_AutoCompleteTextView -> Widget_AppCompat_Base_AutoCompleteTextView
    int Widget_AppCompat_Base_DropDownItem_Spinner -> Widget_AppCompat_Base_DropDownItem_Spinner
    int Widget_AppCompat_Base_ListPopupWindow -> Widget_AppCompat_Base_ListPopupWindow
    int Widget_AppCompat_Base_ListView_DropDown -> Widget_AppCompat_Base_ListView_DropDown
    int Widget_AppCompat_Base_ListView_Menu -> Widget_AppCompat_Base_ListView_Menu
    int Widget_AppCompat_Base_PopupMenu -> Widget_AppCompat_Base_PopupMenu
    int Widget_AppCompat_Base_ProgressBar -> Widget_AppCompat_Base_ProgressBar
    int Widget_AppCompat_Base_ProgressBar_Horizontal -> Widget_AppCompat_Base_ProgressBar_Horizontal
    int Widget_AppCompat_Base_Spinner -> Widget_AppCompat_Base_Spinner
    int Widget_AppCompat_DropDownItem_Spinner -> Widget_AppCompat_DropDownItem_Spinner
    int Widget_AppCompat_Light_ActionBar -> Widget_AppCompat_Light_ActionBar
    int Widget_AppCompat_Light_ActionBar_Solid -> Widget_AppCompat_Light_ActionBar_Solid
    int Widget_AppCompat_Light_ActionBar_Solid_Inverse -> Widget_AppCompat_Light_ActionBar_Solid_Inverse
    int Widget_AppCompat_Light_ActionBar_TabBar -> Widget_AppCompat_Light_ActionBar_TabBar
    int Widget_AppCompat_Light_ActionBar_TabBar_Inverse -> Widget_AppCompat_Light_ActionBar_TabBar_Inverse
    int Widget_AppCompat_Light_ActionBar_TabText -> Widget_AppCompat_Light_ActionBar_TabText
    int Widget_AppCompat_Light_ActionBar_TabText_Inverse -> Widget_AppCompat_Light_ActionBar_TabText_Inverse
    int Widget_AppCompat_Light_ActionBar_TabView -> Widget_AppCompat_Light_ActionBar_TabView
    int Widget_AppCompat_Light_ActionBar_TabView_Inverse -> Widget_AppCompat_Light_ActionBar_TabView_Inverse
    int Widget_AppCompat_Light_ActionButton -> Widget_AppCompat_Light_ActionButton
    int Widget_AppCompat_Light_ActionButton_CloseMode -> Widget_AppCompat_Light_ActionButton_CloseMode
    int Widget_AppCompat_Light_ActionButton_Overflow -> Widget_AppCompat_Light_ActionButton_Overflow
    int Widget_AppCompat_Light_ActionMode_Inverse -> Widget_AppCompat_Light_ActionMode_Inverse
    int Widget_AppCompat_Light_ActivityChooserView -> Widget_AppCompat_Light_ActivityChooserView
    int Widget_AppCompat_Light_AutoCompleteTextView -> Widget_AppCompat_Light_AutoCompleteTextView
    int Widget_AppCompat_Light_Base_ActionBar -> Widget_AppCompat_Light_Base_ActionBar
    int Widget_AppCompat_Light_Base_ActionBar_Solid -> Widget_AppCompat_Light_Base_ActionBar_Solid
    int Widget_AppCompat_Light_Base_ActionBar_Solid_Inverse -> Widget_AppCompat_Light_Base_ActionBar_Solid_Inverse
    int Widget_AppCompat_Light_Base_ActionBar_TabBar -> Widget_AppCompat_Light_Base_ActionBar_TabBar
    int Widget_AppCompat_Light_Base_ActionBar_TabBar_Inverse -> Widget_AppCompat_Light_Base_ActionBar_TabBar_Inverse
    int Widget_AppCompat_Light_Base_ActionBar_TabText -> Widget_AppCompat_Light_Base_ActionBar_TabText
    int Widget_AppCompat_Light_Base_ActionBar_TabText_Inverse -> Widget_AppCompat_Light_Base_ActionBar_TabText_Inverse
    int Widget_AppCompat_Light_Base_ActionBar_TabView -> Widget_AppCompat_Light_Base_ActionBar_TabView
    int Widget_AppCompat_Light_Base_ActionBar_TabView_Inverse -> Widget_AppCompat_Light_Base_ActionBar_TabView_Inverse
    int Widget_AppCompat_Light_Base_ActionButton -> Widget_AppCompat_Light_Base_ActionButton
    int Widget_AppCompat_Light_Base_ActionButton_CloseMode -> Widget_AppCompat_Light_Base_ActionButton_CloseMode
    int Widget_AppCompat_Light_Base_ActionButton_Overflow -> Widget_AppCompat_Light_Base_ActionButton_Overflow
    int Widget_AppCompat_Light_Base_ActionMode_Inverse -> Widget_AppCompat_Light_Base_ActionMode_Inverse
    int Widget_AppCompat_Light_Base_ActivityChooserView -> Widget_AppCompat_Light_Base_ActivityChooserView
    int Widget_AppCompat_Light_Base_AutoCompleteTextView -> Widget_AppCompat_Light_Base_AutoCompleteTextView
    int Widget_AppCompat_Light_Base_DropDownItem_Spinner -> Widget_AppCompat_Light_Base_DropDownItem_Spinner
    int Widget_AppCompat_Light_Base_ListPopupWindow -> Widget_AppCompat_Light_Base_ListPopupWindow
    int Widget_AppCompat_Light_Base_ListView_DropDown -> Widget_AppCompat_Light_Base_ListView_DropDown
    int Widget_AppCompat_Light_Base_PopupMenu -> Widget_AppCompat_Light_Base_PopupMenu
    int Widget_AppCompat_Light_Base_Spinner -> Widget_AppCompat_Light_Base_Spinner
    int Widget_AppCompat_Light_DropDownItem_Spinner -> Widget_AppCompat_Light_DropDownItem_Spinner
    int Widget_AppCompat_Light_ListPopupWindow -> Widget_AppCompat_Light_ListPopupWindow
    int Widget_AppCompat_Light_ListView_DropDown -> Widget_AppCompat_Light_ListView_DropDown
    int Widget_AppCompat_Light_PopupMenu -> Widget_AppCompat_Light_PopupMenu
    int Widget_AppCompat_Light_Spinner_DropDown_ActionBar -> Widget_AppCompat_Light_Spinner_DropDown_ActionBar
    int Widget_AppCompat_ListPopupWindow -> Widget_AppCompat_ListPopupWindow
    int Widget_AppCompat_ListView_DropDown -> Widget_AppCompat_ListView_DropDown
    int Widget_AppCompat_ListView_Menu -> Widget_AppCompat_ListView_Menu
    int Widget_AppCompat_PopupMenu -> Widget_AppCompat_PopupMenu
    int Widget_AppCompat_ProgressBar -> Widget_AppCompat_ProgressBar
    int Widget_AppCompat_ProgressBar_Horizontal -> Widget_AppCompat_ProgressBar_Horizontal
    int Widget_AppCompat_Spinner_DropDown_ActionBar -> Widget_AppCompat_Spinner_DropDown_ActionBar
android.support.v7.appcompat.R$styleable -> android.support.v7.appcompat.R$styleable:
    int[] ActionBar -> ActionBar
    int[] ActionBarLayout -> ActionBarLayout
    int ActionBarLayout_android_layout_gravity -> ActionBarLayout_android_layout_gravity
    int[] ActionBarWindow -> ActionBarWindow
    int ActionBarWindow_windowActionBar -> ActionBarWindow_windowActionBar
    int ActionBarWindow_windowActionBarOverlay -> ActionBarWindow_windowActionBarOverlay
    int ActionBarWindow_windowFixedHeightMajor -> ActionBarWindow_windowFixedHeightMajor
    int ActionBarWindow_windowFixedHeightMinor -> ActionBarWindow_windowFixedHeightMinor
    int ActionBarWindow_windowFixedWidthMajor -> ActionBarWindow_windowFixedWidthMajor
    int ActionBarWindow_windowFixedWidthMinor -> ActionBarWindow_windowFixedWidthMinor
    int ActionBarWindow_windowSplitActionBar -> ActionBarWindow_windowSplitActionBar
    int ActionBar_background -> ActionBar_background
    int ActionBar_backgroundSplit -> ActionBar_backgroundSplit
    int ActionBar_backgroundStacked -> ActionBar_backgroundStacked
    int ActionBar_customNavigationLayout -> ActionBar_customNavigationLayout
    int ActionBar_displayOptions -> ActionBar_displayOptions
    int ActionBar_divider -> ActionBar_divider
    int ActionBar_height -> ActionBar_height
    int ActionBar_homeLayout -> ActionBar_homeLayout
    int ActionBar_icon -> ActionBar_icon
    int ActionBar_indeterminateProgressStyle -> ActionBar_indeterminateProgressStyle
    int ActionBar_itemPadding -> ActionBar_itemPadding
    int ActionBar_logo -> ActionBar_logo
    int ActionBar_navigationMode -> ActionBar_navigationMode
    int ActionBar_progressBarPadding -> ActionBar_progressBarPadding
    int ActionBar_progressBarStyle -> ActionBar_progressBarStyle
    int ActionBar_subtitle -> ActionBar_subtitle
    int ActionBar_subtitleTextStyle -> ActionBar_subtitleTextStyle
    int ActionBar_title -> ActionBar_title
    int ActionBar_titleTextStyle -> ActionBar_titleTextStyle
    int[] ActionMenuItemView -> ActionMenuItemView
    int ActionMenuItemView_android_minWidth -> ActionMenuItemView_android_minWidth
    int[] ActionMenuView -> ActionMenuView
    int[] ActionMode -> ActionMode
    int ActionMode_background -> ActionMode_background
    int ActionMode_backgroundSplit -> ActionMode_backgroundSplit
    int ActionMode_height -> ActionMode_height
    int ActionMode_subtitleTextStyle -> ActionMode_subtitleTextStyle
    int ActionMode_titleTextStyle -> ActionMode_titleTextStyle
    int[] ActivityChooserView -> ActivityChooserView
    int ActivityChooserView_expandActivityOverflowButtonDrawable -> ActivityChooserView_expandActivityOverflowButtonDrawable
    int ActivityChooserView_initialActivityCount -> ActivityChooserView_initialActivityCount
    int[] CompatTextView -> CompatTextView
    int CompatTextView_textAllCaps -> CompatTextView_textAllCaps
    int[] LinearLayoutICS -> LinearLayoutICS
    int LinearLayoutICS_divider -> LinearLayoutICS_divider
    int LinearLayoutICS_dividerPadding -> LinearLayoutICS_dividerPadding
    int LinearLayoutICS_showDividers -> LinearLayoutICS_showDividers
    int[] MenuGroup -> MenuGroup
    int MenuGroup_android_checkableBehavior -> MenuGroup_android_checkableBehavior
    int MenuGroup_android_enabled -> MenuGroup_android_enabled
    int MenuGroup_android_id -> MenuGroup_android_id
    int MenuGroup_android_menuCategory -> MenuGroup_android_menuCategory
    int MenuGroup_android_orderInCategory -> MenuGroup_android_orderInCategory
    int MenuGroup_android_visible -> MenuGroup_android_visible
    int[] MenuItem -> MenuItem
    int MenuItem_actionLayout -> MenuItem_actionLayout
    int MenuItem_actionProviderClass -> MenuItem_actionProviderClass
    int MenuItem_actionViewClass -> MenuItem_actionViewClass
    int MenuItem_android_alphabeticShortcut -> MenuItem_android_alphabeticShortcut
    int MenuItem_android_checkable -> MenuItem_android_checkable
    int MenuItem_android_checked -> MenuItem_android_checked
    int MenuItem_android_enabled -> MenuItem_android_enabled
    int MenuItem_android_icon -> MenuItem_android_icon
    int MenuItem_android_id -> MenuItem_android_id
    int MenuItem_android_menuCategory -> MenuItem_android_menuCategory
    int MenuItem_android_numericShortcut -> MenuItem_android_numericShortcut
    int MenuItem_android_onClick -> MenuItem_android_onClick
    int MenuItem_android_orderInCategory -> MenuItem_android_orderInCategory
    int MenuItem_android_title -> MenuItem_android_title
    int MenuItem_android_titleCondensed -> MenuItem_android_titleCondensed
    int MenuItem_android_visible -> MenuItem_android_visible
    int MenuItem_showAsAction -> MenuItem_showAsAction
    int[] MenuView -> MenuView
    int MenuView_android_headerBackground -> MenuView_android_headerBackground
    int MenuView_android_horizontalDivider -> MenuView_android_horizontalDivider
    int MenuView_android_itemBackground -> MenuView_android_itemBackground
    int MenuView_android_itemIconDisabledAlpha -> MenuView_android_itemIconDisabledAlpha
    int MenuView_android_itemTextAppearance -> MenuView_android_itemTextAppearance
    int MenuView_android_preserveIconSpacing -> MenuView_android_preserveIconSpacing
    int MenuView_android_verticalDivider -> MenuView_android_verticalDivider
    int MenuView_android_windowAnimationStyle -> MenuView_android_windowAnimationStyle
    int[] SearchView -> SearchView
    int SearchView_android_imeOptions -> SearchView_android_imeOptions
    int SearchView_android_inputType -> SearchView_android_inputType
    int SearchView_android_maxWidth -> SearchView_android_maxWidth
    int SearchView_iconifiedByDefault -> SearchView_iconifiedByDefault
    int SearchView_queryHint -> SearchView_queryHint
    int[] Spinner -> Spinner
    int Spinner_android_dropDownHorizontalOffset -> Spinner_android_dropDownHorizontalOffset
    int Spinner_android_dropDownSelector -> Spinner_android_dropDownSelector
    int Spinner_android_dropDownVerticalOffset -> Spinner_android_dropDownVerticalOffset
    int Spinner_android_dropDownWidth -> Spinner_android_dropDownWidth
    int Spinner_android_gravity -> Spinner_android_gravity
    int Spinner_android_popupBackground -> Spinner_android_popupBackground
    int Spinner_disableChildrenWhenDisabled -> Spinner_disableChildrenWhenDisabled
    int Spinner_popupPromptView -> Spinner_popupPromptView
    int Spinner_prompt -> Spinner_prompt
    int Spinner_spinnerMode -> Spinner_spinnerMode
    int[] Theme -> Theme
    int Theme_actionDropDownStyle -> Theme_actionDropDownStyle
    int Theme_dropdownListPreferredItemHeight -> Theme_dropdownListPreferredItemHeight
    int Theme_listChoiceBackgroundIndicator -> Theme_listChoiceBackgroundIndicator
    int Theme_panelMenuListTheme -> Theme_panelMenuListTheme
    int Theme_panelMenuListWidth -> Theme_panelMenuListWidth
    int Theme_popupMenuStyle -> Theme_popupMenuStyle
    int[] View -> View
    int View_android_focusable -> View_android_focusable
    int View_paddingEnd -> View_paddingEnd
    int View_paddingStart -> View_paddingStart
android.support.v7.internal.view.ActionBarPolicy -> android.support.v7.internal.view.a:
    android.content.Context mContext -> a
    android.support.v7.internal.view.ActionBarPolicy get(android.content.Context) -> a
    int getMaxActionButtons() -> a
    boolean showsOverflowMenuButton() -> b
    int getEmbeddedMenuWidthLimit() -> c
    boolean hasEmbeddedTabs() -> d
    int getTabContainerHeight() -> e
    boolean enableHomeButtonByDefault() -> f
    int getStackedTabMaxWidth() -> g
android.support.v7.internal.view.ActionModeWrapper -> android.support.v7.internal.view.b:
    android.view.MenuInflater mInflater -> a
    android.view.ActionMode mWrappedObject -> b
    void finish() -> a
android.support.v7.internal.view.ActionModeWrapperJB -> android.support.v7.internal.view.c:
android.support.v7.internal.view.SupportMenuInflater -> android.support.v7.internal.view.d:
    java.lang.Class[] ACTION_VIEW_CONSTRUCTOR_SIGNATURE -> a
    java.lang.Class[] ACTION_PROVIDER_CONSTRUCTOR_SIGNATURE -> b
    java.lang.Object[] mActionViewConstructorArguments -> c
    java.lang.Object[] mActionProviderConstructorArguments -> d
    android.content.Context mContext -> e
    java.lang.Object mRealOwner -> f
    void inflate(int,android.view.Menu) -> inflate
    void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu) -> a
    android.content.Context access$100(android.support.v7.internal.view.SupportMenuInflater) -> a
    java.lang.Class[] access$200() -> a
    java.lang.Object[] access$300(android.support.v7.internal.view.SupportMenuInflater) -> b
    java.lang.Object access$400(android.support.v7.internal.view.SupportMenuInflater) -> c
    java.lang.Class[] access$500() -> b
    java.lang.Object[] access$600(android.support.v7.internal.view.SupportMenuInflater) -> d
android.support.v7.internal.view.SupportMenuInflater$InflatedOnMenuItemClickListener -> android.support.v7.internal.view.e:
    java.lang.Class[] PARAM_TYPES -> a
    java.lang.Object mRealOwner -> b
    java.lang.reflect.Method mMethod -> c
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
android.support.v7.internal.view.SupportMenuInflater$MenuState -> android.support.v7.internal.view.f:
    android.view.Menu menu -> b
    int groupId -> c
    int groupCategory -> d
    int groupOrder -> e
    int groupCheckable -> f
    boolean groupVisible -> g
    boolean groupEnabled -> h
    boolean itemAdded -> i
    int itemId -> j
    int itemCategoryOrder -> k
    java.lang.CharSequence itemTitle -> l
    java.lang.CharSequence itemTitleCondensed -> m
    int itemIconResId -> n
    char itemAlphabeticShortcut -> o
    char itemNumericShortcut -> p
    int itemCheckable -> q
    boolean itemChecked -> r
    boolean itemVisible -> s
    boolean itemEnabled -> t
    int itemShowAsAction -> u
    int itemActionViewLayout -> v
    java.lang.String itemActionViewClassName -> w
    java.lang.String itemActionProviderClassName -> x
    java.lang.String itemListenerMethodName -> y
    android.support.v4.view.ActionProvider itemActionProvider -> z
    android.support.v7.internal.view.SupportMenuInflater this$0 -> a
    void resetGroup() -> a
    void readGroup(android.util.AttributeSet) -> a
    void readItem(android.util.AttributeSet) -> b
    char getShortcut(java.lang.String) -> a
    void setItem(android.view.MenuItem) -> a
    void addItem() -> b
    android.view.SubMenu addSubMenuItem() -> c
    boolean hasAddedItem() -> d
    java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[]) -> a
    android.support.v4.view.ActionProvider access$000(android.support.v7.internal.view.SupportMenuInflater$MenuState) -> a
android.support.v7.internal.view.menu.ActionMenuItem -> android.support.v7.internal.view.menu.ActionMenuItem:
    int mId -> a
    int mGroup -> b
    int mCategoryOrder -> c
    int mOrdering -> d
    java.lang.CharSequence mTitle -> e
    java.lang.CharSequence mTitleCondensed -> f
    android.content.Intent mIntent -> g
    char mShortcutNumericChar -> h
    char mShortcutAlphabeticChar -> i
    android.graphics.drawable.Drawable mIconDrawable -> j
    int mIconResId -> k
    android.content.Context mContext -> l
    android.view.MenuItem$OnMenuItemClickListener mClickListener -> m
    int mFlags -> n
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    int getGroupId() -> getGroupId
    android.graphics.drawable.Drawable getIcon() -> getIcon
    android.content.Intent getIntent() -> getIntent
    int getItemId() -> getItemId
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    char getNumericShortcut() -> getNumericShortcut
    int getOrder() -> getOrder
    android.view.SubMenu getSubMenu() -> getSubMenu
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    boolean hasSubMenu() -> hasSubMenu
    boolean isCheckable() -> isCheckable
    boolean isChecked() -> isChecked
    boolean isEnabled() -> isEnabled
    boolean isVisible() -> isVisible
    android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    android.view.MenuItem setCheckable(boolean) -> setCheckable
    android.view.MenuItem setChecked(boolean) -> setChecked
    android.view.MenuItem setEnabled(boolean) -> setEnabled
    android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.view.MenuItem setIcon(int) -> setIcon
    android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    android.view.MenuItem setShortcut(char,char) -> setShortcut
    android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    android.view.MenuItem setTitle(int) -> setTitle
    android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    android.view.MenuItem setVisible(boolean) -> setVisible
    void setShowAsAction(int) -> setShowAsAction
    android.support.v4.internal.view.SupportMenuItem setActionView(android.view.View) -> a
    android.view.View getActionView() -> getActionView
    android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    android.view.ActionProvider getActionProvider() -> getActionProvider
    android.support.v4.internal.view.SupportMenuItem setActionView(int) -> a
    android.support.v4.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> setSupportActionProvider
    android.support.v4.internal.view.SupportMenuItem setShowAsActionFlags(int) -> b
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    android.support.v4.internal.view.SupportMenuItem setSupportOnActionExpandListener(android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setSupportOnActionExpandListener
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
android.support.v7.internal.view.menu.ActionMenuItemView -> android.support.v7.internal.view.menu.ActionMenuItemView:
    android.support.v7.internal.view.menu.MenuItemImpl mItemData -> a
    java.lang.CharSequence mTitle -> b
    android.graphics.drawable.Drawable mIcon -> c
    android.support.v7.internal.view.menu.MenuBuilder$ItemInvoker mItemInvoker -> d
    boolean mAllowTextWithIcon -> e
    boolean mExpandedFormat -> f
    int mMinWidth -> g
    int mSavedPaddingLeft -> h
    void setPadding(int,int,int,int) -> setPadding
    android.support.v7.internal.view.menu.MenuItemImpl getItemData() -> getItemData
    void initialize(android.support.v7.internal.view.menu.MenuItemImpl,int) -> a
    void onClick(android.view.View) -> onClick
    void setItemInvoker(android.support.v7.internal.view.menu.MenuBuilder$ItemInvoker) -> setItemInvoker
    boolean prefersCondensedTitle() -> a
    void setCheckable(boolean) -> setCheckable
    void setChecked(boolean) -> setChecked
    void setExpandedFormat(boolean) -> setExpandedFormat
    void updateTextButtonVisibility() -> e
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    boolean hasText() -> b
    void setTitle(java.lang.CharSequence) -> setTitle
    boolean needsDividerBefore() -> c
    boolean needsDividerAfter() -> d
    boolean onLongClick(android.view.View) -> onLongClick
    void onMeasure(int,int) -> onMeasure
android.support.v7.internal.view.menu.ActionMenuItemView$AllCapsTransformationMethod -> android.support.v7.internal.view.menu.a:
    java.util.Locale mLocale -> b
    android.support.v7.internal.view.menu.ActionMenuItemView this$0 -> a
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
    void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect) -> onFocusChanged
android.support.v7.internal.view.menu.ActionMenuPresenter -> android.support.v7.internal.view.menu.ActionMenuPresenter:
    android.view.View mOverflowButton -> i
    boolean mReserveOverflow -> j
    boolean mReserveOverflowSet -> k
    int mWidthLimit -> l
    int mActionItemWidthLimit -> m
    int mMaxItems -> n
    boolean mMaxItemsSet -> o
    boolean mStrictWidthLimit -> p
    boolean mWidthLimitSet -> q
    boolean mExpandedActionViewsExclusive -> r
    int mMinCellSize -> s
    android.util.SparseBooleanArray mActionButtonGroups -> t
    android.view.View mScrapActionButtonView -> u
    android.support.v7.internal.view.menu.ActionMenuPresenter$OverflowPopup mOverflowPopup -> v
    android.support.v7.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu mActionButtonPopup -> w
    android.support.v7.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable mPostedOpenRunnable -> x
    android.support.v7.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback mPopupPresenterCallback -> a
    int mOpenSubMenuId -> b
    void initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> a
    void setWidthLimit(int,boolean) -> a
    void setItemLimit(int) -> a
    void setExpandedActionViewsExclusive(boolean) -> a
    android.support.v7.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> a
    android.view.View getItemView(android.support.v7.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> a
    void bindItemView(android.support.v7.internal.view.menu.MenuItemImpl,android.support.v7.internal.view.menu.MenuView$ItemView) -> a
    boolean shouldIncludeItem(int,android.support.v7.internal.view.menu.MenuItemImpl) -> a
    void updateMenuView(boolean) -> b
    boolean filterLeftoverView(android.view.ViewGroup,int) -> a
    boolean onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder) -> a
    android.view.View findViewForItem(android.view.MenuItem) -> a
    boolean showOverflowMenu() -> a
    boolean hideOverflowMenu() -> b
    boolean dismissPopupMenus() -> c
    boolean hideSubMenus() -> d
    boolean isOverflowMenuShowing() -> e
    boolean isOverflowReserved() -> f
    boolean flagActionItems() -> g
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    void onSubUiVisibilityChanged(boolean) -> onSubUiVisibilityChanged
    android.support.v7.internal.view.menu.ActionMenuPresenter$OverflowPopup access$102(android.support.v7.internal.view.menu.ActionMenuPresenter,android.support.v7.internal.view.menu.ActionMenuPresenter$OverflowPopup) -> a
    android.support.v7.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu access$202(android.support.v7.internal.view.menu.ActionMenuPresenter,android.support.v7.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu) -> a
    android.support.v7.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable access$302(android.support.v7.internal.view.menu.ActionMenuPresenter,android.support.v7.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable) -> a
android.support.v7.internal.view.menu.ActionMenuPresenter$1 -> android.support.v7.internal.view.menu.b:
android.support.v7.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu -> android.support.v7.internal.view.menu.c:
    android.support.v7.internal.view.menu.ActionMenuPresenter this$0 -> a
    void onDismiss(android.content.DialogInterface) -> onDismiss
android.support.v7.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable -> android.support.v7.internal.view.menu.d:
    android.support.v7.internal.view.menu.ActionMenuPresenter$OverflowPopup mPopup -> b
    android.support.v7.internal.view.menu.ActionMenuPresenter this$0 -> a
    void run() -> run
android.support.v7.internal.view.menu.ActionMenuPresenter$OverflowMenuButton -> android.support.v7.internal.view.menu.e:
    android.support.v7.internal.view.menu.ActionMenuPresenter this$0 -> a
    boolean performClick() -> performClick
    boolean needsDividerBefore() -> c
    boolean needsDividerAfter() -> d
android.support.v7.internal.view.menu.ActionMenuPresenter$OverflowPopup -> android.support.v7.internal.view.menu.f:
    android.support.v7.internal.view.menu.ActionMenuPresenter this$0 -> a
    void onDismiss() -> onDismiss
android.support.v7.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback -> android.support.v7.internal.view.menu.g:
    android.support.v7.internal.view.menu.ActionMenuPresenter this$0 -> a
    boolean onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder) -> b
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
android.support.v7.internal.view.menu.ActionMenuPresenter$SavedState -> android.support.v7.internal.view.menu.ActionMenuPresenter$SavedState:
    int openSubMenuId -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v7.internal.view.menu.ActionMenuPresenter$SavedState$1 -> android.support.v7.internal.view.menu.h:
    android.support.v7.internal.view.menu.ActionMenuPresenter$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v7.internal.view.menu.ActionMenuPresenter$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v7.internal.view.menu.ActionMenuView -> android.support.v7.internal.view.menu.ActionMenuView:
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> a
    boolean mReserveOverflow -> b
    android.support.v7.internal.view.menu.ActionMenuPresenter mPresenter -> c
    boolean mFormatItems -> d
    int mFormatItemsWidth -> e
    int mMinCellSize -> f
    int mGeneratedItemPadding -> g
    int mMeasuredExtraWidth -> h
    int mMaxItemHeight -> i
    void setPresenter(android.support.v7.internal.view.menu.ActionMenuPresenter) -> setPresenter
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onMeasure(int,int) -> onMeasure
    void onMeasureExactFormat(int,int) -> a
    int measureChildForCells(android.view.View,int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setOverflowReserved(boolean) -> setOverflowReserved
    android.support.v7.internal.view.menu.ActionMenuView$LayoutParams generateDefaultLayoutParams() -> a
    android.support.v7.internal.view.menu.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet) -> a
    android.support.v7.internal.view.menu.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> a
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.support.v7.internal.view.menu.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams() -> b
    boolean invokeItem(android.support.v7.internal.view.menu.MenuItemImpl) -> a
    int getWindowAnimations() -> getWindowAnimations
    void initialize(android.support.v7.internal.view.menu.MenuBuilder) -> a
    boolean hasSupportDividerBeforeChildAt(int) -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
android.support.v7.internal.view.menu.ActionMenuView$ActionMenuChildView -> android.support.v7.internal.view.menu.i:
    boolean needsDividerBefore() -> c
    boolean needsDividerAfter() -> d
android.support.v7.internal.view.menu.ActionMenuView$LayoutParams -> android.support.v7.internal.view.menu.ActionMenuView$LayoutParams:
    boolean isOverflowButton -> a
    int cellsUsed -> b
    int extraPixels -> c
    boolean expandable -> d
    boolean preventEdgeOffset -> e
    boolean expanded -> f
android.support.v7.internal.view.menu.BaseMenuPresenter -> android.support.v7.internal.view.menu.j:
    android.content.Context mSystemContext -> c
    android.content.Context mContext -> d
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> e
    android.view.LayoutInflater mSystemInflater -> f
    android.view.LayoutInflater mInflater -> g
    android.support.v7.internal.view.menu.MenuPresenter$Callback mCallback -> a
    int mMenuLayoutRes -> b
    int mItemLayoutRes -> i
    android.support.v7.internal.view.menu.MenuView mMenuView -> h
    int mId -> j
    void initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder) -> a
    android.support.v7.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> a
    void updateMenuView(boolean) -> b
    void addItemView(android.view.View,int) -> a
    boolean filterLeftoverView(android.view.ViewGroup,int) -> a
    void setCallback(android.support.v7.internal.view.menu.MenuPresenter$Callback) -> a
    android.support.v7.internal.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup) -> b
    android.view.View getItemView(android.support.v7.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> a
    void bindItemView(android.support.v7.internal.view.menu.MenuItemImpl,android.support.v7.internal.view.menu.MenuView$ItemView) -> a
    boolean shouldIncludeItem(int,android.support.v7.internal.view.menu.MenuItemImpl) -> a
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    boolean onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder) -> a
    boolean flagActionItems() -> g
    boolean expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> a
    boolean collapseItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> b
    void setId(int) -> b
android.support.v7.internal.view.menu.BaseMenuWrapper -> android.support.v7.internal.view.menu.k:
    java.util.HashMap mMenuItems -> b
    java.util.HashMap mSubMenus -> c
    android.support.v4.internal.view.SupportMenuItem getMenuItemWrapper(android.view.MenuItem) -> a
    android.view.SubMenu getSubMenuWrapper(android.view.SubMenu) -> a
    void internalClear() -> a
    void internalRemoveGroup(int) -> a
    void internalRemoveItem(int) -> b
android.support.v7.internal.view.menu.BaseWrapper -> android.support.v7.internal.view.menu.l:
    java.lang.Object mWrappedObject -> a
android.support.v7.internal.view.menu.ExpandedMenuView -> android.support.v7.internal.view.menu.ExpandedMenuView:
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> a
    int mAnimations -> b
    void initialize(android.support.v7.internal.view.menu.MenuBuilder) -> a
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean invokeItem(android.support.v7.internal.view.menu.MenuItemImpl) -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    int getWindowAnimations() -> getWindowAnimations
android.support.v7.internal.view.menu.ListMenuItemView -> android.support.v7.internal.view.menu.ListMenuItemView:
    android.support.v7.internal.view.menu.MenuItemImpl mItemData -> a
    android.widget.ImageView mIconView -> b
    android.widget.RadioButton mRadioButton -> c
    android.widget.TextView mTitleView -> d
    android.widget.CheckBox mCheckBox -> e
    android.widget.TextView mShortcutView -> f
    android.graphics.drawable.Drawable mBackground -> g
    int mTextAppearance -> h
    android.content.Context mTextAppearanceContext -> i
    boolean mPreserveIconSpacing -> j
    int mMenuType -> k
    android.content.Context mContext -> l
    android.view.LayoutInflater mInflater -> m
    boolean mForceShowIcon -> n
    void onFinishInflate() -> onFinishInflate
    void initialize(android.support.v7.internal.view.menu.MenuItemImpl,int) -> a
    void setForceShowIcon(boolean) -> setForceShowIcon
    void setTitle(java.lang.CharSequence) -> setTitle
    android.support.v7.internal.view.menu.MenuItemImpl getItemData() -> getItemData
    void setCheckable(boolean) -> setCheckable
    void setChecked(boolean) -> setChecked
    void setShortcut(boolean,char) -> a
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void onMeasure(int,int) -> onMeasure
    void insertIconView() -> b
    void insertRadioButton() -> c
    void insertCheckBox() -> d
    boolean prefersCondensedTitle() -> a
    android.view.LayoutInflater getInflater() -> getInflater
android.support.v7.internal.view.menu.ListMenuPresenter -> android.support.v7.internal.view.menu.m:
    android.content.Context mContext -> a
    android.view.LayoutInflater mInflater -> b
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> c
    android.support.v7.internal.view.menu.ExpandedMenuView mMenuView -> d
    int mItemIndexOffset -> h
    int mThemeRes -> e
    int mItemLayoutRes -> f
    android.support.v7.internal.view.menu.MenuPresenter$Callback mCallback -> i
    android.support.v7.internal.view.menu.ListMenuPresenter$MenuAdapter mAdapter -> g
    void initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder) -> a
    android.support.v7.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> a
    android.widget.ListAdapter getAdapter() -> a
    void updateMenuView(boolean) -> b
    void setCallback(android.support.v7.internal.view.menu.MenuPresenter$Callback) -> a
    boolean onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder) -> a
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    boolean flagActionItems() -> g
    boolean expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> a
    boolean collapseItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> b
    int access$000(android.support.v7.internal.view.menu.ListMenuPresenter) -> a
android.support.v7.internal.view.menu.ListMenuPresenter$MenuAdapter -> android.support.v7.internal.view.menu.n:
    int mExpandedIndex -> b
    android.support.v7.internal.view.menu.ListMenuPresenter this$0 -> a
    int getCount() -> getCount
    android.support.v7.internal.view.menu.MenuItemImpl getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void findExpandedIndex() -> a
    void notifyDataSetChanged() -> notifyDataSetChanged
    java.lang.Object getItem(int) -> getItem
android.support.v7.internal.view.menu.MenuBuilder -> android.support.v7.internal.view.menu.MenuBuilder:
    int[] sCategoryToOrder -> d
    android.content.Context mContext -> e
    android.content.res.Resources mResources -> f
    boolean mQwertyMode -> g
    boolean mShortcutsVisible -> h
    android.support.v7.internal.view.menu.MenuBuilder$Callback mCallback -> i
    java.util.ArrayList mItems -> j
    java.util.ArrayList mVisibleItems -> k
    boolean mIsVisibleItemsStale -> l
    java.util.ArrayList mActionItems -> m
    java.util.ArrayList mNonActionItems -> n
    boolean mIsActionItemsStale -> o
    int mDefaultShowAsAction -> p
    android.view.ContextMenu$ContextMenuInfo mCurrentMenuInfo -> q
    java.lang.CharSequence mHeaderTitle -> a
    android.graphics.drawable.Drawable mHeaderIcon -> b
    android.view.View mHeaderView -> c
    boolean mPreventDispatchingItemsChanged -> r
    boolean mItemsChangedWhileDispatchPrevented -> s
    boolean mOptionalIconsVisible -> t
    boolean mIsClosing -> u
    java.util.ArrayList mTempShortcutItemList -> v
    java.util.concurrent.CopyOnWriteArrayList mPresenters -> w
    android.support.v7.internal.view.menu.MenuItemImpl mExpandedItem -> x
    void addMenuPresenter(android.support.v7.internal.view.menu.MenuPresenter) -> a
    void removeMenuPresenter(android.support.v7.internal.view.menu.MenuPresenter) -> b
    void dispatchPresenterUpdate(boolean) -> c
    boolean dispatchSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder) -> a
    void saveActionViewStates(android.os.Bundle) -> a
    void restoreActionViewStates(android.os.Bundle) -> b
    java.lang.String getActionViewStatesKey() -> a
    void setCallback(android.support.v7.internal.view.menu.MenuBuilder$Callback) -> a
    android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence) -> a
    android.view.MenuItem add(java.lang.CharSequence) -> add
    android.view.MenuItem add(int) -> add
    android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    android.view.MenuItem add(int,int,int,int) -> add
    android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    android.view.SubMenu addSubMenu(int) -> addSubMenu
    android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    void removeItem(int) -> removeItem
    void removeGroup(int) -> removeGroup
    void removeItemAtInt(int,boolean) -> a
    void clear() -> clear
    void setExclusiveItemChecked(android.view.MenuItem) -> a
    void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    void setGroupVisible(int,boolean) -> setGroupVisible
    void setGroupEnabled(int,boolean) -> setGroupEnabled
    boolean hasVisibleItems() -> hasVisibleItems
    android.view.MenuItem findItem(int) -> findItem
    int findItemIndex(int) -> a
    int findGroupIndex(int) -> b
    int findGroupIndex(int,int) -> a
    int size() -> size
    android.view.MenuItem getItem(int) -> getItem
    boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    void setQwertyMode(boolean) -> setQwertyMode
    int getOrdering(int) -> c
    boolean isQwertyMode() -> b
    void setShortcutsVisibleInner(boolean) -> d
    boolean isShortcutsVisible() -> c
    android.content.res.Resources getResources() -> d
    android.content.Context getContext() -> e
    boolean dispatchMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem) -> a
    void changeMenuMode() -> f
    int findInsertIndex(java.util.ArrayList,int) -> a
    boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent) -> a
    android.support.v7.internal.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent) -> a
    boolean performIdentifierAction(int,int) -> performIdentifierAction
    boolean performItemAction(android.view.MenuItem,int) -> a
    void close(boolean) -> a
    void close() -> close
    void onItemsChanged(boolean) -> b
    void stopDispatchingItemsChanged() -> g
    void startDispatchingItemsChanged() -> h
    void onItemVisibleChanged(android.support.v7.internal.view.menu.MenuItemImpl) -> a
    void onItemActionRequestChanged(android.support.v7.internal.view.menu.MenuItemImpl) -> b
    java.util.ArrayList getVisibleItems() -> i
    void flagActionItems() -> j
    java.util.ArrayList getActionItems() -> k
    java.util.ArrayList getNonActionItems() -> l
    void clearHeader() -> clearHeader
    void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View) -> a
    android.support.v7.internal.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence) -> a
    android.support.v7.internal.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable) -> a
    android.support.v7.internal.view.menu.MenuBuilder setHeaderViewInt(android.view.View) -> a
    java.lang.CharSequence getHeaderTitle() -> m
    android.graphics.drawable.Drawable getHeaderIcon() -> n
    android.view.View getHeaderView() -> o
    android.support.v7.internal.view.menu.MenuBuilder getRootMenu() -> p
    boolean getOptionalIconsVisible() -> q
    boolean expandItemActionView(android.support.v7.internal.view.menu.MenuItemImpl) -> c
    boolean collapseItemActionView(android.support.v7.internal.view.menu.MenuItemImpl) -> d
    android.support.v7.internal.view.menu.MenuItemImpl getExpandedItem() -> r
android.support.v7.internal.view.menu.MenuBuilder$Callback -> android.support.v7.internal.view.menu.o:
    boolean onMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem) -> a
    void onMenuModeChange(android.support.v7.internal.view.menu.MenuBuilder) -> a
android.support.v7.internal.view.menu.MenuBuilder$ItemInvoker -> android.support.v7.internal.view.menu.p:
    boolean invokeItem(android.support.v7.internal.view.menu.MenuItemImpl) -> a
android.support.v7.internal.view.menu.MenuDialogHelper -> android.support.v7.internal.view.menu.q:
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> a
    android.app.AlertDialog mDialog -> c
    android.support.v7.internal.view.menu.ListMenuPresenter mPresenter -> b
    android.support.v7.internal.view.menu.MenuPresenter$Callback mPresenterCallback -> d
    void show(android.os.IBinder) -> a
    boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
    void dismiss() -> a
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    boolean onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder) -> b
    void onClick(android.content.DialogInterface,int) -> onClick
android.support.v7.internal.view.menu.MenuItemImpl -> android.support.v7.internal.view.menu.MenuItemImpl:
    int mId -> a
    int mGroup -> b
    int mCategoryOrder -> c
    int mOrdering -> d
    java.lang.CharSequence mTitle -> e
    java.lang.CharSequence mTitleCondensed -> f
    android.content.Intent mIntent -> g
    char mShortcutNumericChar -> h
    char mShortcutAlphabeticChar -> i
    android.graphics.drawable.Drawable mIconDrawable -> j
    int mIconResId -> k
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> l
    android.support.v7.internal.view.menu.SubMenuBuilder mSubMenu -> m
    java.lang.Runnable mItemCallback -> n
    android.view.MenuItem$OnMenuItemClickListener mClickListener -> o
    int mFlags -> p
    int mShowAsAction -> q
    android.view.View mActionView -> r
    android.support.v4.view.ActionProvider mActionProvider -> s
    android.support.v4.view.MenuItemCompat$OnActionExpandListener mOnActionExpandListener -> t
    boolean mIsActionViewExpanded -> u
    android.view.ContextMenu$ContextMenuInfo mMenuInfo -> v
    java.lang.String sPrependShortcutLabel -> w
    java.lang.String sEnterShortcutLabel -> x
    java.lang.String sDeleteShortcutLabel -> y
    java.lang.String sSpaceShortcutLabel -> z
    boolean invoke() -> a
    boolean isEnabled() -> isEnabled
    android.view.MenuItem setEnabled(boolean) -> setEnabled
    int getGroupId() -> getGroupId
    int getItemId() -> getItemId
    int getOrder() -> getOrder
    int getOrdering() -> b
    android.content.Intent getIntent() -> getIntent
    android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    char getNumericShortcut() -> getNumericShortcut
    android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    android.view.MenuItem setShortcut(char,char) -> setShortcut
    char getShortcut() -> c
    java.lang.String getShortcutLabel() -> d
    boolean shouldShowShortcut() -> e
    android.view.SubMenu getSubMenu() -> getSubMenu
    boolean hasSubMenu() -> hasSubMenu
    void setSubMenu(android.support.v7.internal.view.menu.SubMenuBuilder) -> a
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getTitleForItemView(android.support.v7.internal.view.menu.MenuView$ItemView) -> a
    android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    android.view.MenuItem setTitle(int) -> setTitle
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    android.graphics.drawable.Drawable getIcon() -> getIcon
    android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.view.MenuItem setIcon(int) -> setIcon
    boolean isCheckable() -> isCheckable
    android.view.MenuItem setCheckable(boolean) -> setCheckable
    void setExclusiveCheckable(boolean) -> a
    boolean isExclusiveCheckable() -> f
    boolean isChecked() -> isChecked
    android.view.MenuItem setChecked(boolean) -> setChecked
    void setCheckedInt(boolean) -> b
    boolean isVisible() -> isVisible
    boolean setVisibleInt(boolean) -> c
    android.view.MenuItem setVisible(boolean) -> setVisible
    android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    java.lang.String toString() -> toString
    void setMenuInfo(android.view.ContextMenu$ContextMenuInfo) -> a
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    void actionFormatChanged() -> g
    boolean shouldShowIcon() -> h
    boolean isActionButton() -> i
    boolean requestsActionButton() -> j
    boolean requiresActionButton() -> k
    void setIsActionButton(boolean) -> d
    boolean showsTextAsAction() -> l
    void setShowAsAction(int) -> setShowAsAction
    android.support.v4.internal.view.SupportMenuItem setActionView(android.view.View) -> a
    android.support.v4.internal.view.SupportMenuItem setActionView(int) -> a
    android.view.View getActionView() -> getActionView
    android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    android.view.ActionProvider getActionProvider() -> getActionProvider
    android.support.v4.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> setSupportActionProvider
    android.support.v4.internal.view.SupportMenuItem setShowAsActionFlags(int) -> b
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    android.support.v4.internal.view.SupportMenuItem setSupportOnActionExpandListener(android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setSupportOnActionExpandListener
    boolean hasCollapsibleActionView() -> m
    void setActionViewExpanded(boolean) -> e
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    android.support.v7.internal.view.menu.MenuBuilder access$000(android.support.v7.internal.view.menu.MenuItemImpl) -> a
android.support.v7.internal.view.menu.MenuItemImpl$1 -> android.support.v7.internal.view.menu.r:
    android.support.v7.internal.view.menu.MenuItemImpl this$0 -> a
    void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
android.support.v7.internal.view.menu.MenuItemWrapperICS -> android.support.v7.internal.view.menu.MenuItemWrapperICS:
    boolean mEmulateProviderVisibilityOverride -> b
    boolean mLastRequestVisible -> c
    java.lang.reflect.Method mSetExclusiveCheckableMethod -> d
    int getItemId() -> getItemId
    int getGroupId() -> getGroupId
    int getOrder() -> getOrder
    android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    android.view.MenuItem setTitle(int) -> setTitle
    java.lang.CharSequence getTitle() -> getTitle
    android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.view.MenuItem setIcon(int) -> setIcon
    android.graphics.drawable.Drawable getIcon() -> getIcon
    android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    android.content.Intent getIntent() -> getIntent
    android.view.MenuItem setShortcut(char,char) -> setShortcut
    android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    char getNumericShortcut() -> getNumericShortcut
    android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    android.view.MenuItem setCheckable(boolean) -> setCheckable
    boolean isCheckable() -> isCheckable
    android.view.MenuItem setChecked(boolean) -> setChecked
    boolean isChecked() -> isChecked
    android.view.MenuItem setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    android.view.MenuItem setEnabled(boolean) -> setEnabled
    boolean isEnabled() -> isEnabled
    boolean hasSubMenu() -> hasSubMenu
    android.view.SubMenu getSubMenu() -> getSubMenu
    android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    void setShowAsAction(int) -> setShowAsAction
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.View getActionView() -> getActionView
    android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    android.view.ActionProvider getActionProvider() -> getActionProvider
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    android.support.v4.internal.view.SupportMenuItem setSupportOnActionExpandListener(android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setSupportOnActionExpandListener
    android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> setSupportActionProvider
    android.support.v4.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    void setExclusiveCheckable(boolean) -> a
    android.support.v7.internal.view.menu.MenuItemWrapperICS$ActionProviderWrapper createActionProviderWrapper(android.support.v4.view.ActionProvider) -> a
    boolean checkActionProviderOverrideVisibility() -> b
    android.view.MenuItem wrappedSetVisible(boolean) -> b
    boolean access$000(android.support.v7.internal.view.menu.MenuItemWrapperICS) -> a
    boolean access$100(android.support.v7.internal.view.menu.MenuItemWrapperICS) -> b
android.support.v7.internal.view.menu.MenuItemWrapperICS$ActionProviderWrapper -> android.support.v7.internal.view.menu.s:
    android.support.v4.view.ActionProvider mInner -> a
    android.support.v7.internal.view.menu.MenuItemWrapperICS this$0 -> b
    android.view.View onCreateActionView() -> onCreateActionView
    boolean onPerformDefaultAction() -> onPerformDefaultAction
    boolean hasSubMenu() -> hasSubMenu
    void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
android.support.v7.internal.view.menu.MenuItemWrapperICS$ActionProviderWrapper$1 -> android.support.v7.internal.view.menu.t:
    android.support.v7.internal.view.menu.MenuItemWrapperICS val$this$0 -> a
    android.support.v7.internal.view.menu.MenuItemWrapperICS$ActionProviderWrapper this$1 -> b
    void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
android.support.v7.internal.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper -> android.support.v7.internal.view.menu.u:
    android.support.v7.view.CollapsibleActionView mWrappedView -> a
    void onActionViewExpanded() -> onActionViewExpanded
    void onActionViewCollapsed() -> onActionViewCollapsed
    android.view.View getWrappedView() -> a
android.support.v7.internal.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper -> android.support.v7.internal.view.menu.v:
    android.support.v7.internal.view.menu.MenuItemWrapperICS this$0 -> b
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v7.internal.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper -> android.support.v7.internal.view.menu.w:
    android.support.v7.internal.view.menu.MenuItemWrapperICS this$0 -> b
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
android.support.v7.internal.view.menu.MenuItemWrapperJB -> android.support.v7.internal.view.menu.x:
    android.support.v7.internal.view.menu.MenuItemWrapperICS$ActionProviderWrapper createActionProviderWrapper(android.support.v4.view.ActionProvider) -> a
android.support.v7.internal.view.menu.MenuItemWrapperJB$ActionProviderWrapperJB -> android.support.v7.internal.view.menu.y:
    android.view.ActionProvider$VisibilityListener mListener -> c
    android.support.v7.internal.view.menu.MenuItemWrapperJB this$0 -> d
    android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    boolean overridesItemVisibility() -> overridesItemVisibility
    boolean isVisible() -> isVisible
    void refreshVisibility() -> refreshVisibility
    void setVisibilityListener(android.view.ActionProvider$VisibilityListener) -> setVisibilityListener
    void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
android.support.v7.internal.view.menu.MenuPopupHelper -> android.support.v7.internal.view.menu.z:
    int ITEM_LAYOUT -> b
    android.content.Context mContext -> a
    android.view.LayoutInflater mInflater -> d
    android.support.v7.internal.widget.ListPopupWindow mPopup -> e
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> f
    int mPopupMaxWidth -> g
    android.view.View mAnchorView -> h
    boolean mOverflowOnly -> i
    android.view.ViewTreeObserver mTreeObserver -> j
    android.support.v7.internal.view.menu.MenuPopupHelper$MenuAdapter mAdapter -> k
    android.support.v7.internal.view.menu.MenuPresenter$Callback mPresenterCallback -> l
    boolean mForceShowIcon -> c
    android.view.ViewGroup mMeasureParent -> m
    void setForceShowIcon(boolean) -> a
    boolean tryShow() -> a
    void dismiss() -> b
    void onDismiss() -> onDismiss
    boolean isShowing() -> c
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    int measureContentWidth(android.widget.ListAdapter) -> a
    void onGlobalLayout() -> onGlobalLayout
    void initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder) -> a
    void updateMenuView(boolean) -> b
    void setCallback(android.support.v7.internal.view.menu.MenuPresenter$Callback) -> a
    boolean onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder) -> a
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    boolean flagActionItems() -> g
    boolean expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> a
    boolean collapseItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> b
    boolean access$100(android.support.v7.internal.view.menu.MenuPopupHelper) -> a
    android.view.LayoutInflater access$200(android.support.v7.internal.view.menu.MenuPopupHelper) -> b
    android.support.v7.internal.view.menu.MenuBuilder access$300(android.support.v7.internal.view.menu.MenuPopupHelper) -> c
android.support.v7.internal.view.menu.MenuPopupHelper$MenuAdapter -> android.support.v7.internal.view.menu.aa:
    android.support.v7.internal.view.menu.MenuBuilder mAdapterMenu -> b
    int mExpandedIndex -> c
    android.support.v7.internal.view.menu.MenuPopupHelper this$0 -> a
    int getCount() -> getCount
    android.support.v7.internal.view.menu.MenuItemImpl getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void findExpandedIndex() -> a
    void notifyDataSetChanged() -> notifyDataSetChanged
    java.lang.Object getItem(int) -> getItem
    android.support.v7.internal.view.menu.MenuBuilder access$000(android.support.v7.internal.view.menu.MenuPopupHelper$MenuAdapter) -> a
android.support.v7.internal.view.menu.MenuPresenter -> android.support.v7.internal.view.menu.ab:
    void initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder) -> a
    void updateMenuView(boolean) -> b
    boolean onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder) -> a
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    boolean flagActionItems() -> g
    boolean expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> a
    boolean collapseItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> b
android.support.v7.internal.view.menu.MenuPresenter$Callback -> android.support.v7.internal.view.menu.ac:
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    boolean onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder) -> b
android.support.v7.internal.view.menu.MenuView -> android.support.v7.internal.view.menu.ad:
    void initialize(android.support.v7.internal.view.menu.MenuBuilder) -> a
android.support.v7.internal.view.menu.MenuView$ItemView -> android.support.v7.internal.view.menu.ae:
    void initialize(android.support.v7.internal.view.menu.MenuItemImpl,int) -> a
    android.support.v7.internal.view.menu.MenuItemImpl getItemData() -> getItemData
    boolean prefersCondensedTitle() -> a
android.support.v7.internal.view.menu.MenuWrapperFactory -> android.support.v7.internal.view.menu.af:
    android.view.Menu createMenuWrapper(android.view.Menu) -> a
    android.view.MenuItem createMenuItemWrapper(android.view.MenuItem) -> a
    android.support.v4.internal.view.SupportSubMenu createSupportSubMenuWrapper(android.view.SubMenu) -> a
    android.support.v4.internal.view.SupportMenuItem createSupportMenuItemWrapper(android.view.MenuItem) -> b
android.support.v7.internal.view.menu.MenuWrapperICS -> android.support.v7.internal.view.menu.ag:
    android.view.MenuItem add(java.lang.CharSequence) -> add
    android.view.MenuItem add(int) -> add
    android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    android.view.MenuItem add(int,int,int,int) -> add
    android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    android.view.SubMenu addSubMenu(int) -> addSubMenu
    android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    void removeItem(int) -> removeItem
    void removeGroup(int) -> removeGroup
    void clear() -> clear
    void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    void setGroupVisible(int,boolean) -> setGroupVisible
    void setGroupEnabled(int,boolean) -> setGroupEnabled
    boolean hasVisibleItems() -> hasVisibleItems
    android.view.MenuItem findItem(int) -> findItem
    int size() -> size
    android.view.MenuItem getItem(int) -> getItem
    void close() -> close
    boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    boolean performIdentifierAction(int,int) -> performIdentifierAction
    void setQwertyMode(boolean) -> setQwertyMode
android.support.v7.internal.view.menu.SubMenuBuilder -> android.support.v7.internal.view.menu.SubMenuBuilder:
    android.support.v7.internal.view.menu.MenuBuilder mParentMenu -> d
    android.support.v7.internal.view.menu.MenuItemImpl mItem -> e
    void setQwertyMode(boolean) -> setQwertyMode
    boolean isQwertyMode() -> b
    boolean isShortcutsVisible() -> c
    android.view.Menu getParentMenu() -> s
    android.view.MenuItem getItem() -> getItem
    void setCallback(android.support.v7.internal.view.menu.MenuBuilder$Callback) -> a
    android.support.v7.internal.view.menu.MenuBuilder getRootMenu() -> p
    boolean dispatchMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem) -> a
    android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.view.SubMenu setIcon(int) -> setIcon
    android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    void clearHeader() -> clearHeader
    boolean expandItemActionView(android.support.v7.internal.view.menu.MenuItemImpl) -> c
    boolean collapseItemActionView(android.support.v7.internal.view.menu.MenuItemImpl) -> d
    java.lang.String getActionViewStatesKey() -> a
android.support.v7.internal.view.menu.SubMenuWrapperICS -> android.support.v7.internal.view.menu.ah:
    android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    void clearHeader() -> clearHeader
    android.view.SubMenu setIcon(int) -> setIcon
    android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.view.MenuItem getItem() -> getItem
android.support.v7.internal.widget.AbsActionBarView -> android.support.v7.internal.widget.a:
    android.support.v7.internal.view.menu.ActionMenuView mMenuView -> a
    android.support.v7.internal.view.menu.ActionMenuPresenter mActionMenuPresenter -> b
    android.support.v7.internal.widget.ActionBarContainer mSplitView -> c
    boolean mSplitActionBar -> d
    boolean mSplitWhenNarrow -> e
    int mContentHeight -> f
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setSplitActionBar(boolean) -> setSplitActionBar
    void setSplitWhenNarrow(boolean) -> setSplitWhenNarrow
    void setContentHeight(int) -> setContentHeight
    int getContentHeight() -> getContentHeight
    void setSplitView(android.support.v7.internal.widget.ActionBarContainer) -> setSplitView
    int getAnimatedVisibility() -> getAnimatedVisibility
    void setVisibility(int) -> setVisibility
    boolean showOverflowMenu() -> a
    void postShowOverflowMenu() -> b
    boolean hideOverflowMenu() -> c
    boolean isOverflowMenuShowing() -> d
    boolean isOverflowReserved() -> e
    void dismissPopupMenus() -> f
    int measureChildView(android.view.View,int,int,int) -> a
    int positionChild(android.view.View,int,int,int) -> b
    int positionChildInverse(android.view.View,int,int,int) -> c
android.support.v7.internal.widget.AbsActionBarView$1 -> android.support.v7.internal.widget.b:
    android.support.v7.internal.widget.AbsActionBarView this$0 -> a
    void run() -> run
android.support.v7.internal.widget.AbsSpinnerICS -> android.support.v7.internal.widget.AbsSpinnerICS:
    android.widget.SpinnerAdapter mAdapter -> a
    int mHeightMeasureSpec -> b
    int mWidthMeasureSpec -> c
    boolean mBlockLayoutRequests -> d
    int mSelectionLeftPadding -> e
    int mSelectionTopPadding -> f
    int mSelectionRightPadding -> g
    int mSelectionBottomPadding -> h
    android.graphics.Rect mSpinnerPadding -> i
    android.support.v7.internal.widget.AbsSpinnerICS$RecycleBin mRecycler -> j
    android.database.DataSetObserver mDataSetObserver -> E
    void initAbsSpinner() -> o
    void setAdapter(android.widget.SpinnerAdapter) -> a
    void resetList() -> a
    void onMeasure(int,int) -> onMeasure
    int getChildHeight(android.view.View) -> a
    int getChildWidth(android.view.View) -> b
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    void recycleAllViews() -> b
    void setSelection(int) -> a
    android.view.View getSelectedView() -> c
    void requestLayout() -> requestLayout
    android.widget.SpinnerAdapter getAdapter() -> d
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.widget.Adapter getAdapter() -> e
    void access$100(android.support.v7.internal.widget.AbsSpinnerICS,android.view.View,boolean) -> a
android.support.v7.internal.widget.AbsSpinnerICS$1 -> android.support.v7.internal.widget.c:
android.support.v7.internal.widget.AbsSpinnerICS$RecycleBin -> android.support.v7.internal.widget.d:
    android.util.SparseArray mScrapHeap -> b
    android.support.v7.internal.widget.AbsSpinnerICS this$0 -> a
    void put(int,android.view.View) -> a
    android.view.View get(int) -> a
    void clear() -> a
android.support.v7.internal.widget.AbsSpinnerICS$SavedState -> android.support.v7.internal.widget.AbsSpinnerICS$SavedState:
    long selectedId -> a
    int position -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v7.internal.widget.AbsSpinnerICS$SavedState$1 -> android.support.v7.internal.widget.e:
    android.support.v7.internal.widget.AbsSpinnerICS$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v7.internal.widget.AbsSpinnerICS$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v7.internal.widget.ActionBarContainer -> android.support.v7.internal.widget.ActionBarContainer:
    boolean mIsTransitioning -> a
    android.view.View mTabContainer -> b
    android.support.v7.internal.widget.ActionBarView mActionBarView -> c
    android.graphics.drawable.Drawable mBackground -> d
    android.graphics.drawable.Drawable mStackedBackground -> e
    android.graphics.drawable.Drawable mSplitBackground -> f
    boolean mIsSplit -> g
    boolean mIsStacked -> h
    void onFinishInflate() -> onFinishInflate
    void setPrimaryBackground(android.graphics.drawable.Drawable) -> setPrimaryBackground
    void setStackedBackground(android.graphics.drawable.Drawable) -> setStackedBackground
    void setSplitBackground(android.graphics.drawable.Drawable) -> setSplitBackground
    void setVisibility(int) -> setVisibility
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    void setTransitioning(boolean) -> setTransitioning
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    void setTabContainer(android.support.v7.internal.widget.ScrollingTabContainerView) -> setTabContainer
    android.view.View getTabContainer() -> getTabContainer
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void drawBackgroundDrawable(android.graphics.drawable.Drawable,android.graphics.Canvas) -> a
android.support.v7.internal.widget.ActionBarContextView -> android.support.v7.internal.widget.ActionBarContextView:
    java.lang.CharSequence mTitle -> g
    java.lang.CharSequence mSubtitle -> h
    android.view.View mClose -> i
    android.view.View mCustomView -> j
    android.widget.LinearLayout mTitleLayout -> k
    android.widget.TextView mTitleView -> l
    android.widget.TextView mSubtitleView -> m
    int mTitleStyleRes -> n
    int mSubtitleStyleRes -> o
    android.graphics.drawable.Drawable mSplitBackground -> p
    boolean mTitleOptional -> q
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setSplitActionBar(boolean) -> setSplitActionBar
    void setContentHeight(int) -> setContentHeight
    void setCustomView(android.view.View) -> setCustomView
    void setTitle(java.lang.CharSequence) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    void initTitle() -> g
    boolean showOverflowMenu() -> a
    boolean hideOverflowMenu() -> c
    boolean isOverflowMenuShowing() -> d
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void setTitleOptional(boolean) -> setTitleOptional
    void dismissPopupMenus() -> f
    boolean isOverflowReserved() -> e
    void postShowOverflowMenu() -> b
    void setVisibility(int) -> setVisibility
    int getAnimatedVisibility() -> getAnimatedVisibility
    void setSplitView(android.support.v7.internal.widget.ActionBarContainer) -> setSplitView
    int getContentHeight() -> getContentHeight
    void setSplitWhenNarrow(boolean) -> setSplitWhenNarrow
android.support.v7.internal.widget.ActionBarOverlayLayout -> android.support.v7.internal.widget.ActionBarOverlayLayout:
    int mActionBarHeight -> b
    android.support.v7.app.ActionBar mActionBar -> c
    android.graphics.Rect mZeroRect -> d
    int[] mActionBarSizeAttr -> a
    void init(android.content.Context) -> a
    void setActionBar(android.support.v7.app.ActionBar) -> setActionBar
android.support.v7.internal.widget.ActionBarView -> android.support.v7.internal.widget.ActionBarView:
    int mNavigationMode -> i
    int mDisplayOptions -> j
    java.lang.CharSequence mTitle -> k
    java.lang.CharSequence mSubtitle -> l
    android.graphics.drawable.Drawable mIcon -> m
    android.graphics.drawable.Drawable mLogo -> n
    android.content.Context mContext -> o
    android.support.v7.internal.widget.ActionBarView$HomeView mHomeLayout -> p
    android.support.v7.internal.widget.ActionBarView$HomeView mExpandedHomeLayout -> q
    android.widget.LinearLayout mTitleLayout -> r
    android.widget.TextView mTitleView -> s
    android.widget.TextView mSubtitleView -> t
    android.view.View mTitleUpView -> u
    android.support.v7.internal.widget.SpinnerICS mSpinner -> v
    android.widget.LinearLayout mListNavLayout -> w
    android.support.v7.internal.widget.ScrollingTabContainerView mTabScrollView -> x
    android.view.View mCustomNavView -> y
    android.support.v7.internal.widget.ProgressBarICS mProgressView -> z
    android.support.v7.internal.widget.ProgressBarICS mIndeterminateProgressView -> A
    int mProgressBarPadding -> B
    int mItemPadding -> C
    int mTitleStyleRes -> D
    int mSubtitleStyleRes -> E
    int mProgressStyle -> F
    int mIndeterminateProgressStyle -> G
    boolean mUserTitle -> H
    boolean mIncludeTabs -> I
    boolean mIsCollapsable -> J
    boolean mIsCollapsed -> K
    android.support.v7.internal.view.menu.MenuBuilder mOptionsMenu -> L
    android.support.v7.internal.widget.ActionBarContextView mContextView -> M
    android.support.v7.internal.view.menu.ActionMenuItem mLogoNavItem -> N
    android.widget.SpinnerAdapter mSpinnerAdapter -> O
    android.support.v7.app.ActionBar$OnNavigationListener mCallback -> P
    java.lang.Runnable mTabSelector -> Q
    android.support.v7.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter mExpandedMenuPresenter -> R
    android.view.View mExpandedActionView -> g
    android.view.Window$Callback mWindowCallback -> h
    android.support.v7.internal.widget.AdapterViewICS$OnItemSelectedListener mNavItemSelectedListener -> S
    android.view.View$OnClickListener mExpandedActionViewUpListener -> T
    android.view.View$OnClickListener mUpClickListener -> U
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    void initProgress() -> g
    void initIndeterminateProgress() -> h
    void setSplitActionBar(boolean) -> setSplitActionBar
    boolean isSplitActionBar() -> i
    void setEmbeddedTabView(android.support.v7.internal.widget.ScrollingTabContainerView) -> setEmbeddedTabView
    void setCallback(android.support.v7.app.ActionBar$OnNavigationListener) -> setCallback
    void setMenu(android.support.v4.internal.view.SupportMenu,android.support.v7.internal.view.menu.MenuPresenter$Callback) -> a
    void configPresenters(android.support.v7.internal.view.menu.MenuBuilder) -> a
    boolean hasExpandedActionView() -> j
    void collapseActionView() -> k
    void setCustomNavigationView(android.view.View) -> setCustomNavigationView
    java.lang.CharSequence getTitle() -> getTitle
    void setTitle(java.lang.CharSequence) -> setTitle
    void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    void setTitleImpl(java.lang.CharSequence) -> setTitleImpl
    java.lang.CharSequence getSubtitle() -> getSubtitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    void setDisplayOptions(int) -> setDisplayOptions
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void setIcon(int) -> setIcon
    void setLogo(android.graphics.drawable.Drawable) -> setLogo
    void setLogo(int) -> setLogo
    void setNavigationMode(int) -> setNavigationMode
    void setDropdownAdapter(android.widget.SpinnerAdapter) -> setDropdownAdapter
    android.widget.SpinnerAdapter getDropdownAdapter() -> getDropdownAdapter
    void setDropdownSelectedPosition(int) -> setDropdownSelectedPosition
    int getDropdownSelectedPosition() -> getDropdownSelectedPosition
    android.view.View getCustomNavigationView() -> getCustomNavigationView
    int getNavigationMode() -> getNavigationMode
    int getDisplayOptions() -> getDisplayOptions
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    void onFinishInflate() -> onFinishInflate
    void initTitle() -> m
    void setContextView(android.support.v7.internal.widget.ActionBarContextView) -> setContextView
    void setCollapsable(boolean) -> setCollapsable
    boolean isCollapsed() -> l
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> setHomeAsUpIndicator
    void setHomeAsUpIndicator(int) -> setHomeAsUpIndicator
    void dismissPopupMenus() -> f
    boolean isOverflowReserved() -> e
    boolean isOverflowMenuShowing() -> d
    boolean hideOverflowMenu() -> c
    void postShowOverflowMenu() -> b
    boolean showOverflowMenu() -> a
    void setVisibility(int) -> setVisibility
    int getAnimatedVisibility() -> getAnimatedVisibility
    void setSplitView(android.support.v7.internal.widget.ActionBarContainer) -> setSplitView
    int getContentHeight() -> getContentHeight
    void setContentHeight(int) -> setContentHeight
    void setSplitWhenNarrow(boolean) -> setSplitWhenNarrow
    android.support.v7.app.ActionBar$OnNavigationListener access$000(android.support.v7.internal.widget.ActionBarView) -> a
    android.support.v7.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter access$100(android.support.v7.internal.widget.ActionBarView) -> b
    android.support.v7.internal.view.menu.ActionMenuItem access$200(android.support.v7.internal.widget.ActionBarView) -> c
    android.graphics.drawable.Drawable access$500(android.support.v7.internal.widget.ActionBarView) -> d
    android.support.v7.internal.widget.ActionBarView$HomeView access$600(android.support.v7.internal.widget.ActionBarView) -> e
    android.support.v7.internal.widget.ActionBarView$HomeView access$700(android.support.v7.internal.widget.ActionBarView) -> f
    android.widget.LinearLayout access$800(android.support.v7.internal.widget.ActionBarView) -> g
    android.support.v7.internal.widget.ScrollingTabContainerView access$900(android.support.v7.internal.widget.ActionBarView) -> h
    android.support.v7.internal.widget.SpinnerICS access$1000(android.support.v7.internal.widget.ActionBarView) -> i
    android.view.View access$1100(android.support.v7.internal.widget.ActionBarView) -> j
    int access$1200(android.support.v7.internal.widget.ActionBarView) -> k
    void access$1300(android.support.v7.internal.widget.ActionBarView) -> l
    int access$1400(android.support.v7.internal.widget.ActionBarView) -> m
android.support.v7.internal.widget.ActionBarView$1 -> android.support.v7.internal.widget.f:
    android.support.v7.internal.widget.ActionBarView this$0 -> a
    void onItemSelected(android.support.v7.internal.widget.AdapterViewICS,android.view.View,int,long) -> a
    void onNothingSelected(android.support.v7.internal.widget.AdapterViewICS) -> a
android.support.v7.internal.widget.ActionBarView$2 -> android.support.v7.internal.widget.g:
    android.support.v7.internal.widget.ActionBarView this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v7.internal.widget.ActionBarView$3 -> android.support.v7.internal.widget.h:
    android.support.v7.internal.widget.ActionBarView this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v7.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter -> android.support.v7.internal.widget.i:
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> a
    android.support.v7.internal.view.menu.MenuItemImpl mCurrentExpandedItem -> b
    android.support.v7.internal.widget.ActionBarView this$0 -> c
    void initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder) -> a
    void updateMenuView(boolean) -> b
    boolean onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder) -> a
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    boolean flagActionItems() -> g
    boolean expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> a
    boolean collapseItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> b
android.support.v7.internal.widget.ActionBarView$HomeView -> android.support.v7.internal.widget.ActionBarView$HomeView:
    android.widget.ImageView mUpView -> a
    android.widget.ImageView mIconView -> b
    int mUpWidth -> c
    int mUpIndicatorRes -> d
    android.graphics.drawable.Drawable mDefaultUpIndicator -> e
    void setUp(boolean) -> a
    void setIcon(android.graphics.drawable.Drawable) -> a
    void setUpIndicator(android.graphics.drawable.Drawable) -> b
    void setUpIndicator(int) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onFinishInflate() -> onFinishInflate
    int getLeftOffset() -> a
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
android.support.v7.internal.widget.ActionBarView$SavedState -> android.support.v7.internal.widget.ActionBarView$SavedState:
    int expandedMenuItemId -> a
    boolean isOverflowOpen -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v7.internal.widget.ActionBarView$SavedState$1 -> android.support.v7.internal.widget.j:
    android.support.v7.internal.widget.ActionBarView$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v7.internal.widget.ActionBarView$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v7.internal.widget.ActivityChooserModel -> android.support.v7.internal.widget.k:
    java.lang.String LOG_TAG -> a
    java.lang.Object sRegistryLock -> b
    java.util.Map sDataModelRegistry -> c
    java.lang.Object mInstanceLock -> d
    java.util.List mActivities -> e
    java.util.List mHistoricalRecords -> f
    android.content.Context mContext -> g
    java.lang.String mHistoryFileName -> h
    android.content.Intent mIntent -> i
    android.support.v7.internal.widget.ActivityChooserModel$ActivitySorter mActivitySorter -> j
    int mHistoryMaxSize -> k
    boolean mCanReadHistoricalData -> l
    boolean mReadShareHistoryCalled -> m
    boolean mHistoricalRecordsChanged -> n
    boolean mReloadActivities -> o
    android.support.v7.internal.widget.ActivityChooserModel$OnChooseActivityListener mActivityChoserModelPolicy -> p
    android.support.v7.internal.widget.ActivityChooserModel get(android.content.Context,java.lang.String) -> a
    int getActivityCount() -> a
    android.content.pm.ResolveInfo getActivity(int) -> a
    int getActivityIndex(android.content.pm.ResolveInfo) -> a
    android.content.Intent chooseActivity(int) -> b
    android.content.pm.ResolveInfo getDefaultActivity() -> b
    void setDefaultActivity(int) -> c
    void persistHistoricalDataIfNeeded() -> e
    void executePersistHistoryAsyncTaskBase() -> f
    void executePersistHistoryAsyncTaskSDK11() -> g
    int getHistorySize() -> c
    void ensureConsistentState() -> h
    boolean sortActivitiesIfNeeded() -> i
    boolean loadActivitiesIfNeeded() -> j
    boolean readHistoricalDataIfNeeded() -> k
    boolean addHisoricalRecord(android.support.v7.internal.widget.ActivityChooserModel$HistoricalRecord) -> a
    void pruneExcessiveHistoricalRecordsIfNeeded() -> l
    void readHistoricalDataImpl() -> m
    android.content.Context access$200(android.support.v7.internal.widget.ActivityChooserModel) -> a
    java.lang.String access$300() -> d
    java.lang.String access$400(android.support.v7.internal.widget.ActivityChooserModel) -> b
    boolean access$502(android.support.v7.internal.widget.ActivityChooserModel,boolean) -> a
android.support.v7.internal.widget.ActivityChooserModel$1 -> android.support.v7.internal.widget.l:
android.support.v7.internal.widget.ActivityChooserModel$ActivityResolveInfo -> android.support.v7.internal.widget.m:
    android.content.pm.ResolveInfo resolveInfo -> a
    float weight -> b
    android.support.v7.internal.widget.ActivityChooserModel this$0 -> c
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    int compareTo(android.support.v7.internal.widget.ActivityChooserModel$ActivityResolveInfo) -> a
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
android.support.v7.internal.widget.ActivityChooserModel$ActivitySorter -> android.support.v7.internal.widget.n:
    void sort(android.content.Intent,java.util.List,java.util.List) -> a
android.support.v7.internal.widget.ActivityChooserModel$DefaultSorter -> android.support.v7.internal.widget.o:
    java.util.Map mPackageNameToActivityMap -> b
    android.support.v7.internal.widget.ActivityChooserModel this$0 -> a
    void sort(android.content.Intent,java.util.List,java.util.List) -> a
android.support.v7.internal.widget.ActivityChooserModel$HistoricalRecord -> android.support.v7.internal.widget.p:
    android.content.ComponentName activity -> a
    long time -> b
    float weight -> c
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
android.support.v7.internal.widget.ActivityChooserModel$OnChooseActivityListener -> android.support.v7.internal.widget.q:
    boolean onChooseActivity(android.support.v7.internal.widget.ActivityChooserModel,android.content.Intent) -> a
android.support.v7.internal.widget.ActivityChooserModel$PersistHistoryAsyncTask -> android.support.v7.internal.widget.r:
    android.support.v7.internal.widget.ActivityChooserModel this$0 -> a
    java.lang.Void doInBackground(java.lang.Object[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
android.support.v7.internal.widget.ActivityChooserView -> android.support.v7.internal.widget.ActivityChooserView:
    android.support.v7.internal.widget.ActivityChooserView$ActivityChooserViewAdapter mAdapter -> b
    android.support.v7.internal.widget.ActivityChooserView$Callbacks mCallbacks -> c
    android.widget.LinearLayout mActivityChooserContent -> d
    android.graphics.drawable.Drawable mActivityChooserContentBackground -> e
    android.widget.FrameLayout mExpandActivityOverflowButton -> f
    android.widget.ImageView mExpandActivityOverflowButtonImage -> g
    android.widget.FrameLayout mDefaultActivityButton -> h
    android.widget.ImageView mDefaultActivityButtonImage -> i
    int mListPopupMaxWidth -> j
    android.support.v4.view.ActionProvider mProvider -> a
    android.database.DataSetObserver mModelDataSetOberver -> k
    android.view.ViewTreeObserver$OnGlobalLayoutListener mOnGlobalLayoutListener -> l
    android.support.v7.internal.widget.ListPopupWindow mListPopupWindow -> m
    android.widget.PopupWindow$OnDismissListener mOnDismissListener -> n
    boolean mIsSelectingDefaultActivity -> o
    int mInitialActivityCount -> p
    boolean mIsAttachedToWindow -> q
    int mDefaultActionButtonContentDescription -> r
    void setActivityChooserModel(android.support.v7.internal.widget.ActivityChooserModel) -> setActivityChooserModel
    void setExpandActivityOverflowButtonDrawable(android.graphics.drawable.Drawable) -> setExpandActivityOverflowButtonDrawable
    void setExpandActivityOverflowButtonContentDescription(int) -> setExpandActivityOverflowButtonContentDescription
    void setProvider(android.support.v4.view.ActionProvider) -> setProvider
    boolean showPopup() -> a
    void showPopupUnchecked(int) -> a
    boolean dismissPopup() -> b
    boolean isShowingPopup() -> c
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    android.support.v7.internal.widget.ActivityChooserModel getDataModel() -> getDataModel
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    void setInitialActivityCount(int) -> setInitialActivityCount
    void setDefaultActionButtonContentDescription(int) -> setDefaultActionButtonContentDescription
    android.support.v7.internal.widget.ListPopupWindow getListPopupWindow() -> getListPopupWindow
    void updateAppearance() -> d
    android.support.v7.internal.widget.ActivityChooserView$ActivityChooserViewAdapter access$000(android.support.v7.internal.widget.ActivityChooserView) -> a
    android.support.v7.internal.widget.ListPopupWindow access$100(android.support.v7.internal.widget.ActivityChooserView) -> b
    void access$400(android.support.v7.internal.widget.ActivityChooserView) -> c
    void access$500(android.support.v7.internal.widget.ActivityChooserView,int) -> a
    boolean access$600(android.support.v7.internal.widget.ActivityChooserView) -> d
    android.widget.FrameLayout access$700(android.support.v7.internal.widget.ActivityChooserView) -> e
    android.widget.FrameLayout access$800(android.support.v7.internal.widget.ActivityChooserView) -> f
    boolean access$602(android.support.v7.internal.widget.ActivityChooserView,boolean) -> a
    int access$900(android.support.v7.internal.widget.ActivityChooserView) -> g
    android.widget.PopupWindow$OnDismissListener access$1000(android.support.v7.internal.widget.ActivityChooserView) -> h
    android.database.DataSetObserver access$1100(android.support.v7.internal.widget.ActivityChooserView) -> i
android.support.v7.internal.widget.ActivityChooserView$1 -> android.support.v7.internal.widget.s:
    android.support.v7.internal.widget.ActivityChooserView this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v7.internal.widget.ActivityChooserView$2 -> android.support.v7.internal.widget.t:
    android.support.v7.internal.widget.ActivityChooserView this$0 -> a
    void onGlobalLayout() -> onGlobalLayout
android.support.v7.internal.widget.ActivityChooserView$3 -> android.support.v7.internal.widget.u:
    android.support.v7.internal.widget.ActivityChooserView this$0 -> a
    void onChanged() -> onChanged
android.support.v7.internal.widget.ActivityChooserView$ActivityChooserViewAdapter -> android.support.v7.internal.widget.v:
    android.support.v7.internal.widget.ActivityChooserModel mDataModel -> b
    int mMaxActivityCount -> c
    boolean mShowDefaultActivity -> d
    boolean mHighlightDefaultActivity -> e
    boolean mShowFooterView -> f
    android.support.v7.internal.widget.ActivityChooserView this$0 -> a
    void setDataModel(android.support.v7.internal.widget.ActivityChooserModel) -> a
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int measureContentWidth() -> a
    void setMaxActivityCount(int) -> a
    android.content.pm.ResolveInfo getDefaultActivity() -> b
    void setShowFooterView(boolean) -> a
    int getActivityCount() -> c
    int getHistorySize() -> d
    android.support.v7.internal.widget.ActivityChooserModel getDataModel() -> e
    void setShowDefaultActivity(boolean,boolean) -> a
    boolean getShowDefaultActivity() -> f
android.support.v7.internal.widget.ActivityChooserView$Callbacks -> android.support.v7.internal.widget.w:
    android.support.v7.internal.widget.ActivityChooserView this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onClick(android.view.View) -> onClick
    boolean onLongClick(android.view.View) -> onLongClick
    void onDismiss() -> onDismiss
    void notifyOnDismissListener() -> a
android.support.v7.internal.widget.AdapterViewICS -> android.support.v7.internal.widget.x:
    int mFirstPosition -> k
    int mSpecificTop -> l
    int mSyncPosition -> m
    long mSyncRowId -> n
    long mSyncHeight -> o
    boolean mNeedSync -> p
    int mSyncMode -> q
    int mLayoutHeight -> a
    boolean mInLayout -> r
    android.support.v7.internal.widget.AdapterViewICS$OnItemSelectedListener mOnItemSelectedListener -> s
    android.support.v7.internal.widget.AdapterViewICS$OnItemClickListener mOnItemClickListener -> t
    boolean mDataChanged -> u
    int mNextSelectedPosition -> v
    long mNextSelectedRowId -> w
    int mSelectedPosition -> x
    long mSelectedRowId -> y
    android.view.View mEmptyView -> b
    int mItemCount -> z
    int mOldItemCount -> A
    int mOldSelectedPosition -> B
    long mOldSelectedRowId -> C
    boolean mDesiredFocusableState -> c
    boolean mDesiredFocusableInTouchModeState -> d
    android.support.v7.internal.widget.AdapterViewICS$SelectionNotifier mSelectionNotifier -> e
    boolean mBlockLayoutRequests -> D
    void setOnItemClickListener(android.support.v7.internal.widget.AdapterViewICS$OnItemClickListener) -> a
    boolean performItemClick(android.view.View,int,long) -> a
    void setOnItemSelectedListener(android.support.v7.internal.widget.AdapterViewICS$OnItemSelectedListener) -> a
    android.widget.Adapter getAdapter() -> e
    void addView(android.view.View) -> addView
    void addView(android.view.View,int) -> addView
    void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    void removeViewAt(int) -> removeViewAt
    void removeAllViews() -> removeAllViews
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getSelectedItemPosition() -> f
    long getSelectedItemId() -> g
    android.view.View getSelectedView() -> c
    boolean isInFilterMode() -> h
    void setFocusable(boolean) -> setFocusable
    void setFocusableInTouchMode(boolean) -> setFocusableInTouchMode
    void checkFocus() -> i
    void updateEmptyStatus(boolean) -> a
    long getItemIdAtPosition(int) -> b
    void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    void onDetachedFromWindow() -> onDetachedFromWindow
    void selectionChanged() -> j
    void fireOnSelected() -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    boolean canAnimate() -> canAnimate
    void handleDataChanged() -> k
    void checkSelectionChanged() -> l
    int findSyncPosition() -> m
    int lookForSelectablePosition(int,boolean) -> a
    void setSelectedPositionInt(int) -> c
    void setNextSelectedPositionInt(int) -> d
    void rememberSyncState() -> n
    void access$000(android.support.v7.internal.widget.AdapterViewICS,android.os.Parcelable) -> a
    android.os.Parcelable access$100(android.support.v7.internal.widget.AdapterViewICS) -> a
    void access$200(android.support.v7.internal.widget.AdapterViewICS) -> b
android.support.v7.internal.widget.AdapterViewICS$1 -> android.support.v7.internal.widget.y:
android.support.v7.internal.widget.AdapterViewICS$AdapterDataSetObserver -> android.support.v7.internal.widget.z:
    android.os.Parcelable mInstanceState -> b
    android.support.v7.internal.widget.AdapterViewICS this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v7.internal.widget.AdapterViewICS$OnItemClickListener -> android.support.v7.internal.widget.aa:
    void onItemClick(android.support.v7.internal.widget.AdapterViewICS,android.view.View,int,long) -> a
android.support.v7.internal.widget.AdapterViewICS$OnItemClickListenerWrapper -> android.support.v7.internal.widget.ab:
    android.support.v7.internal.widget.AdapterViewICS$OnItemClickListener mWrappedListener -> b
    android.support.v7.internal.widget.AdapterViewICS this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v7.internal.widget.AdapterViewICS$OnItemSelectedListener -> android.support.v7.internal.widget.ac:
    void onItemSelected(android.support.v7.internal.widget.AdapterViewICS,android.view.View,int,long) -> a
    void onNothingSelected(android.support.v7.internal.widget.AdapterViewICS) -> a
android.support.v7.internal.widget.AdapterViewICS$SelectionNotifier -> android.support.v7.internal.widget.ad:
    android.support.v7.internal.widget.AdapterViewICS this$0 -> a
    void run() -> run
android.support.v7.internal.widget.CompatTextView -> android.support.v7.internal.widget.CompatTextView:
android.support.v7.internal.widget.CompatTextView$AllCapsTransformationMethod -> android.support.v7.internal.widget.ae:
    java.util.Locale mLocale -> a
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
    void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect) -> onFocusChanged
android.support.v7.internal.widget.LinearLayoutICS -> android.support.v7.internal.widget.LinearLayoutICS:
    android.graphics.drawable.Drawable mDivider -> a
    int mDividerWidth -> b
    int mDividerHeight -> c
    int mShowDividers -> d
    int mDividerPadding -> e
    int getSupportDividerWidth() -> getSupportDividerWidth
    void onDraw(android.graphics.Canvas) -> onDraw
    void measureChildWithMargins(android.view.View,int,int,int,int) -> measureChildWithMargins
    void drawSupportDividersVertical(android.graphics.Canvas) -> a
    void drawSupportDividersHorizontal(android.graphics.Canvas) -> b
    void drawSupportHorizontalDivider(android.graphics.Canvas,int) -> a
    void drawSupportVerticalDivider(android.graphics.Canvas,int) -> b
    boolean hasSupportDividerBeforeChildAt(int) -> a
android.support.v7.internal.widget.ListPopupWindow -> android.support.v7.internal.widget.ListPopupWindow:
    android.content.Context mContext -> b
    android.widget.PopupWindow mPopup -> c
    android.widget.ListAdapter mAdapter -> d
    android.support.v7.internal.widget.ListPopupWindow$DropDownListView mDropDownList -> e
    int mDropDownHeight -> f
    int mDropDownWidth -> g
    int mDropDownHorizontalOffset -> h
    int mDropDownVerticalOffset -> i
    boolean mDropDownVerticalOffsetSet -> j
    boolean mDropDownAlwaysVisible -> k
    boolean mForceIgnoreOutsideTouch -> l
    int mListItemExpandMaximum -> a
    android.view.View mPromptView -> m
    int mPromptPosition -> n
    android.database.DataSetObserver mObserver -> o
    android.view.View mDropDownAnchorView -> p
    android.graphics.drawable.Drawable mDropDownListHighlight -> q
    android.widget.AdapterView$OnItemClickListener mItemClickListener -> r
    android.widget.AdapterView$OnItemSelectedListener mItemSelectedListener -> s
    android.support.v7.internal.widget.ListPopupWindow$ResizePopupRunnable mResizePopupRunnable -> t
    android.support.v7.internal.widget.ListPopupWindow$PopupTouchInterceptor mTouchInterceptor -> u
    android.support.v7.internal.widget.ListPopupWindow$PopupScrollListener mScrollListener -> v
    android.support.v7.internal.widget.ListPopupWindow$ListSelectorHider mHideSelector -> w
    java.lang.Runnable mShowDropDownRunnable -> x
    android.os.Handler mHandler -> y
    android.graphics.Rect mTempRect -> z
    boolean mModal -> A
    void setAdapter(android.widget.ListAdapter) -> a
    void setPromptPosition(int) -> a
    void setModal(boolean) -> a
    android.graphics.drawable.Drawable getBackground() -> a
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> a
    android.view.View getAnchorView() -> b
    void setAnchorView(android.view.View) -> a
    void setHorizontalOffset(int) -> b
    void setVerticalOffset(int) -> c
    void setWidth(int) -> d
    void setContentWidth(int) -> e
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> a
    void show() -> c
    void dismiss() -> d
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> a
    void removePromptView() -> i
    void setInputMethodMode(int) -> f
    void setSelection(int) -> g
    void clearListSelection() -> e
    boolean isShowing() -> f
    boolean isInputMethodNotNeeded() -> g
    android.widget.ListView getListView() -> h
    int buildDropDown() -> j
    int getMaxAvailableHeight(android.view.View,int,boolean) -> a
    android.support.v7.internal.widget.ListPopupWindow$DropDownListView access$700(android.support.v7.internal.widget.ListPopupWindow) -> a
    android.widget.PopupWindow access$800(android.support.v7.internal.widget.ListPopupWindow) -> b
    android.support.v7.internal.widget.ListPopupWindow$ResizePopupRunnable access$900(android.support.v7.internal.widget.ListPopupWindow) -> c
    android.os.Handler access$1000(android.support.v7.internal.widget.ListPopupWindow) -> d
android.support.v7.internal.widget.ListPopupWindow$1 -> android.support.v7.internal.widget.af:
    android.support.v7.internal.widget.ListPopupWindow this$0 -> a
    void run() -> run
android.support.v7.internal.widget.ListPopupWindow$2 -> android.support.v7.internal.widget.ag:
    android.support.v7.internal.widget.ListPopupWindow this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
android.support.v7.internal.widget.ListPopupWindow$DropDownListView -> android.support.v7.internal.widget.ah:
    boolean mListSelectionHidden -> a
    boolean mHijackFocus -> b
    boolean isInTouchMode() -> isInTouchMode
    boolean hasWindowFocus() -> hasWindowFocus
    boolean isFocused() -> isFocused
    boolean hasFocus() -> hasFocus
    int measureHeightOfChildrenCompat(int,int,int,int,int) -> a
    boolean access$502(android.support.v7.internal.widget.ListPopupWindow$DropDownListView,boolean) -> a
android.support.v7.internal.widget.ListPopupWindow$ListSelectorHider -> android.support.v7.internal.widget.ai:
    android.support.v7.internal.widget.ListPopupWindow this$0 -> a
    void run() -> run
android.support.v7.internal.widget.ListPopupWindow$PopupDataSetObserver -> android.support.v7.internal.widget.aj:
    android.support.v7.internal.widget.ListPopupWindow this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v7.internal.widget.ListPopupWindow$PopupScrollListener -> android.support.v7.internal.widget.ak:
    android.support.v7.internal.widget.ListPopupWindow this$0 -> a
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
android.support.v7.internal.widget.ListPopupWindow$PopupTouchInterceptor -> android.support.v7.internal.widget.al:
    android.support.v7.internal.widget.ListPopupWindow this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
android.support.v7.internal.widget.ListPopupWindow$ResizePopupRunnable -> android.support.v7.internal.widget.am:
    android.support.v7.internal.widget.ListPopupWindow this$0 -> a
    void run() -> run
android.support.v7.internal.widget.NativeActionModeAwareLayout -> android.support.v7.internal.widget.NativeActionModeAwareLayout:
    android.support.v7.internal.widget.NativeActionModeAwareLayout$OnActionModeForChildListener mActionModeForChildListener -> a
    void setActionModeForChildListener(android.support.v7.internal.widget.NativeActionModeAwareLayout$OnActionModeForChildListener) -> setActionModeForChildListener
    android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback) -> startActionModeForChild
android.support.v7.internal.widget.NativeActionModeAwareLayout$OnActionModeForChildListener -> android.support.v7.internal.widget.an:
    android.view.ActionMode$Callback onActionModeForChild(android.view.ActionMode$Callback) -> a
android.support.v7.internal.widget.ProgressBarICS -> android.support.v7.internal.widget.ProgressBarICS:
    int[] android_R_styleable_ProgressBar -> f
    int mMinWidth -> a
    int mMaxWidth -> b
    int mMinHeight -> c
    int mMaxHeight -> d
    int mProgress -> g
    int mSecondaryProgress -> h
    int mMax -> i
    int mBehavior -> j
    int mDuration -> k
    boolean mIndeterminate -> l
    boolean mOnlyIndeterminate -> m
    android.view.animation.Transformation mTransformation -> n
    android.view.animation.AlphaAnimation mAnimation -> o
    android.graphics.drawable.Drawable mIndeterminateDrawable -> p
    android.graphics.drawable.Drawable mProgressDrawable -> q
    android.graphics.drawable.Drawable mCurrentDrawable -> r
    android.graphics.Bitmap mSampleTile -> e
    boolean mNoInvalidate -> s
    android.view.animation.Interpolator mInterpolator -> t
    android.support.v7.internal.widget.ProgressBarICS$RefreshProgressRunnable mRefreshProgressRunnable -> u
    long mUiThreadId -> v
    boolean mShouldStartAnimationDrawable -> w
    long mLastDrawTime -> x
    boolean mInDrawing -> y
    android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean) -> a
    android.graphics.drawable.shapes.Shape getDrawableShape() -> getDrawableShape
    android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable) -> a
    void initProgressBar() -> c
    void setIndeterminate(boolean) -> setIndeterminate
    android.graphics.drawable.Drawable getIndeterminateDrawable() -> getIndeterminateDrawable
    void setIndeterminateDrawable(android.graphics.drawable.Drawable) -> setIndeterminateDrawable
    android.graphics.drawable.Drawable getProgressDrawable() -> getProgressDrawable
    void setProgressDrawable(android.graphics.drawable.Drawable) -> setProgressDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void postInvalidate() -> postInvalidate
    void doRefreshProgress(int,int,boolean,boolean) -> a
    void refreshProgress(int,int,boolean) -> a
    void setProgress(int) -> setProgress
    void setProgress(int,boolean) -> a
    void setSecondaryProgress(int) -> setSecondaryProgress
    int getProgress() -> getProgress
    int getSecondaryProgress() -> getSecondaryProgress
    int getMax() -> getMax
    void setMax(int) -> setMax
    void startAnimation() -> a
    void stopAnimation() -> b
    void setInterpolator(android.content.Context,int) -> a
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    android.view.animation.Interpolator getInterpolator() -> getInterpolator
    void setVisibility(int) -> setVisibility
    void onVisibilityChanged(android.view.View,int) -> onVisibilityChanged
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void updateDrawableBounds(int,int) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    void drawableStateChanged() -> drawableStateChanged
    void updateDrawableState() -> d
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void access$000(android.support.v7.internal.widget.ProgressBarICS,int,int,boolean,boolean) -> a
    android.support.v7.internal.widget.ProgressBarICS$RefreshProgressRunnable access$102(android.support.v7.internal.widget.ProgressBarICS,android.support.v7.internal.widget.ProgressBarICS$RefreshProgressRunnable) -> a
android.support.v7.internal.widget.ProgressBarICS$1 -> android.support.v7.internal.widget.ao:
android.support.v7.internal.widget.ProgressBarICS$RefreshProgressRunnable -> android.support.v7.internal.widget.ap:
    int mId -> b
    int mProgress -> c
    boolean mFromUser -> d
    android.support.v7.internal.widget.ProgressBarICS this$0 -> a
    void run() -> run
    void setup(int,int,boolean) -> a
android.support.v7.internal.widget.ProgressBarICS$SavedState -> android.support.v7.internal.widget.ProgressBarICS$SavedState:
    int progress -> a
    int secondaryProgress -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v7.internal.widget.ProgressBarICS$SavedState$1 -> android.support.v7.internal.widget.aq:
    android.support.v7.internal.widget.ProgressBarICS$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v7.internal.widget.ProgressBarICS$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v7.internal.widget.ScrollingTabContainerView -> android.support.v7.internal.widget.ScrollingTabContainerView:
    java.lang.Runnable mTabSelector -> a
    android.support.v7.internal.widget.ScrollingTabContainerView$TabClickListener mTabClickListener -> d
    android.widget.LinearLayout mTabLayout -> e
    android.support.v7.internal.widget.SpinnerICS mTabSpinner -> f
    boolean mAllowCollapse -> g
    android.view.LayoutInflater mInflater -> h
    int mMaxTabWidth -> b
    int mStackedTabMaxWidth -> c
    int mContentHeight -> i
    int mSelectedTabIndex -> j
    void onMeasure(int,int) -> onMeasure
    boolean isCollapsed() -> a
    void setAllowCollapse(boolean) -> setAllowCollapse
    void performCollapse() -> b
    boolean performExpand() -> c
    void setTabSelected(int) -> setTabSelected
    void setContentHeight(int) -> setContentHeight
    android.support.v7.internal.widget.SpinnerICS createSpinner() -> d
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void animateToTab(int) -> a
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.support.v7.internal.widget.ScrollingTabContainerView$TabView createTabView(android.support.v7.app.ActionBar$Tab,boolean) -> a
    void onItemClick(android.support.v7.internal.widget.AdapterViewICS,android.view.View,int,long) -> a
    android.widget.LinearLayout access$200(android.support.v7.internal.widget.ScrollingTabContainerView) -> a
    android.support.v7.internal.widget.ScrollingTabContainerView$TabView access$300(android.support.v7.internal.widget.ScrollingTabContainerView,android.support.v7.app.ActionBar$Tab,boolean) -> a
android.support.v7.internal.widget.ScrollingTabContainerView$1 -> android.support.v7.internal.widget.ar:
    android.view.View val$tabView -> a
    android.support.v7.internal.widget.ScrollingTabContainerView this$0 -> b
    void run() -> run
android.support.v7.internal.widget.ScrollingTabContainerView$TabAdapter -> android.support.v7.internal.widget.as:
    android.support.v7.internal.widget.ScrollingTabContainerView this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
android.support.v7.internal.widget.ScrollingTabContainerView$TabClickListener -> android.support.v7.internal.widget.at:
    android.support.v7.internal.widget.ScrollingTabContainerView this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v7.internal.widget.ScrollingTabContainerView$TabView -> android.support.v7.internal.widget.ScrollingTabContainerView$TabView:
    android.support.v7.app.ActionBar$Tab mTab -> a
    android.widget.TextView mTextView -> b
    android.widget.ImageView mIconView -> c
    android.view.View mCustomView -> d
    android.support.v7.internal.widget.ScrollingTabContainerView mParent -> e
    void attach(android.support.v7.internal.widget.ScrollingTabContainerView,android.support.v7.app.ActionBar$Tab,boolean) -> a
    void bindTab(android.support.v7.app.ActionBar$Tab) -> a
    void onMeasure(int,int) -> onMeasure
    void update() -> a
    android.support.v7.app.ActionBar$Tab getTab() -> getTab
android.support.v7.internal.widget.SpinnerICS -> android.support.v7.internal.widget.au:
    android.support.v7.internal.widget.SpinnerICS$SpinnerPopup mPopup -> F
    android.support.v7.internal.widget.SpinnerICS$DropDownAdapter mTempAdapter -> G
    int mDropDownWidth -> E
    int mGravity -> H
    android.graphics.Rect mTempRect -> I
    void setAdapter(android.widget.SpinnerAdapter) -> a
    int getBaseline() -> getBaseline
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setOnItemClickListener(android.support.v7.internal.widget.AdapterViewICS$OnItemClickListener) -> a
    void setOnItemClickListenerInt(android.support.v7.internal.widget.AdapterViewICS$OnItemClickListener) -> b
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void layout(int,boolean) -> b
    android.view.View makeAndAddView(int) -> e
    void setUpChild(android.view.View) -> c
    boolean performClick() -> performClick
    void onClick(android.content.DialogInterface,int) -> onClick
    int measureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable) -> a
    android.graphics.Rect access$200(android.support.v7.internal.widget.SpinnerICS) -> a
android.support.v7.internal.widget.SpinnerICS$1 -> android.support.v7.internal.widget.av:
android.support.v7.internal.widget.SpinnerICS$DialogPopup -> android.support.v7.internal.widget.aw:
    android.app.AlertDialog mPopup -> b
    android.widget.ListAdapter mListAdapter -> c
    java.lang.CharSequence mPrompt -> d
    android.support.v7.internal.widget.SpinnerICS this$0 -> a
    void dismiss() -> d
    boolean isShowing() -> f
    void setAdapter(android.widget.ListAdapter) -> a
    void setPromptText(java.lang.CharSequence) -> a
    void show() -> c
    void onClick(android.content.DialogInterface,int) -> onClick
android.support.v7.internal.widget.SpinnerICS$DropDownAdapter -> android.support.v7.internal.widget.ax:
    android.widget.SpinnerAdapter mAdapter -> a
    android.widget.ListAdapter mListAdapter -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    boolean hasStableIds() -> hasStableIds
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean isEnabled(int) -> isEnabled
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    boolean isEmpty() -> isEmpty
android.support.v7.internal.widget.SpinnerICS$DropdownPopup -> android.support.v7.internal.widget.ay:
    java.lang.CharSequence mHintText -> c
    android.widget.ListAdapter mAdapter -> d
    android.support.v7.internal.widget.SpinnerICS this$0 -> b
    void setAdapter(android.widget.ListAdapter) -> a
    void setPromptText(java.lang.CharSequence) -> a
    void show() -> c
    android.widget.ListAdapter access$100(android.support.v7.internal.widget.SpinnerICS$DropdownPopup) -> a
android.support.v7.internal.widget.SpinnerICS$DropdownPopup$1 -> android.support.v7.internal.widget.az:
    android.support.v7.internal.widget.SpinnerICS val$this$0 -> a
    android.support.v7.internal.widget.SpinnerICS$DropdownPopup this$1 -> b
    void onItemClick(android.support.v7.internal.widget.AdapterViewICS,android.view.View,int,long) -> a
android.support.v7.internal.widget.SpinnerICS$SpinnerPopup -> android.support.v7.internal.widget.ba:
    void setAdapter(android.widget.ListAdapter) -> a
    void show() -> c
    void dismiss() -> d
    boolean isShowing() -> f
    void setPromptText(java.lang.CharSequence) -> a
android.support.v7.view.ActionMode -> android.support.v7.a.a:
    void finish() -> a
android.support.v7.view.CollapsibleActionView -> android.support.v7.a.b:
    void onActionViewExpanded() -> a
    void onActionViewCollapsed() -> b
android.support.v7.widget.SearchView -> android.support.v7.widget.SearchView:
    android.support.v7.widget.SearchView$OnQueryTextListener mOnQueryChangeListener -> c
    android.support.v7.widget.SearchView$OnCloseListener mOnCloseListener -> d
    android.view.View$OnFocusChangeListener mOnQueryTextFocusChangeListener -> e
    android.support.v7.widget.SearchView$OnSuggestionListener mOnSuggestionListener -> f
    android.view.View$OnClickListener mOnSearchClickListener -> g
    boolean mIconifiedByDefault -> h
    boolean mIconified -> i
    android.support.v4.widget.CursorAdapter mSuggestionsAdapter -> j
    android.view.View mSearchButton -> k
    android.view.View mSubmitButton -> l
    android.view.View mSearchPlate -> m
    android.view.View mSubmitArea -> n
    android.widget.ImageView mCloseButton -> o
    android.view.View mSearchEditFrame -> p
    android.view.View mVoiceButton -> q
    android.support.v7.widget.SearchView$SearchAutoComplete mQueryTextView -> r
    android.view.View mDropDownAnchor -> s
    android.widget.ImageView mSearchHintIcon -> t
    boolean mSubmitButtonEnabled -> u
    java.lang.CharSequence mQueryHint -> v
    boolean mQueryRefinement -> w
    boolean mClearingFocus -> x
    int mMaxWidth -> y
    boolean mVoiceButtonEnabled -> z
    java.lang.CharSequence mOldQueryText -> A
    java.lang.CharSequence mUserQuery -> B
    boolean mExpandedInActionView -> C
    int mCollapsedImeOptions -> D
    android.app.SearchableInfo mSearchable -> E
    android.os.Bundle mAppSearchData -> F
    android.support.v7.widget.SearchView$AutoCompleteTextViewReflector HIDDEN_METHOD_INVOKER -> a
    java.lang.Runnable mShowImeRunnable -> G
    java.lang.Runnable mUpdateDrawableStateRunnable -> H
    java.lang.Runnable mReleaseCursorRunnable -> I
    android.content.Intent mVoiceWebSearchIntent -> J
    android.content.Intent mVoiceAppSearchIntent -> K
    java.util.WeakHashMap mOutsideDrawablesCache -> L
    android.view.View$OnClickListener mOnClickListener -> M
    android.view.View$OnKeyListener mTextKeyListener -> b
    android.widget.TextView$OnEditorActionListener mOnEditorActionListener -> N
    android.widget.AdapterView$OnItemClickListener mOnItemClickListener -> O
    android.widget.AdapterView$OnItemSelectedListener mOnItemSelectedListener -> P
    android.text.TextWatcher mTextWatcher -> Q
    void addOnLayoutChangeListenerToDropDownAnchorSDK11() -> e
    void addOnLayoutChangeListenerToDropDownAnchorBase() -> f
    void setSearchableInfo(android.app.SearchableInfo) -> setSearchableInfo
    void setAppSearchData(android.os.Bundle) -> setAppSearchData
    void setImeOptions(int) -> setImeOptions
    int getImeOptions() -> getImeOptions
    void setInputType(int) -> setInputType
    int getInputType() -> getInputType
    boolean requestFocus(int,android.graphics.Rect) -> requestFocus
    void clearFocus() -> clearFocus
    void setOnQueryTextListener(android.support.v7.widget.SearchView$OnQueryTextListener) -> setOnQueryTextListener
    void setOnCloseListener(android.support.v7.widget.SearchView$OnCloseListener) -> setOnCloseListener
    void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener) -> setOnQueryTextFocusChangeListener
    void setOnSuggestionListener(android.support.v7.widget.SearchView$OnSuggestionListener) -> setOnSuggestionListener
    void setOnSearchClickListener(android.view.View$OnClickListener) -> setOnSearchClickListener
    java.lang.CharSequence getQuery() -> getQuery
    void setQueryHint(java.lang.CharSequence) -> setQueryHint
    java.lang.CharSequence getQueryHint() -> getQueryHint
    void setIconifiedByDefault(boolean) -> setIconifiedByDefault
    void setIconified(boolean) -> setIconified
    boolean isIconified() -> c
    void setSubmitButtonEnabled(boolean) -> setSubmitButtonEnabled
    void setQueryRefinementEnabled(boolean) -> setQueryRefinementEnabled
    void setSuggestionsAdapter(android.support.v4.widget.CursorAdapter) -> setSuggestionsAdapter
    android.support.v4.widget.CursorAdapter getSuggestionsAdapter() -> getSuggestionsAdapter
    void setMaxWidth(int) -> setMaxWidth
    int getMaxWidth() -> getMaxWidth
    void onMeasure(int,int) -> onMeasure
    int getPreferredWidth() -> getPreferredWidth
    void updateViewsVisibility(boolean) -> a
    boolean hasVoiceSearch() -> g
    boolean isSubmitAreaEnabled() -> h
    void updateSubmitButton(boolean) -> b
    void updateSubmitArea() -> i
    void updateCloseButton() -> j
    void postUpdateFocusedState() -> k
    void updateFocusedState() -> l
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setImeVisibility(boolean) -> setImeVisibility
    void onQueryRefine(java.lang.CharSequence) -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onSuggestionsKey(android.view.View,int,android.view.KeyEvent) -> a
    int getSearchIconId() -> getSearchIconId
    java.lang.CharSequence getDecoratedHint(java.lang.CharSequence) -> b
    void updateQueryHint() -> m
    void updateSearchAutoComplete() -> n
    void updateVoiceButton(boolean) -> c
    void onTextChanged(java.lang.CharSequence) -> c
    void onSubmitQuery() -> o
    void dismissSuggestions() -> p
    void onCloseClicked() -> q
    void onSearchClicked() -> r
    void onVoiceClicked() -> s
    void onTextFocusChanged() -> d
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onActionViewCollapsed() -> b
    void onActionViewExpanded() -> a
    void adjustDropDownSizeAndPosition() -> t
    boolean onItemClicked(int,int,java.lang.String) -> a
    boolean onItemSelected(int) -> a
    void rewriteQueryFromSuggestion(int) -> b
    boolean launchSuggestion(int,int,java.lang.String) -> b
    void launchIntent(android.content.Intent) -> a
    void setQuery(java.lang.CharSequence) -> setQuery
    void launchQuerySearch(int,java.lang.String,java.lang.String) -> a
    android.content.Intent createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String) -> a
    android.content.Intent createVoiceWebSearchIntent(android.content.Intent,android.app.SearchableInfo) -> a
    android.content.Intent createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo) -> b
    android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String) -> a
    void forceSuggestionQuery() -> u
    boolean isLandscapeMode(android.content.Context) -> a
    void access$000(android.support.v7.widget.SearchView) -> a
    android.support.v4.widget.CursorAdapter access$100(android.support.v7.widget.SearchView) -> b
    android.view.View$OnFocusChangeListener access$200(android.support.v7.widget.SearchView) -> c
    void access$300(android.support.v7.widget.SearchView) -> d
    android.view.View access$400(android.support.v7.widget.SearchView) -> e
    void access$500(android.support.v7.widget.SearchView) -> f
    android.widget.ImageView access$600(android.support.v7.widget.SearchView) -> g
    void access$700(android.support.v7.widget.SearchView) -> h
    android.view.View access$800(android.support.v7.widget.SearchView) -> i
    void access$900(android.support.v7.widget.SearchView) -> j
    android.view.View access$1000(android.support.v7.widget.SearchView) -> k
    void access$1100(android.support.v7.widget.SearchView) -> l
    android.support.v7.widget.SearchView$SearchAutoComplete access$1200(android.support.v7.widget.SearchView) -> m
    void access$1300(android.support.v7.widget.SearchView) -> n
    android.app.SearchableInfo access$1400(android.support.v7.widget.SearchView) -> o
    boolean access$1500(android.support.v7.widget.SearchView,android.view.View,int,android.view.KeyEvent) -> a
    void access$1700(android.support.v7.widget.SearchView,int,java.lang.String,java.lang.String) -> a
    boolean access$1800(android.support.v7.widget.SearchView,int,int,java.lang.String) -> a
    boolean access$1900(android.support.v7.widget.SearchView,int) -> a
    void access$2000(android.support.v7.widget.SearchView,java.lang.CharSequence) -> a
    void access$2100(android.support.v7.widget.SearchView,boolean) -> a
android.support.v7.widget.SearchView$1 -> android.support.v7.widget.a:
    android.support.v7.widget.SearchView this$0 -> a
    void run() -> run
android.support.v7.widget.SearchView$10 -> android.support.v7.widget.b:
    android.support.v7.widget.SearchView this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v7.widget.SearchView$11 -> android.support.v7.widget.c:
    android.support.v7.widget.SearchView this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
android.support.v7.widget.SearchView$12 -> android.support.v7.widget.d:
    android.support.v7.widget.SearchView this$0 -> a
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
android.support.v7.widget.SearchView$2 -> android.support.v7.widget.e:
    android.support.v7.widget.SearchView this$0 -> a
    void run() -> run
android.support.v7.widget.SearchView$3 -> android.support.v7.widget.f:
    android.support.v7.widget.SearchView this$0 -> a
    void run() -> run
android.support.v7.widget.SearchView$4 -> android.support.v7.widget.g:
    android.support.v7.widget.SearchView this$0 -> a
    void onFocusChange(android.view.View,boolean) -> onFocusChange
android.support.v7.widget.SearchView$5 -> android.support.v7.widget.h:
    android.support.v7.widget.SearchView this$0 -> a
    void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
android.support.v7.widget.SearchView$6 -> android.support.v7.widget.i:
    android.support.v7.widget.SearchView this$0 -> a
    void onGlobalLayout() -> onGlobalLayout
android.support.v7.widget.SearchView$7 -> android.support.v7.widget.j:
    android.support.v7.widget.SearchView this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v7.widget.SearchView$8 -> android.support.v7.widget.k:
    android.support.v7.widget.SearchView this$0 -> a
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
android.support.v7.widget.SearchView$9 -> android.support.v7.widget.l:
    android.support.v7.widget.SearchView this$0 -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
android.support.v7.widget.SearchView$AutoCompleteTextViewReflector -> android.support.v7.widget.m:
    java.lang.reflect.Method doBeforeTextChanged -> a
    java.lang.reflect.Method doAfterTextChanged -> b
    java.lang.reflect.Method ensureImeVisible -> c
    java.lang.reflect.Method showSoftInputUnchecked -> d
    void doBeforeTextChanged(android.widget.AutoCompleteTextView) -> a
    void doAfterTextChanged(android.widget.AutoCompleteTextView) -> b
    void ensureImeVisible(android.widget.AutoCompleteTextView,boolean) -> a
    void showSoftInputUnchecked(android.view.inputmethod.InputMethodManager,android.view.View,int) -> a
android.support.v7.widget.SearchView$OnCloseListener -> android.support.v7.widget.n:
    boolean onClose() -> a
android.support.v7.widget.SearchView$OnQueryTextListener -> android.support.v7.widget.o:
    boolean onQueryTextSubmit(java.lang.String) -> a
    boolean onQueryTextChange(java.lang.String) -> b
android.support.v7.widget.SearchView$OnSuggestionListener -> android.support.v7.widget.p:
    boolean onSuggestionSelect(int) -> a
    boolean onSuggestionClick(int) -> b
android.support.v7.widget.SearchView$SearchAutoComplete -> android.support.v7.widget.SearchView$SearchAutoComplete:
    int mThreshold -> a
    android.support.v7.widget.SearchView mSearchView -> b
    void setSearchView(android.support.v7.widget.SearchView) -> setSearchView
    void setThreshold(int) -> setThreshold
    boolean isEmpty() -> a
    void replaceText(java.lang.CharSequence) -> replaceText
    void performCompletion() -> performCompletion
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    boolean enoughToFilter() -> enoughToFilter
    boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
    boolean access$1600(android.support.v7.widget.SearchView$SearchAutoComplete) -> a
android.support.v7.widget.ShareActionProvider -> android.support.v7.widget.ShareActionProvider:
    int mMaxShownActivityCount -> a
    android.support.v7.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener mOnMenuItemClickListener -> b
    android.content.Context mContext -> c
    java.lang.String mShareHistoryFileName -> d
    android.view.View onCreateActionView() -> onCreateActionView
    boolean hasSubMenu() -> hasSubMenu
    void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
    android.content.Context access$100(android.support.v7.widget.ShareActionProvider) -> a
    java.lang.String access$200(android.support.v7.widget.ShareActionProvider) -> b
android.support.v7.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener -> android.support.v7.widget.q:
    android.support.v7.widget.ShareActionProvider this$0 -> a
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
android.support.v7.widget.SuggestionsAdapter -> android.support.v7.widget.r:
    android.app.SearchManager mSearchManager -> a
    android.support.v7.widget.SearchView mSearchView -> b
    android.app.SearchableInfo mSearchable -> c
    android.content.Context mProviderContext -> d
    java.util.WeakHashMap mOutsideDrawablesCache -> e
    boolean mClosed -> f
    int mQueryRefinement -> g
    android.content.res.ColorStateList mUrlColor -> h
    int mText1Col -> i
    int mText2Col -> j
    int mText2UrlCol -> k
    int mIconName1Col -> l
    int mIconName2Col -> m
    int mFlagsCol -> n
    void setQueryRefinement(int) -> a
    boolean hasStableIds() -> hasStableIds
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    void notifyDataSetChanged() -> notifyDataSetChanged
    void notifyDataSetInvalidated() -> notifyDataSetInvalidated
    void updateSpinnerState(android.database.Cursor) -> a
    void changeCursor(android.database.Cursor) -> changeCursor
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    void onClick(android.view.View) -> onClick
    java.lang.CharSequence formatUrl(java.lang.CharSequence) -> a
    void setViewText(android.widget.TextView,java.lang.CharSequence) -> a
    android.graphics.drawable.Drawable getIcon1(android.database.Cursor) -> b
    android.graphics.drawable.Drawable getIcon2(android.database.Cursor) -> c
    void setViewDrawable(android.widget.ImageView,android.graphics.drawable.Drawable,int) -> a
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String) -> a
    android.graphics.drawable.Drawable getDrawable(android.net.Uri) -> b
    android.graphics.drawable.Drawable checkIconCache(java.lang.String) -> b
    void storeInIconCache(java.lang.String,android.graphics.drawable.Drawable) -> a
    android.graphics.drawable.Drawable getDefaultIcon1(android.database.Cursor) -> d
    android.graphics.drawable.Drawable getActivityIconWithCache(android.content.ComponentName) -> a
    android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName) -> b
    java.lang.String getColumnString(android.database.Cursor,java.lang.String) -> a
    java.lang.String getStringOrNull(android.database.Cursor,int) -> a
    android.graphics.drawable.Drawable getDrawableFromResourceUri(android.net.Uri) -> a
    android.database.Cursor getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int) -> a
android.support.v7.widget.SuggestionsAdapter$ChildViewCache -> android.support.v7.widget.s:
    android.widget.TextView mText1 -> a
    android.widget.TextView mText2 -> b
    android.widget.ImageView mIcon1 -> c
    android.widget.ImageView mIcon2 -> d
    android.widget.ImageView mIconRefine -> e
b.This -> b.a:
    android.content.SharedPreferences P -> a
    android.content.SharedPreferences$Editor Q -> b
    java.security.MessageDigest Code(java.lang.String) -> c
    java.lang.String V(java.lang.String) -> a
    void Code(java.lang.String,boolean) -> a
    void V(java.lang.String,java.lang.String) -> a
    boolean V(java.lang.String,boolean) -> b
    java.lang.String getValue(java.lang.String,java.lang.String) -> b
    void remove(java.lang.String) -> b
c.This -> c.a:
    cn.bmob.v3.requestmanager.thing requestCommand -> a
    org.json.JSONObject params -> b
    a.thing rApi$6fc396a8 -> c
    void Code(android.content.Context,org.json.JSONObject,cn.bmob.v3.listener.OtherLoginListener) -> a
    void requestEmailVerify(android.content.Context,java.lang.String,cn.bmob.v3.listener.EmailVerifyListener) -> a
    void resetPassword(android.content.Context,java.lang.String,cn.bmob.v3.listener.ResetPasswordListener) -> a
    void Code(android.content.Context,cn.bmob.v3.listener.XListener) -> a
    void Code(android.content.Context,java.lang.String,org.json.JSONObject,cn.bmob.v3.listener.PushListener) -> a
    void Code(android.content.Context,org.json.JSONObject,org.json.JSONObject,cn.bmob.v3.listener.PushListener) -> a
c.This$1 -> c.b:
    cn.bmob.v3.listener.OtherLoginListener R -> a
    org.json.JSONObject T -> b
    android.content.Context S -> c
    void onSuccess(j.madness) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
c.This$2 -> c.c:
    cn.bmob.v3.listener.EmailVerifyListener U -> a
    void onSuccess(j.madness) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
c.This$3 -> c.d:
    cn.bmob.v3.listener.ResetPasswordListener W -> a
    void onSuccess(j.madness) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
c.This$4 -> c.e:
    cn.bmob.v3.listener.XListener X -> a
    void onSuccess(j.madness) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
c.This$5 -> c.f:
    cn.bmob.v3.listener.PushListener Y -> a
    void onSuccess(j.madness) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
c.This$6 -> c.g:
    cn.bmob.v3.listener.PushListener Y -> a
    void onSuccess(j.madness) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
ch.imvs.sdes4j.CryptoAttribute -> ch.imvs.sdes4j.CryptoAttribute:
    int tag -> tag
    ch.imvs.sdes4j.CryptoSuite cryptoSuite -> cryptoSuite
    ch.imvs.sdes4j.KeyParam[] keyParams -> keyParams
    ch.imvs.sdes4j.SessionParam[] sessionParams -> sessionParams
    ch.imvs.sdes4j.CryptoAttribute create(java.lang.String,ch.imvs.sdes4j.SDesFactory) -> create
    ch.imvs.sdes4j.CryptoAttribute create(java.lang.String,java.lang.String,java.lang.String,java.lang.String,ch.imvs.sdes4j.SDesFactory) -> create
    int getTag() -> getTag
    void setTag(java.lang.String) -> setTag
    ch.imvs.sdes4j.CryptoSuite getCryptoSuite() -> getCryptoSuite
    void setCryptoSuite(java.lang.String,ch.imvs.sdes4j.SDesFactory) -> setCryptoSuite
    ch.imvs.sdes4j.KeyParam[] getKeyParams() -> getKeyParams
    void setKeyParams(java.lang.String,ch.imvs.sdes4j.SDesFactory) -> setKeyParams
    ch.imvs.sdes4j.SessionParam[] getSessionParams() -> getSessionParams
    void setSessionParams(java.util.List,ch.imvs.sdes4j.SDesFactory) -> setSessionParams
    java.lang.String encode() -> encode
    java.lang.String getKeyParamsString() -> getKeyParamsString
    java.lang.String getSessionParamsString() -> getSessionParamsString
ch.imvs.sdes4j.CryptoSuite -> ch.imvs.sdes4j.CryptoSuite:
    java.lang.String encode() -> encode
ch.imvs.sdes4j.KeyParam -> ch.imvs.sdes4j.KeyParam:
    java.lang.String getKeyMethod() -> getKeyMethod
    java.lang.String encode() -> encode
ch.imvs.sdes4j.SDesFactory -> ch.imvs.sdes4j.SDesFactory:
    ch.imvs.sdes4j.CryptoSuite createCryptoSuite(java.lang.String) -> createCryptoSuite
    ch.imvs.sdes4j.KeyParam createKeyParam(java.lang.String) -> createKeyParam
    ch.imvs.sdes4j.KeyParam[] createKeyParamArray(int) -> createKeyParamArray
    ch.imvs.sdes4j.SessionParam createSessionParam(java.lang.String) -> createSessionParam
    ch.imvs.sdes4j.SessionParam[] createSessionParamArray(int) -> createSessionParamArray
    ch.imvs.sdes4j.CryptoAttribute createCryptoAttribute() -> createCryptoAttribute
    void setRandomGenerator(java.util.Random) -> setRandomGenerator
ch.imvs.sdes4j.SessionParam -> ch.imvs.sdes4j.SessionParam:
    java.lang.String encode() -> encode
ch.imvs.sdes4j.srtp.FecKeySessionParam -> ch.imvs.sdes4j.srtp.FecKeySessionParam:
    ch.imvs.sdes4j.srtp.SrtpKeyParam[] keyParams -> keyParams
    ch.imvs.sdes4j.srtp.SrtpKeyParam createSrtpKeyParam(java.lang.String) -> createSrtpKeyParam
    ch.imvs.sdes4j.srtp.SrtpKeyParam[] getKeyParams() -> getKeyParams
    java.lang.String encode() -> encode
ch.imvs.sdes4j.srtp.FecOrderSessionParam -> ch.imvs.sdes4j.srtp.FecOrderSessionParam:
    int FEC_SRTP -> FEC_SRTP
    int SRTP_FEC -> SRTP_FEC
    int mode -> mode
    int getMode() -> getMode
    java.lang.String encode() -> encode
ch.imvs.sdes4j.srtp.KdrSessionParam -> ch.imvs.sdes4j.srtp.KdrSessionParam:
    int kdr -> kdr
    int getKeyDerivationRate() -> getKeyDerivationRate
    int getKeyDerivationRateExpanded() -> getKeyDerivationRateExpanded
    java.lang.String encode() -> encode
ch.imvs.sdes4j.srtp.NoAuthSessionParam -> ch.imvs.sdes4j.srtp.NoAuthSessionParam:
    java.lang.String UNAUTHENTICATED_SRTP -> UNAUTHENTICATED_SRTP
    java.lang.String encode() -> encode
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
ch.imvs.sdes4j.srtp.PlainSrtcpSessionParam -> ch.imvs.sdes4j.srtp.PlainSrtcpSessionParam:
    java.lang.String UNENCRYPTED_SRTCP -> UNENCRYPTED_SRTCP
    java.lang.String encode() -> encode
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
ch.imvs.sdes4j.srtp.PlainSrtpSessionParam -> ch.imvs.sdes4j.srtp.PlainSrtpSessionParam:
    java.lang.String UNENCRYPTED_SRTP -> UNENCRYPTED_SRTP
    java.lang.String encode() -> encode
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
ch.imvs.sdes4j.srtp.SrtpCryptoAttribute -> ch.imvs.sdes4j.srtp.SrtpCryptoAttribute:
    ch.imvs.sdes4j.srtp.SrtpCryptoAttribute create(java.lang.String) -> create
    ch.imvs.sdes4j.srtp.SrtpCryptoAttribute create(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> create
    ch.imvs.sdes4j.srtp.SrtpCryptoSuite getCryptoSuite() -> getCryptoSuite
    ch.imvs.sdes4j.srtp.SrtpKeyParam[] getKeyParams() -> getKeyParams
    ch.imvs.sdes4j.srtp.SrtpSessionParam[] getSessionParams() -> getSessionParams
    ch.imvs.sdes4j.SessionParam[] getSessionParams() -> getSessionParams
    ch.imvs.sdes4j.KeyParam[] getKeyParams() -> getKeyParams
    ch.imvs.sdes4j.CryptoSuite getCryptoSuite() -> getCryptoSuite
ch.imvs.sdes4j.srtp.SrtpCryptoSuite -> ch.imvs.sdes4j.srtp.SrtpCryptoSuite:
    java.lang.String AES_256_CM_HMAC_SHA1_32 -> AES_256_CM_HMAC_SHA1_32
    java.lang.String AES_256_CM_HMAC_SHA1_80 -> AES_256_CM_HMAC_SHA1_80
    java.lang.String AES_192_CM_HMAC_SHA1_32 -> AES_192_CM_HMAC_SHA1_32
    java.lang.String AES_192_CM_HMAC_SHA1_80 -> AES_192_CM_HMAC_SHA1_80
    java.lang.String SEED_128_GCM_96 -> SEED_128_GCM_96
    java.lang.String SEED_128_CCM_80 -> SEED_128_CCM_80
    java.lang.String SEED_CTR_128_HMAC_SHA1_80 -> SEED_CTR_128_HMAC_SHA1_80
    java.lang.String F8_128_HMAC_SHA1_80 -> F8_128_HMAC_SHA1_80
    java.lang.String AES_CM_128_HMAC_SHA1_32 -> AES_CM_128_HMAC_SHA1_32
    java.lang.String AES_CM_128_HMAC_SHA1_80 -> AES_CM_128_HMAC_SHA1_80
    int ENCRYPTION_AES128_CM -> ENCRYPTION_AES128_CM
    int ENCRYPTION_AES128_F8 -> ENCRYPTION_AES128_F8
    int ENCRYPTION_SEED128_CTR -> ENCRYPTION_SEED128_CTR
    int ENCRYPTION_SEED128_CCM_80 -> ENCRYPTION_SEED128_CCM_80
    int ENCRYPTION_SEED128_GCM_96 -> ENCRYPTION_SEED128_GCM_96
    int ENCRYPTION_AES192_CM -> ENCRYPTION_AES192_CM
    int ENCRYPTION_AES256_CM -> ENCRYPTION_AES256_CM
    int HASH_HMAC_SHA1 -> HASH_HMAC_SHA1
    int HASH_SEED128_CCM_80 -> HASH_SEED128_CCM_80
    int HASH_SEED128_GCM_96 -> HASH_SEED128_GCM_96
    java.lang.String suite -> suite
    int encryptionAlgorithm -> encryptionAlgorithm
    int hashAlgoritm -> hashAlgoritm
    int encKeyLength -> encKeyLength
    int saltKeyLength -> saltKeyLength
    int srtpAuthTagLength -> srtpAuthTagLength
    int srtcpAuthTagLength -> srtcpAuthTagLength
    int srtpAuthKeyLength -> srtpAuthKeyLength
    int srtcpAuthKeyLength -> srtcpAuthKeyLength
    long srtpLifetime -> srtpLifetime
    long srtcpLifetime -> srtcpLifetime
    int getEncryptionAlgorithm() -> getEncryptionAlgorithm
    int getHashAlgorithm() -> getHashAlgorithm
    int getEncKeyLength() -> getEncKeyLength
    int getSaltKeyLength() -> getSaltKeyLength
    int getSrtpAuthTagLength() -> getSrtpAuthTagLength
    int getSrtcpAuthTagLength() -> getSrtcpAuthTagLength
    int getSrtpAuthKeyLength() -> getSrtpAuthKeyLength
    int getSrtcpAuthKeyLength() -> getSrtcpAuthKeyLength
    long getSrtpLifetime() -> getSrtpLifetime
    long getSrtcpLifetime() -> getSrtcpLifetime
    java.lang.String encode() -> encode
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
ch.imvs.sdes4j.srtp.SrtpKeyParam -> ch.imvs.sdes4j.srtp.SrtpKeyParam:
    java.lang.String KEYMETHOD_INLINE -> KEYMETHOD_INLINE
    java.lang.String keyMethod -> keyMethod
    byte[] key -> key
    int lifetime -> lifetime
    int mki -> mki
    int mkiLength -> mkiLength
    java.lang.String getKeyMethod() -> getKeyMethod
    byte[] getKey() -> getKey
    int getLifetime() -> getLifetime
    int getMki() -> getMki
    int getMkiLength() -> getMkiLength
    java.lang.String encode() -> encode
ch.imvs.sdes4j.srtp.SrtpSDesFactory -> ch.imvs.sdes4j.srtp.SrtpSDesFactory:
    java.util.Random r -> r
    ch.imvs.sdes4j.srtp.SrtpCryptoAttribute createCryptoAttribute(int,java.lang.String) -> createCryptoAttribute
    ch.imvs.sdes4j.srtp.SrtpCryptoAttribute createCryptoAttribute(int,java.lang.String,ch.imvs.sdes4j.srtp.SrtpSessionParam[]) -> createCryptoAttribute
    java.util.Random getRandom() -> getRandom
    void setRandomGenerator(java.util.Random) -> setRandomGenerator
    ch.imvs.sdes4j.srtp.SrtpCryptoAttribute createCryptoAttribute() -> createCryptoAttribute
    ch.imvs.sdes4j.srtp.SrtpCryptoSuite createCryptoSuite(java.lang.String) -> createCryptoSuite
    ch.imvs.sdes4j.srtp.SrtpKeyParam createKeyParam(java.lang.String) -> createKeyParam
    ch.imvs.sdes4j.srtp.SrtpKeyParam[] createKeyParamArray(int) -> createKeyParamArray
    ch.imvs.sdes4j.srtp.SrtpSessionParam createSessionParam(java.lang.String) -> createSessionParam
    ch.imvs.sdes4j.srtp.SrtpSessionParam[] createSessionParamArray(int) -> createSessionParamArray
    ch.imvs.sdes4j.CryptoAttribute createCryptoAttribute() -> createCryptoAttribute
    ch.imvs.sdes4j.SessionParam[] createSessionParamArray(int) -> createSessionParamArray
    ch.imvs.sdes4j.SessionParam createSessionParam(java.lang.String) -> createSessionParam
    ch.imvs.sdes4j.KeyParam[] createKeyParamArray(int) -> createKeyParamArray
    ch.imvs.sdes4j.KeyParam createKeyParam(java.lang.String) -> createKeyParam
    ch.imvs.sdes4j.CryptoSuite createCryptoSuite(java.lang.String) -> createCryptoSuite
ch.imvs.sdes4j.srtp.SrtpSessionParam -> ch.imvs.sdes4j.srtp.SrtpSessionParam:
    ch.imvs.sdes4j.srtp.SrtpSessionParam create(java.lang.String) -> create
ch.imvs.sdes4j.srtp.WshSessionParam -> ch.imvs.sdes4j.srtp.WshSessionParam:
    int wsh -> wsh
    int getWindowSizeHint() -> getWindowSizeHint
    java.lang.String encode() -> encode
cn.bmob.push.PushConstants -> cn.bmob.push.a:
    java.lang.String ACTION_MESSAGE -> a
    java.lang.String EXTRA_PUSH_MESSAGE_STRING -> b
cn.bmob.push.PushReceiver -> cn.bmob.push.PushReceiver:
    android.net.NetworkInfo$State V -> a
    android.net.NetworkInfo$State I -> b
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
cn.bmob.push.PushSDK -> cn.bmob.push.b:
    cn.bmob.push.PushSDK ins -> a
    cn.bmob.push.lib.service.ISocketService Z -> b
    cn.bmob.push.PushSDK$PushObservable B -> c
    android.content.Context mContext -> d
    android.content.ServiceConnection C -> e
    cn.bmob.push.lib.service.ISocketServiceCallback S -> f
    cn.bmob.push.PushSDK Code() -> a
    boolean Code(android.content.Context) -> a
    void V() -> b
    void Code(java.util.Observer) -> a
    cn.bmob.push.lib.service.ISocketService Code(cn.bmob.push.PushSDK) -> a
    cn.bmob.push.lib.service.ISocketServiceCallback V(cn.bmob.push.PushSDK) -> b
    void Code(cn.bmob.push.PushSDK,cn.bmob.push.lib.service.ISocketService) -> a
    cn.bmob.push.PushSDK$PushObservable I(cn.bmob.push.PushSDK) -> c
    android.content.Context Z(cn.bmob.push.PushSDK) -> d
cn.bmob.push.PushSDK$1 -> cn.bmob.push.c:
    cn.bmob.push.PushSDK F -> a
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
cn.bmob.push.PushSDK$2 -> cn.bmob.push.d:
    cn.bmob.push.PushSDK F -> a
    void Code(android.os.Bundle) -> a
cn.bmob.push.PushSDK$PushObservable -> cn.bmob.push.e:
    void V(java.lang.Object) -> a
cn.bmob.push.autobahn.ByteBufferOutputStream -> cn.bmob.push.a.a:
    int L -> a
    int a -> b
    java.nio.ByteBuffer D -> c
    java.nio.ByteBuffer I() -> a
    java.nio.Buffer flip() -> b
    java.nio.Buffer clear() -> c
    int remaining() -> d
    void Code(int) -> a
    void write(int) -> write
    void write(byte[],int,int) -> write
    void write(byte[]) -> write
    void write(java.lang.String) -> a
    void Z() -> e
cn.bmob.push.autobahn.NoCopyByteArrayOutputStream -> cn.bmob.push.a.b:
cn.bmob.push.autobahn.Utf8Validator -> cn.bmob.push.a.c:
    int[] DFA -> a
    int b -> b
    int mPos -> c
    void reset() -> a
    boolean isValid() -> b
    boolean Code(byte[]) -> a
cn.bmob.push.autobahn.WebSocket$ConnectionHandler -> cn.bmob.push.a.d:
    void B() -> a
    void V(int) -> a
    void Code(java.lang.String) -> a
    void C() -> b
    void S() -> c
cn.bmob.push.autobahn.WebSocketConnection -> cn.bmob.push.a.e:
    java.lang.String TAG -> d
    android.os.Handler c -> e
    cn.bmob.push.autobahn.WebSocketReader d -> f
    cn.bmob.push.autobahn.WebSocketWriter e -> a
    android.os.HandlerThread f -> g
    java.nio.channels.SocketChannel g -> b
    java.net.URI h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    int k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String[] n -> n
    java.util.List o -> o
    cn.bmob.push.autobahn.WebSocket$ConnectionHandler p -> p
    cn.bmob.push.autobahn.WebSocketOptions q -> c
    boolean r -> q
    boolean s -> r
    void V(java.lang.String) -> a
    boolean isConnected() -> a
    void Code(java.lang.String,cn.bmob.push.autobahn.WebSocket$ConnectionHandler) -> a
    void disconnect() -> b
    boolean reconnect() -> c
    void Code(int,java.lang.String) -> a
    void F() -> d
    void D() -> e
    void L() -> f
    java.lang.String Code(cn.bmob.push.autobahn.WebSocketConnection) -> a
    int V(cn.bmob.push.autobahn.WebSocketConnection) -> b
    void Code(cn.bmob.push.autobahn.WebSocketConnection,int,java.lang.String) -> a
    java.lang.String I(cn.bmob.push.autobahn.WebSocketConnection) -> c
    java.lang.String Z(cn.bmob.push.autobahn.WebSocketConnection) -> d
    java.lang.String[] B(cn.bmob.push.autobahn.WebSocketConnection) -> e
    java.util.List C(cn.bmob.push.autobahn.WebSocketConnection) -> f
    void Code(cn.bmob.push.autobahn.WebSocketConnection,boolean) -> a
    cn.bmob.push.autobahn.WebSocket$ConnectionHandler S(cn.bmob.push.autobahn.WebSocketConnection) -> g
    void V(cn.bmob.push.autobahn.WebSocketConnection,int,java.lang.String) -> b
cn.bmob.push.autobahn.WebSocketConnection$1 -> cn.bmob.push.a.f:
    cn.bmob.push.autobahn.WebSocketConnection t -> a
    void run() -> run
cn.bmob.push.autobahn.WebSocketConnection$2 -> cn.bmob.push.a.g:
    cn.bmob.push.autobahn.WebSocketConnection t -> a
    void handleMessage(android.os.Message) -> handleMessage
cn.bmob.push.autobahn.WebSocketConnection$WebSocketConnector -> cn.bmob.push.a.h:
    cn.bmob.push.autobahn.WebSocketConnection t -> a
    void run() -> run
cn.bmob.push.autobahn.WebSocketConnectionHandler -> cn.bmob.push.a.i:
    void B() -> a
    void V(int) -> a
    void Code(java.lang.String) -> a
    void C() -> b
    void S() -> c
cn.bmob.push.autobahn.WebSocketException -> cn.bmob.push.a.j:
cn.bmob.push.autobahn.WebSocketMessage$BinaryMessage -> cn.bmob.push.a.k:
    byte[] u -> a
cn.bmob.push.autobahn.WebSocketMessage$ClientHandshake -> cn.bmob.push.a.l:
    java.lang.String v -> a
    java.lang.String w -> b
    java.lang.String x -> c
    java.lang.String y -> d
    java.lang.String[] z -> e
    java.util.List A -> f
cn.bmob.push.autobahn.WebSocketMessage$Close -> cn.bmob.push.a.m:
    int E -> a
    java.lang.String G -> b
cn.bmob.push.autobahn.WebSocketMessage$ConnectionLost -> cn.bmob.push.a.n:
cn.bmob.push.autobahn.WebSocketMessage$Error -> cn.bmob.push.a.o:
    java.lang.Exception H -> a
cn.bmob.push.autobahn.WebSocketMessage$Message -> cn.bmob.push.a.p:
cn.bmob.push.autobahn.WebSocketMessage$Ping -> cn.bmob.push.a.q:
    byte[] u -> a
cn.bmob.push.autobahn.WebSocketMessage$Pong -> cn.bmob.push.a.r:
    byte[] u -> a
cn.bmob.push.autobahn.WebSocketMessage$ProtocolViolation -> cn.bmob.push.a.s:
cn.bmob.push.autobahn.WebSocketMessage$Quit -> cn.bmob.push.a.t:
cn.bmob.push.autobahn.WebSocketMessage$RawTextMessage -> cn.bmob.push.a.u:
    byte[] u -> a
cn.bmob.push.autobahn.WebSocketMessage$ServerError -> cn.bmob.push.a.v:
    int J -> a
    java.lang.String K -> b
cn.bmob.push.autobahn.WebSocketMessage$ServerHandshake -> cn.bmob.push.a.w:
    boolean M -> a
cn.bmob.push.autobahn.WebSocketMessage$TextMessage -> cn.bmob.push.a.x:
    java.lang.String N -> a
cn.bmob.push.autobahn.WebSocketOptions -> cn.bmob.push.a.y:
    int O -> a
    int P -> b
    boolean Q -> c
    boolean R -> d
    int T -> e
    int U -> f
    boolean W -> g
    boolean X -> h
    int Y -> i
    boolean a() -> a
    int b() -> b
    int c() -> c
    boolean getTcpNoDelay() -> d
    int d() -> e
    int e() -> f
    boolean f() -> g
    boolean g() -> h
    int h() -> i
cn.bmob.push.autobahn.WebSocketReader -> cn.bmob.push.a.z:
    java.lang.String TAG -> a
    android.os.Handler aa -> b
    java.nio.channels.SocketChannel ab -> c
    cn.bmob.push.autobahn.WebSocketOptions q -> d
    java.nio.ByteBuffer ac -> e
    cn.bmob.push.autobahn.NoCopyByteArrayOutputStream ad -> f
    boolean ae -> g
    int b -> h
    boolean af -> i
    int ag -> j
    cn.bmob.push.autobahn.WebSocketReader$FrameHeader ah -> k
    cn.bmob.push.autobahn.Utf8Validator ai -> l
    void quit() -> a
    void I(java.lang.Object) -> a
    boolean i() -> b
    void run() -> run
cn.bmob.push.autobahn.WebSocketReader$FrameHeader -> cn.bmob.push.a.aa:
    int aj -> a
    boolean ak -> b
    int al -> c
    int am -> d
    int an -> e
    int ao -> f
    byte[] ap -> g
cn.bmob.push.autobahn.WebSocketWriter -> cn.bmob.push.a.ab:
    java.lang.String TAG -> a
    java.util.Random aq -> b
    android.os.Handler aa -> c
    android.os.Looper ar -> d
    java.nio.channels.SocketChannel ab -> e
    cn.bmob.push.autobahn.WebSocketOptions q -> f
    cn.bmob.push.autobahn.ByteBufferOutputStream as -> g
    void Z(java.lang.Object) -> a
    void I(java.lang.Object) -> b
    void Code(int,boolean,byte[]) -> a
    void Code(int,boolean,byte[],int,int) -> a
    void handleMessage(android.os.Message) -> handleMessage
cn.bmob.push.lib.service.Client -> cn.bmob.push.lib.service.a:
    cn.bmob.push.autobahn.WebSocketConnection at -> a
    android.content.Context au -> b
    cn.bmob.push.lib.service.ISocketResponse av -> c
    long aw -> d
    int Code(cn.bmob.push.lib.service.ClientPacket) -> a
    void Code(cn.bmob.push.lib.service.ISocketResponse) -> a
    void j() -> b
    void close() -> a
    boolean k() -> c
    cn.bmob.push.autobahn.WebSocketConnection Code(cn.bmob.push.lib.service.Client) -> a
    cn.bmob.push.lib.service.ISocketResponse V(cn.bmob.push.lib.service.Client) -> b
cn.bmob.push.lib.service.Client$1 -> cn.bmob.push.lib.service.b:
    cn.bmob.push.lib.service.Client ax -> a
    void B() -> a
    void V(int) -> a
    void Code(java.lang.String) -> a
cn.bmob.push.lib.service.ClientPacket -> cn.bmob.push.lib.service.c:
    byte[] data -> a
    byte[] getData() -> a
cn.bmob.push.lib.service.ISocketResponse -> cn.bmob.push.lib.service.d:
    void B(java.lang.Object) -> a
cn.bmob.push.lib.service.ISocketService -> cn.bmob.push.lib.service.e:
    void Code(android.os.Bundle,cn.bmob.push.lib.service.ISocketServiceCallback) -> a
    void V(android.os.Bundle,cn.bmob.push.lib.service.ISocketServiceCallback) -> b
    int V(android.os.Bundle) -> a
cn.bmob.push.lib.service.ISocketService$Stub -> cn.bmob.push.lib.service.f:
    cn.bmob.push.lib.service.ISocketService Code(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
cn.bmob.push.lib.service.ISocketService$Stub$Proxy -> cn.bmob.push.lib.service.g:
    android.os.IBinder ay -> a
    android.os.IBinder asBinder() -> asBinder
    void Code(android.os.Bundle,cn.bmob.push.lib.service.ISocketServiceCallback) -> a
    void V(android.os.Bundle,cn.bmob.push.lib.service.ISocketServiceCallback) -> b
    int V(android.os.Bundle) -> a
cn.bmob.push.lib.service.ISocketServiceCallback -> cn.bmob.push.lib.service.h:
    void Code(android.os.Bundle) -> a
cn.bmob.push.lib.service.ISocketServiceCallback$Stub -> cn.bmob.push.lib.service.i:
    cn.bmob.push.lib.service.ISocketServiceCallback V(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
cn.bmob.push.lib.service.ISocketServiceCallback$Stub$Proxy -> cn.bmob.push.lib.service.j:
    android.os.IBinder ay -> a
    android.os.IBinder asBinder() -> asBinder
    void Code(android.os.Bundle) -> a
cn.bmob.push.lib.service.PushService -> cn.bmob.push.lib.service.PushService:
    cn.bmob.push.lib.service.Client az -> a
    cn.bmob.push.lib.service.PushService$MyBroadcastReceiver aA -> b
    java.util.Observer aB -> c
    cn.bmob.push.lib.service.ISocketResponse av -> d
    cn.bmob.push.lib.service.PushService$CusRemoteCallbackList aC -> e
    cn.bmob.push.lib.service.ISocketService$Stub aD -> f
    void onCreate() -> onCreate
    void onStart(android.content.Intent,int) -> onStart
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void Code(android.content.Intent) -> a
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean onUnbind(android.content.Intent) -> onUnbind
    void onDestroy() -> onDestroy
    cn.bmob.push.lib.service.PushService$CusRemoteCallbackList Code(cn.bmob.push.lib.service.PushService) -> a
    cn.bmob.push.lib.service.Client V(cn.bmob.push.lib.service.PushService) -> b
    java.util.Observer I(cn.bmob.push.lib.service.PushService) -> c
cn.bmob.push.lib.service.PushService$1 -> cn.bmob.push.lib.service.k:
    cn.bmob.push.lib.service.PushService aE -> a
    void update(java.util.Observable,java.lang.Object) -> update
cn.bmob.push.lib.service.PushService$2 -> cn.bmob.push.lib.service.l:
    cn.bmob.push.lib.service.PushService aE -> a
    void B(java.lang.Object) -> a
cn.bmob.push.lib.service.PushService$3 -> cn.bmob.push.lib.service.m:
    cn.bmob.push.lib.service.PushService aE -> a
    int V(android.os.Bundle) -> a
    void Code(android.os.Bundle,cn.bmob.push.lib.service.ISocketServiceCallback) -> a
    void V(android.os.Bundle,cn.bmob.push.lib.service.ISocketServiceCallback) -> b
cn.bmob.push.lib.service.PushService$CusRemoteCallbackList -> cn.bmob.push.lib.service.n:
    void onCallbackDied(android.os.IInterface) -> onCallbackDied
    void onCallbackDied(android.os.IInterface,java.lang.Object) -> onCallbackDied
cn.bmob.push.lib.service.PushService$MyBroadcastReceiver -> cn.bmob.push.lib.service.o:
    cn.bmob.push.lib.service.PushService aE -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
cn.bmob.push.lib.util.AtomicIntegerUtil -> cn.bmob.push.lib.a.a:
    java.util.concurrent.atomic.AtomicInteger mAtomicInteger -> a
    int l() -> a
    java.lang.String V(android.content.Context) -> a
cn.bmob.push.lib.util.Config -> cn.bmob.push.lib.a.b:
    int HEARTBEAT_TIME -> a
    java.lang.String NAME_SPNAME -> b
    java.lang.String KEY_PUSHAPPKEY -> c
    java.lang.String KEY_SERVERURL -> d
cn.bmob.push.lib.util.LogUtil -> cn.bmob.push.lib.a.c:
    void m() -> a
    void n() -> b
    void o() -> c
cn.bmob.push.lib.util.NetworkUtil -> cn.bmob.push.lib.a.d:
    boolean I(android.content.Context) -> a
cn.bmob.v3.AsyncCustomEndpoints -> cn.bmob.v3.AsyncCustomEndpoints:
    a.thing rApi$6fc396a8 -> rApi$6fc396a8
    org.json.JSONObject params -> params
    void callEndpoint(android.content.Context,java.lang.String,cn.bmob.v3.listener.CloudCodeListener) -> callEndpoint
    void callEndpoint(android.content.Context,java.lang.String,org.json.JSONObject,cn.bmob.v3.listener.CloudCodeListener) -> callEndpoint
cn.bmob.v3.AsyncCustomEndpoints$1 -> cn.bmob.v3.AsyncCustomEndpoints$1:
    cn.bmob.v3.listener.CloudCodeListener Code -> Code
    void onSuccess(j.madness) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
cn.bmob.v3.Bmob -> cn.bmob.v3.Bmob:
    java.lang.String TAG -> TAG
    b.This spUtil$1853ce08 -> spUtil$1853ce08
    void initialize(android.content.Context,java.lang.String) -> initialize
    void getServerTime(android.content.Context,cn.bmob.v3.listener.GetServerTimeListener) -> getServerTime
cn.bmob.v3.Bmob$1 -> cn.bmob.v3.Bmob$1:
    cn.bmob.v3.listener.GetServerTimeListener V -> V
    void onSuccess(j.madness) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
cn.bmob.v3.BmobACL -> cn.bmob.v3.BmobACL:
    long serialVersionUID -> serialVersionUID
    java.util.Map I -> I
    java.util.Map getAcl() -> getAcl
    void Code(java.lang.String,java.lang.String,boolean) -> Code
    void setReadAccess(java.lang.String,boolean) -> setReadAccess
    void setReadAccess(cn.bmob.v3.BmobUser,boolean) -> setReadAccess
    void setWriteAccess(java.lang.String,boolean) -> setWriteAccess
    void setWriteAccess(cn.bmob.v3.BmobUser,boolean) -> setWriteAccess
    void setRoleReadAccess(java.lang.String,boolean) -> setRoleReadAccess
    void setRoleReadAccess(cn.bmob.v3.BmobRole,boolean) -> setRoleReadAccess
    void setRoleWriteAccess(java.lang.String,boolean) -> setRoleWriteAccess
    void setRoleWriteAccess(cn.bmob.v3.BmobRole,boolean) -> setRoleWriteAccess
    void setPublicReadAccess(boolean) -> setPublicReadAccess
    void setPublicWriteAccess(boolean) -> setPublicWriteAccess
cn.bmob.v3.BmobInstallation -> cn.bmob.v3.BmobInstallation:
    long serialVersionUID -> serialVersionUID
    java.lang.String deviceType -> deviceType
    java.util.List channels -> channels
    java.lang.String installationId -> installationId
    java.lang.String timeZone -> timeZone
    java.lang.String deviceToken -> deviceToken
    android.content.Context mContext -> mContext
    boolean subOrUnsub -> subOrUnsub
    java.lang.String getTableName() -> getTableName
    cn.bmob.v3.BmobInstallation getCurrentInstallation(android.content.Context) -> getCurrentInstallation
    cn.bmob.v3.BmobQuery getQuery() -> getQuery
    void save() -> save
    java.lang.String getDeviceToken() -> getDeviceToken
    void setDeviceToken(java.lang.String) -> setDeviceToken
    java.lang.String getDeviceType() -> getDeviceType
    void setDeviceType(java.lang.String) -> setDeviceType
    java.util.List getChannels() -> getChannels
    void setChannels(java.util.List) -> setChannels
    java.lang.String getInstallationId() -> getInstallationId
    void setInstallationId(java.lang.String) -> setInstallationId
    java.lang.String getTimeZone() -> getTimeZone
    void setTimeZone(java.lang.String) -> setTimeZone
    void subscribe(java.lang.String) -> subscribe
    void unsubscribe(java.lang.String) -> unsubscribe
    java.lang.String getInstallationId(android.content.Context) -> getInstallationId
    void Code(cn.bmob.v3.BmobInstallation,android.content.Context) -> Code
cn.bmob.v3.BmobInstallation$1 -> cn.bmob.v3.BmobInstallation$1:
    cn.bmob.v3.BmobInstallation Z -> Z
    java.util.List B -> B
    boolean C -> C
    android.content.Context S -> S
    void onSuccess(java.util.List) -> onSuccess
    void onError(int,java.lang.String) -> onError
cn.bmob.v3.BmobInstallation$1$1 -> cn.bmob.v3.BmobInstallation$1$1:
    void onSuccess() -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
cn.bmob.v3.BmobInstallation$2 -> cn.bmob.v3.BmobInstallation$2:
    void onSuccess() -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
cn.bmob.v3.BmobObject -> cn.bmob.v3.BmobObject:
    long serialVersionUID -> serialVersionUID
    java.lang.String objectId -> objectId
    java.lang.String createdAt -> createdAt
    java.lang.String updatedAt -> updatedAt
    cn.bmob.v3.BmobACL ACL -> ACL
    java.lang.String _c_ -> _c_
    java.util.List increments -> increments
    org.json.JSONObject data -> data
    void setTableName(java.lang.String) -> setTableName
    java.lang.String getTableName() -> getTableName
    java.lang.String getObjectId() -> getObjectId
    void setObjectId(java.lang.String) -> setObjectId
    java.lang.String getCreatedAt() -> getCreatedAt
    void setCreatedAt(java.lang.String) -> setCreatedAt
    java.lang.String getUpdatedAt() -> getUpdatedAt
    void setUpdatedAt(java.lang.String) -> setUpdatedAt
    cn.bmob.v3.BmobACL getACL() -> getACL
    void setACL(cn.bmob.v3.BmobACL) -> setACL
    void increment(java.lang.String) -> increment
    void increment(java.lang.String,java.lang.Number) -> increment
    org.json.JSONObject disposePointerType(org.json.JSONObject) -> disposePointerType
    void save(android.content.Context) -> save
    void save(android.content.Context,cn.bmob.v3.listener.SaveListener) -> save
    org.json.JSONObject gjData() -> gjData
    void put(java.lang.String,java.lang.Object) -> put
    void insertBatch(android.content.Context,java.util.List,cn.bmob.v3.listener.SaveListener) -> insertBatch
    void updateBatch(android.content.Context,java.util.List,cn.bmob.v3.listener.UpdateListener) -> updateBatch
    void deleteBatch(android.content.Context,java.util.List,cn.bmob.v3.listener.DeleteListener) -> deleteBatch
    void Code(android.content.Context,java.util.List,java.lang.String,cn.bmob.v3.listener.XListener) -> Code
    void update(android.content.Context) -> update
    void update(android.content.Context,cn.bmob.v3.listener.UpdateListener) -> update
    void update(android.content.Context,java.lang.String,cn.bmob.v3.listener.UpdateListener) -> update
    void delete(android.content.Context) -> delete
    void delete(android.content.Context,cn.bmob.v3.listener.DeleteListener) -> delete
    void delete(android.content.Context,java.lang.String,cn.bmob.v3.listener.DeleteListener) -> delete
    void add(java.lang.String,java.lang.Object) -> add
    void addAll(java.lang.String,java.util.Collection) -> addAll
    void addUnique(java.lang.String,java.lang.Object) -> addUnique
    void addAllUnique(java.lang.String,java.util.Collection) -> addAllUnique
    void removeAll(java.lang.String,java.util.Collection) -> removeAll
    void remove(java.lang.String) -> remove
    org.json.JSONObject Code(java.lang.String,java.util.Collection) -> Code
cn.bmob.v3.BmobObject$1 -> cn.bmob.v3.BmobObject$1:
    cn.bmob.v3.BmobObject F -> F
    cn.bmob.v3.listener.SaveListener D -> D
    void onSuccess(j.madness) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
    void onStart() -> onStart
    void onFinish() -> onFinish
cn.bmob.v3.BmobObject$2 -> cn.bmob.v3.BmobObject$2:
    cn.bmob.v3.listener.SaveListener L -> L
    void onSuccess(j.madness) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
cn.bmob.v3.BmobObject$3 -> cn.bmob.v3.BmobObject$3:
    cn.bmob.v3.listener.UpdateListener b -> b
    void onSuccess(j.madness) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
cn.bmob.v3.BmobObject$4 -> cn.bmob.v3.BmobObject$4:
    cn.bmob.v3.listener.DeleteListener c -> c
    void onSuccess(j.madness) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
cn.bmob.v3.BmobObject$5 -> cn.bmob.v3.BmobObject$5:
    cn.bmob.v3.BmobObject F -> F
    cn.bmob.v3.listener.UpdateListener b -> b
    void onSuccess(j.madness) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
    void onStart() -> onStart
    void onFinish() -> onFinish
cn.bmob.v3.BmobObject$6 -> cn.bmob.v3.BmobObject$6:
    cn.bmob.v3.listener.DeleteListener c -> c
    void onSuccess(j.madness) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
    void onStart() -> onStart
    void onFinish() -> onFinish
cn.bmob.v3.BmobPushManager -> cn.bmob.v3.BmobPushManager:
    android.content.Context mContext -> mContext
    cn.bmob.v3.BmobQuery d -> d
    c.This e -> e
    void pushMessage(java.lang.String) -> pushMessage
    void pushMessage(java.lang.String,cn.bmob.v3.listener.PushListener) -> pushMessage
    void pushMessage(org.json.JSONObject) -> pushMessage
    void pushMessage(org.json.JSONObject,cn.bmob.v3.listener.PushListener) -> pushMessage
    void pushMessageAll(java.lang.String) -> pushMessageAll
    void pushMessageAll(org.json.JSONObject) -> pushMessageAll
    void pushMessageAll(java.lang.String,cn.bmob.v3.listener.PushListener) -> pushMessageAll
    void pushMessageAll(org.json.JSONObject,cn.bmob.v3.listener.PushListener) -> pushMessageAll
    cn.bmob.v3.BmobQuery getQuery() -> getQuery
    void setQuery(cn.bmob.v3.BmobQuery) -> setQuery
cn.bmob.v3.BmobQuery -> cn.bmob.v3.BmobQuery:
    cn.bmob.v3.requestmanager.thing requestCommand -> requestCommand
    a.thing rApi$6fc396a8 -> rApi$6fc396a8
    org.json.JSONObject params -> params
    org.json.JSONObject f -> f
    org.json.JSONObject data -> data
    java.lang.String g -> g
    java.lang.Integer h -> h
    java.lang.Integer i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    cn.bmob.v3.BmobQuery$CachePolicy l -> l
    long m -> m
    java.lang.String _c_ -> _c_
    int[] n -> n
    void findObjects(android.content.Context,cn.bmob.v3.listener.FindCallback) -> findObjects
    void getObject(android.content.Context,java.lang.String,cn.bmob.v3.listener.GetCallback) -> getObject
    org.json.JSONObject getWhere() -> getWhere
    cn.bmob.v3.BmobQuery addWhereLessThan(java.lang.String,java.lang.Object) -> addWhereLessThan
    cn.bmob.v3.BmobQuery addWhereLessThanOrEqualTo(java.lang.String,java.lang.Object) -> addWhereLessThanOrEqualTo
    cn.bmob.v3.BmobQuery addWhereGreaterThan(java.lang.String,java.lang.Object) -> addWhereGreaterThan
    cn.bmob.v3.BmobQuery addWhereGreaterThanOrEqualTo(java.lang.String,java.lang.Object) -> addWhereGreaterThanOrEqualTo
    cn.bmob.v3.BmobQuery addWhereEqualTo(java.lang.String,java.lang.Object) -> addWhereEqualTo
    cn.bmob.v3.BmobQuery addWhereNotEqualTo(java.lang.String,java.lang.Object) -> addWhereNotEqualTo
    cn.bmob.v3.BmobQuery addWhereContainedIn(java.lang.String,java.util.Collection) -> addWhereContainedIn
    cn.bmob.v3.BmobQuery addWhereContainsAll(java.lang.String,java.util.Collection) -> addWhereContainsAll
    cn.bmob.v3.BmobQuery addWhereNotContainedIn(java.lang.String,java.util.Collection) -> addWhereNotContainedIn
    cn.bmob.v3.BmobQuery addWhereMatches(java.lang.String,java.lang.String) -> addWhereMatches
    cn.bmob.v3.BmobQuery addWhereContains(java.lang.String,java.lang.String) -> addWhereContains
    cn.bmob.v3.BmobQuery addWhereStartsWith(java.lang.String,java.lang.String) -> addWhereStartsWith
    cn.bmob.v3.BmobQuery addWhereEndsWith(java.lang.String,java.lang.String) -> addWhereEndsWith
    cn.bmob.v3.BmobQuery addWhereNear(java.lang.String,cn.bmob.v3.datatype.BmobGeoPoint) -> addWhereNear
    cn.bmob.v3.BmobQuery addWhereWithinMiles(java.lang.String,cn.bmob.v3.datatype.BmobGeoPoint,double) -> addWhereWithinMiles
    cn.bmob.v3.BmobQuery addWhereWithinKilometers(java.lang.String,cn.bmob.v3.datatype.BmobGeoPoint,double) -> addWhereWithinKilometers
    cn.bmob.v3.BmobQuery addWhereWithinRadians(java.lang.String,cn.bmob.v3.datatype.BmobGeoPoint,double) -> addWhereWithinRadians
    void Code(java.lang.String,java.lang.String,cn.bmob.v3.datatype.BmobGeoPoint,double) -> Code
    cn.bmob.v3.BmobQuery addWhereWithinGeoBox(java.lang.String,cn.bmob.v3.datatype.BmobGeoPoint,cn.bmob.v3.datatype.BmobGeoPoint) -> addWhereWithinGeoBox
    cn.bmob.v3.BmobQuery addWhereExists(java.lang.String) -> addWhereExists
    cn.bmob.v3.BmobQuery addWhereDoesNotExists(java.lang.String) -> addWhereDoesNotExists
    cn.bmob.v3.BmobQuery addWhereRelatedTo(java.lang.String,cn.bmob.v3.datatype.BmobPointer) -> addWhereRelatedTo
    cn.bmob.v3.BmobQuery addWhereMatchesQuery(java.lang.String,java.lang.String,cn.bmob.v3.BmobQuery) -> addWhereMatchesQuery
    cn.bmob.v3.BmobQuery addWhereDoesNotMatchQuery(java.lang.String,java.lang.String,cn.bmob.v3.BmobQuery) -> addWhereDoesNotMatchQuery
    cn.bmob.v3.BmobQuery addQueryKeys(java.lang.String) -> addQueryKeys
    void setLimit(int) -> setLimit
    int getLimit() -> getLimit
    void setSkip(int) -> setSkip
    int getSkip() -> getSkip
    cn.bmob.v3.BmobQuery order(java.lang.String) -> order
    void include(java.lang.String) -> include
    void Code(java.lang.String,java.lang.String,java.lang.Object) -> Code
    void Code(android.content.Context,cn.bmob.v3.BmobQuery$CachePolicy,java.lang.Class,cn.bmob.v3.listener.FindListener) -> Code
    void Code(android.content.Context,cn.bmob.v3.BmobQuery$CachePolicy,java.lang.Class,cn.bmob.v3.listener.GetListener) -> Code
    cn.bmob.v3.BmobQuery or(java.util.List) -> or
    void findObjects(android.content.Context,cn.bmob.v3.listener.FindListener) -> findObjects
    void getObject(android.content.Context,java.lang.String,cn.bmob.v3.listener.GetListener) -> getObject
    void count(android.content.Context,java.lang.Class,cn.bmob.v3.listener.CountListener) -> count
    void setCachePolicy(cn.bmob.v3.BmobQuery$CachePolicy) -> setCachePolicy
    cn.bmob.v3.BmobQuery$CachePolicy getCachePolicy() -> getCachePolicy
    void setMaxCacheAge(long) -> setMaxCacheAge
    long getMaxCacheAge() -> getMaxCacheAge
    boolean hasCachedResult(android.content.Context) -> hasCachedResult
    void clearCachedResult(android.content.Context) -> clearCachedResult
    void clearAllCachedResults(android.content.Context) -> clearAllCachedResults
    void Code(cn.bmob.v3.BmobQuery,android.content.Context,cn.bmob.v3.BmobQuery$CachePolicy,java.lang.Class,cn.bmob.v3.listener.FindListener) -> Code
    int[] Code() -> Code
    void Code(cn.bmob.v3.BmobQuery,android.content.Context,cn.bmob.v3.BmobQuery$CachePolicy,java.lang.Class,cn.bmob.v3.listener.GetListener) -> Code
cn.bmob.v3.BmobQuery$1 -> cn.bmob.v3.BmobQuery$1:
    cn.bmob.v3.listener.FindCallback o -> o
    void onSuccess(j.madness) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
cn.bmob.v3.BmobQuery$2 -> cn.bmob.v3.BmobQuery$2:
    cn.bmob.v3.listener.GetCallback p -> p
    void onSuccess(j.madness) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
cn.bmob.v3.BmobQuery$3 -> cn.bmob.v3.BmobQuery$3:
    cn.bmob.v3.BmobQuery q -> q
    cn.bmob.v3.listener.FindListener r -> r
    android.content.Context S -> S
    java.lang.Class s -> s
    void onSuccess(java.util.List) -> onSuccess
    void onError(int,java.lang.String) -> onError
    void onStart() -> onStart
    void onFinish() -> onFinish
cn.bmob.v3.BmobQuery$4 -> cn.bmob.v3.BmobQuery$4:
    cn.bmob.v3.BmobQuery q -> q
    cn.bmob.v3.listener.GetListener t -> t
    android.content.Context S -> S
    java.lang.Class s -> s
    void onSuccess(java.lang.Object) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
    void onStart() -> onStart
    void onFinish() -> onFinish
cn.bmob.v3.BmobQuery$5 -> cn.bmob.v3.BmobQuery$5:
    cn.bmob.v3.listener.CountListener u -> u
    void onSuccess(j.madness) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
cn.bmob.v3.BmobQuery$CachePolicy -> cn.bmob.v3.BmobQuery$CachePolicy:
    cn.bmob.v3.BmobQuery$CachePolicy IGNORE_CACHE -> IGNORE_CACHE
    cn.bmob.v3.BmobQuery$CachePolicy CACHE_ONLY -> CACHE_ONLY
    cn.bmob.v3.BmobQuery$CachePolicy NETWORK_ONLY -> NETWORK_ONLY
    cn.bmob.v3.BmobQuery$CachePolicy CACHE_ELSE_NETWORK -> CACHE_ELSE_NETWORK
    cn.bmob.v3.BmobQuery$CachePolicy NETWORK_ELSE_CACHE -> NETWORK_ELSE_CACHE
    cn.bmob.v3.BmobQuery$CachePolicy CACHE_THEN_NETWORK -> CACHE_THEN_NETWORK
    cn.bmob.v3.BmobQuery$CachePolicy[] v -> v
    cn.bmob.v3.BmobQuery$CachePolicy[] values() -> values
    cn.bmob.v3.BmobQuery$CachePolicy valueOf(java.lang.String) -> valueOf
cn.bmob.v3.BmobRealTimeData -> cn.bmob.v3.BmobRealTimeData:
    java.lang.String ACTION_UPDATETABLE -> ACTION_UPDATETABLE
    java.lang.String ACTION_DELETETABLE -> ACTION_DELETETABLE
    java.lang.String ACTION_UPDATEROW -> ACTION_UPDATEROW
    java.lang.String ACTION_DELETEROW -> ACTION_DELETEROW
    android.content.Context mContext -> mContext
    p.I w -> w
    void start(android.content.Context,cn.bmob.v3.listener.ValueEventListener) -> start
    boolean isConnected() -> isConnected
    void subTableUpdate(java.lang.String) -> subTableUpdate
    void unsubTableUpdate(java.lang.String) -> unsubTableUpdate
    void subTableDelete(java.lang.String) -> subTableDelete
    void unsubTableDelete(java.lang.String) -> unsubTableDelete
    void subRowUpdate(java.lang.String,java.lang.String) -> subRowUpdate
    void unsubRowUpdate(java.lang.String,java.lang.String) -> unsubRowUpdate
    void subRowDelete(java.lang.String,java.lang.String) -> subRowDelete
    void unsubRowDelete(java.lang.String,java.lang.String) -> unsubRowDelete
    org.json.JSONObject Code(java.lang.String,java.lang.String,java.lang.String) -> Code
    void Code(cn.bmob.v3.BmobRealTimeData,p.I) -> Code
cn.bmob.v3.BmobRealTimeData$1 -> cn.bmob.v3.BmobRealTimeData$1:
    cn.bmob.v3.BmobRealTimeData x -> x
    cn.bmob.v3.listener.ValueEventListener y -> y
    void Code(java.lang.Exception,p.I) -> Code
cn.bmob.v3.BmobRealTimeData$1$1 -> cn.bmob.v3.BmobRealTimeData$1$1:
    p.I z -> z
    cn.bmob.v3.listener.ValueEventListener y -> y
    void Code(org.json.JSONArray) -> Code
cn.bmob.v3.BmobRealTimeData$1$1$1 -> cn.bmob.v3.BmobRealTimeData$1$1$1:
    cn.bmob.v3.listener.ValueEventListener y -> y
    void Code(org.json.JSONArray) -> Code
cn.bmob.v3.BmobRole -> cn.bmob.v3.BmobRole:
    long serialVersionUID -> serialVersionUID
    java.lang.String tableName -> tableName
    java.lang.String name -> name
    cn.bmob.v3.datatype.BmobRelation A -> A
    cn.bmob.v3.datatype.BmobRelation E -> E
    java.lang.String getTableName() -> getTableName
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    cn.bmob.v3.datatype.BmobRelation getRoles() -> getRoles
    cn.bmob.v3.datatype.BmobRelation getUsers() -> getUsers
cn.bmob.v3.BmobUser -> cn.bmob.v3.BmobUser:
    long serialVersionUID -> serialVersionUID
    java.lang.String username -> username
    java.lang.String password -> password
    java.lang.String email -> email
    java.lang.Boolean emailVerified -> emailVerified
    java.lang.String sessionToken -> sessionToken
    org.json.JSONObject current -> current
    java.lang.String getTableName() -> getTableName
    java.lang.String getUsername() -> getUsername
    void setUsername(java.lang.String) -> setUsername
    java.lang.String getPassword() -> getPassword
    void setPassword(java.lang.String) -> setPassword
    java.lang.String getEmail() -> getEmail
    void setEmail(java.lang.String) -> setEmail
    java.lang.Boolean getEmailVerified() -> getEmailVerified
    void setEmailVerified(java.lang.Boolean) -> setEmailVerified
    java.lang.String getSessionToken() -> getSessionToken
    void setSessionToken(java.lang.String) -> setSessionToken
    void signUp(android.content.Context,cn.bmob.v3.listener.SaveListener) -> signUp
    void login(android.content.Context,cn.bmob.v3.listener.SaveListener) -> login
    void update(android.content.Context) -> update
    void update(android.content.Context,cn.bmob.v3.listener.UpdateListener) -> update
    void update(android.content.Context,java.lang.String,cn.bmob.v3.listener.UpdateListener) -> update
    void weiboLogin(android.content.Context,java.lang.String,java.lang.String,cn.bmob.v3.listener.OtherLoginListener) -> weiboLogin
    void qqLogin(android.content.Context,java.lang.String,cn.bmob.v3.listener.OtherLoginListener) -> qqLogin
    void associateWithAuthDate(android.content.Context,cn.bmob.v3.BmobUser,org.json.JSONObject,cn.bmob.v3.listener.UpdateListener) -> associateWithAuthDate
    void dissociateQQAuthData(android.content.Context,cn.bmob.v3.BmobUser,cn.bmob.v3.listener.UpdateListener) -> dissociateQQAuthData
    void dissociateWeiboAuthData(android.content.Context,cn.bmob.v3.BmobUser,cn.bmob.v3.listener.UpdateListener) -> dissociateWeiboAuthData
    org.json.JSONObject Code(android.content.Context,cn.bmob.v3.BmobUser) -> Code
    org.json.JSONObject V(android.content.Context,cn.bmob.v3.BmobUser) -> V
    void Code(android.content.Context,org.json.JSONObject,java.lang.String,cn.bmob.v3.listener.UpdateListener) -> Code
    void requestEmailVerify(android.content.Context,java.lang.String,cn.bmob.v3.listener.EmailVerifyListener) -> requestEmailVerify
    void resetPassword(android.content.Context,java.lang.String,cn.bmob.v3.listener.ResetPasswordListener) -> resetPassword
    java.lang.Object getCurrentUser(android.content.Context,java.lang.Class) -> getCurrentUser
    cn.bmob.v3.BmobUser getCurrentUser(android.content.Context) -> getCurrentUser
    void logOut(android.content.Context) -> logOut
    void Code(cn.bmob.v3.BmobUser,android.content.Context) -> Code
    void Code(android.content.Context) -> Code
    void V(android.content.Context) -> V
cn.bmob.v3.BmobUser$1 -> cn.bmob.v3.BmobUser$1:
    cn.bmob.v3.BmobUser G -> G
    android.content.Context S -> S
    cn.bmob.v3.listener.SaveListener L -> L
    void onSuccess(j.madness) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
    void onStart() -> onStart
    void onFinish() -> onFinish
cn.bmob.v3.BmobUser$2 -> cn.bmob.v3.BmobUser$2:
    cn.bmob.v3.BmobUser G -> G
    android.content.Context S -> S
    cn.bmob.v3.listener.SaveListener L -> L
    void onSuccess(j.madness) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
    void onStart() -> onStart
    void onFinish() -> onFinish
cn.bmob.v3.BmobUser$3 -> cn.bmob.v3.BmobUser$3:
    cn.bmob.v3.BmobUser G -> G
    android.content.Context S -> S
    cn.bmob.v3.listener.UpdateListener b -> b
    void onSuccess(j.madness) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
    void onStart() -> onStart
    void onFinish() -> onFinish
cn.bmob.v3.BmobUser$4 -> cn.bmob.v3.BmobUser$4:
    android.content.Context S -> S
    org.json.JSONObject H -> H
    cn.bmob.v3.listener.UpdateListener b -> b
    void onSuccess(j.madness) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
    void onStart() -> onStart
    void onFinish() -> onFinish
cn.bmob.v3.BmobUser$5 -> cn.bmob.v3.BmobUser$5:
    java.lang.String J -> J
    android.content.Context S -> S
    cn.bmob.v3.listener.UpdateListener b -> b
    void onSuccess(j.madness) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
    void onStart() -> onStart
    void onFinish() -> onFinish
cn.bmob.v3.Manifest -> cn.bmob.v3.Manifest:
cn.bmob.v3.Manifest$permission -> cn.bmob.v3.Manifest$permission:
    java.lang.String push -> push
cn.bmob.v3.datatype.BmobDate -> cn.bmob.v3.datatype.BmobDate:
    long serialVersionUID -> serialVersionUID
    java.lang.String iso -> iso
    java.lang.String __type -> __type
    java.lang.String getDate() -> getDate
cn.bmob.v3.datatype.BmobFile -> cn.bmob.v3.datatype.BmobFile:
    long serialVersionUID -> serialVersionUID
    int maxBmobFileSize -> maxBmobFileSize
    int maxBmobFileSize_block -> maxBmobFileSize_block
    java.lang.String className -> className
    java.io.File file -> file
    java.lang.String filename -> filename
    java.lang.String group -> group
    java.lang.String url -> url
    java.lang.String __type -> __type
    i.From mImageLoader -> mImageLoader
    int cacheSize -> cacheSize
    void upload(android.content.Context,cn.bmob.v3.listener.UploadFileListener) -> upload
    void uploadblock(android.content.Context,cn.bmob.v3.listener.UploadFileListener) -> uploadblock
    void delete(android.content.Context) -> delete
    void delete(android.content.Context,cn.bmob.v3.listener.DeleteListener) -> delete
    void loadImageThumbnail(android.content.Context,android.widget.ImageView,int,int) -> loadImageThumbnail
    void loadImageThumbnail(android.content.Context,android.widget.ImageView,int,int,int) -> loadImageThumbnail
    void loadImage(android.content.Context,android.widget.ImageView) -> loadImage
    void loadImage(android.content.Context,android.widget.ImageView,int,int) -> loadImage
    java.lang.String getUrl() -> getUrl
    void setUrl(java.lang.String) -> setUrl
    java.lang.String getFileUrl() -> getFileUrl
    java.lang.String getGroup() -> getGroup
    void setGroup(java.lang.String) -> setGroup
    java.lang.String getFilename() -> getFilename
    void setFilename(java.lang.String) -> setFilename
    void Code(cn.bmob.v3.datatype.BmobFile,java.lang.String) -> Code
    void V(cn.bmob.v3.datatype.BmobFile,java.lang.String) -> V
cn.bmob.v3.datatype.BmobFile$1 -> cn.bmob.v3.datatype.BmobFile$1:
    cn.bmob.v3.datatype.BmobFile aa -> aa
    android.content.Context S -> S
    cn.bmob.v3.listener.UploadFileListener ab -> ab
    void run() -> run
    cn.bmob.v3.datatype.BmobFile Code(cn.bmob.v3.datatype.BmobFile$1) -> Code
cn.bmob.v3.datatype.BmobFile$1$1 -> cn.bmob.v3.datatype.BmobFile$1$1:
    cn.bmob.v3.datatype.BmobFile$1 ac -> ac
    cn.bmob.v3.listener.UploadFileListener ab -> ab
    void onSuccess(j.madness) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
    void onStart() -> onStart
    void onFinish() -> onFinish
cn.bmob.v3.datatype.BmobFile$2 -> cn.bmob.v3.datatype.BmobFile$2:
    cn.bmob.v3.datatype.BmobFile aa -> aa
    android.content.Context S -> S
    cn.bmob.v3.listener.UploadFileListener ab -> ab
    void run() -> run
    cn.bmob.v3.datatype.BmobFile Code(cn.bmob.v3.datatype.BmobFile$2) -> Code
cn.bmob.v3.datatype.BmobFile$2$1 -> cn.bmob.v3.datatype.BmobFile$2$1:
    cn.bmob.v3.datatype.BmobFile$2 ad -> ad
    cn.bmob.v3.listener.UploadFileListener ab -> ab
    void onSuccess(j.madness) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
    void onStart() -> onStart
    void onFinish() -> onFinish
cn.bmob.v3.datatype.BmobFile$3 -> cn.bmob.v3.datatype.BmobFile$3:
    cn.bmob.v3.listener.DeleteListener c -> c
    void onSuccess(j.madness) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
    void onStart() -> onStart
    void onFinish() -> onFinish
cn.bmob.v3.datatype.BmobFile$4 -> cn.bmob.v3.datatype.BmobFile$4:
    android.widget.ImageView ae -> ae
    void onSuccess(j.madness) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
cn.bmob.v3.datatype.BmobFile$5 -> cn.bmob.v3.datatype.BmobFile$5:
    android.widget.ImageView ae -> ae
    void Code(h.method) -> Code
    void Code(i.From$of) -> Code
cn.bmob.v3.datatype.BmobFile$6 -> cn.bmob.v3.datatype.BmobFile$6:
    android.widget.ImageView ae -> ae
    void Code(h.method) -> Code
    void Code(i.From$of) -> Code
cn.bmob.v3.datatype.BmobGeoPoint -> cn.bmob.v3.datatype.BmobGeoPoint:
    long serialVersionUID -> serialVersionUID
    double EARTH_MEAN_RADIUS_KM -> EARTH_MEAN_RADIUS_KM
    double EARTH_MEAN_RADIUS_MILE -> EARTH_MEAN_RADIUS_MILE
    java.lang.Double latitude -> latitude
    java.lang.Double longitude -> longitude
    java.lang.String __type -> __type
    void setLatitude(double) -> setLatitude
    double getLatitude() -> getLatitude
    void setLongitude(double) -> setLongitude
    double getLongitude() -> getLongitude
    double distanceInRadiansTo(cn.bmob.v3.datatype.BmobGeoPoint) -> distanceInRadiansTo
    double distanceInKilometersTo(cn.bmob.v3.datatype.BmobGeoPoint) -> distanceInKilometersTo
    double distanceInMilesTo(cn.bmob.v3.datatype.BmobGeoPoint) -> distanceInMilesTo
cn.bmob.v3.datatype.BmobPointer -> cn.bmob.v3.datatype.BmobPointer:
    long serialVersionUID -> serialVersionUID
    java.lang.String __type -> __type
    java.lang.String className -> className
    java.lang.String objectId -> objectId
    org.json.JSONObject params -> params
    cn.bmob.v3.requestmanager.thing requestCommand -> requestCommand
    a.thing rApi$6fc396a8 -> rApi$6fc396a8
    java.lang.String getClassName() -> getClassName
    void setClassName(java.lang.String) -> setClassName
    java.lang.String getObjectId() -> getObjectId
    void setObjectId(java.lang.String) -> setObjectId
    void getObject(android.content.Context,cn.bmob.v3.listener.GetListener) -> getObject
cn.bmob.v3.datatype.BmobRelation -> cn.bmob.v3.datatype.BmobRelation:
    long serialVersionUID -> serialVersionUID
    java.lang.String __op -> __op
    java.util.List objects -> objects
    void add(java.lang.Object) -> add
    void remove(java.lang.Object) -> remove
    void isRemove(boolean) -> isRemove
    java.lang.String get__op() -> get__op
    java.util.List getObjects() -> getObjects
    void setObjects(java.util.List) -> setObjects
cn.bmob.v3.listener.BmobUpdateListener -> cn.bmob.v3.listener.BmobUpdateListener:
    void onUpdateReturned(int,cn.bmob.v3.update.UpdateResponse) -> onUpdateReturned
cn.bmob.v3.listener.CloudCodeListener -> cn.bmob.v3.listener.CloudCodeListener:
    void onSuccess(java.lang.Object) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
cn.bmob.v3.listener.CountListener -> cn.bmob.v3.listener.CountListener:
    void onSuccess(int) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
cn.bmob.v3.listener.DeleteListener -> cn.bmob.v3.listener.DeleteListener:
    void onSuccess() -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
    void onStart() -> onStart
    void onFinish() -> onFinish
cn.bmob.v3.listener.EmailVerifyListener -> cn.bmob.v3.listener.EmailVerifyListener:
    void onSuccess() -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
cn.bmob.v3.listener.FindCallback -> cn.bmob.v3.listener.FindCallback:
    void onSuccess(org.json.JSONArray) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
cn.bmob.v3.listener.FindListener -> cn.bmob.v3.listener.FindListener:
    void onSuccess(java.util.List) -> onSuccess
    void onError(int,java.lang.String) -> onError
    void onStart() -> onStart
    void onFinish() -> onFinish
cn.bmob.v3.listener.GetCallback -> cn.bmob.v3.listener.GetCallback:
    void onSuccess(org.json.JSONObject) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
cn.bmob.v3.listener.GetListener -> cn.bmob.v3.listener.GetListener:
    void onSuccess(java.lang.Object) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
    void onStart() -> onStart
    void onFinish() -> onFinish
cn.bmob.v3.listener.GetServerTimeListener -> cn.bmob.v3.listener.GetServerTimeListener:
    void onSuccess(long) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
cn.bmob.v3.listener.OtherLoginListener -> cn.bmob.v3.listener.OtherLoginListener:
    void onSuccess(org.json.JSONObject) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
cn.bmob.v3.listener.PushListener -> cn.bmob.v3.listener.PushListener:
    void onSuccess() -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
cn.bmob.v3.listener.ResetPasswordListener -> cn.bmob.v3.listener.ResetPasswordListener:
    void onSuccess() -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
cn.bmob.v3.listener.SaveListener -> cn.bmob.v3.listener.SaveListener:
    void onSuccess() -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
    void onStart() -> onStart
    void onFinish() -> onFinish
cn.bmob.v3.listener.ThumbnailUrlListener -> cn.bmob.v3.listener.ThumbnailUrlListener:
    void onSuccess(java.lang.String) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
cn.bmob.v3.listener.UpdateListener -> cn.bmob.v3.listener.UpdateListener:
    void onSuccess() -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
    void onStart() -> onStart
    void onFinish() -> onFinish
cn.bmob.v3.listener.UploadFileListener -> cn.bmob.v3.listener.UploadFileListener:
    void onProgress(java.lang.Integer) -> onProgress
    void onSuccess() -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
    void onStart() -> onStart
    void onFinish() -> onFinish
cn.bmob.v3.listener.ValueEventListener -> cn.bmob.v3.listener.ValueEventListener:
    void onConnectCompleted() -> onConnectCompleted
    void onDataChange(org.json.JSONObject) -> onDataChange
cn.bmob.v3.listener.XListener -> cn.bmob.v3.listener.XListener:
    void onSuccess(j.madness) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
    void onStart() -> onStart
    void onFinish() -> onFinish
cn.bmob.v3.requestmanager.ApiResult -> cn.bmob.v3.requestmanager.ApiResult:
    j.madness data -> data
    cn.bmob.v3.requestmanager.Result result -> result
    j.madness getData() -> getData
    void setData(j.madness) -> setData
    cn.bmob.v3.requestmanager.Result getResult() -> getResult
    void setResult(cn.bmob.v3.requestmanager.Result) -> setResult
    java.lang.String toString() -> toString
cn.bmob.v3.requestmanager.Result -> cn.bmob.v3.requestmanager.Result:
    int code -> code
    java.lang.String message -> message
    int getCode() -> getCode
    void setCode(int) -> setCode
    java.lang.String getMessage() -> getMessage
    void setMessage(java.lang.String) -> setMessage
cn.bmob.v3.requestmanager.This -> cn.bmob.v3.requestmanager.This:
    a.thing af -> af
    h.be$thing ag -> ag
    h.be Code(h.Tempest) -> Code
    java.util.Map getHeaders() -> getHeaders
    void Code(java.lang.Object) -> Code
cn.bmob.v3.requestmanager.thing -> cn.bmob.v3.requestmanager.thing:
    android.content.Context mContext -> mContext
    a.thing ah -> ah
    h.this ai -> ai
    cn.bmob.v3.requestmanager.thing aj -> aj
    cn.bmob.v3.requestmanager.thing I(android.content.Context) -> I
    h.this Z(android.content.Context) -> Z
    cn.bmob.v3.requestmanager.thing Code(a.thing) -> Code
    void Code(cn.bmob.v3.listener.XListener) -> Code
    void Code(java.lang.reflect.Type,cn.bmob.v3.listener.FindListener,boolean) -> Code
    void Code(java.lang.reflect.Type,cn.bmob.v3.listener.GetListener,boolean) -> Code
    boolean Code(java.lang.reflect.Type,cn.bmob.v3.listener.FindListener,long) -> Code
    boolean Code(java.lang.reflect.Type,cn.bmob.v3.listener.GetListener,long) -> Code
    void Code(cn.bmob.v3.requestmanager.thing,java.lang.String) -> Code
    java.util.Map B(android.content.Context) -> B
    java.lang.String getInstallationId(android.content.Context) -> getInstallationId
    java.lang.String C(android.content.Context) -> C
    java.lang.String V() -> V
    java.lang.String S(android.content.Context) -> S
    boolean Code(android.content.Context,java.lang.String) -> Code
    boolean Code(java.lang.String,int,int) -> Code
cn.bmob.v3.requestmanager.thing$1 -> cn.bmob.v3.requestmanager.thing$1:
    cn.bmob.v3.listener.XListener X -> X
    void V(java.lang.Object) -> V
cn.bmob.v3.requestmanager.thing$2 -> cn.bmob.v3.requestmanager.thing$2:
    cn.bmob.v3.listener.XListener X -> X
    void Code(h.method) -> Code
cn.bmob.v3.requestmanager.thing$3 -> cn.bmob.v3.requestmanager.thing$3:
    cn.bmob.v3.requestmanager.thing ak -> ak
    boolean al -> al
    java.lang.reflect.Type am -> am
    cn.bmob.v3.listener.FindListener r -> r
    void onSuccess(j.madness) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
    void onStart() -> onStart
    void onFinish() -> onFinish
cn.bmob.v3.requestmanager.thing$4 -> cn.bmob.v3.requestmanager.thing$4:
    cn.bmob.v3.requestmanager.thing ak -> ak
    boolean al -> al
    java.lang.reflect.Type am -> am
    cn.bmob.v3.listener.GetListener an -> an
    void onSuccess(j.madness) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
    void onStart() -> onStart
    void onFinish() -> onFinish
cn.bmob.v3.update.AppVersion -> cn.bmob.v3.update.AppVersion:
    long serialVersionUID -> serialVersionUID
    java.lang.String update_log -> update_log
    java.lang.String version -> version
    java.lang.Integer version_i -> version_i
    java.lang.Boolean isforce -> isforce
    cn.bmob.v3.datatype.BmobFile path -> path
    java.lang.String target_size -> target_size
    java.lang.String platform -> platform
    java.lang.String channel -> channel
    java.lang.String android_url -> android_url
    java.lang.String ios_url -> ios_url
    java.lang.String getUpdate_log() -> getUpdate_log
    void setUpdate_log(java.lang.String) -> setUpdate_log
    java.lang.String getVersion() -> getVersion
    void setVersion(java.lang.String) -> setVersion
    java.lang.Integer getVersion_i() -> getVersion_i
    void setVersion_i(java.lang.Integer) -> setVersion_i
    java.lang.Boolean getIsforce() -> getIsforce
    void setIsforce(java.lang.Boolean) -> setIsforce
    cn.bmob.v3.datatype.BmobFile getPath() -> getPath
    void setPath(cn.bmob.v3.datatype.BmobFile) -> setPath
    java.lang.String getTarget_size() -> getTarget_size
    void setTarget_size(java.lang.String) -> setTarget_size
    java.lang.String getPlatform() -> getPlatform
    void setPlatform(java.lang.String) -> setPlatform
    java.lang.String getChannel() -> getChannel
    void setChannel(java.lang.String) -> setChannel
    java.lang.String getAndroid_url() -> getAndroid_url
    void setAndroid_url(java.lang.String) -> setAndroid_url
    java.lang.String getIos_url() -> getIos_url
    void setIos_url(java.lang.String) -> setIos_url
cn.bmob.v3.update.BmobUpdateAgent -> cn.bmob.v3.update.BmobUpdateAgent:
    cn.bmob.v3.listener.BmobUpdateListener ax -> ax
    void initAppVersion(android.content.Context) -> initAppVersion
    void update(android.content.Context) -> update
    void forceUpdate(android.content.Context) -> forceUpdate
    void silentUpdate(android.content.Context) -> silentUpdate
    void setDefault() -> setDefault
    void setUpdateOnlyWifi(boolean) -> setUpdateOnlyWifi
    void setUpdateCheckConfig(boolean) -> setUpdateCheckConfig
    void setUpdateListener(cn.bmob.v3.listener.BmobUpdateListener) -> setUpdateListener
    void Code(int,android.content.Context,cn.bmob.v3.update.UpdateResponse,java.io.File) -> Code
    boolean F(android.content.Context) -> F
    void startInstall(android.content.Context,java.io.File) -> startInstall
    void D(android.content.Context) -> D
    java.util.List L(android.content.Context) -> L
    void add2IgnoreVersion(android.content.Context,java.lang.String) -> add2IgnoreVersion
    cn.bmob.v3.listener.BmobUpdateListener Z() -> Z
    void Code(android.content.Context,cn.bmob.v3.update.UpdateResponse,java.io.File,boolean) -> Code
    boolean V(android.content.Context,java.lang.String) -> V
cn.bmob.v3.update.BmobUpdateAgent$1 -> cn.bmob.v3.update.BmobUpdateAgent$1:
    android.content.Context S -> S
    void onSuccess() -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
cn.bmob.v3.update.BmobUpdateAgent$2 -> cn.bmob.v3.update.BmobUpdateAgent$2:
    android.content.Context S -> S
    void onSuccess(org.json.JSONArray) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
cn.bmob.v3.update.UpdateDialogActivity -> cn.bmob.v3.update.UpdateDialogActivity:
    cn.bmob.v3.update.UpdateResponse ay -> ay
    int a -> a
    int az -> az
    int aA -> aA
    int aB -> aB
    java.io.File file -> file
    boolean aC -> aC
    void onCreate(android.os.Bundle) -> onCreate
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onClick(android.view.View) -> onClick
    void onDestroy() -> onDestroy
cn.bmob.v3.update.UpdateDialogActivity$1 -> cn.bmob.v3.update.UpdateDialogActivity$1:
    cn.bmob.v3.update.UpdateDialogActivity aD -> aD
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
cn.bmob.v3.update.UpdateResponse -> cn.bmob.v3.update.UpdateResponse:
    long serialVersionUID -> serialVersionUID
    java.lang.String path -> path
    java.lang.String path_md5 -> path_md5
    java.lang.String version -> version
    int version_i -> version_i
    java.lang.String updateLog -> updateLog
    boolean delta -> delta
    java.lang.String size -> size
    java.lang.String target_size -> target_size
    boolean isforce -> isforce
    java.lang.String getUpdateInfo(android.content.Context,boolean) -> getUpdateInfo
cn.bmob.v3.update.UpdateStatus -> cn.bmob.v3.update.UpdateStatus:
    int Yes -> Yes
    int No -> No
    int NoneWifi -> NoneWifi
    int IGNORED -> IGNORED
    int Timeout -> Timeout
    int IsUpdate -> IsUpdate
    int Update -> Update
    int NotNow -> NotNow
    int STYLE_DIALOG -> STYLE_DIALOG
    int STYLE_NOTIFICATION -> STYLE_NOTIFICATION
    int DOWNLOAD_COMPLETE_FAIL -> DOWNLOAD_COMPLETE_FAIL
    int DOWNLOAD_COMPLETE_SUCCESS -> DOWNLOAD_COMPLETE_SUCCESS
    int DOWNLOAD_NEED_RESTART -> DOWNLOAD_NEED_RESTART
cn.thinkit.libtmfe.test.JNI -> cn.thinkit.libtmfe.test.JNI:
    int mfeInit() -> mfeInit
    int mfeInit(int,int) -> mfeInit
    int mfeExit() -> mfeExit
    int mfeOpen() -> mfeOpen
    int mfeClose() -> mfeClose
    int mfeStart() -> mfeStart
    int mfeStop() -> mfeStop
    int mfeSendData(short[],int) -> mfeSendData
    int mfeGetCallbackData(byte[],int) -> mfeGetCallbackData
    int mfeDetect() -> mfeDetect
com.baidu.location.BDErrorReport -> com.baidu.location.BDErrorReport:
    java.lang.String a -> a
    void onReportResult(boolean) -> onReportResult
    int setErrorInfo(boolean,double,double,boolean,java.lang.String,double,double,java.lang.String,java.lang.String) -> setErrorInfo
    android.os.Bundle getErrorInfo() -> getErrorInfo
com.baidu.location.BDGeofence -> com.baidu.location.BDGeofence:
    int GEOFENCE_TRANSITION_ENTER -> GEOFENCE_TRANSITION_ENTER
    java.lang.String COORD_TYPE_BD09 -> COORD_TYPE_BD09
    java.lang.String COORD_TYPE_BD09LL -> COORD_TYPE_BD09LL
    java.lang.String COORD_TYPE_GCJ -> COORD_TYPE_GCJ
    int RADIUS_TYPE_SMALL -> RADIUS_TYPE_SMALL
    java.lang.String getGeofenceId() -> getGeofenceId
com.baidu.location.BDGeofence$Builder -> com.baidu.location.BDGeofence$Builder:
    java.lang.String do -> do
    double for -> for
    double try -> try
    int a -> a
    boolean new -> new
    long if -> if
    java.lang.String int -> int
    com.baidu.location.BDGeofence$Builder setExpirationDruation(long) -> setExpirationDruation
    com.baidu.location.BDGeofence$Builder setCircularRegion(double,double,int) -> setCircularRegion
    com.baidu.location.BDGeofence$Builder setGeofenceId(java.lang.String) -> setGeofenceId
    com.baidu.location.BDGeofence$Builder setCoordType(java.lang.String) -> setCoordType
    com.baidu.location.BDGeofence build() -> build
com.baidu.location.BDLocation -> com.baidu.location.BDLocation:
    int TypeNone -> TypeNone
    int TypeGpsLocation -> TypeGpsLocation
    int TypeCriteriaException -> TypeCriteriaException
    int TypeNetWorkException -> TypeNetWorkException
    int TypeOffLineLocation -> TypeOffLineLocation
    int TypeOffLineLocationFail -> TypeOffLineLocationFail
    int TypeOffLineLocationNetworkFail -> TypeOffLineLocationNetworkFail
    int TypeNetWorkLocation -> TypeNetWorkLocation
    int TypeCacheLocation -> TypeCacheLocation
    int TypeServerError -> TypeServerError
    int OPERATORS_TYPE_UNKONW -> OPERATORS_TYPE_UNKONW
    int OPERATORS_TYPE_MOBILE -> OPERATORS_TYPE_MOBILE
    int OPERATORS_TYPE_UNICOM -> OPERATORS_TYPE_UNICOM
    int OPERATORS_TYPE_TELECOMU -> OPERATORS_TYPE_TELECOMU
    int gU -> gU
    java.lang.String gY -> gY
    double gH -> gH
    double gV -> gV
    boolean gJ -> gJ
    double gN -> gN
    boolean gK -> gK
    float gX -> gX
    boolean gQ -> gQ
    float gS -> gS
    boolean gW -> gW
    int gG -> gG
    float gM -> gM
    java.lang.String gZ -> gZ
    boolean gT -> gT
    java.lang.String gF -> gF
    boolean gO -> gO
    com.baidu.location.BDLocation$a gP -> gP
    java.lang.String gI -> gI
    java.lang.String gR -> gR
    int g0 -> g0
    java.lang.String gL -> gL
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String bm() -> bm
    void if(java.lang.Boolean) -> if
    boolean isCellChangeFlag() -> isCellChangeFlag
    java.lang.String getTime() -> getTime
    void setTime(java.lang.String) -> setTime
    double getLatitude() -> getLatitude
    void setLatitude(double) -> setLatitude
    double getLongitude() -> getLongitude
    void setLongitude(double) -> setLongitude
    double getAltitude() -> getAltitude
    void setAltitude(double) -> setAltitude
    float getSpeed() -> getSpeed
    void setSpeed(float) -> setSpeed
    float getRadius() -> getRadius
    void setRadius(float) -> setRadius
    java.lang.String getCoorType() -> getCoorType
    void setCoorType(java.lang.String) -> setCoorType
    void setAddrStr(java.lang.String) -> setAddrStr
    boolean hasAltitude() -> hasAltitude
    boolean hasSpeed() -> hasSpeed
    boolean hasRadius() -> hasRadius
    com.baidu.location.BDLocation p(java.lang.String) -> p
    void setLocType(int) -> setLocType
    int getLocType() -> getLocType
    void setSatelliteNumber(int) -> setSatelliteNumber
    int getSatelliteNumber() -> getSatelliteNumber
    float getDirection() -> getDirection
    void setDirection(float) -> setDirection
    boolean hasSateNumber() -> hasSateNumber
    boolean hasAddr() -> hasAddr
    java.lang.String getAddrStr() -> getAddrStr
    java.lang.String getProvince() -> getProvince
    java.lang.String getCity() -> getCity
    java.lang.String getCityCode() -> getCityCode
    java.lang.String getDistrict() -> getDistrict
    java.lang.String getStreet() -> getStreet
    java.lang.String getStreetNumber() -> getStreetNumber
    java.lang.String getFloor() -> getFloor
    java.lang.String getNetworkLocationType() -> getNetworkLocationType
    int getOperators() -> getOperators
    void byte(int) -> byte
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String bn() -> bn
    java.lang.String getAdUrl(java.lang.String) -> getAdUrl
    java.lang.String bo() -> bo
    void internalSet(int,java.lang.String) -> internalSet
com.baidu.location.BDLocation$1 -> com.baidu.location.BDLocation$1:
    com.baidu.location.BDLocation a(android.os.Parcel) -> a
    com.baidu.location.BDLocation[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.location.BDLocation$a -> com.baidu.location.BDLocation$a:
    java.lang.String if -> if
    java.lang.String new -> new
    java.lang.String int -> int
    java.lang.String byte -> byte
    java.lang.String do -> do
    java.lang.String for -> for
    java.lang.String try -> try
    com.baidu.location.BDLocation a -> a
com.baidu.location.BDLocationListener -> com.baidu.location.BDLocationListener:
    void onReceiveLocation(com.baidu.location.BDLocation) -> onReceiveLocation
com.baidu.location.BDLocationStatusCodes -> com.baidu.location.BDLocationStatusCodes:
    int SUCCESS -> SUCCESS
    int ERROR -> ERROR
    int GEOFENCE_NOT_AVAIABLE -> GEOFENCE_NOT_AVAIABLE
    int GEOFENCE_TOO_MANY_GEOFENCES -> GEOFENCE_TOO_MANY_GEOFENCES
    int GEOFENCE_SERVICE_NO_ALIVIABLE -> GEOFENCE_SERVICE_NO_ALIVIABLE
    int getStatusCode(int) -> getStatusCode
com.baidu.location.BDNotifyListener -> com.baidu.location.BDNotifyListener:
    double mLatitude -> mLatitude
    double mLongitude -> mLongitude
    float mRadius -> mRadius
    float differDistance -> differDistance
    java.lang.String mCoorType -> mCoorType
    double mLatitudeC -> mLatitudeC
    double mLongitudeC -> mLongitudeC
    int Notified -> Notified
    boolean isAdded -> isAdded
    com.baidu.location.z mNotifyCache -> mNotifyCache
    void SetNotifyLocation(double,double,float,java.lang.String) -> SetNotifyLocation
    void onNotify(com.baidu.location.BDLocation,float) -> onNotify
com.baidu.location.CommonEncrypt -> com.baidu.location.CommonEncrypt:
    boolean a -> a
    byte[] encrypt(byte[]) -> encrypt
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(byte[]) -> a
com.baidu.location.GeofenceClient -> com.baidu.location.GeofenceClient:
    int bj -> bj
    java.lang.String BUNDLE_FOR_GEOFENCE_ID -> BUNDLE_FOR_GEOFENCE_ID
    android.content.Context bf -> bf
    boolean bl -> bl
    android.os.Messenger bk -> bk
    com.baidu.location.GeofenceClient$a bm -> bm
    android.os.Messenger bi -> bi
    com.baidu.location.GeofenceClient$OnGeofenceTriggerListener bg -> bg
    long bn -> bn
    android.content.ServiceConnection bh -> bh
    void start() -> start
    void void() -> void
    void setInterval(long) -> setInterval
    long d() -> d
    boolean isStarted() -> isStarted
    void registerGeofenceTriggerListener(com.baidu.location.GeofenceClient$OnGeofenceTriggerListener) -> registerGeofenceTriggerListener
    void addBDGeofence(com.baidu.location.BDGeofence,com.baidu.location.GeofenceClient$OnAddBDGeofencesResultListener) -> addBDGeofence
    void removeBDGeofences(java.util.List,com.baidu.location.GeofenceClient$OnRemoveBDGeofencesResultListener) -> removeBDGeofences
    void for(java.lang.String) -> for
    void int(java.lang.String) -> int
    void startGeofenceScann() -> startGeofenceScann
    void stop() -> stop
    void long() -> long
    android.os.Messenger if(com.baidu.location.GeofenceClient,android.os.Messenger) -> if
    android.os.Messenger if(com.baidu.location.GeofenceClient) -> if
    boolean if(com.baidu.location.GeofenceClient,boolean) -> if
    void do(com.baidu.location.GeofenceClient,java.lang.String) -> do
    void do(com.baidu.location.GeofenceClient) -> do
    void if(com.baidu.location.GeofenceClient,java.lang.String) -> if
com.baidu.location.GeofenceClient$1 -> com.baidu.location.GeofenceClient$1:
    com.baidu.location.GeofenceClient a -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.baidu.location.GeofenceClient$OnAddBDGeofencesResultListener -> com.baidu.location.GeofenceClient$OnAddBDGeofencesResultListener:
    void onAddBDGeofencesResult(int,java.lang.String) -> onAddBDGeofencesResult
com.baidu.location.GeofenceClient$OnGeofenceTriggerListener -> com.baidu.location.GeofenceClient$OnGeofenceTriggerListener:
    void onGeofenceTrigger(java.lang.String) -> onGeofenceTrigger
    void onGeofenceExit(java.lang.String) -> onGeofenceExit
com.baidu.location.GeofenceClient$OnRemoveBDGeofencesResultListener -> com.baidu.location.GeofenceClient$OnRemoveBDGeofencesResultListener:
    void onRemoveBDGeofencesByRequestIdsResult(int,java.lang.String[]) -> onRemoveBDGeofencesByRequestIdsResult
com.baidu.location.GeofenceClient$a -> com.baidu.location.GeofenceClient$a:
    com.baidu.location.GeofenceClient a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.Jni -> com.baidu.location.Jni:
    int ff -> ff
    int fd -> fd
    int fe -> fe
    int fa -> fa
    int fb -> fb
    int e8 -> e8
    int e7 -> e7
    int e9 -> e9
    boolean fc -> fc
    java.lang.String a(byte[],int) -> a
    java.lang.String b(double,double,int,int) -> b
    java.lang.String c(byte[],int) -> c
    java.lang.String g(byte[]) -> g
    void f(byte[],byte[]) -> f
    java.lang.String i(java.lang.String) -> i
    java.lang.String l(java.lang.String) -> l
    java.lang.String j(java.lang.String) -> j
    double[] if(double,double,java.lang.String) -> if
    void int(java.lang.String,java.lang.String) -> int
    java.lang.String k(java.lang.String) -> k
com.baidu.location.LLSInterface -> com.baidu.location.LLSInterface:
    void onCreate(android.content.Context) -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean onUnBind(android.content.Intent) -> onUnBind
    void onDestroy() -> onDestroy
    double getVersion() -> getVersion
com.baidu.location.LocationClient -> com.baidu.location.LocationClient:
    java.lang.String jq -> jq
    int jt -> jt
    int jS -> jS
    int jB -> jB
    int j4 -> j4
    int jO -> jO
    int jR -> jR
    int jH -> jH
    int jC -> jC
    int jF -> jF
    int jo -> jo
    int j1 -> j1
    int jP -> jP
    int jx -> jx
    long jU -> jU
    java.lang.String j3 -> j3
    com.baidu.location.LocationClientOption jN -> jN
    boolean jT -> jT
    android.content.Context jK -> jK
    android.os.Messenger jL -> jL
    com.baidu.location.LocationClient$a jp -> jp
    android.os.Messenger jJ -> jJ
    java.util.ArrayList j5 -> j5
    com.baidu.location.BDLocation j0 -> j0
    boolean jE -> jE
    boolean jY -> jY
    boolean jG -> jG
    com.baidu.location.LocationClient$b ju -> ju
    boolean jn -> jn
    java.lang.Object jr -> jr
    long jM -> jM
    long jV -> jV
    com.baidu.location.z jw -> jw
    boolean jZ -> jZ
    com.baidu.location.BDLocationListener jD -> jD
    java.lang.String j2 -> j2
    java.lang.String jX -> jX
    boolean jA -> jA
    java.lang.Boolean jz -> jz
    java.lang.Boolean jv -> jv
    java.lang.Boolean jQ -> jQ
    boolean jI -> jI
    android.content.ServiceConnection jW -> jW
    long jy -> jy
    com.baidu.location.BDErrorReport js -> js
    com.baidu.location.LocationClientOption getLocOption() -> getLocOption
    void setLocOption(com.baidu.location.LocationClientOption) -> setLocOption
    boolean updateLocation(android.location.Location) -> updateLocation
    void requestNotifyLocation() -> requestNotifyLocation
    int requestOfflineLocation() -> requestOfflineLocation
    void cB() -> cB
    int requestLocation() -> requestLocation
    boolean isStarted() -> isStarted
    com.baidu.location.BDLocation getLastKnownLocation() -> getLastKnownLocation
    java.lang.String getVersion() -> getVersion
    void start() -> start
    void cy() -> cy
    void stop() -> stop
    void cz() -> cz
    void registerNotify(com.baidu.location.BDNotifyListener) -> registerNotify
    void l(android.os.Message) -> l
    void removeNotifyEvent(com.baidu.location.BDNotifyListener) -> removeNotifyEvent
    void q(android.os.Message) -> q
    void n(android.os.Message) -> n
    android.os.Bundle cx() -> cx
    android.os.Bundle cw() -> cw
    void registerNotifyLocationListener(com.baidu.location.BDLocationListener) -> registerNotifyLocationListener
    void s(android.os.Message) -> s
    void registerLocationListener(com.baidu.location.BDLocationListener) -> registerLocationListener
    void r(android.os.Message) -> r
    void unRegisterLocationListener(com.baidu.location.BDLocationListener) -> unRegisterLocationListener
    void m(android.os.Message) -> m
    void cA() -> cA
    void o(android.os.Message) -> o
    void if(android.os.Message,int) -> if
    void p(android.os.Message) -> p
    void char(int) -> char
    void setForBaiduMap(boolean) -> setForBaiduMap
    void setDebug(boolean) -> setDebug
    boolean notifyError() -> notifyError
    int reportErrorWithInfo(com.baidu.location.BDErrorReport) -> reportErrorWithInfo
    void cancleError() -> cancleError
    void goto(boolean) -> goto
    boolean else(int) -> else
    java.lang.String getAccessKey() -> getAccessKey
    android.os.Messenger if(com.baidu.location.LocationClient,android.os.Messenger) -> if
    android.os.Messenger char(com.baidu.location.LocationClient) -> char
    boolean if(com.baidu.location.LocationClient,boolean) -> if
    android.os.Messenger new(com.baidu.location.LocationClient) -> new
    android.os.Bundle long(com.baidu.location.LocationClient) -> long
    com.baidu.location.LocationClientOption else(com.baidu.location.LocationClient) -> else
    java.lang.Boolean if(com.baidu.location.LocationClient) -> if
    java.lang.Boolean if(com.baidu.location.LocationClient,java.lang.Boolean) -> if
    com.baidu.location.LocationClient$a byte(com.baidu.location.LocationClient) -> byte
    java.lang.Object for(com.baidu.location.LocationClient) -> for
    boolean int(com.baidu.location.LocationClient,boolean) -> int
    java.util.ArrayList goto(com.baidu.location.LocationClient) -> goto
    void for(com.baidu.location.LocationClient,android.os.Message) -> for
    void do(com.baidu.location.LocationClient,android.os.Message) -> do
    void if(com.baidu.location.LocationClient,android.os.Message) -> if
    void case(com.baidu.location.LocationClient,android.os.Message) -> case
    void byte(com.baidu.location.LocationClient,android.os.Message) -> byte
    void new(com.baidu.location.LocationClient,android.os.Message) -> new
    void do(com.baidu.location.LocationClient) -> do
    void try(com.baidu.location.LocationClient) -> try
    void case(com.baidu.location.LocationClient) -> case
    void int(com.baidu.location.LocationClient,android.os.Message) -> int
    void int(com.baidu.location.LocationClient) -> int
    boolean for(com.baidu.location.LocationClient,boolean) -> for
    void if(com.baidu.location.LocationClient,android.os.Message,int) -> if
    void try(com.baidu.location.LocationClient,android.os.Message) -> try
    void do(com.baidu.location.LocationClient,boolean) -> do
com.baidu.location.LocationClient$1 -> com.baidu.location.LocationClient$1:
    com.baidu.location.LocationClient a -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.baidu.location.LocationClient$a -> com.baidu.location.LocationClient$a:
    com.baidu.location.LocationClient a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.LocationClient$b -> com.baidu.location.LocationClient$b:
    com.baidu.location.LocationClient a -> a
    void run() -> run
com.baidu.location.LocationClientOption -> com.baidu.location.LocationClientOption:
    int MIN_SCAN_SPAN -> MIN_SCAN_SPAN
    int MIN_SCAN_SPAN_NETWORK -> MIN_SCAN_SPAN_NETWORK
    int byte -> byte
    int void -> void
    int try -> try
    java.lang.String do -> do
    java.lang.String else -> else
    boolean for -> for
    int int -> int
    int d -> d
    java.lang.String if -> if
    int h -> h
    boolean goto -> goto
    boolean a -> a
    boolean new -> new
    boolean e -> e
    float c -> c
    int long -> long
    java.lang.String case -> case
    boolean b -> b
    boolean char -> char
    boolean g -> g
    com.baidu.location.LocationClientOption$LocationMode f -> f
    boolean equals(com.baidu.location.LocationClientOption) -> equals
    java.lang.String getCoorType() -> getCoorType
    void setCoorType(java.lang.String) -> setCoorType
    java.lang.String getAddrType() -> getAddrType
    void setIsNeedAddress(boolean) -> setIsNeedAddress
    boolean isOpenGps() -> isOpenGps
    void setOpenGps(boolean) -> setOpenGps
    boolean isLocationNotify() -> isLocationNotify
    void setLocationNotify(boolean) -> setLocationNotify
    int getScanSpan() -> getScanSpan
    void setScanSpan(int) -> setScanSpan
    int getTimeOut() -> getTimeOut
    void setTimeOut(int) -> setTimeOut
    java.lang.String getProdName() -> getProdName
    void setProdName(java.lang.String) -> setProdName
    void setLocationMode(com.baidu.location.LocationClientOption$LocationMode) -> setLocationMode
    com.baidu.location.LocationClientOption$LocationMode getLocationMode() -> getLocationMode
    void setNeedDeviceDirect(boolean) -> setNeedDeviceDirect
    boolean a() -> a
    void SetIgnoreCacheException(boolean) -> SetIgnoreCacheException
    void setIgnoreKillProcess(boolean) -> setIgnoreKillProcess
com.baidu.location.LocationClientOption$1 -> com.baidu.location.LocationClientOption$1:
    int[] a -> a
com.baidu.location.LocationClientOption$LocationMode -> com.baidu.location.LocationClientOption$LocationMode:
    com.baidu.location.LocationClientOption$LocationMode Hight_Accuracy -> Hight_Accuracy
    com.baidu.location.LocationClientOption$LocationMode Battery_Saving -> Battery_Saving
    com.baidu.location.LocationClientOption$LocationMode Device_Sensors -> Device_Sensors
    com.baidu.location.LocationClientOption$LocationMode[] a -> a
    com.baidu.location.LocationClientOption$LocationMode[] values() -> values
    com.baidu.location.LocationClientOption$LocationMode valueOf(java.lang.String) -> valueOf
com.baidu.location.a -> com.baidu.location.a:
    java.lang.Boolean kX -> kX
    java.lang.Boolean kS -> kS
    char kT -> kT
    java.lang.String kU -> kU
    int kW -> kW
    java.lang.String kR -> kR
    java.text.SimpleDateFormat kY -> kY
    java.text.SimpleDateFormat kV -> kV
    void if(java.lang.String,java.lang.Object) -> if
    void int(java.lang.String,java.lang.Object) -> int
    void new(java.lang.String,java.lang.Object) -> new
    void do(java.lang.String,java.lang.Object) -> do
    void for(java.lang.String,java.lang.Object) -> for
    void case(java.lang.String,java.lang.String) -> case
    void goto(java.lang.String,java.lang.String) -> goto
    void byte(java.lang.String,java.lang.String) -> byte
    void char(java.lang.String,java.lang.String) -> char
    void else(java.lang.String,java.lang.String) -> else
    void if(java.lang.String,java.lang.String,char) -> if
    void int(java.lang.String,java.lang.String,java.lang.String) -> int
    void c0() -> c0
    java.util.Date c1() -> c1
com.baidu.location.a.a -> com.baidu.location.a.a:
    java.lang.String goto -> goto
    java.lang.String do -> do
    java.lang.String for -> for
    java.lang.String char -> char
    java.lang.String int -> int
    java.lang.String byte -> byte
    java.lang.String else -> else
    java.lang.String if -> if
    java.lang.String b -> b
    java.lang.String try -> try
    java.lang.String new -> new
    java.lang.String case -> case
    java.lang.String void -> void
    java.lang.String long -> long
    java.lang.String a -> a
com.baidu.location.a.b -> com.baidu.location.a.b:
    java.lang.String a -> a
    java.lang.String if -> if
    java.lang.String new -> new
    java.lang.String for -> for
    java.lang.String int -> int
    java.lang.String do -> do
com.baidu.location.a0 -> com.baidu.location.a0:
    int iT -> iT
    int jb -> jb
    int iU -> iU
    int jd -> jd
    long i2 -> i2
    int iW -> iW
    java.lang.String ji -> ji
    java.lang.String ja -> ja
    java.lang.String jk -> jk
    java.lang.String i4 -> i4
    java.lang.String jh -> jh
    java.lang.String iR -> iR
    java.lang.String iZ -> iZ
    boolean iX -> iX
    java.util.List jl -> jl
    java.util.List iS -> iS
    android.os.PowerManager$WakeLock i9 -> i9
    android.os.HandlerThread je -> je
    com.baidu.location.a0$d i1 -> i1
    com.baidu.location.a0$c i8 -> i8
    boolean iY -> iY
    java.lang.String i0 -> i0
    java.lang.String i7 -> i7
    com.baidu.location.ar$b jm -> jm
    com.baidu.location.ar$b jj -> jj
    java.lang.String iV -> iV
    android.os.Messenger jg -> jg
    int jc -> jc
    java.util.Map i6 -> i6
    com.baidu.location.a0 jf -> jf
    android.os.Handler i5 -> i5
    boolean i3 -> i3
    com.baidu.location.a0 cq() -> cq
    void cv() -> cv
    void for(java.util.List) -> for
    void ct() -> ct
    void for(com.baidu.location.aq) -> for
    java.util.List else(boolean) -> else
    boolean cs() -> cs
    void byte(android.content.Context) -> byte
    void cu() -> cu
    void if(android.content.Context,android.os.Message) -> if
    void new(android.content.Context) -> new
    void try(android.content.Context) -> try
    void if(android.content.Context,int) -> if
    java.util.List for(java.lang.String,boolean) -> for
    java.util.List if(java.util.List,boolean) -> if
    java.util.Map cr() -> cr
    boolean do(com.baidu.location.a0,boolean) -> do
    java.lang.String do(com.baidu.location.a0,java.lang.String) -> do
    com.baidu.location.ar$b if(com.baidu.location.a0,com.baidu.location.ar$b) -> if
    boolean try(com.baidu.location.a0) -> try
    boolean if(com.baidu.location.a0,boolean) -> if
    java.util.Map goto(com.baidu.location.a0) -> goto
    android.os.Messenger char(com.baidu.location.a0) -> char
    java.util.List for(com.baidu.location.a0,boolean) -> for
    java.lang.String case(com.baidu.location.a0) -> case
    java.lang.String for(com.baidu.location.a0) -> for
    boolean else(com.baidu.location.a0) -> else
    boolean new(com.baidu.location.a0) -> new
    com.baidu.location.ar$b int(com.baidu.location.a0) -> int
    java.lang.String if(com.baidu.location.a0,java.lang.String) -> if
    java.util.List if(com.baidu.location.a0,java.util.List) -> if
    java.util.List do(com.baidu.location.a0,java.util.List) -> do
    void for(com.baidu.location.a0,java.util.List) -> for
    void do(com.baidu.location.a0) -> do
    void if(com.baidu.location.a0,android.content.Context) -> if
    com.baidu.location.a0$d if(com.baidu.location.a0) -> if
    android.os.Handler byte(com.baidu.location.a0) -> byte
com.baidu.location.a0$1 -> com.baidu.location.a0$1:
com.baidu.location.a0$a -> com.baidu.location.a0$a:
    java.lang.String dQ -> dQ
    java.lang.String dT -> dT
    java.lang.String dS -> dS
    java.lang.String dU -> dU
    java.lang.String dW -> dW
    com.baidu.location.aq dR -> dR
    java.lang.String dV -> dV
    com.baidu.location.a0 dP -> dP
    void T() -> T
    void do(boolean) -> do
    void aj() -> aj
    void ah() -> ah
    void ai() -> ai
com.baidu.location.a0$b -> com.baidu.location.a0$b:
    com.baidu.location.a0 eC -> eC
    void byte(android.os.Message) -> byte
    void at() -> at
com.baidu.location.a0$c -> com.baidu.location.a0$c:
    com.baidu.location.a0 a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.location.a0$d -> com.baidu.location.a0$d:
    com.baidu.location.a0 kQ -> kQ
    void run() -> run
com.baidu.location.aa -> com.baidu.location.aa:
    com.baidu.location.aa gu -> gu
    com.baidu.location.aa bg() -> bg
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    void if(java.io.File,java.lang.String,java.lang.String) -> if
    void bh() -> bh
    java.lang.String if(java.lang.Throwable) -> if
    boolean new(java.lang.String,java.lang.String) -> new
com.baidu.location.ab -> com.baidu.location.ab:
    com.baidu.location.ab$a gD -> gD
    android.os.Messenger gz -> gz
    android.content.Context gy -> gy
    boolean gv -> gv
    android.os.Looper gB -> gB
    android.os.HandlerThread gA -> gA
    boolean gx -> gx
    long gC -> gC
    boolean gE -> gE
    long gw -> gw
    void onCreate(android.content.Context) -> onCreate
    void bl() -> bl
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onDestroy() -> onDestroy
    void bk() -> bk
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    android.os.Handler bj() -> bj
    long bi() -> bi
    void h(android.os.Message) -> h
    void e(android.os.Message) -> e
    void i(android.os.Message) -> i
    void d(android.os.Message) -> d
    boolean onUnBind(android.content.Intent) -> onUnBind
    double getVersion() -> getVersion
    void for(com.baidu.location.ab,android.os.Message) -> for
    void if(com.baidu.location.ab,android.os.Message) -> if
    void do(com.baidu.location.ab,android.os.Message) -> do
    void int(com.baidu.location.ab,android.os.Message) -> int
    void do(com.baidu.location.ab) -> do
    void if(com.baidu.location.ab) -> if
com.baidu.location.ab$a -> com.baidu.location.ab$a:
    com.baidu.location.ab a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.ac -> com.baidu.location.ac:
    boolean R -> R
    boolean S -> S
com.baidu.location.ad -> com.baidu.location.ad:
    int kn -> kn
    int j8 -> j8
    android.hardware.SensorManager kk -> kk
    android.hardware.Sensor j7 -> j7
    android.hardware.Sensor kd -> kd
    android.os.Handler kf -> kf
    com.baidu.location.ad kg -> kg
    boolean ke -> ke
    boolean kc -> kc
    boolean ka -> ka
    boolean j9 -> j9
    java.lang.StringBuffer kl -> kl
    java.lang.StringBuffer kj -> kj
    java.lang.Runnable km -> km
    java.lang.Runnable j6 -> j6
    int ki -> ki
    int kb -> kb
    boolean kh -> kh
    com.baidu.location.ad cM() -> cM
    void goto(int) -> goto
    boolean long(int) -> long
    void if(java.io.RandomAccessFile,int) -> if
    void d(int) -> d
    boolean cQ() -> cQ
    boolean if(java.io.File) -> if
    java.lang.String void(int) -> void
    java.lang.String e(int) -> e
    java.lang.String cR() -> cR
    boolean if(java.io.File,int) -> if
    java.lang.String cN() -> cN
    java.lang.String cH() -> cH
    java.lang.String cG() -> cG
    void cO() -> cO
    void cK() -> cK
    void cJ() -> cJ
    void cP() -> cP
    void cF() -> cF
    void cL() -> cL
    void cE() -> cE
    void cI() -> cI
    void cC() -> cC
    void cD() -> cD
    void do(java.lang.StringBuffer) -> do
    void if(java.lang.StringBuffer) -> if
    void if(java.lang.StringBuffer,java.lang.StringBuffer,java.lang.String) -> if
    void if(java.lang.StringBuffer,java.io.File) -> if
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    java.lang.Runnable for(com.baidu.location.ad) -> for
    android.os.Handler if(com.baidu.location.ad) -> if
    java.lang.Runnable do(com.baidu.location.ad) -> do
com.baidu.location.ad$1 -> com.baidu.location.ad$1:
    com.baidu.location.ad a -> a
    void run() -> run
com.baidu.location.ad$2 -> com.baidu.location.ad$2:
    com.baidu.location.ad a -> a
    void run() -> run
com.baidu.location.ad$3 -> com.baidu.location.ad$3:
    com.baidu.location.ad a -> a
    void run() -> run
com.baidu.location.ad$a -> com.baidu.location.ad$a:
    boolean if -> if
    java.lang.StringBuffer do -> do
    com.baidu.location.ad a -> a
    void if() -> if
    void a() -> a
    void do() -> do
com.baidu.location.ad$b -> com.baidu.location.ad$b:
    com.baidu.location.ad a -> a
com.baidu.location.ae -> com.baidu.location.ae:
    com.baidu.location.ae g2 -> g2
    android.os.Handler g1 -> g1
    com.baidu.location.ae bp() -> bp
    void bt() -> bt
    void br() -> br
    boolean bs() -> bs
    boolean bq() -> bq
com.baidu.location.af -> com.baidu.location.af:
    float[] g4 -> g4
    float[] g8 -> g8
    float[] g7 -> g7
    android.hardware.SensorManager g6 -> g6
    com.baidu.location.af g9 -> g9
    float g5 -> g5
    boolean g3 -> g3
    com.baidu.location.af bw() -> bw
    void bx() -> bx
    void bv() -> bv
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void try(boolean) -> try
    boolean by() -> by
    float bu() -> bu
com.baidu.location.ag -> com.baidu.location.ag:
    com.baidu.location.ar$b ek -> ek
    com.baidu.location.t$a eh -> eh
    boolean ef -> ef
    boolean ej -> ej
    boolean ei -> ei
    boolean ed -> ed
    java.lang.String ee -> ee
    android.os.Handler eg -> eg
    void byte(android.os.Message) -> byte
    void at() -> at
    java.lang.String e(java.lang.String) -> e
com.baidu.location.ag$a -> com.baidu.location.ag$a:
    java.lang.String dy -> dy
    java.lang.String dx -> dx
    com.baidu.location.ag dw -> dw
    void T() -> T
    void do(boolean) -> do
    void d(java.lang.String) -> d
com.baidu.location.ag$b -> com.baidu.location.ag$b:
    com.baidu.location.ag a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.ah -> com.baidu.location.ah:
    com.baidu.location.ah eo -> eo
    int eA -> eA
    int el -> el
    boolean ew -> ew
    com.baidu.location.as er -> er
    com.baidu.location.ag$a em -> em
    java.lang.String eB -> eB
    com.baidu.location.BDLocation ey -> ey
    com.baidu.location.BDLocation ez -> ez
    com.baidu.location.ar$b eu -> eu
    com.baidu.location.t$a et -> et
    boolean ex -> ex
    boolean en -> en
    boolean ev -> ev
    long eq -> eq
    long es -> es
    int ep -> ep
    android.os.Handler eg -> eg
    com.baidu.location.ah ay() -> ay
    void case(android.os.Message) -> case
    void aC() -> aC
    void ax() -> ax
    void else(android.os.Message) -> else
    void goto(android.os.Message) -> goto
    void char(android.os.Message) -> char
    void aB() -> aB
    boolean if(com.baidu.location.ar$b) -> if
    boolean au() -> au
    boolean aA() -> aA
    boolean if(com.baidu.location.t$a) -> if
    void aE() -> aE
    void aw() -> aw
    void byte(android.os.Message) -> byte
    void at() -> at
    void az() -> az
    void for(com.baidu.location.BDLocation) -> for
    void av() -> av
    void aD() -> aD
    boolean do(com.baidu.location.ah) -> do
    boolean if(com.baidu.location.ah,boolean) -> if
    void if(com.baidu.location.ah) -> if
com.baidu.location.ah$1 -> com.baidu.location.ah$1:
com.baidu.location.ah$a -> com.baidu.location.ah$a:
    com.baidu.location.ah a -> a
    void run() -> run
com.baidu.location.ai -> com.baidu.location.ai:
    com.baidu.location.ai hb -> hb
    android.os.Handler hc -> hc
    boolean ha -> ha
    boolean hd -> hd
    com.baidu.location.ai bA() -> bA
    void bz() -> bz
    void bC() -> bC
    void bB() -> bB
    void for(com.baidu.location.ai) -> for
    boolean if(com.baidu.location.ai,boolean) -> if
    boolean do(com.baidu.location.ai) -> do
    android.os.Handler if(com.baidu.location.ai) -> if
com.baidu.location.ai$1 -> com.baidu.location.ai$1:
    com.baidu.location.ai a -> a
    void run() -> run
com.baidu.location.ai$2 -> com.baidu.location.ai$2:
    com.baidu.location.ai a -> a
    void run() -> run
com.baidu.location.aj -> com.baidu.location.aj:
    android.hardware.SensorManager hC -> hC
    boolean hD -> hD
    int hr -> hr
    android.hardware.Sensor ht -> ht
    long hh -> hh
    int hw -> hw
    int hg -> hg
    float hA -> hA
    float hj -> hj
    float hz -> hz
    int hu -> hu
    float[] hi -> hi
    float[] hv -> hv
    int hx -> hx
    double[] hy -> hy
    int hB -> hB
    int he -> he
    java.util.Timer hq -> hq
    int hs -> hs
    double[] hm -> hm
    int ho -> ho
    double hl -> hl
    int hf -> hf
    long hp -> hp
    int hk -> hk
    android.hardware.SensorEventListener hn -> hn
    void bH() -> bH
    void bI() -> bI
    void bG() -> bG
    void do(double) -> do
    boolean if(double) -> if
    float[] if(float,float,float) -> if
    double if(double[]) -> if
    void case(int) -> case
    int bF() -> bF
    int bD() -> bD
    void bE() -> bE
    float[] if(com.baidu.location.aj,float[]) -> if
    float[] if(com.baidu.location.aj,float,float,float) -> if
    int do(com.baidu.location.aj) -> do
    int for(com.baidu.location.aj) -> for
    int if(com.baidu.location.aj,int) -> if
    void if(com.baidu.location.aj) -> if
com.baidu.location.aj$1 -> com.baidu.location.aj$1:
    com.baidu.location.aj a -> a
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
com.baidu.location.aj$2 -> com.baidu.location.aj$2:
    com.baidu.location.aj a -> a
    void run() -> run
com.baidu.location.ak -> com.baidu.location.ak:
    com.baidu.location.ak goto -> goto
    java.lang.String int -> int
    java.lang.String byte -> byte
    java.lang.String else -> else
    java.lang.String new -> new
    boolean a -> a
    java.lang.String case -> case
    java.lang.String do -> do
    com.baidu.location.ak$a try -> try
    long char -> char
    long for -> for
    long if -> if
    com.baidu.location.ak a() -> a
    void do() -> do
    void if() -> if
    void a(android.os.Message) -> a
    void a(java.lang.String) -> a
    void if(java.lang.String) -> if
    java.lang.String a(com.baidu.location.ak) -> a
    java.lang.String if(com.baidu.location.ak,java.lang.String) -> if
    java.lang.String if(com.baidu.location.ak) -> if
    java.lang.String a(com.baidu.location.ak,java.lang.String) -> a
    long do(com.baidu.location.ak) -> do
    long for(com.baidu.location.ak) -> for
    long a(com.baidu.location.ak,long) -> a
com.baidu.location.ak$a -> com.baidu.location.ak$a:
    boolean dC -> dC
    java.lang.String dA -> dA
    android.os.Messenger dB -> dB
    com.baidu.location.ak dz -> dz
    void T() -> T
    void do(boolean) -> do
    void try(android.os.Message) -> try
com.baidu.location.al -> com.baidu.location.al:
com.baidu.location.am -> com.baidu.location.am:
    java.lang.String hG -> hG
    double hL -> hL
    int hK -> hK
    java.lang.String hJ -> hJ
    java.lang.String hH -> hH
    java.lang.String[] hF -> hF
    java.lang.String[] hI -> hI
    com.baidu.location.am hE -> hE
    com.baidu.location.am bQ() -> bQ
    void new(com.baidu.location.BDLocation) -> new
    com.baidu.location.am$a bN() -> bN
    void bO() -> bO
    double bP() -> bP
    double bK() -> bK
    double bJ() -> bJ
    long bL() -> bL
    boolean bM() -> bM
    int bR() -> bR
com.baidu.location.am$a -> com.baidu.location.am$a:
    double int -> int
    double try -> try
    double if -> if
    long new -> new
    boolean for -> for
    int do -> do
    com.baidu.location.am a -> a
com.baidu.location.an -> com.baidu.location.an:
    java.lang.Object a(java.lang.Object) -> a
    java.lang.Object a(java.lang.Object,java.lang.Object) -> a
    void a(boolean) -> a
    void a(boolean,java.lang.Object) -> a
    void if(boolean,java.lang.Object) -> if
    void a(boolean,java.lang.String,java.lang.Object[]) -> a
    void if(boolean) -> if
com.baidu.location.ao -> com.baidu.location.ao:
    android.os.HandlerThread a -> a
    android.os.HandlerThread a() -> a
com.baidu.location.ap -> com.baidu.location.ap:
    com.baidu.location.ap do() -> do
    void if() -> if
    void a() -> a
com.baidu.location.aq -> com.baidu.location.aq:
    int d -> d
    long void -> void
    int int -> int
    int e -> e
    java.lang.String for -> for
    java.lang.String byte -> byte
    int else -> else
    int case -> case
    int i -> i
    java.lang.String do -> do
    double goto -> goto
    double try -> try
    int a -> a
    float b -> b
    long long -> long
    int c -> c
    java.lang.String new -> new
    boolean f -> f
    boolean char -> char
    boolean if -> if
    long h -> h
    int g -> g
    int try() -> try
    void a(int) -> a
    java.lang.String getGeofenceId() -> getGeofenceId
    double case() -> case
    double a() -> a
    float do() -> do
    void a(float) -> a
    long goto() -> goto
    java.lang.String int() -> int
    boolean byte() -> byte
    void do(boolean) -> do
    boolean for() -> for
    void if(boolean) -> if
    boolean if() -> if
    void a(boolean) -> a
    long else() -> else
    void a(long) -> a
    int char() -> char
    int new() -> new
    void if(java.lang.String) -> if
    void do(int) -> do
    void a(double,double) -> a
    void a(java.lang.String) -> a
    void if(long) -> if
    java.lang.String if(int) -> if
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
com.baidu.location.ar -> com.baidu.location.ar:
    int hN -> hN
    long hM -> hM
    long hS -> hS
    long hU -> hU
    com.baidu.location.ar hW -> hW
    android.net.wifi.WifiManager hV -> hV
    com.baidu.location.ar$a h0 -> h0
    com.baidu.location.ar$b hQ -> hQ
    long hT -> hT
    long hZ -> hZ
    boolean hY -> hY
    java.lang.Object hR -> hR
    java.lang.reflect.Method hX -> hX
    boolean hO -> hO
    long hP -> hP
    com.baidu.location.ar bW() -> bW
    void b2() -> b2
    void bT() -> bT
    boolean b3() -> b3
    boolean bX() -> bX
    boolean b5() -> b5
    boolean bU() -> bU
    java.lang.String b4() -> b4
    com.baidu.location.ar$b bS() -> bS
    com.baidu.location.ar$b b1() -> b1
    com.baidu.location.ar$b bY() -> bY
    void bV() -> bV
    boolean bZ() -> bZ
    boolean if(com.baidu.location.ar$b,com.baidu.location.ar$b,float) -> if
    double if(com.baidu.location.ar$b,com.baidu.location.ar$b) -> if
    java.lang.String b0() -> b0
    boolean q(java.lang.String) -> q
    long if(com.baidu.location.ar,long) -> if
    void if(com.baidu.location.ar) -> if
    boolean if(com.baidu.location.ar,java.lang.String) -> if
    long do(com.baidu.location.ar) -> do
com.baidu.location.ar$1 -> com.baidu.location.ar$1:
com.baidu.location.ar$a -> com.baidu.location.ar$a:
    com.baidu.location.ar a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.location.ar$b -> com.baidu.location.ar$b:
    java.util.List for -> for
    long if -> if
    long int -> int
    boolean do -> do
    boolean new -> new
    com.baidu.location.ar a -> a
    java.lang.String int() -> int
    int try() -> try
    java.lang.String char() -> char
    java.lang.String byte() -> byte
    java.lang.String a(int) -> a
    java.lang.String else() -> else
    void a() -> a
    java.lang.String if(int) -> if
    boolean if(com.baidu.location.ar$b) -> if
    boolean do(com.baidu.location.ar$b) -> do
    boolean a(com.baidu.location.ar$b) -> a
    int do() -> do
    boolean case() -> case
    boolean for() -> for
    boolean new() -> new
    boolean if() -> if
com.baidu.location.as -> com.baidu.location.as:
    boolean do(com.baidu.location.ar$b) -> do
    int try(com.baidu.location.BDLocation) -> try
    void b6() -> b6
com.baidu.location.at -> com.baidu.location.at:
    boolean kz -> kz
    java.lang.String ky -> ky
    boolean kG -> kG
    java.lang.String ku -> ku
    int kA -> kA
    int kC -> kC
    java.lang.String kE -> kE
    char kx -> kx
    java.lang.String kF -> kF
    boolean kB -> kB
    int kp -> kp
    double kw -> kw
    double ks -> ks
    java.util.List kq -> kq
    boolean kv -> kv
    int kD -> kD
    boolean kr -> kr
    java.lang.String kt -> kt
    int ko -> ko
    void cS() -> cS
    boolean t(java.lang.String) -> t
    boolean cV() -> cV
    int cX() -> cX
    java.lang.String cU() -> cU
    double cW() -> cW
    double cT() -> cT
com.baidu.location.au -> com.baidu.location.au:
    int h4 -> h4
    java.lang.String i -> i
    java.lang.String h2 -> h2
    java.lang.String h5 -> h5
    java.lang.String h7 -> h7
    java.lang.String h9 -> h9
    java.lang.String h6 -> h6
    java.lang.String ih -> ih
    int ie -> ie
    int id -> id
    int h3 -> h3
    int ic -> ic
    android.content.Context h1 -> h1
    com.baidu.location.au$a ig -> ig
    android.os.HandlerThread ib -> ib
    java.lang.Object h8 -> h8
    com.baidu.location.au ia -> ia
    com.baidu.location.au for(android.content.Context) -> for
    void if(com.baidu.location.aq,com.baidu.location.GeofenceClient$OnAddBDGeofencesResultListener) -> if
    void do(com.baidu.location.aq) -> do
    void if(com.baidu.location.aq) -> if
    void do(java.lang.String,boolean) -> do
    void if(java.util.List,com.baidu.location.GeofenceClient$OnRemoveBDGeofencesResultListener) -> if
    long cc() -> cc
    void if(int,java.lang.String,com.baidu.location.GeofenceClient$OnAddBDGeofencesResultListener) -> if
    void if(int,java.lang.String[],com.baidu.location.GeofenceClient$OnRemoveBDGeofencesResultListener) -> if
    void ca() -> ca
    void b7() -> b7
    void cb() -> cb
    int if(com.baidu.location.aq,java.lang.String) -> if
    int do(java.util.List) -> do
    void b9() -> b9
    void b8() -> b8
    void if(com.baidu.location.GeofenceClient$OnAddBDGeofencesResultListener,int,java.lang.String) -> if
    void int(android.content.Context) -> int
    int do(android.content.Context) -> do
    void for(com.baidu.location.au) -> for
    android.content.Context if(com.baidu.location.au) -> if
    void if(com.baidu.location.au,com.baidu.location.GeofenceClient$OnAddBDGeofencesResultListener,int,java.lang.String) -> if
    com.baidu.location.au$a do(com.baidu.location.au) -> do
    void if(com.baidu.location.au,int,java.lang.String,com.baidu.location.GeofenceClient$OnAddBDGeofencesResultListener) -> if
    void if(com.baidu.location.au,int,java.lang.String[],com.baidu.location.GeofenceClient$OnRemoveBDGeofencesResultListener) -> if
    int if(com.baidu.location.au,com.baidu.location.aq,java.lang.String) -> if
    int if(com.baidu.location.au,java.util.List) -> if
com.baidu.location.au$1 -> com.baidu.location.au$1:
    com.baidu.location.aq if -> if
    com.baidu.location.au a -> a
    void run() -> run
com.baidu.location.au$2 -> com.baidu.location.au$2:
    com.baidu.location.aq if -> if
    com.baidu.location.au a -> a
    void run() -> run
com.baidu.location.au$3 -> com.baidu.location.au$3:
    com.baidu.location.au a -> a
    void run() -> run
com.baidu.location.au$a -> com.baidu.location.au$a:
    int if -> if
    int do -> do
    int for -> for
    com.baidu.location.au a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.au$b -> com.baidu.location.au$b:
    java.lang.String dI -> dI
    java.lang.String dG -> dG
    java.lang.String dL -> dL
    java.lang.String dH -> dH
    java.lang.String dN -> dN
    java.lang.String dJ -> dJ
    java.lang.String dE -> dE
    int dF -> dF
    com.baidu.location.aq dO -> dO
    com.baidu.location.GeofenceClient$OnAddBDGeofencesResultListener dD -> dD
    int dM -> dM
    com.baidu.location.au dK -> dK
    void T() -> T
    void do(boolean) -> do
    void ag() -> ag
com.baidu.location.au$c -> com.baidu.location.au$c:
    com.baidu.location.aq do -> do
    java.lang.String if -> if
    com.baidu.location.GeofenceClient$OnAddBDGeofencesResultListener for -> for
    com.baidu.location.au a -> a
    void run() -> run
com.baidu.location.au$d -> com.baidu.location.au$d:
    java.util.List if -> if
    com.baidu.location.GeofenceClient$OnRemoveBDGeofencesResultListener do -> do
    com.baidu.location.au a -> a
    void run() -> run
com.baidu.location.av -> com.baidu.location.av:
    void if() -> if
    void a() -> a
com.baidu.location.aw -> com.baidu.location.aw:
    boolean for -> for
    java.lang.String if -> if
    com.baidu.location.aw$a do -> do
    com.baidu.location.aw a -> a
    com.baidu.location.aw do() -> do
    void for() -> for
    void if() -> if
    java.lang.String a() -> a
    boolean int() -> int
    boolean a(com.baidu.location.aw,boolean) -> a
    java.lang.String a(com.baidu.location.aw,java.lang.String) -> a
    boolean a(com.baidu.location.aw) -> a
com.baidu.location.aw$a -> com.baidu.location.aw$a:
    com.baidu.location.aw a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.location.ax -> com.baidu.location.ax:
    java.lang.String i -> i
    java.lang.String I -> I
    int F -> F
    int byte -> byte
    int for -> for
    int k -> k
    int r -> r
    int O -> O
    int d -> d
    int L -> L
    int Q -> Q
    int else -> else
    int E -> E
    int goto -> goto
    int q -> q
    int K -> K
    int G -> G
    int o -> o
    int void -> void
    int do -> do
    int char -> char
    int p -> p
    int n -> n
    int h -> h
    int x -> x
    int e -> e
    int case -> case
    int C -> C
    int f -> f
    int D -> D
    int A -> A
    int B -> B
    int z -> z
    int m -> m
    int M -> M
    int u -> u
    int s -> s
    int N -> N
    int H -> H
    int w -> w
    int y -> y
    int v -> v
    int try -> try
    int l -> l
    int g -> g
    int int -> int
    int t -> t
    int long -> long
    int if -> if
    int b -> b
    int P -> P
    int j -> j
    int J -> J
    int new -> new
    int c -> c
com.baidu.location.ay -> com.baidu.location.ay:
    com.baidu.location.ay im -> im
    java.lang.String iG -> iG
    boolean iy -> iy
    boolean iE -> iE
    boolean in -> in
    java.lang.String io -> io
    int iC -> iC
    double iv -> iv
    double iu -> iu
    double iz -> iz
    double is -> is
    double ir -> ir
    long ip -> ip
    boolean iw -> iw
    boolean iA -> iA
    int iq -> iq
    int iF -> iF
    java.lang.String it -> it
    java.lang.String iD -> iD
    java.lang.String iB -> iB
    boolean ix -> ix
    com.baidu.location.ay cd() -> cd
    void j(android.os.Message) -> j
    void ci() -> ci
    void ch() -> ch
    void k(android.os.Message) -> k
    com.baidu.location.BDLocation case(boolean) -> case
    void for(com.baidu.location.ar$b) -> for
    void if(com.baidu.location.ar$b,com.baidu.location.BDLocation,android.database.sqlite.SQLiteDatabase) -> if
    void cf() -> cf
    void if(java.lang.String,com.baidu.location.t$a,com.baidu.location.ar$b,com.baidu.location.BDLocation) -> if
    void r(java.lang.String) -> r
    void if(java.lang.String,com.baidu.location.t$a,android.database.sqlite.SQLiteDatabase) -> if
    void cg() -> cg
    java.lang.String byte(boolean) -> byte
    void ce() -> ce
    void do(com.baidu.location.ay) -> do
    boolean if(com.baidu.location.ay,boolean) -> if
    java.lang.String if(com.baidu.location.ay) -> if
    void if(com.baidu.location.ay,java.lang.String,com.baidu.location.t$a,android.database.sqlite.SQLiteDatabase) -> if
    void if(com.baidu.location.ay,com.baidu.location.ar$b,com.baidu.location.BDLocation,android.database.sqlite.SQLiteDatabase) -> if
com.baidu.location.ay$1 -> com.baidu.location.ay$1:
    com.baidu.location.ay a -> a
    void run() -> run
com.baidu.location.ay$a -> com.baidu.location.ay$a:
    com.baidu.location.ay a -> a
    java.lang.Boolean a(java.lang.Boolean[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.baidu.location.ay$b -> com.baidu.location.ay$b:
    com.baidu.location.ay a -> a
    java.lang.Boolean a(java.lang.Object[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.baidu.location.az -> com.baidu.location.az:
    com.baidu.location.az iQ -> iQ
    java.lang.String iL -> iL
    java.lang.String iP -> iP
    java.lang.String iN -> iN
    android.hardware.SensorManager iJ -> iJ
    int iK -> iK
    int iI -> iI
    android.hardware.Sensor iO -> iO
    java.lang.String iH -> iH
    java.lang.String iM -> iM
    com.baidu.location.az cn() -> cn
    void cm() -> cm
    void cp() -> cp
    void try(java.lang.String,java.lang.String) -> try
    java.lang.String ck() -> ck
    java.lang.String co() -> co
    java.lang.String cl() -> cl
    java.lang.String cj() -> cj
    java.lang.String s(java.lang.String) -> s
    java.lang.String char(boolean) -> char
    java.lang.String if(boolean,java.lang.String) -> if
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
com.baidu.location.b -> com.baidu.location.b:
    boolean a -> a
com.baidu.location.b.a.a -> com.baidu.location.b.a.a:
    boolean a -> a
    java.lang.String if -> if
    java.lang.String if(android.content.Context) -> if
    java.lang.String a(android.content.Context) -> a
com.baidu.location.b.a.b -> com.baidu.location.b.a.b:
    java.lang.String do -> do
    boolean a -> a
    java.lang.String int -> int
    java.lang.String for -> for
    java.lang.String if -> if
    java.lang.String a(android.content.Context) -> a
    java.lang.String do(android.content.Context) -> do
    java.lang.String if(android.content.Context) -> if
    void a(android.content.Context,java.lang.String) -> a
    java.lang.String a(java.lang.String) -> a
    void a(java.lang.String,java.lang.String) -> a
com.baidu.location.b.a.b$a -> com.baidu.location.b.a.b$a:
    java.lang.String do -> do
    java.lang.String if -> if
    boolean a -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    com.baidu.location.b.a.b$a a(android.content.Context) -> a
com.baidu.location.b.a.c -> com.baidu.location.b.a.c:
    java.lang.String a(byte[],boolean) -> a
    java.lang.String a(byte[],java.lang.String,boolean) -> a
com.baidu.location.b.b.a -> com.baidu.location.b.b.a:
    java.lang.String if -> if
    java.lang.String a -> a
    byte[] if(java.lang.String,java.lang.String,byte[]) -> if
    byte[] a(java.lang.String,java.lang.String,byte[]) -> a
com.baidu.location.b.b.b -> com.baidu.location.b.b.b:
    byte[] a -> a
    byte[] a(byte[]) -> a
    byte[] a(byte[],int) -> a
    java.lang.String a(byte[],java.lang.String) -> a
com.baidu.location.c -> com.baidu.location.c:
    boolean a3 -> a3
    boolean am -> am
    boolean ah -> ah
    int al -> al
    java.lang.String aN -> aN
    java.lang.String Y -> Y
    java.lang.String a1 -> a1
    java.lang.String aY -> aY
    java.lang.String aE -> aE
    boolean aG -> aG
    boolean aA -> aA
    boolean aC -> aC
    java.lang.String aL -> aL
    java.lang.Process aP -> aP
    java.lang.String aw -> aw
    java.lang.String bc -> bc
    boolean a7 -> a7
    int aM -> aM
    double a9 -> a9
    double an -> an
    double aH -> aH
    double ac -> ac
    int ak -> ak
    byte[] aB -> aB
    boolean ar -> ar
    int ai -> ai
    float ae -> ae
    float aR -> aR
    float ag -> ag
    float aT -> aT
    int aI -> aI
    int W -> W
    int aJ -> aJ
    int X -> X
    int aa -> aa
    int ax -> ax
    int a4 -> a4
    float be -> be
    float bb -> bb
    float ap -> ap
    float a0 -> a0
    int aX -> aX
    float ab -> ab
    int at -> at
    float aU -> aU
    float bd -> bd
    float ba -> ba
    int a8 -> a8
    int a6 -> a6
    int aj -> aj
    boolean az -> az
    boolean aZ -> aZ
    int av -> av
    int as -> as
    int ay -> ay
    long aQ -> aQ
    long aK -> aK
    long ad -> ad
    long ao -> ao
    long aS -> aS
    long aD -> aD
    int a5 -> a5
    int aV -> aV
    int aW -> aW
    int aO -> aO
    float a2 -> a2
    float af -> af
    float Z -> Z
    int aq -> aq
    int aF -> aF
    int au -> au
    int do(java.lang.String,java.lang.String,java.lang.String) -> do
    float if(java.lang.String,java.lang.String,java.lang.String) -> if
    double for(java.lang.String,java.lang.String,java.lang.String) -> for
    java.lang.String if(java.lang.String,java.lang.String,java.lang.String,double) -> if
    java.lang.String new() -> new
    java.lang.String if() -> if
    java.lang.String if(com.baidu.location.t$a,com.baidu.location.ar$b,android.location.Location,java.lang.String,int) -> if
    java.lang.String if(com.baidu.location.t$a,com.baidu.location.ar$b,android.location.Location,java.lang.String) -> if
    void char() -> char
    void case() -> case
    void do(java.lang.String,java.lang.String) -> do
    void if(java.lang.String,java.lang.String) -> if
    void if(java.lang.String) -> if
    boolean if(com.baidu.location.BDLocation) -> if
    void do(java.lang.String) -> do
    java.lang.String for() -> for
    java.lang.String try() -> try
    java.lang.String int() -> int
    java.lang.String do() -> do
    java.lang.String byte() -> byte
    java.lang.String else() -> else
    java.lang.String goto() -> goto
com.baidu.location.d -> com.baidu.location.d:
    java.lang.String c5 -> c5
    java.lang.String c4 -> c4
    java.lang.String c3 -> c3
    android.os.Handler c2 -> c2
    com.baidu.location.d c1 -> c1
    com.baidu.location.d X() -> X
    void Z() -> Z
    android.os.Handler W() -> W
    void T() -> T
    void do(boolean) -> do
    void Y() -> Y
    boolean U() -> U
    void V() -> V
    boolean for(java.lang.String,java.lang.String) -> for
    void if(java.io.File,java.io.File) -> if
    void if(com.baidu.location.d) -> if
    boolean do(com.baidu.location.d) -> do
    void for(com.baidu.location.d) -> for
com.baidu.location.d$1 -> com.baidu.location.d$1:
    com.baidu.location.d a -> a
    void run() -> run
com.baidu.location.d$2 -> com.baidu.location.d$2:
    com.baidu.location.d a -> a
    void run() -> run
com.baidu.location.d$3 -> com.baidu.location.d$3:
    com.baidu.location.d a -> a
    void run() -> run
com.baidu.location.e -> com.baidu.location.e:
    java.lang.String int -> int
    int for -> for
    com.baidu.location.e if -> if
    int do -> do
    int a -> a
    com.baidu.location.e do() -> do
    void a(int,long) -> a
    long a(int) -> a
    long if() -> if
    void a(long) -> a
    long a() -> a
    void if(long) -> if
com.baidu.location.f -> com.baidu.location.f:
    com.baidu.location.LLSInterface ii -> ii
    com.baidu.location.LLSInterface ik -> ik
    com.baidu.location.LLSInterface il -> il
    java.lang.String replaceFileName -> replaceFileName
    java.lang.String ij -> ij
    android.content.Context mC -> mC
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean onUnbind(android.content.Intent) -> onUnbind
    void onDestroy() -> onDestroy
    float getFrameVersion() -> getFrameVersion
    java.lang.String getJarFileName() -> getJarFileName
    android.content.Context getServiceContext() -> getServiceContext
com.baidu.location.g -> com.baidu.location.g:
    boolean bs -> bs
    long bp -> bp
    long bo -> bo
    long bq -> bq
    com.baidu.location.g br -> br
    com.baidu.location.g e() -> e
    void h() -> h
    void try(java.lang.String) -> try
    long new(java.lang.String) -> new
com.baidu.location.h -> com.baidu.location.h:
    com.baidu.location.h a -> a
    com.baidu.location.h for() -> for
    void int() -> int
    void do() -> do
    void if() -> if
    void a() -> a
com.baidu.location.i -> com.baidu.location.i:
    void a(android.content.Context,android.app.PendingIntent,int) -> a
    void a(android.content.Context,android.app.PendingIntent) -> a
com.baidu.location.j -> com.baidu.location.j:
    double kP -> kP
    double kM -> kM
    boolean kJ -> kJ
    long kO -> kO
    double kH -> kH
    double kI -> kI
    int kK -> kK
    int kN -> kN
    com.baidu.location.j kL -> kL
    com.baidu.location.j cZ() -> cZ
    void if(boolean,boolean,double,double) -> if
    void byte(com.baidu.location.BDLocation) -> byte
    java.lang.String cY() -> cY
com.baidu.location.k -> com.baidu.location.k:
    com.baidu.location.k bv -> bv
    java.util.ArrayList bu -> bu
    boolean bw -> bw
    boolean bt -> bt
    com.baidu.location.k p() -> p
    void n() -> n
    boolean k() -> k
    void new(android.os.Message) -> new
    void do(android.os.Message) -> do
    boolean int(android.os.Message) -> int
    java.lang.String if(android.os.Message) -> if
    void if(com.baidu.location.BDLocation,int) -> if
    void do(com.baidu.location.BDLocation) -> do
    void byte(java.lang.String) -> byte
    void if(com.baidu.location.BDLocation,android.os.Message) -> if
    void i() -> i
    java.lang.String o() -> o
    int for(android.os.Message) -> for
    com.baidu.location.k$a if(android.os.Messenger) -> if
    void if(com.baidu.location.k$a) -> if
    void j() -> j
    void l() -> l
    void m() -> m
com.baidu.location.k$a -> com.baidu.location.k$a:
    java.lang.String int -> int
    android.os.Messenger for -> for
    com.baidu.location.LocationClientOption do -> do
    int if -> if
    com.baidu.location.k a -> a
    void a(com.baidu.location.BDLocation) -> a
    void a(com.baidu.location.BDLocation,int) -> a
    void if(com.baidu.location.BDLocation) -> if
    void a() -> a
    void if() -> if
    void a(int) -> a
    void a(int,java.lang.String,com.baidu.location.BDLocation) -> a
    void a(com.baidu.location.k$a,int) -> a
com.baidu.location.l -> com.baidu.location.l:
    java.lang.String bG -> bG
    java.lang.String bZ -> bZ
    java.io.File bD -> bD
    java.io.File b7 -> b7
    int bK -> bK
    int bW -> bW
    int b5 -> b5
    long by -> by
    int b1 -> b1
    android.app.AlarmManager bI -> bI
    com.baidu.location.l$a b8 -> b8
    android.app.PendingIntent bJ -> bJ
    android.content.Context bL -> bL
    long bX -> bX
    long[] bC -> bC
    int bH -> bH
    com.baidu.location.t$a bR -> bR
    java.lang.String bM -> bM
    java.lang.String bN -> bN
    int b3 -> b3
    boolean bF -> bF
    boolean bP -> bP
    boolean b4 -> b4
    android.os.Handler bA -> bA
    int bT -> bT
    boolean bE -> bE
    long bS -> bS
    int b2 -> b2
    long bQ -> bQ
    long bO -> bO
    long b0 -> b0
    java.lang.String bz -> bz
    boolean bB -> bB
    com.baidu.location.l$c bx -> bx
    java.util.ArrayList bY -> bY
    java.util.ArrayList bV -> bV
    long b6 -> b6
    java.lang.String bU -> bU
    void u() -> u
    void v() -> v
    void if(boolean) -> if
    void t() -> t
    void q() -> q
    java.lang.String s() -> s
    boolean r() -> r
    boolean if(double,double) -> if
    android.os.Handler if(com.baidu.location.l) -> if
com.baidu.location.l$1 -> com.baidu.location.l$1:
    com.baidu.location.l a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.l$a -> com.baidu.location.l$a:
    com.baidu.location.l a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.location.l$b -> com.baidu.location.l$b:
    double do -> do
    double if -> if
    java.util.HashMap int -> int
    double for -> for
    com.baidu.location.l a -> a
    double a(com.baidu.location.l$b) -> a
    java.util.HashMap if() -> if
    double a() -> a
com.baidu.location.l$c -> com.baidu.location.l$c:
    boolean if -> if
    com.baidu.location.l a -> a
    void a(android.content.Context) -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.location.m -> com.baidu.location.m:
    java.lang.String do -> do
    int if -> if
    com.baidu.location.m a -> a
    com.baidu.location.m a(android.content.Context) -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    java.lang.String a(java.lang.String,java.lang.String,java.lang.String) -> a
    void a(android.database.sqlite.SQLiteDatabase) -> a
com.baidu.location.n -> com.baidu.location.n:
    float V -> V
    java.lang.String T -> T
    int U -> U
com.baidu.location.o -> com.baidu.location.o:
    java.util.ArrayList di -> di
    boolean de -> de
    long dg -> dg
    long dh -> dh
    int df -> df
    android.os.Handler dj -> dj
    int db -> db
    com.baidu.location.o dd -> dd
    com.baidu.location.o$a dc -> dc
    int da -> da
    com.baidu.location.o ac() -> ac
    void do(int) -> do
    void T() -> T
    void do(boolean) -> do
    boolean for(boolean) -> for
    void ad() -> ad
    boolean ab() -> ab
    void if(com.baidu.location.o) -> if
    android.os.Handler do(com.baidu.location.o) -> do
com.baidu.location.o$1 -> com.baidu.location.o$1:
    com.baidu.location.o a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.o$a -> com.baidu.location.o$a:
    java.lang.String c9 -> c9
    int c7 -> c7
    boolean c8 -> c8
    com.baidu.location.o c6 -> c6
    void T() -> T
    void do(boolean) -> do
    boolean aa() -> aa
com.baidu.location.p -> com.baidu.location.p:
    boolean do(com.baidu.location.ar$b) -> do
    int try(com.baidu.location.BDLocation) -> try
    void b6() -> b6
com.baidu.location.q -> com.baidu.location.q:
    java.util.ArrayList ct -> ct
    java.util.ArrayList ck -> ck
    java.util.ArrayList cz -> cz
    java.util.ArrayList cL -> cL
    java.util.ArrayList cv -> cv
    java.util.ArrayList cE -> cE
    java.lang.String cN -> cN
    java.lang.String cI -> cI
    java.lang.String cH -> cH
    java.lang.String cw -> cw
    java.lang.String cC -> cC
    int ca -> ca
    int cb -> cb
    int cG -> cG
    int cp -> cp
    int cr -> cr
    int cj -> cj
    java.io.File ci -> ci
    int cg -> cg
    int cK -> cK
    int cf -> cf
    int cu -> cu
    int cm -> cm
    int ce -> ce
    int cB -> cB
    int cx -> cx
    double cd -> cd
    double cA -> cA
    double cl -> cl
    double cc -> cc
    int co -> co
    int ch -> ch
    int cJ -> cJ
    android.location.Location cq -> cq
    android.location.Location cD -> cD
    android.location.Location b9 -> b9
    com.baidu.location.ar$b cs -> cs
    com.baidu.location.q$b cy -> cy
    com.baidu.location.q cM -> cM
    int cn -> cn
    long cF -> cF
    com.baidu.location.q x() -> x
    java.lang.String B() -> B
    void do(com.baidu.location.t$a,com.baidu.location.ar$b,android.location.Location,java.lang.String) -> do
    void if(double,double,double,double) -> if
    boolean if(android.location.Location,boolean) -> if
    boolean if(android.location.Location) -> if
    boolean if(android.location.Location,com.baidu.location.ar$b) -> if
    void z() -> z
    void A() -> A
    void E() -> E
    void goto(java.lang.String) -> goto
    void else(java.lang.String) -> else
    void void(java.lang.String) -> void
    int if(java.util.List,int) -> if
    boolean if(int,int,int,int,long) -> if
    void case(java.lang.String) -> case
    void char(java.lang.String) -> char
    void if(int,boolean) -> if
    boolean if(java.lang.String,java.util.List) -> if
    java.lang.String D() -> D
    void w() -> w
    java.lang.String if(int) -> if
    java.lang.String y() -> y
    void if(java.lang.String,int) -> if
    void if(java.lang.String,int,boolean) -> if
    void if(int,int) -> if
    void if(int,int,boolean) -> if
    void C() -> C
    void F() -> F
    void long(java.lang.String) -> long
    java.lang.String if(com.baidu.location.t$a,com.baidu.location.ar$b,android.location.Location,java.lang.String,java.lang.String) -> if
com.baidu.location.q$a -> com.baidu.location.q$a:
    java.lang.String dl -> dl
    com.baidu.location.q dk -> dk
    void T() -> T
    void do(boolean) -> do
    void ae() -> ae
com.baidu.location.q$b -> com.baidu.location.q$b:
    boolean dn -> dn
    int dr -> dr
    int dq -> dq
    java.util.ArrayList dp -> dp
    com.baidu.location.q dm -> dm
    void T() -> T
    void do(boolean) -> do
    void af() -> af
com.baidu.location.r -> com.baidu.location.r:
    com.baidu.location.r cP -> cP
    com.baidu.location.l cO -> cO
    android.os.Handler cQ -> cQ
    com.baidu.location.r H() -> H
    void K() -> K
    void G() -> G
    android.os.Handler I() -> I
    void J() -> J
    void if(com.baidu.location.r) -> if
com.baidu.location.r$a -> com.baidu.location.r$a:
    com.baidu.location.r a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.s -> com.baidu.location.s:
    boolean cV -> cV
    int cU -> cU
    java.lang.String cX -> cX
    int cZ -> cZ
    java.lang.String cR -> cR
    int c0 -> c0
    org.apache.http.HttpEntity cS -> cS
    java.util.List cT -> cT
    java.lang.String cW -> cW
    int cY -> cY
    void T() -> T
    void do(boolean) -> do
    void Q() -> Q
    void N() -> N
    void R() -> R
    void L() -> L
    int P() -> P
    int if(android.content.Context,android.net.NetworkInfo) -> if
    boolean if(android.content.Context) -> if
    void if(com.baidu.location.s) -> if
    int M() -> M
    java.lang.String O() -> O
    int S() -> S
    boolean if(com.baidu.location.s,boolean) -> if
com.baidu.location.s$1 -> com.baidu.location.s$1:
    com.baidu.location.s a -> a
    void run() -> run
com.baidu.location.s$2 -> com.baidu.location.s$2:
    com.baidu.location.s a -> a
    void run() -> run
com.baidu.location.s$3 -> com.baidu.location.s$3:
    com.baidu.location.s a -> a
    void run() -> run
com.baidu.location.t -> com.baidu.location.t:
    com.baidu.location.t d2 -> d2
    android.telephony.TelephonyManager d3 -> d3
    com.baidu.location.t$a dX -> dX
    java.util.List d1 -> d1
    java.lang.String d4 -> d4
    com.baidu.location.t$b d0 -> d0
    boolean ea -> ea
    java.lang.reflect.Method d8 -> d8
    java.lang.reflect.Method d5 -> d5
    java.lang.reflect.Method dZ -> dZ
    java.lang.Class ec -> ec
    long d9 -> d9
    int eb -> eb
    boolean d6 -> d6
    int d7 -> d7
    int dY -> dY
    com.baidu.location.t an() -> an
    void am() -> am
    void as() -> as
    int ap() -> ap
    java.lang.String ao() -> ao
    boolean al() -> al
    com.baidu.location.t$a ak() -> ak
    void if(android.telephony.CellLocation) -> if
    int aq() -> aq
    long ar() -> ar
    com.baidu.location.t$a for(com.baidu.location.t) -> for
    java.util.List do(com.baidu.location.t) -> do
    int new(com.baidu.location.t) -> new
    int if(com.baidu.location.t,int) -> if
    int if(com.baidu.location.t) -> if
    android.telephony.TelephonyManager int(com.baidu.location.t) -> int
    void if(com.baidu.location.t,android.telephony.CellLocation) -> if
com.baidu.location.t$a -> com.baidu.location.t$a:
    int for -> for
    int try -> try
    int do -> do
    int if -> if
    long byte -> byte
    int int -> int
    char new -> new
    com.baidu.location.t a -> a
    boolean a(com.baidu.location.t$a) -> a
    boolean do() -> do
    boolean for() -> for
    java.lang.String a() -> a
    java.lang.String toString() -> toString
    java.lang.String if() -> if
    java.lang.String int() -> int
com.baidu.location.t$b -> com.baidu.location.t$b:
    com.baidu.location.t a -> a
    void onCellLocationChanged(android.telephony.CellLocation) -> onCellLocationChanged
    void onSignalStrengthsChanged(android.telephony.SignalStrength) -> onSignalStrengthsChanged
com.baidu.location.u -> com.baidu.location.u:
    com.baidu.location.u eD -> eD
    int eE -> eE
    com.baidu.location.BDLocation eG -> eG
    long eF -> eF
    com.baidu.location.ag$a eH -> eH
    com.baidu.location.u aG() -> aG
    void long(android.os.Message) -> long
    void void(android.os.Message) -> void
    void aF() -> aF
    void byte(android.os.Message) -> byte
    void at() -> at
com.baidu.location.v -> com.baidu.location.v:
    java.lang.String if(android.content.Context) -> if
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String a(java.security.cert.X509Certificate) -> a
    byte[] a(byte[]) -> a
com.baidu.location.v$a -> com.baidu.location.v$a:
    java.lang.String a(byte[]) -> a
com.baidu.location.w -> com.baidu.location.w:
    com.baidu.location.w e5 -> e5
    java.lang.String eV -> eV
    java.io.File eL -> eL
    int eI -> eI
    int eR -> eR
    int eZ -> eZ
    int e2 -> e2
    int eY -> eY
    int e0 -> e0
    int eK -> eK
    int eM -> eM
    java.lang.StringBuffer eJ -> eJ
    boolean eQ -> eQ
    int eW -> eW
    int e4 -> e4
    long eP -> eP
    long eO -> eO
    long e6 -> e6
    double eT -> eT
    double eU -> eU
    int eN -> eN
    int eS -> eS
    int eX -> eX
    java.lang.String e1 -> e1
    boolean e3 -> e3
    com.baidu.location.w aK() -> aK
    void aL() -> aL
    void aO() -> aO
    boolean do(android.location.Location) -> do
    boolean if(android.location.Location,int,int) -> if
    boolean aN() -> aN
    boolean h(java.lang.String) -> h
    java.lang.String for(int) -> for
    void aI() -> aI
    void aJ() -> aJ
    java.lang.String aM() -> aM
    boolean aH() -> aH
    boolean if(int,int,int) -> if
com.baidu.location.x -> com.baidu.location.x:
    int fH -> fH
    long fD -> fD
    int fM -> fM
    int fC -> fC
    int fs -> fs
    double fq -> fq
    com.baidu.location.x fN -> fN
    android.content.Context fz -> fz
    android.location.LocationManager fk -> fk
    android.location.Location fS -> fS
    com.baidu.location.x$b fL -> fL
    com.baidu.location.x$c fQ -> fQ
    android.location.GpsStatus fg -> fg
    com.baidu.location.x$a fn -> fn
    int fB -> fB
    long fw -> fw
    long ft -> ft
    boolean fl -> fl
    boolean fI -> fI
    java.lang.String fR -> fR
    boolean fP -> fP
    long fA -> fA
    long fU -> fU
    java.lang.String fE -> fE
    java.lang.String fY -> fY
    java.io.File fO -> fO
    android.os.Handler fi -> fi
    int fT -> fT
    int fj -> fj
    int fF -> fF
    int fo -> fo
    int fJ -> fJ
    int fV -> fV
    android.location.Location fm -> fm
    android.location.Location fv -> fv
    android.location.Location fG -> fG
    android.location.Location fy -> fy
    long fK -> fK
    long fZ -> fZ
    long fW -> fW
    long fx -> fx
    java.lang.StringBuilder fp -> fp
    java.lang.String fu -> fu
    int fX -> fX
    int fh -> fh
    java.util.HashMap fr -> fr
    com.baidu.location.x a4() -> a4
    void aU() -> aU
    void if(java.lang.String,android.location.Location) -> if
    void a2() -> a2
    void a3() -> a3
    void aW() -> aW
    java.lang.String aV() -> aV
    void int(boolean) -> int
    java.lang.String aY() -> aY
    java.lang.String case(android.location.Location) -> case
    java.lang.String aP() -> aP
    android.location.Location aS() -> aS
    boolean aT() -> aT
    boolean aR() -> aR
    boolean aQ() -> aQ
    boolean if(android.location.Location,android.location.Location,boolean) -> if
    void int(android.location.Location) -> int
    void for(android.location.Location) -> for
    void if(double,double,float) -> if
    void new(boolean) -> new
    java.lang.String byte(android.location.Location) -> byte
    java.lang.String new(android.location.Location) -> new
    void try(android.location.Location) -> try
    void a0() -> a0
    java.lang.String if(android.location.GpsSatellite,java.util.HashMap) -> if
    int if(java.util.HashMap) -> if
    java.lang.String aX() -> aX
    double[] if(java.util.List) -> if
    double[] do(double,double) -> do
    double[] for(double,double) -> for
    int if(com.baidu.location.at,int) -> if
    boolean a1() -> a1
    void do(com.baidu.location.x,android.location.Location) -> do
    com.baidu.location.x$a for(com.baidu.location.x) -> for
    void if(com.baidu.location.x,java.lang.String,android.location.Location) -> if
    boolean case(com.baidu.location.x) -> case
    long for(com.baidu.location.x,long) -> for
    android.os.Handler byte(com.baidu.location.x) -> byte
    long do(com.baidu.location.x,long) -> do
    void if(com.baidu.location.x,boolean) -> if
    void if(com.baidu.location.x,android.location.Location) -> if
    boolean do(com.baidu.location.x,boolean) -> do
    long if(com.baidu.location.x,long) -> if
    android.location.LocationManager if(com.baidu.location.x) -> if
    android.location.GpsStatus do(com.baidu.location.x) -> do
    android.location.GpsStatus if(com.baidu.location.x,android.location.GpsStatus) -> if
    java.lang.StringBuilder if(java.lang.StringBuilder) -> if
    int do(com.baidu.location.x,int) -> do
    int if(com.baidu.location.x,int) -> if
    java.util.HashMap do(com.baidu.location.x,java.util.HashMap) -> do
    int int(com.baidu.location.x) -> int
    java.util.HashMap new(com.baidu.location.x) -> new
    java.lang.String if(com.baidu.location.x,android.location.GpsSatellite,java.util.HashMap) -> if
    java.lang.StringBuilder aZ() -> aZ
    int int(int) -> int
    int if(com.baidu.location.x,java.util.HashMap) -> if
    long char(com.baidu.location.x) -> char
    int try(com.baidu.location.x) -> try
    int if(com.baidu.location.x,com.baidu.location.at,int) -> if
    java.lang.String m(java.lang.String) -> m
com.baidu.location.x$1 -> com.baidu.location.x$1:
    com.baidu.location.x a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.x$a -> com.baidu.location.x$a:
    long if -> if
    long a -> a
    int char -> char
    boolean try -> try
    boolean byte -> byte
    java.util.List case -> case
    java.lang.String for -> for
    java.lang.String new -> new
    java.lang.String do -> do
    com.baidu.location.x int -> int
    void onGpsStatusChanged(int) -> onGpsStatusChanged
    void onNmeaReceived(long,java.lang.String) -> onNmeaReceived
    void a(java.lang.String) -> a
com.baidu.location.x$b -> com.baidu.location.x$b:
    com.baidu.location.x a -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
com.baidu.location.x$c -> com.baidu.location.x$c:
    long if -> if
    com.baidu.location.x a -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
com.baidu.location.y -> com.baidu.location.y:
    com.baidu.location.y f9 -> f9
    com.baidu.location.y$a f3 -> f3
    long ga -> ga
    boolean f6 -> f6
    boolean f8 -> f8
    boolean gb -> gb
    boolean f0 -> f0
    boolean f1 -> f1
    boolean f5 -> f5
    int f7 -> f7
    java.lang.String f2 -> f2
    int gc -> gc
    int f4 -> f4
    int gd -> gd
    com.baidu.location.y a7() -> a7
    void a9() -> a9
    void ba() -> ba
    boolean o(java.lang.String) -> o
    void a5() -> a5
    void bb() -> bb
    void a8() -> a8
    void n(java.lang.String) -> n
    void if(org.apache.http.HttpEntity) -> if
    void do(org.apache.http.HttpEntity) -> do
    void try(int) -> try
    void a6() -> a6
    void bc() -> bc
    void new(int) -> new
    void if(com.baidu.location.y,org.apache.http.HttpEntity) -> if
    void do(com.baidu.location.y,org.apache.http.HttpEntity) -> do
com.baidu.location.y$a -> com.baidu.location.y$a:
    java.lang.String du -> du
    boolean dt -> dt
    boolean dv -> dv
    com.baidu.location.y ds -> ds
    void T() -> T
    void do(boolean) -> do
    void if(java.lang.String,boolean) -> if
com.baidu.location.z -> com.baidu.location.z:
    java.util.ArrayList gk -> gk
    float go -> go
    com.baidu.location.BDLocation gl -> gl
    long gr -> gr
    com.baidu.location.LocationClient gt -> gt
    android.content.Context gf -> gf
    int ge -> ge
    long gm -> gm
    boolean gq -> gq
    boolean gp -> gp
    android.app.PendingIntent gj -> gj
    android.app.AlarmManager gg -> gg
    com.baidu.location.z$b gn -> gn
    java.lang.String gi -> gi
    com.baidu.location.z$a gh -> gh
    boolean gs -> gs
    void be() -> be
    int do(com.baidu.location.BDNotifyListener) -> do
    void if(com.baidu.location.BDNotifyListener) -> if
    int for(com.baidu.location.BDNotifyListener) -> for
    boolean bf() -> bf
    void bd() -> bd
    void if(long) -> if
    void int(com.baidu.location.BDLocation) -> int
    void if(com.baidu.location.z,com.baidu.location.BDLocation) -> if
    java.util.ArrayList do(com.baidu.location.z) -> do
    com.baidu.location.LocationClient if(com.baidu.location.z) -> if
com.baidu.location.z$a -> com.baidu.location.z$a:
    com.baidu.location.z a -> a
    void onReceiveLocation(com.baidu.location.BDLocation) -> onReceiveLocation
    void a(com.baidu.location.BDLocation) -> a
com.baidu.location.z$b -> com.baidu.location.z$b:
    com.baidu.location.z a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.mapapi.BMapManager -> com.baidu.mapapi.BMapManager:
    com.baidu.platform.comapi.a b -> b
    android.content.Context c -> c
    android.os.Handler d -> d
    com.baidu.mapapi.MKGeneralListener a -> a
    java.lang.String e -> e
    java.lang.String f -> f
    com.baidu.mapapi.utils.f g -> g
    boolean h -> h
    boolean init(java.lang.String,com.baidu.mapapi.MKGeneralListener) -> init
    boolean start() -> start
    boolean stop() -> stop
    void destroy() -> destroy
    android.content.Context getContext() -> getContext
    java.lang.String a(com.baidu.mapapi.BMapManager) -> a
    java.lang.String b(com.baidu.mapapi.BMapManager) -> b
    com.baidu.mapapi.utils.f c(com.baidu.mapapi.BMapManager) -> c
    boolean d(com.baidu.mapapi.BMapManager) -> d
    boolean a(com.baidu.mapapi.BMapManager,boolean) -> a
com.baidu.mapapi.MKGeneralListener -> com.baidu.mapapi.MKGeneralListener:
    void onGetNetworkState(int) -> onGetNetworkState
    void onGetPermissionState(int) -> onGetPermissionState
com.baidu.mapapi.VersionInfo -> com.baidu.mapapi.VersionInfo:
    java.lang.String getApiVersion() -> getApiVersion
com.baidu.mapapi.a -> com.baidu.mapapi.a:
    com.baidu.mapapi.BMapManager a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.mapapi.cloud.Bounds -> com.baidu.mapapi.cloud.Bounds:
    com.baidu.platform.comapi.basestruct.GeoPoint leftBottom -> leftBottom
    com.baidu.platform.comapi.basestruct.GeoPoint rightTop -> rightTop
com.baidu.mapapi.cloud.BoundsSearchInfo -> com.baidu.mapapi.cloud.BoundsSearchInfo:
    java.lang.String queryWords -> queryWords
    com.baidu.mapapi.cloud.Bounds bounds -> bounds
    android.content.ContentValues filter -> filter
    int scope -> scope
    int pageIndex -> pageIndex
    int pageSize -> pageSize
    java.lang.String ak -> ak
    java.lang.String sn -> sn
    int timeStamp -> timeStamp
    java.lang.String a() -> a
com.baidu.mapapi.cloud.CustomPoiInfo -> com.baidu.mapapi.cloud.CustomPoiInfo:
    int uid -> uid
    int databoxId -> databoxId
    java.lang.String name -> name
    java.lang.String address -> address
    java.lang.String telephone -> telephone
    java.lang.String postCode -> postCode
    int provinceId -> provinceId
    int cityId -> cityId
    int districtId -> districtId
    java.lang.String provinceName -> provinceName
    java.lang.String cityName -> cityName
    java.lang.String districtName -> districtName
    float latitude -> latitude
    float longitude -> longitude
    java.lang.String tag -> tag
    int poiType -> poiType
    java.util.Map poiExtend -> poiExtend
com.baidu.mapapi.cloud.DetailResult -> com.baidu.mapapi.cloud.DetailResult:
    int status -> status
    java.lang.String message -> message
    com.baidu.mapapi.cloud.CustomPoiInfo content -> content
com.baidu.mapapi.cloud.DetailSearchInfo -> com.baidu.mapapi.cloud.DetailSearchInfo:
    int id -> id
    int scope -> scope
    java.lang.String ak -> ak
    java.lang.String sn -> sn
    int timeStamp -> timeStamp
    java.lang.String a() -> a
com.baidu.mapapi.cloud.GeoSearchListener -> com.baidu.mapapi.cloud.GeoSearchListener:
    void onGetGeoResult(com.baidu.mapapi.cloud.GeoSearchResult,int,int) -> onGetGeoResult
    void onGetGeoDetailsResult(com.baidu.mapapi.cloud.DetailResult,int,int) -> onGetGeoDetailsResult
com.baidu.mapapi.cloud.GeoSearchManager -> com.baidu.mapapi.cloud.GeoSearchManager:
    int GEO_SEARCH -> GEO_SEARCH
    int GEO_SEARCH_DETAILS -> GEO_SEARCH_DETAILS
    android.os.Bundle d -> d
    com.baidu.mapapi.cloud.GeoSearchManager e -> e
    com.baidu.platform.comjni.map.search.a a -> a
    com.baidu.mapapi.cloud.GeoSearchManager$a b -> b
    android.os.Handler c -> c
    com.baidu.mapapi.cloud.GeoSearchManager getInstance() -> getInstance
    java.lang.String a(int) -> a
    boolean init(com.baidu.mapapi.cloud.GeoSearchListener) -> init
    void destory() -> destory
    boolean searchRegion(com.baidu.mapapi.cloud.RegionSearchInfo) -> searchRegion
    boolean searchNearby(com.baidu.mapapi.cloud.NearbySearchInfo) -> searchNearby
    boolean searchBounds(com.baidu.mapapi.cloud.BoundsSearchInfo) -> searchBounds
    boolean searchDetail(com.baidu.mapapi.cloud.DetailSearchInfo) -> searchDetail
com.baidu.mapapi.cloud.GeoSearchManager$a -> com.baidu.mapapi.cloud.GeoSearchManager$a:
    com.baidu.mapapi.cloud.GeoSearchListener a -> a
    com.baidu.mapapi.cloud.GeoSearchManager b -> b
    com.baidu.mapapi.cloud.GeoSearchManager c -> c
    void a(com.baidu.mapapi.cloud.GeoSearchManager) -> a
    void a(android.os.Message) -> a
com.baidu.mapapi.cloud.GeoSearchResult -> com.baidu.mapapi.cloud.GeoSearchResult:
    int status -> status
    java.lang.String message -> message
    int size -> size
    int total -> total
    java.util.List poiList -> poiList
com.baidu.mapapi.cloud.NearbySearchInfo -> com.baidu.mapapi.cloud.NearbySearchInfo:
    java.lang.String queryWords -> queryWords
    com.baidu.platform.comapi.basestruct.GeoPoint location -> location
    int radius -> radius
    android.content.ContentValues filter -> filter
    int scope -> scope
    int pageIndex -> pageIndex
    int pageSize -> pageSize
    java.lang.String ak -> ak
    java.lang.String sn -> sn
    int timeStamp -> timeStamp
    java.lang.String a() -> a
com.baidu.mapapi.cloud.RegionSearchInfo -> com.baidu.mapapi.cloud.RegionSearchInfo:
    java.lang.String queryWords -> queryWords
    int cityID -> cityID
    java.lang.String cityName -> cityName
    android.content.ContentValues filter -> filter
    int scope -> scope
    int pageIndex -> pageIndex
    int pageSize -> pageSize
    java.lang.String ak -> ak
    java.lang.String sn -> sn
    int timeStamp -> timeStamp
    java.lang.String a() -> a
com.baidu.mapapi.cloud.a -> com.baidu.mapapi.cloud.a:
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.mapapi.map.Geometry -> com.baidu.mapapi.map.Geometry:
    int a -> a
    java.util.ArrayList b -> b
    int c -> c
    void setPoint(com.baidu.platform.comapi.basestruct.GeoPoint,int) -> setPoint
    void setPolyLine(com.baidu.platform.comapi.basestruct.GeoPoint[]) -> setPolyLine
    void setCircle(com.baidu.platform.comapi.basestruct.GeoPoint,int) -> setCircle
    void setEnvelope(com.baidu.platform.comapi.basestruct.GeoPoint,com.baidu.platform.comapi.basestruct.GeoPoint) -> setEnvelope
com.baidu.mapapi.map.Graphic -> com.baidu.mapapi.map.Graphic:
    com.baidu.mapapi.map.Geometry a -> a
    com.baidu.mapapi.map.Symbol b -> b
    long c -> c
    com.baidu.mapapi.map.Geometry getGeometry() -> getGeometry
    com.baidu.mapapi.map.Symbol getSymbol() -> getSymbol
    void a(long) -> a
    long getID() -> getID
com.baidu.mapapi.map.GraphicsOverlay -> com.baidu.mapapi.map.GraphicsOverlay:
    android.os.Bundle a -> a
    com.baidu.mapapi.map.MapView b -> b
    java.util.ArrayList c -> c
    boolean d -> d
    long setData(com.baidu.mapapi.map.Graphic) -> setData
    void a() -> a
    void removeAll() -> removeAll
    void removeGraphic(long) -> removeGraphic
    java.util.ArrayList getAllGraphics() -> getAllGraphics
    boolean b() -> b
    void a(boolean) -> a
com.baidu.mapapi.map.ItemizedOverlay -> com.baidu.mapapi.map.ItemizedOverlay:
    java.util.ArrayList a -> a
    java.util.ArrayList b -> b
    android.graphics.drawable.Drawable c -> c
    com.baidu.mapapi.map.MapView mMapView -> mMapView
    boolean d -> d
    void addItem(com.baidu.mapapi.map.OverlayItem) -> addItem
    void addItem(java.util.List) -> addItem
    void boundCenterBottom(com.baidu.mapapi.map.OverlayItem) -> boundCenterBottom
    void boundCenter(com.baidu.mapapi.map.OverlayItem) -> boundCenter
    java.util.ArrayList getAllItem() -> getAllItem
    com.baidu.mapapi.map.OverlayItem getItem(int) -> getItem
    int getLatSpanE6() -> getLatSpanE6
    int getLonSpanE6() -> getLonSpanE6
    com.baidu.platform.comapi.basestruct.GeoPoint getCenter() -> getCenter
    int b(boolean) -> b
    int getIndexToDraw(int) -> getIndexToDraw
    boolean hitTest(com.baidu.mapapi.map.OverlayItem,android.graphics.drawable.Drawable,int,int) -> hitTest
    boolean onTap(int) -> onTap
    boolean onTap(com.baidu.platform.comapi.basestruct.GeoPoint,com.baidu.mapapi.map.MapView) -> onTap
    void a(java.util.ArrayList) -> a
    int compare(java.lang.Integer,java.lang.Integer) -> compare
    boolean removeItem(com.baidu.mapapi.map.OverlayItem) -> removeItem
    boolean removeAll() -> removeAll
    void reAddAll() -> reAddAll
    void a(boolean) -> a
    boolean a() -> a
    com.baidu.mapapi.map.OverlayItem createItem(int) -> createItem
    int size() -> size
    boolean a(com.baidu.mapapi.map.OverlayItem) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.baidu.mapapi.map.LocationData -> com.baidu.mapapi.map.LocationData:
    double latitude -> latitude
    double longitude -> longitude
    float speed -> speed
    float direction -> direction
    float accuracy -> accuracy
    int satellitesNum -> satellitesNum
    java.lang.String a() -> a
com.baidu.mapapi.map.MKEvent -> com.baidu.mapapi.map.MKEvent:
    int MKEVENT_MAP_MOVE_FINISH -> MKEVENT_MAP_MOVE_FINISH
    int MKEVENT_BUS_DETAIL -> MKEVENT_BUS_DETAIL
    int MKEVENT_SUGGESTION -> MKEVENT_SUGGESTION
    int ERROR_NETWORK_CONNECT -> ERROR_NETWORK_CONNECT
    int ERROR_NETWORK_DATA -> ERROR_NETWORK_DATA
    int ERROR_ROUTE_ADDR -> ERROR_ROUTE_ADDR
    int ERROR_RESULT_NOT_FOUND -> ERROR_RESULT_NOT_FOUND
    int ERROR_PERMISSION_DENIED -> ERROR_PERMISSION_DENIED
    int a -> a
    int b -> b
    int c -> c
com.baidu.mapapi.map.MKMapViewListener -> com.baidu.mapapi.map.MKMapViewListener:
    void onMapMoveFinish() -> onMapMoveFinish
    void onClickMapPoi(com.baidu.mapapi.map.MapPoi) -> onClickMapPoi
    void onGetCurrentMap(android.graphics.Bitmap) -> onGetCurrentMap
    void onMapAnimationFinish() -> onMapAnimationFinish
com.baidu.mapapi.map.MKOLSearchRecord -> com.baidu.mapapi.map.MKOLSearchRecord:
    int cityID -> cityID
    int size -> size
    java.lang.String cityName -> cityName
    int cityType -> cityType
    java.util.ArrayList childCities -> childCities
com.baidu.mapapi.map.MKOLUpdateElement -> com.baidu.mapapi.map.MKOLUpdateElement:
    int UNDEFINED -> UNDEFINED
    int DOWNLOADING -> DOWNLOADING
    int WAITING -> WAITING
    int SUSPENDED -> SUSPENDED
    int FINISHED -> FINISHED
    int eOLDSMd5Error -> eOLDSMd5Error
    int eOLDSNetError -> eOLDSNetError
    int eOLDSIOError -> eOLDSIOError
    int eOLDSWifiError -> eOLDSWifiError
    int eOLDSMissData -> eOLDSMissData
    int cityID -> cityID
    java.lang.String cityName -> cityName
    int ratio -> ratio
    int status -> status
    com.baidu.platform.comapi.basestruct.GeoPoint geoPt -> geoPt
    int size -> size
    int serversize -> serversize
    int level -> level
    boolean update -> update
com.baidu.mapapi.map.MKOfflineMap -> com.baidu.mapapi.map.MKOfflineMap:
    int TYPE_NEW_OFFLINE -> TYPE_NEW_OFFLINE
    int TYPE_DOWNLOAD_UPDATE -> TYPE_DOWNLOAD_UPDATE
    int TYPE_VER_UPDATE -> TYPE_VER_UPDATE
    com.baidu.platform.comapi.map.m a -> a
    com.baidu.mapapi.map.a b -> b
    boolean init(com.baidu.mapapi.map.MapController,com.baidu.mapapi.map.MKOfflineMapListener) -> init
    boolean start(int) -> start
    boolean pause(int) -> pause
    void destroy() -> destroy
    boolean remove(int) -> remove
    java.util.ArrayList getHotCityList() -> getHotCityList
    java.util.ArrayList getOfflineCityList() -> getOfflineCityList
    java.util.ArrayList searchCity(java.lang.String) -> searchCity
    java.util.ArrayList getAllUpdateInfo() -> getAllUpdateInfo
    com.baidu.mapapi.map.MKOLUpdateElement getUpdateInfo(int) -> getUpdateInfo
    int scan() -> scan
    int scan(boolean) -> scan
    com.baidu.mapapi.map.a a(com.baidu.mapapi.map.MKOfflineMap) -> a
com.baidu.mapapi.map.MKOfflineMap$a -> com.baidu.mapapi.map.MKOfflineMap$a:
    com.baidu.mapapi.map.MKOfflineMap a -> a
    void a(int,int) -> a
com.baidu.mapapi.map.MKOfflineMapListener -> com.baidu.mapapi.map.MKOfflineMapListener:
    void onGetOfflineMapState(int,int) -> onGetOfflineMapState
com.baidu.mapapi.map.MapController -> com.baidu.mapapi.map.MapController:
    com.baidu.platform.comapi.map.t a -> a
    com.baidu.mapapi.map.MapView c -> c
    android.os.Message b -> b
    void animateTo(com.baidu.platform.comapi.basestruct.GeoPoint) -> animateTo
    void animateTo(com.baidu.platform.comapi.basestruct.GeoPoint,android.os.Message) -> animateTo
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    void scrollBy(int,int) -> scrollBy
    void enableClick(boolean) -> enableClick
    void setCenter(com.baidu.platform.comapi.basestruct.GeoPoint) -> setCenter
    void setRotation(int) -> setRotation
    void setOverlooking(int) -> setOverlooking
    int setZoom(int) -> setZoom
    boolean zoomIn() -> zoomIn
    boolean zoomInFixing(int,int) -> zoomInFixing
    boolean zoomOut() -> zoomOut
    boolean zoomOutFixing(int,int) -> zoomOutFixing
    void zoomToSpan(int,int) -> zoomToSpan
    boolean handleFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> handleFling
com.baidu.mapapi.map.MapPoi -> com.baidu.mapapi.map.MapPoi:
    java.lang.String strText -> strText
    com.baidu.platform.comapi.basestruct.GeoPoint geoPt -> geoPt
    int offset -> offset
com.baidu.mapapi.map.MapView -> com.baidu.mapapi.map.MapView:
    com.baidu.mapapi.map.MapController d -> d
    com.baidu.platform.comapi.map.y e -> e
    com.baidu.platform.comapi.map.v a -> a
    com.baidu.mapapi.map.MapView$b b -> b
    com.baidu.platform.comapi.map.c c -> c
    int f -> f
    int g -> g
    android.widget.ZoomControls h -> h
    float i -> i
    com.baidu.platform.comapi.map.Projection j -> j
    android.content.Context k -> k
    com.baidu.mapapi.map.MKMapViewListener l -> l
    boolean m -> m
    com.baidu.platform.comapi.map.x n -> n
    boolean o -> o
    boolean p -> p
    java.util.List q -> q
    void onPause() -> onPause
    void setVisibility(int) -> setVisibility
    void onResume() -> onResume
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    void setOnLongClickListener(android.view.View$OnLongClickListener) -> setOnLongClickListener
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void preLoad() -> preLoad
    void setBuiltInZoomControls(boolean) -> setBuiltInZoomControls
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onLayout(boolean,int,int,int,int) -> onLayout
    void a() -> a
    void a(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    void a(android.content.Context) -> a
    boolean b() -> b
    boolean c() -> c
    void a(int,int) -> a
    int getLatitudeSpan() -> getLatitudeSpan
    int getLongitudeSpan() -> getLongitudeSpan
    com.baidu.platform.comapi.basestruct.GeoPoint getMapCenter() -> getMapCenter
    int getMapRotation() -> getMapRotation
    int getMapOverlooking() -> getMapOverlooking
    int getMaxZoomLevel() -> getMaxZoomLevel
    int getMinZoomLevel() -> getMinZoomLevel
    android.view.View getZoomControls() -> getZoomControls
    int getZoomLevel() -> getZoomLevel
    void a(boolean,boolean) -> a
    void setSatellite(boolean) -> setSatellite
    void setTraffic(boolean) -> setTraffic
    boolean isSatellite() -> isSatellite
    boolean isTraffic() -> isTraffic
    void setDoubleClickZooming(boolean) -> setDoubleClickZooming
    boolean isDoubleClickZooming() -> isDoubleClickZooming
    void displayZoomControls(boolean) -> displayZoomControls
    void d() -> d
    void e() -> e
    void f() -> f
    void a(com.baidu.platform.comapi.map.w,int) -> a
    void a(int) -> a
    void a(int,com.baidu.platform.comapi.basestruct.GeoPoint) -> a
    void b(int) -> b
    void regMapViewListener(com.baidu.mapapi.BMapManager,com.baidu.mapapi.map.MKMapViewListener) -> regMapViewListener
    com.baidu.mapapi.map.MapController getController() -> getController
    boolean getCurrentMap() -> getCurrentMap
    void g() -> g
    void refresh() -> refresh
    void h() -> h
    java.util.List getOverlays() -> getOverlays
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    com.baidu.platform.comapi.map.Projection getProjection() -> getProjection
    void destroy() -> destroy
    void finalize() -> finalize
    float a(com.baidu.mapapi.map.MapView) -> a
    float a(com.baidu.mapapi.map.MapView,float) -> a
    com.baidu.mapapi.map.MapController b(com.baidu.mapapi.map.MapView) -> b
    com.baidu.mapapi.map.MKMapViewListener c(com.baidu.mapapi.map.MapView) -> c
    void a(com.baidu.mapapi.map.MapView,com.baidu.platform.comapi.map.w,int) -> a
    void a(com.baidu.mapapi.map.MapView,int) -> a
    void b(com.baidu.mapapi.map.MapView,int) -> b
    void d(com.baidu.mapapi.map.MapView) -> d
    void a(com.baidu.mapapi.map.MapView,int,com.baidu.platform.comapi.basestruct.GeoPoint) -> a
com.baidu.mapapi.map.MapView$LayoutParams -> com.baidu.mapapi.map.MapView$LayoutParams:
    int MODE_MAP -> MODE_MAP
    int MODE_VIEW -> MODE_VIEW
    int LEFT -> LEFT
    int RIGHT -> RIGHT
    int TOP -> TOP
    int BOTTOM -> BOTTOM
    int CENTER_HORIZONTAL -> CENTER_HORIZONTAL
    int CENTER_VERTICAL -> CENTER_VERTICAL
    int CENTER -> CENTER
    int TOP_LEFT -> TOP_LEFT
    int BOTTOM_CENTER -> BOTTOM_CENTER
    int mode -> mode
    com.baidu.platform.comapi.basestruct.GeoPoint point -> point
    int x -> x
    int y -> y
    int alignment -> alignment
com.baidu.mapapi.map.MapView$a -> com.baidu.mapapi.map.MapView$a:
    com.baidu.mapapi.map.MapView a -> a
    com.baidu.platform.comapi.basestruct.GeoPoint fromPixels(int,int) -> fromPixels
    float metersToEquatorPixels(float) -> metersToEquatorPixels
    android.graphics.Point toPixels(com.baidu.platform.comapi.basestruct.GeoPoint,android.graphics.Point) -> toPixels
com.baidu.mapapi.map.MapView$b -> com.baidu.mapapi.map.MapView$b:
    com.baidu.mapapi.map.MapView a -> a
    void onDraw(android.graphics.Canvas) -> onDraw
com.baidu.mapapi.map.MyLocationOverlay -> com.baidu.mapapi.map.MyLocationOverlay:
    com.baidu.mapapi.map.LocationData a -> a
    com.baidu.mapapi.map.MapView b -> b
    boolean c -> c
    java.lang.String d -> d
    boolean enableCompass() -> enableCompass
    void disableCompass() -> disableCompass
    boolean isCompassEnable() -> isCompassEnable
    void setData(com.baidu.mapapi.map.LocationData) -> setData
    java.lang.String a() -> a
    com.baidu.mapapi.map.LocationData getMyLocation() -> getMyLocation
    boolean dispatchTap() -> dispatchTap
com.baidu.mapapi.map.Overlay -> com.baidu.mapapi.map.Overlay:
com.baidu.mapapi.map.OverlayItem -> com.baidu.mapapi.map.OverlayItem:
    int a -> a
    com.baidu.platform.comapi.basestruct.GeoPoint mPoint -> mPoint
    java.lang.String mTitle -> mTitle
    java.lang.String mSnippet -> mSnippet
    android.graphics.drawable.Drawable b -> b
    java.lang.String c -> c
    android.graphics.drawable.Drawable getMarker() -> getMarker
    com.baidu.platform.comapi.basestruct.GeoPoint getPoint() -> getPoint
    java.lang.String getSnippet() -> getSnippet
    java.lang.String getTitle() -> getTitle
    void setMarker(android.graphics.drawable.Drawable) -> setMarker
    void a(int) -> a
    int a() -> a
    void a(java.lang.String) -> a
    int b() -> b
    java.lang.String c() -> c
com.baidu.mapapi.map.PoiOverlay -> com.baidu.mapapi.map.PoiOverlay:
    com.baidu.mapapi.map.MapView a -> a
    android.content.Context b -> b
    java.util.ArrayList c -> c
    java.lang.String d -> d
    void setData(java.util.ArrayList) -> setData
    java.lang.String a() -> a
    boolean onTap(int) -> onTap
    void animateTo() -> animateTo
    int size() -> size
    com.baidu.mapapi.search.MKPoiInfo getPoi(int) -> getPoi
com.baidu.mapapi.map.PopupClickListener -> com.baidu.mapapi.map.PopupClickListener:
    void onClickedPopup(int) -> onClickedPopup
com.baidu.mapapi.map.PopupOverlay -> com.baidu.mapapi.map.PopupOverlay:
    com.baidu.mapapi.map.MapView b -> b
    com.baidu.mapapi.map.MapController c -> c
    com.baidu.mapapi.map.PopupClickListener a -> a
    int d -> d
    void showPopup(android.graphics.Bitmap[],com.baidu.platform.comapi.basestruct.GeoPoint,int) -> showPopup
    android.graphics.Bitmap a(android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap) -> a
    void showPopup(android.graphics.Bitmap,com.baidu.platform.comapi.basestruct.GeoPoint,int) -> showPopup
    void hidePop() -> hidePop
com.baidu.mapapi.map.RouteOverlay -> com.baidu.mapapi.map.RouteOverlay:
    java.util.ArrayList mRoute -> mRoute
    java.util.ArrayList a -> a
    com.baidu.mapapi.map.MapView b -> b
    android.content.Context c -> c
    java.lang.String d -> d
    java.lang.String b() -> b
    void setData(com.baidu.mapapi.search.MKRoute) -> setData
    void c() -> c
    void animateTo() -> animateTo
    boolean onTap(int) -> onTap
    com.baidu.mapapi.map.OverlayItem createItem(int) -> createItem
    int size() -> size
com.baidu.mapapi.map.RouteOverlay$1 -> com.baidu.mapapi.map.RouteOverlay$1:
com.baidu.mapapi.map.RouteOverlay$a -> com.baidu.mapapi.map.RouteOverlay$a:
    java.lang.String a -> a
    com.baidu.platform.comapi.basestruct.GeoPoint b -> b
    int c -> c
    com.baidu.mapapi.map.RouteOverlay d -> d
com.baidu.mapapi.map.Symbol -> com.baidu.mapapi.map.Symbol:
    int a -> a
    com.baidu.mapapi.map.Symbol$Color b -> b
    int c -> c
    void setPointSymbol(com.baidu.mapapi.map.Symbol$Color) -> setPointSymbol
    void setLineSymbol(com.baidu.mapapi.map.Symbol$Color,int) -> setLineSymbol
    void setSurface(com.baidu.mapapi.map.Symbol$Color,int,int) -> setSurface
com.baidu.mapapi.map.Symbol$Color -> com.baidu.mapapi.map.Symbol$Color:
    int red -> red
    int green -> green
    int blue -> blue
    int alpha -> alpha
    com.baidu.mapapi.map.Symbol a -> a
com.baidu.mapapi.map.TransitOverlay -> com.baidu.mapapi.map.TransitOverlay:
    java.util.ArrayList mPlan -> mPlan
    java.util.ArrayList a -> a
    com.baidu.mapapi.map.MapView b -> b
    android.content.Context c -> c
    int d -> d
    java.lang.String e -> e
    void animateTo() -> animateTo
    java.lang.String b() -> b
    void setData(com.baidu.mapapi.search.MKTransitRoutePlan) -> setData
    void c() -> c
    com.baidu.mapapi.map.OverlayItem createItem(int) -> createItem
    int size() -> size
    boolean onTap(int) -> onTap
com.baidu.mapapi.map.TransitOverlay$1 -> com.baidu.mapapi.map.TransitOverlay$1:
com.baidu.mapapi.map.TransitOverlay$a -> com.baidu.mapapi.map.TransitOverlay$a:
    java.lang.String a -> a
    com.baidu.platform.comapi.basestruct.GeoPoint b -> b
    int c -> c
    com.baidu.mapapi.map.TransitOverlay d -> d
com.baidu.mapapi.map.a -> com.baidu.mapapi.map.a:
    com.baidu.mapapi.map.MKOfflineMapListener a -> a
    void a(com.baidu.mapapi.map.MKEvent) -> a
com.baidu.mapapi.map.b -> com.baidu.mapapi.map.b:
    com.baidu.mapapi.map.MapView a -> a
    void onClick(android.view.View) -> onClick
com.baidu.mapapi.map.c -> com.baidu.mapapi.map.c:
    com.baidu.mapapi.map.MapView a -> a
    void onClick(android.view.View) -> onClick
com.baidu.mapapi.map.d -> com.baidu.mapapi.map.d:
    com.baidu.mapapi.map.MapView a -> a
    void a() -> a
    void b() -> b
    void a(java.util.List,int) -> a
    void a(int) -> a
    void a(java.util.List) -> a
    void b(java.util.List) -> b
    void c(java.util.List) -> c
    void d(java.util.List) -> d
    void a(int,com.baidu.platform.comapi.basestruct.GeoPoint) -> a
    void c() -> c
com.baidu.mapapi.map.e -> com.baidu.mapapi.map.e:
    com.baidu.mapapi.map.MapView a -> a
    void a(boolean) -> a
com.baidu.mapapi.navi.BaiduMapAppNotSupportNaviException -> com.baidu.mapapi.navi.BaiduMapAppNotSupportNaviException:
com.baidu.mapapi.navi.BaiduMapNavigation -> com.baidu.mapapi.navi.BaiduMapNavigation:
    int a(android.content.Context) -> a
    void openBaiduMapNavi(com.baidu.mapapi.navi.NaviPara,android.app.Activity) -> openBaiduMapNavi
    java.lang.String a(com.baidu.mapapi.navi.NaviPara) -> a
    void GetLatestBaiduMapApp(android.app.Activity) -> GetLatestBaiduMapApp
com.baidu.mapapi.navi.IllegalNaviArgumentException -> com.baidu.mapapi.navi.IllegalNaviArgumentException:
com.baidu.mapapi.navi.NaviPara -> com.baidu.mapapi.navi.NaviPara:
    com.baidu.platform.comapi.basestruct.GeoPoint startPoint -> startPoint
    java.lang.String startName -> startName
    com.baidu.platform.comapi.basestruct.GeoPoint endPoint -> endPoint
    java.lang.String endName -> endName
com.baidu.mapapi.search.MKAddrInfo -> com.baidu.mapapi.search.MKAddrInfo:
    int MK_GEOCODE -> MK_GEOCODE
    int MK_REVERSEGEOCODE -> MK_REVERSEGEOCODE
    int type -> type
    java.lang.String strBusiness -> strBusiness
    java.lang.String strAddr -> strAddr
    com.baidu.mapapi.search.MKGeocoderAddressComponent addressComponents -> addressComponents
    com.baidu.platform.comapi.basestruct.GeoPoint geoPt -> geoPt
    java.util.ArrayList poiList -> poiList
com.baidu.mapapi.search.MKBusLineResult -> com.baidu.mapapi.search.MKBusLineResult:
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    com.baidu.mapapi.search.MKRoute f -> f
    com.baidu.mapapi.search.MKRoute getBusRoute() -> getBusRoute
    java.lang.String getBusCompany() -> getBusCompany
    java.lang.String getBusName() -> getBusName
    java.lang.String getStartTime() -> getStartTime
    java.lang.String getEndTime() -> getEndTime
    int isMonTicket() -> isMonTicket
    com.baidu.mapapi.search.MKStep getStation(int) -> getStation
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void a(java.lang.String,java.lang.String,int) -> a
com.baidu.mapapi.search.MKCityListInfo -> com.baidu.mapapi.search.MKCityListInfo:
    java.lang.String city -> city
    int num -> num
com.baidu.mapapi.search.MKDrivingRouteResult -> com.baidu.mapapi.search.MKDrivingRouteResult:
    com.baidu.mapapi.search.MKPlanNode a -> a
    com.baidu.mapapi.search.MKPlanNode b -> b
    java.util.ArrayList c -> c
    com.baidu.mapapi.search.MKRouteAddrResult d -> d
    void a(java.util.ArrayList) -> a
    void a(com.baidu.mapapi.search.MKPlanNode) -> a
    void a(com.baidu.mapapi.search.MKRouteAddrResult) -> a
    com.baidu.mapapi.search.MKRouteAddrResult getAddrResult() -> getAddrResult
    com.baidu.mapapi.search.MKPlanNode getStart() -> getStart
    void b(com.baidu.mapapi.search.MKPlanNode) -> b
    com.baidu.mapapi.search.MKPlanNode getEnd() -> getEnd
    int getNumPlan() -> getNumPlan
    com.baidu.mapapi.search.MKRoutePlan getPlan(int) -> getPlan
com.baidu.mapapi.search.MKGeocoderAddressComponent -> com.baidu.mapapi.search.MKGeocoderAddressComponent:
    java.lang.String streetNumber -> streetNumber
    java.lang.String street -> street
    java.lang.String district -> district
    java.lang.String city -> city
    java.lang.String province -> province
com.baidu.mapapi.search.MKLine -> com.baidu.mapapi.search.MKLine:
    int LINE_TYPE_BUS -> LINE_TYPE_BUS
    int LINE_TYPE_SUBWAY -> LINE_TYPE_SUBWAY
    int b -> b
    int c -> c
    int d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    com.baidu.mapapi.search.MKPoiInfo h -> h
    com.baidu.mapapi.search.MKPoiInfo i -> i
    java.util.ArrayList j -> j
    java.util.ArrayList a -> a
    void a(int) -> a
    int getNumViaStops() -> getNumViaStops
    void a(com.baidu.mapapi.search.MKPoiInfo) -> a
    com.baidu.mapapi.search.MKPoiInfo getGetOnStop() -> getGetOnStop
    void b(com.baidu.mapapi.search.MKPoiInfo) -> b
    com.baidu.mapapi.search.MKPoiInfo getGetOffStop() -> getGetOffStop
    void b(int) -> b
    void a(java.lang.String) -> a
    java.lang.String getTip() -> getTip
    int getDistance() -> getDistance
    void b(java.lang.String) -> b
    java.lang.String getTitle() -> getTitle
    int getType() -> getType
    void c(int) -> c
    java.lang.String getUid() -> getUid
    void a(java.util.ArrayList) -> a
    java.util.ArrayList getPoints() -> getPoints
com.baidu.mapapi.search.MKPlanNode -> com.baidu.mapapi.search.MKPlanNode:
    java.lang.String name -> name
    com.baidu.platform.comapi.basestruct.GeoPoint pt -> pt
com.baidu.mapapi.search.MKPoiInfo -> com.baidu.mapapi.search.MKPoiInfo:
    java.lang.String name -> name
    java.lang.String uid -> uid
    java.lang.String address -> address
    java.lang.String city -> city
    java.lang.String phoneNum -> phoneNum
    java.lang.String postCode -> postCode
    int ePoiType -> ePoiType
    com.baidu.platform.comapi.basestruct.GeoPoint pt -> pt
    boolean hasCaterDetails -> hasCaterDetails
com.baidu.mapapi.search.MKPoiResult -> com.baidu.mapapi.search.MKPoiResult:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    java.util.ArrayList e -> e
    java.util.ArrayList f -> f
    java.util.ArrayList g -> g
    java.util.ArrayList getAllPoi() -> getAllPoi
    java.util.ArrayList getMultiPoiResult() -> getMultiPoiResult
    void a(java.util.ArrayList) -> a
    void b(java.util.ArrayList) -> b
    void c(java.util.ArrayList) -> c
    com.baidu.mapapi.search.MKPoiInfo getPoi(int) -> getPoi
    com.baidu.mapapi.search.MKCityListInfo getCityListInfo(int) -> getCityListInfo
    void a(int) -> a
    int getCurrentNumPois() -> getCurrentNumPois
    void b(int) -> b
    int getNumPois() -> getNumPois
    void c(int) -> c
    int getNumPages() -> getNumPages
    void d(int) -> d
    int getPageIndex() -> getPageIndex
    int getCityListNum() -> getCityListNum
com.baidu.mapapi.search.MKRoute -> com.baidu.mapapi.search.MKRoute:
    int ROUTE_TYPE_UNKNOW -> ROUTE_TYPE_UNKNOW
    int ROUTE_TYPE_DRIVING -> ROUTE_TYPE_DRIVING
    int ROUTE_TYPE_WALKING -> ROUTE_TYPE_WALKING
    int ROUTE_TYPE_BUS_LINE -> ROUTE_TYPE_BUS_LINE
    int b -> b
    int c -> c
    int d -> d
    com.baidu.platform.comapi.basestruct.GeoPoint e -> e
    com.baidu.platform.comapi.basestruct.GeoPoint f -> f
    java.util.ArrayList g -> g
    java.util.ArrayList a -> a
    java.util.ArrayList h -> h
    java.lang.String i -> i
    int getNumSteps() -> getNumSteps
    com.baidu.mapapi.search.MKStep getStep(int) -> getStep
    void a(java.util.ArrayList) -> a
    void a(int) -> a
    int getDistance() -> getDistance
    void b(int) -> b
    int getIndex() -> getIndex
    void a(java.lang.String) -> a
    java.lang.String getTip() -> getTip
    void b(java.util.ArrayList) -> b
    java.util.ArrayList getArrayPoints() -> getArrayPoints
    com.baidu.platform.comapi.basestruct.GeoPoint getStart() -> getStart
    void a(com.baidu.platform.comapi.basestruct.GeoPoint) -> a
    com.baidu.platform.comapi.basestruct.GeoPoint getEnd() -> getEnd
    void b(com.baidu.platform.comapi.basestruct.GeoPoint) -> b
    void c(int) -> c
    int getRouteType() -> getRouteType
    void customizeRoute(com.baidu.platform.comapi.basestruct.GeoPoint,com.baidu.platform.comapi.basestruct.GeoPoint,com.baidu.platform.comapi.basestruct.GeoPoint[]) -> customizeRoute
    void customizeRoute(com.baidu.platform.comapi.basestruct.GeoPoint,com.baidu.platform.comapi.basestruct.GeoPoint,com.baidu.platform.comapi.basestruct.GeoPoint[][]) -> customizeRoute
com.baidu.mapapi.search.MKRouteAddrResult -> com.baidu.mapapi.search.MKRouteAddrResult:
    java.util.ArrayList mStartPoiList -> mStartPoiList
    java.util.ArrayList mEndPoiList -> mEndPoiList
    java.util.ArrayList mStartCityList -> mStartCityList
    java.util.ArrayList mEndCityList -> mEndCityList
com.baidu.mapapi.search.MKRoutePlan -> com.baidu.mapapi.search.MKRoutePlan:
    int a -> a
    java.util.ArrayList b -> b
    void a(java.util.ArrayList) -> a
    int getNumRoutes() -> getNumRoutes
    com.baidu.mapapi.search.MKRoute getRoute(int) -> getRoute
    void a(int) -> a
    int getDistance() -> getDistance
com.baidu.mapapi.search.MKSearch -> com.baidu.mapapi.search.MKSearch:
    int ECAR_TIME_FIRST -> ECAR_TIME_FIRST
    int ECAR_DIS_FIRST -> ECAR_DIS_FIRST
    int ECAR_FEE_FIRST -> ECAR_FEE_FIRST
    int EBUS_TIME_FIRST -> EBUS_TIME_FIRST
    int EBUS_TRANSFER_FIRST -> EBUS_TRANSFER_FIRST
    int EBUS_WALK_FIRST -> EBUS_WALK_FIRST
    int EBUS_NO_SUBWAY -> EBUS_NO_SUBWAY
    int TYPE_CITY_LIST -> TYPE_CITY_LIST
    int TYPE_POI_LIST -> TYPE_POI_LIST
    int TYPE_AREA_POI_LIST -> TYPE_AREA_POI_LIST
    int TYPE_AREA_MULTI_POI_LIST -> TYPE_AREA_MULTI_POI_LIST
    int POI_DETAIL_SEARCH -> POI_DETAIL_SEARCH
    com.baidu.platform.comapi.basestruct.b b -> b
    java.lang.String c -> c
    java.lang.String[] d -> d
    java.lang.String e -> e
    int f -> f
    int g -> g
    int h -> h
    com.baidu.mapapi.search.MKSearchListener a -> a
    int i -> i
    int j -> j
    com.baidu.mapapi.search.MKSearch$a k -> k
    com.baidu.mapapi.BMapManager l -> l
    int m -> m
    boolean init(com.baidu.mapapi.BMapManager,com.baidu.mapapi.search.MKSearchListener) -> init
    int suggestionSearch(java.lang.String) -> suggestionSearch
    int poiDetailSearch(java.lang.String) -> poiDetailSearch
    int poiSearchInCity(java.lang.String,java.lang.String) -> poiSearchInCity
    int poiSearchInbounds(java.lang.String,com.baidu.platform.comapi.basestruct.GeoPoint,com.baidu.platform.comapi.basestruct.GeoPoint) -> poiSearchInbounds
    int poiMultiSearchInbounds(java.lang.String[],com.baidu.platform.comapi.basestruct.GeoPoint,com.baidu.platform.comapi.basestruct.GeoPoint) -> poiMultiSearchInbounds
    int poiSearchNearBy(java.lang.String,com.baidu.platform.comapi.basestruct.GeoPoint,int) -> poiSearchNearBy
    int poiMultiSearchNearBy(java.lang.String[],com.baidu.platform.comapi.basestruct.GeoPoint,int) -> poiMultiSearchNearBy
    int reverseGeocode(com.baidu.platform.comapi.basestruct.GeoPoint) -> reverseGeocode
    int geocode(java.lang.String,java.lang.String) -> geocode
    int goToPoiPage(int) -> goToPoiPage
    void setPoiPageCapacity(int) -> setPoiPageCapacity
    int getPoiPageCapacity() -> getPoiPageCapacity
    int setTransitPolicy(int) -> setTransitPolicy
    int setDrivingPolicy(int) -> setDrivingPolicy
    int busLineSearch(java.lang.String,java.lang.String) -> busLineSearch
    int transitSearch(java.lang.String,com.baidu.mapapi.search.MKPlanNode,com.baidu.mapapi.search.MKPlanNode) -> transitSearch
    int drivingSearch(java.lang.String,com.baidu.mapapi.search.MKPlanNode,java.lang.String,com.baidu.mapapi.search.MKPlanNode) -> drivingSearch
    int walkingSearch(java.lang.String,com.baidu.mapapi.search.MKPlanNode,java.lang.String,com.baidu.mapapi.search.MKPlanNode) -> walkingSearch
    com.baidu.platform.comapi.basestruct.c a(com.baidu.platform.comapi.basestruct.GeoPoint) -> a
    int a(com.baidu.mapapi.search.MKSearch) -> a
    int b(com.baidu.mapapi.search.MKSearch) -> b
    com.baidu.mapapi.BMapManager c(com.baidu.mapapi.search.MKSearch) -> c
    int a(com.baidu.mapapi.search.MKSearch,int) -> a
    int d(com.baidu.mapapi.search.MKSearch) -> d
com.baidu.mapapi.search.MKSearch$1 -> com.baidu.mapapi.search.MKSearch$1:
com.baidu.mapapi.search.MKSearch$a -> com.baidu.mapapi.search.MKSearch$a:
    com.baidu.mapapi.search.MKSearch a -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
    void i(java.lang.String) -> i
    void j(java.lang.String) -> j
    void k(java.lang.String) -> k
    void l(java.lang.String) -> l
    void m(java.lang.String) -> m
    void n(java.lang.String) -> n
    void o(java.lang.String) -> o
    void a(int) -> a
com.baidu.mapapi.search.MKSearchListener -> com.baidu.mapapi.search.MKSearchListener:
    void onGetPoiResult(com.baidu.mapapi.search.MKPoiResult,int,int) -> onGetPoiResult
    void onGetTransitRouteResult(com.baidu.mapapi.search.MKTransitRouteResult,int) -> onGetTransitRouteResult
    void onGetDrivingRouteResult(com.baidu.mapapi.search.MKDrivingRouteResult,int) -> onGetDrivingRouteResult
    void onGetWalkingRouteResult(com.baidu.mapapi.search.MKWalkingRouteResult,int) -> onGetWalkingRouteResult
    void onGetAddrResult(com.baidu.mapapi.search.MKAddrInfo,int) -> onGetAddrResult
    void onGetBusDetailResult(com.baidu.mapapi.search.MKBusLineResult,int) -> onGetBusDetailResult
    void onGetSuggestionResult(com.baidu.mapapi.search.MKSuggestionResult,int) -> onGetSuggestionResult
    void onGetPoiDetailSearchResult(int,int) -> onGetPoiDetailSearchResult
com.baidu.mapapi.search.MKStep -> com.baidu.mapapi.search.MKStep:
    com.baidu.platform.comapi.basestruct.GeoPoint a -> a
    java.lang.String b -> b
    int c -> c
    com.baidu.platform.comapi.basestruct.GeoPoint getPoint() -> getPoint
    void a(com.baidu.platform.comapi.basestruct.GeoPoint) -> a
    int a() -> a
    void a(int) -> a
    java.lang.String getContent() -> getContent
    void a(java.lang.String) -> a
com.baidu.mapapi.search.MKSuggestionInfo -> com.baidu.mapapi.search.MKSuggestionInfo:
    java.lang.String key -> key
    java.lang.String city -> city
com.baidu.mapapi.search.MKSuggestionResult -> com.baidu.mapapi.search.MKSuggestionResult:
    int a -> a
    java.util.ArrayList b -> b
    java.util.ArrayList getAllSuggestions() -> getAllSuggestions
    void a(java.util.ArrayList) -> a
    int getSuggestionNum() -> getSuggestionNum
    com.baidu.mapapi.search.MKSuggestionInfo getSuggestion(int) -> getSuggestion
com.baidu.mapapi.search.MKTransitRoutePlan -> com.baidu.mapapi.search.MKTransitRoutePlan:
    int a -> a
    java.lang.String b -> b
    java.util.ArrayList c -> c
    java.util.ArrayList d -> d
    com.baidu.platform.comapi.basestruct.GeoPoint e -> e
    com.baidu.platform.comapi.basestruct.GeoPoint f -> f
    void setLine(java.util.ArrayList) -> setLine
    int getNumLines() -> getNumLines
    com.baidu.mapapi.search.MKLine getLine(int) -> getLine
    void a(java.util.ArrayList) -> a
    int getNumRoute() -> getNumRoute
    com.baidu.mapapi.search.MKRoute getRoute(int) -> getRoute
    void a(int) -> a
    int getDistance() -> getDistance
    com.baidu.platform.comapi.basestruct.GeoPoint getStart() -> getStart
    void a(com.baidu.platform.comapi.basestruct.GeoPoint) -> a
    com.baidu.platform.comapi.basestruct.GeoPoint getEnd() -> getEnd
    void b(com.baidu.platform.comapi.basestruct.GeoPoint) -> b
    void a(java.lang.String) -> a
    java.lang.String getContent() -> getContent
com.baidu.mapapi.search.MKTransitRouteResult -> com.baidu.mapapi.search.MKTransitRouteResult:
    com.baidu.mapapi.search.MKPlanNode a -> a
    com.baidu.mapapi.search.MKPlanNode b -> b
    java.util.ArrayList c -> c
    com.baidu.mapapi.search.MKRouteAddrResult d -> d
    void a(java.util.ArrayList) -> a
    void a(com.baidu.mapapi.search.MKPlanNode) -> a
    void a(com.baidu.mapapi.search.MKRouteAddrResult) -> a
    com.baidu.mapapi.search.MKRouteAddrResult getAddrResult() -> getAddrResult
    com.baidu.mapapi.search.MKPlanNode getStart() -> getStart
    void b(com.baidu.mapapi.search.MKPlanNode) -> b
    com.baidu.mapapi.search.MKPlanNode getEnd() -> getEnd
    int getNumPlan() -> getNumPlan
    com.baidu.mapapi.search.MKTransitRoutePlan getPlan(int) -> getPlan
com.baidu.mapapi.search.MKWalkingRouteResult -> com.baidu.mapapi.search.MKWalkingRouteResult:
    com.baidu.mapapi.search.MKPlanNode a -> a
    com.baidu.mapapi.search.MKPlanNode b -> b
    java.util.ArrayList c -> c
    com.baidu.mapapi.search.MKRouteAddrResult d -> d
    void a(java.util.ArrayList) -> a
    void a(com.baidu.mapapi.search.MKPlanNode) -> a
    void a(com.baidu.mapapi.search.MKRouteAddrResult) -> a
    com.baidu.mapapi.search.MKRouteAddrResult getAddrResult() -> getAddrResult
    com.baidu.mapapi.search.MKPlanNode getStart() -> getStart
    void b(com.baidu.mapapi.search.MKPlanNode) -> b
    com.baidu.mapapi.search.MKPlanNode getEnd() -> getEnd
    int getNumPlan() -> getNumPlan
    com.baidu.mapapi.search.MKRoutePlan getPlan(int) -> getPlan
com.baidu.mapapi.search.PlaceCaterActivity -> com.baidu.mapapi.search.PlaceCaterActivity:
    int s -> s
    int t -> t
    int u -> u
    int v -> v
    int w -> w
    int x -> x
    int y -> y
    int z -> z
    android.widget.TextView a -> a
    android.widget.TextView b -> b
    android.widget.ImageView c -> c
    boolean d -> d
    android.widget.LinearLayout e -> e
    android.widget.TextView f -> f
    android.widget.TextView g -> g
    android.widget.TextView h -> h
    android.widget.TextView i -> i
    android.widget.TextView j -> j
    android.widget.TextView k -> k
    android.widget.TextView l -> l
    android.widget.TextView m -> m
    android.widget.LinearLayout n -> n
    android.util.DisplayMetrics o -> o
    com.baidu.mapapi.search.e p -> p
    java.util.Hashtable q -> q
    android.os.Handler r -> r
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void a(com.baidu.mapapi.search.e) -> a
    void a(float) -> a
    void a(android.util.DisplayMetrics) -> a
    android.graphics.Bitmap a(java.lang.String) -> a
    void a(android.widget.LinearLayout,java.util.List) -> a
    boolean isShow() -> isShow
    void onError(int,int,java.lang.String,java.lang.Object) -> onError
    void onOk(int,int,java.lang.String,java.lang.Object) -> onOk
com.baidu.mapapi.search.a -> com.baidu.mapapi.search.a:
    android.content.Context a -> a
    java.util.HashMap b -> b
    boolean c -> c
    int d -> d
    boolean e -> e
    byte f -> f
    java.lang.String g -> g
    int h -> h
    void a(android.content.Context) -> a
    void a() -> a
    void a(int,int,java.lang.String,com.baidu.mapapi.search.a$a) -> a
    java.net.HttpURLConnection a(java.lang.String) -> a
    void b() -> b
    void a(android.net.NetworkInfo,boolean) -> a
com.baidu.mapapi.search.a$a -> com.baidu.mapapi.search.a$a:
    void onOk(int,int,java.lang.String,java.lang.Object) -> onOk
    void onError(int,int,java.lang.String,java.lang.Object) -> onError
com.baidu.mapapi.search.b -> com.baidu.mapapi.search.b:
    java.lang.String a -> a
    com.baidu.mapapi.search.a$a b -> b
    int c -> c
    int d -> d
    void run() -> run
com.baidu.mapapi.search.c -> com.baidu.mapapi.search.c:
    android.os.Bundle a -> a
    java.lang.String a(java.util.ArrayList) -> a
    java.lang.String b(java.util.ArrayList) -> b
    java.lang.String c(java.util.ArrayList) -> c
    boolean a(java.lang.String,com.baidu.mapapi.cloud.GeoSearchResult) -> a
    boolean a(java.lang.String,com.baidu.mapapi.cloud.DetailResult) -> a
    boolean a(java.lang.String,com.baidu.mapapi.search.e) -> a
    boolean a(java.lang.String,com.baidu.mapapi.search.MKWalkingRouteResult) -> a
    boolean a(java.lang.String,com.baidu.mapapi.search.MKDrivingRouteResult) -> a
    boolean a(java.lang.String,com.baidu.mapapi.search.MKTransitRouteResult) -> a
    boolean a(java.lang.String,com.baidu.mapapi.search.MKBusLineResult) -> a
    boolean a(java.lang.String,com.baidu.mapapi.search.MKPoiResult) -> a
    boolean a(java.lang.String,com.baidu.mapapi.search.MKRouteAddrResult) -> a
    boolean a(java.lang.String,com.baidu.mapapi.search.MKAddrInfo) -> a
    boolean a(java.lang.String,com.baidu.mapapi.search.MKSuggestionResult) -> a
    boolean a(java.lang.String,com.baidu.mapapi.search.MKPoiResult,int) -> a
    boolean b(java.lang.String,com.baidu.mapapi.search.MKPoiResult,int) -> b
    boolean b(java.lang.String,com.baidu.mapapi.search.MKAddrInfo) -> b
    java.util.ArrayList a(org.json.JSONObject,java.lang.String) -> a
    com.baidu.mapapi.search.MKGeocoderAddressComponent b(org.json.JSONObject,java.lang.String) -> b
    java.util.ArrayList a(org.json.JSONObject,java.lang.String,java.lang.String) -> a
    com.baidu.mapapi.search.MKPlanNode c(org.json.JSONObject,java.lang.String) -> c
    com.baidu.platform.comapi.basestruct.GeoPoint d(org.json.JSONObject,java.lang.String) -> d
    com.baidu.platform.comapi.basestruct.GeoPoint e(org.json.JSONObject,java.lang.String) -> e
    void a(java.lang.String,java.util.ArrayList,java.util.ArrayList) -> a
    void b(java.lang.String,java.util.ArrayList,java.util.ArrayList) -> b
com.baidu.mapapi.search.d -> com.baidu.mapapi.search.d:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
com.baidu.mapapi.search.e -> com.baidu.mapapi.search.e:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.util.List o -> o
com.baidu.mapapi.search.f -> com.baidu.mapapi.search.f:
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.mapapi.search.g -> com.baidu.mapapi.search.g:
    com.baidu.mapapi.search.PlaceCaterActivity a -> a
    void onClick(android.view.View) -> onClick
com.baidu.mapapi.search.h -> com.baidu.mapapi.search.h:
    com.baidu.mapapi.search.PlaceCaterActivity a -> a
    void onClick(android.view.View) -> onClick
com.baidu.mapapi.search.i -> com.baidu.mapapi.search.i:
    com.baidu.mapapi.search.PlaceCaterActivity a -> a
    void onClick(android.view.View) -> onClick
com.baidu.mapapi.search.j -> com.baidu.mapapi.search.j:
    android.graphics.Bitmap a -> a
    android.graphics.Bitmap a() -> a
com.baidu.mapapi.utils.CoordinateConvert -> com.baidu.mapapi.utils.CoordinateConvert:
    com.baidu.platform.comapi.basestruct.GeoPoint fromWgs84ToBaidu(com.baidu.platform.comapi.basestruct.GeoPoint) -> fromWgs84ToBaidu
    com.baidu.platform.comapi.basestruct.GeoPoint fromGcjToBaidu(com.baidu.platform.comapi.basestruct.GeoPoint) -> fromGcjToBaidu
    com.baidu.platform.comapi.basestruct.GeoPoint a(com.baidu.platform.comapi.basestruct.GeoPoint,java.lang.String) -> a
com.baidu.mapapi.utils.DistanceUtil -> com.baidu.mapapi.utils.DistanceUtil:
    double getDistance(com.baidu.platform.comapi.basestruct.GeoPoint,com.baidu.platform.comapi.basestruct.GeoPoint) -> getDistance
com.baidu.mapapi.utils.a -> com.baidu.mapapi.utils.a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    int f -> f
    int g -> g
    int h -> h
    java.lang.String l -> l
    java.lang.String[] i -> i
    java.lang.String[] j -> j
    java.lang.String[] k -> k
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    java.lang.String a() -> a
    java.lang.String j() -> j
    java.lang.String b() -> b
    java.lang.String c() -> c
    int d() -> d
    int e() -> e
    int f() -> f
    void c(android.content.Context) -> c
    java.io.File g() -> g
    java.lang.String h() -> h
    boolean i() -> i
    boolean a(java.lang.String) -> a
com.baidu.mapapi.utils.b -> com.baidu.mapapi.utils.b:
    boolean a(java.lang.String) -> a
com.baidu.mapapi.utils.c -> com.baidu.mapapi.utils.c:
    boolean accept(java.io.File,java.lang.String) -> accept
com.baidu.mapapi.utils.d -> com.baidu.mapapi.utils.d:
    double[] a -> a
    double[] b -> b
    double[][] c -> c
    double[][] d -> d
    com.baidu.mapapi.utils.d$a a(com.baidu.mapapi.utils.d$a,double[]) -> a
    com.baidu.platform.comapi.basestruct.GeoPoint a(com.baidu.platform.comapi.basestruct.GeoPoint) -> a
    com.baidu.platform.comapi.basestruct.GeoPoint b(com.baidu.platform.comapi.basestruct.GeoPoint) -> b
com.baidu.mapapi.utils.d$a -> com.baidu.mapapi.utils.d$a:
    double a -> a
    double b -> b
com.baidu.mapapi.utils.e -> com.baidu.mapapi.utils.e:
    com.baidu.mapapi.map.MKOLSearchRecord a(com.baidu.platform.comapi.map.l) -> a
    com.baidu.mapapi.map.MKOLUpdateElement a(com.baidu.platform.comapi.map.o) -> a
com.baidu.mapapi.utils.f -> com.baidu.mapapi.utils.f:
    com.baidu.mapapi.MKGeneralListener a -> a
    android.os.Handler b -> b
    boolean a(java.lang.String,java.lang.String) -> a
    com.baidu.mapapi.MKGeneralListener a(com.baidu.mapapi.utils.f) -> a
com.baidu.mapapi.utils.g -> com.baidu.mapapi.utils.g:
    com.baidu.mapapi.utils.f a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.mapapi.utils.h -> com.baidu.mapapi.utils.h:
    java.lang.String e -> e
    java.util.ArrayList f -> f
    java.util.ArrayList g -> g
    java.lang.String[] a -> a
    java.lang.String[] b -> b
    java.lang.String[] c -> c
    int d -> d
    void a(android.content.Context) -> a
    void a() -> a
    void b() -> b
    void c() -> c
    void d() -> d
    void b(android.content.Context) -> b
    java.lang.String a(java.lang.String) -> a
    boolean c(android.content.Context) -> c
com.baidu.platform.comapi.a -> com.baidu.platform.comapi.a:
    boolean a -> a
    boolean a(android.content.Context) -> a
    boolean a() -> a
    boolean b() -> b
    void c() -> c
com.baidu.platform.comapi.a.a -> com.baidu.platform.comapi.a.a:
    com.baidu.platform.comapi.a.a a -> a
    com.baidu.platform.comjni.base.location.a b -> b
    com.baidu.platform.comapi.a.a a() -> a
    boolean b() -> b
    com.baidu.platform.comapi.basestruct.c a(float,float,java.lang.String) -> a
com.baidu.platform.comapi.b.a -> com.baidu.platform.comapi.b.a:
    void a(java.lang.String,int) -> a
com.baidu.platform.comapi.b.b -> com.baidu.platform.comapi.b.b:
    int a -> a
    com.baidu.platform.comapi.basestruct.c b -> b
    java.lang.String c -> c
    java.lang.String d -> d
com.baidu.platform.comapi.b.c -> com.baidu.platform.comapi.b.c:
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
    void i(java.lang.String) -> i
    void j(java.lang.String) -> j
    void k(java.lang.String) -> k
    void l(java.lang.String) -> l
    void m(java.lang.String) -> m
    void n(java.lang.String) -> n
    void o(java.lang.String) -> o
    void a(int) -> a
com.baidu.platform.comapi.b.d -> com.baidu.platform.comapi.b.d:
    com.baidu.platform.comapi.b.c a -> a
    com.baidu.platform.comapi.b.a b -> b
    com.baidu.platform.comapi.b.e c -> c
    void a(com.baidu.platform.comapi.b.c) -> a
    void a() -> a
    void a(com.baidu.platform.comapi.b.e) -> a
    void a(android.os.Message) -> a
com.baidu.platform.comapi.b.e -> com.baidu.platform.comapi.b.e:
    com.baidu.platform.comjni.map.search.a a -> a
    com.baidu.platform.comapi.b.e b -> b
    com.baidu.platform.comapi.b.d c -> c
    android.os.Handler d -> d
    int e -> e
    android.os.Bundle f -> f
    com.baidu.platform.comapi.b.e a() -> a
    boolean d() -> d
    void a(com.baidu.platform.comapi.b.c) -> a
    void b() -> b
    int c() -> c
    void a(int) -> a
    boolean a(java.lang.String,java.lang.String,int,com.baidu.platform.comapi.basestruct.b,int,java.util.Map) -> a
    boolean a(java.lang.String,int,int,int,com.baidu.platform.comapi.basestruct.b,com.baidu.platform.comapi.basestruct.b,java.util.Map) -> a
    boolean a(java.lang.String,int,int,com.baidu.platform.comapi.basestruct.b,int,com.baidu.platform.comapi.basestruct.c,java.util.Map) -> a
    boolean a(java.lang.String[],int,int,int,int,com.baidu.platform.comapi.basestruct.b,com.baidu.platform.comapi.basestruct.b,java.util.Map) -> a
    android.os.Bundle a(com.baidu.platform.comapi.b.b) -> a
    boolean a(com.baidu.platform.comapi.b.b,com.baidu.platform.comapi.b.b,java.lang.String,com.baidu.platform.comapi.basestruct.b,int,int,java.util.Map) -> a
    boolean a(com.baidu.platform.comapi.b.b,com.baidu.platform.comapi.b.b,java.lang.String,java.lang.String,java.lang.String,com.baidu.platform.comapi.basestruct.b,int,int,int,java.util.ArrayList,java.util.Map) -> a
    boolean a(com.baidu.platform.comapi.b.b,com.baidu.platform.comapi.b.b,java.lang.String,java.lang.String,java.lang.String,com.baidu.platform.comapi.basestruct.b,int,java.util.Map) -> a
    boolean a(java.lang.String) -> a
    boolean a(java.lang.String,java.lang.String) -> a
    boolean a(java.lang.String,int,int,com.baidu.platform.comapi.basestruct.b,int,com.baidu.platform.comapi.basestruct.c) -> a
    boolean a(com.baidu.platform.comapi.basestruct.c) -> a
    boolean b(java.lang.String,java.lang.String) -> b
    java.lang.String b(int) -> b
    android.os.Bundle e() -> e
    com.baidu.platform.comapi.b.d a(com.baidu.platform.comapi.b.e) -> a
com.baidu.platform.comapi.b.f -> com.baidu.platform.comapi.b.f:
    com.baidu.platform.comapi.b.e a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.platform.comapi.b.g -> com.baidu.platform.comapi.b.g:
    com.baidu.platform.comapi.basestruct.c a -> a
    java.lang.String b -> b
com.baidu.platform.comapi.basestruct.GeoPoint -> com.baidu.platform.comapi.basestruct.GeoPoint:
    int a -> a
    int b -> b
    int getLatitudeE6() -> getLatitudeE6
    int getLongitudeE6() -> getLongitudeE6
    void setLatitudeE6(int) -> setLatitudeE6
    void setLongitudeE6(int) -> setLongitudeE6
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
com.baidu.platform.comapi.basestruct.a -> com.baidu.platform.comapi.basestruct.a:
    int a -> a
    com.baidu.platform.comapi.basestruct.c b -> b
    com.baidu.platform.comapi.basestruct.c c -> c
    java.util.ArrayList d -> d
com.baidu.platform.comapi.basestruct.b -> com.baidu.platform.comapi.basestruct.b:
    com.baidu.platform.comapi.basestruct.c a -> a
    com.baidu.platform.comapi.basestruct.c b -> b
    void a(com.baidu.platform.comapi.basestruct.c) -> a
    void b(com.baidu.platform.comapi.basestruct.c) -> b
com.baidu.platform.comapi.basestruct.c -> com.baidu.platform.comapi.basestruct.c:
    int a -> a
    int b -> b
    int a() -> a
    void a(int) -> a
    int b() -> b
    void b(int) -> b
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.baidu.platform.comapi.c.a -> com.baidu.platform.comapi.c.a:
    org.json.JSONObject b -> b
    com.baidu.platform.comjni.base.userdatacollect.a c -> c
    com.baidu.platform.comapi.c.a a -> a
    com.baidu.platform.comapi.c.a a() -> a
    boolean e() -> e
    void a(java.lang.String,java.lang.String) -> a
    void b() -> b
    boolean c() -> c
    android.os.Bundle f() -> f
    void a(java.lang.String) -> a
    void d() -> d
com.baidu.platform.comapi.d.a -> com.baidu.platform.comapi.d.a:
    int a -> a
    java.lang.String b -> b
    boolean c -> c
    java.lang.String d -> d
    int e -> e
    java.lang.String a(android.content.Context) -> a
com.baidu.platform.comapi.d.b -> com.baidu.platform.comapi.d.b:
    int a() -> a
com.baidu.platform.comapi.d.c -> com.baidu.platform.comapi.d.c:
    com.baidu.platform.comjni.map.commonmemcache.a a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    int k -> k
    int l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    java.lang.String w -> w
    java.lang.String x -> x
    android.content.Context y -> y
    int z -> z
    float A -> A
    boolean B -> B
    int C -> C
    int D -> D
    void e(android.content.Context) -> e
    void f(android.content.Context) -> f
    void g(android.content.Context) -> g
    void h(android.content.Context) -> h
    void i(android.content.Context) -> i
    java.lang.String a(android.content.Context) -> a
    byte[] b(android.content.Context) -> b
    java.lang.String j(android.content.Context) -> j
    java.lang.String a() -> a
    java.lang.String k(android.content.Context) -> k
    void l(android.content.Context) -> l
    void c(android.content.Context) -> c
    void b() -> b
    void d(android.content.Context) -> d
    android.os.Bundle c() -> c
    void t() -> t
    void d() -> d
    void e() -> e
    void a(java.lang.String,java.lang.String) -> a
    java.lang.String f() -> f
    int g() -> g
    java.lang.String h() -> h
    int i() -> i
    java.lang.String j() -> j
    int k() -> k
    int l() -> l
    int m() -> m
    java.lang.String n() -> n
    java.lang.String o() -> o
    java.lang.String p() -> p
    java.lang.String q() -> q
    java.lang.String r() -> r
    void a(java.lang.String) -> a
    java.lang.String s() -> s
    void b(java.lang.String) -> b
com.baidu.platform.comapi.map.A -> com.baidu.platform.comapi.map.A:
    android.util.SparseArray a -> a
    com.baidu.platform.comapi.map.t b -> b
    int ReqLayerData(android.os.Bundle,int,int) -> ReqLayerData
    void a(int,com.baidu.platform.comapi.map.i) -> a
com.baidu.platform.comapi.map.B -> com.baidu.platform.comapi.map.B:
    java.lang.String a -> a
    com.baidu.platform.comapi.map.B b -> b
    com.baidu.platform.comapi.map.i a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void c() -> c
    android.os.Bundle d() -> d
com.baidu.platform.comapi.map.C -> com.baidu.platform.comapi.map.C:
    java.lang.String a -> a
    com.baidu.platform.comapi.map.C b -> b
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    com.baidu.platform.comapi.map.i a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void c() -> c
    android.os.Bundle d() -> d
com.baidu.platform.comapi.map.D -> com.baidu.platform.comapi.map.D:
    com.baidu.platform.comapi.map.D a -> a
    java.lang.String b -> b
    int f -> f
    int g -> g
    com.baidu.platform.comapi.map.i a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void c() -> c
    android.os.Bundle d() -> d
com.baidu.platform.comapi.map.E -> com.baidu.platform.comapi.map.E:
    java.lang.String a -> a
    int b -> b
    com.baidu.platform.comapi.map.E f -> f
    com.baidu.platform.comapi.map.i a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void c() -> c
    android.os.Bundle d() -> d
com.baidu.platform.comapi.map.F -> com.baidu.platform.comapi.map.F:
com.baidu.platform.comapi.map.G -> com.baidu.platform.comapi.map.G:
    java.lang.String a -> a
    int b -> b
    com.baidu.platform.comapi.map.G f -> f
    com.baidu.platform.comapi.map.i a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void c() -> c
    android.os.Bundle d() -> d
com.baidu.platform.comapi.map.MapRenderer -> com.baidu.platform.comapi.map.MapRenderer:
    int g -> g
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    void nativeInit() -> nativeInit
    void nativeResize(int,int,int,int,int) -> nativeResize
    void nativeRender(int) -> nativeRender
    void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
com.baidu.platform.comapi.map.Projection -> com.baidu.platform.comapi.map.Projection:
    com.baidu.platform.comapi.basestruct.GeoPoint fromPixels(int,int) -> fromPixels
    float metersToEquatorPixels(float) -> metersToEquatorPixels
    android.graphics.Point toPixels(com.baidu.platform.comapi.basestruct.GeoPoint,android.graphics.Point) -> toPixels
com.baidu.platform.comapi.map.a -> com.baidu.platform.comapi.map.a:
    java.lang.String a -> a
    com.baidu.platform.comapi.map.a b -> b
    com.baidu.platform.comapi.map.i a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void c() -> c
    android.os.Bundle d() -> d
com.baidu.platform.comapi.map.b -> com.baidu.platform.comapi.map.b:
    com.baidu.platform.comapi.map.b a -> a
    java.lang.String b -> b
    com.baidu.platform.comapi.map.i a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void c() -> c
    android.os.Bundle d() -> d
com.baidu.platform.comapi.map.c -> com.baidu.platform.comapi.map.c:
    void a(boolean) -> a
com.baidu.platform.comapi.map.d -> com.baidu.platform.comapi.map.d:
    java.lang.String a -> a
    com.baidu.platform.comapi.map.d b -> b
    com.baidu.platform.comapi.map.i a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void c() -> c
    android.os.Bundle d() -> d
com.baidu.platform.comapi.map.e -> com.baidu.platform.comapi.map.e:
    java.lang.String a -> a
    com.baidu.platform.comapi.map.e b -> b
    com.baidu.platform.comapi.map.i a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void c() -> c
    android.os.Bundle d() -> d
com.baidu.platform.comapi.map.f -> com.baidu.platform.comapi.map.f:
    com.baidu.platform.comapi.map.f a -> a
    java.lang.String b -> b
    com.baidu.platform.comapi.map.i a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void c() -> c
    android.os.Bundle d() -> d
com.baidu.platform.comapi.map.g -> com.baidu.platform.comapi.map.g:
com.baidu.platform.comapi.map.h -> com.baidu.platform.comapi.map.h:
    com.baidu.platform.comapi.map.h a -> a
    java.lang.String b -> b
    com.baidu.platform.comapi.map.i a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void c() -> c
    android.os.Bundle d() -> d
com.baidu.platform.comapi.map.i -> com.baidu.platform.comapi.map.i:
    int c -> c
    int d -> d
    com.baidu.platform.comapi.map.t e -> e
    void a(int,com.baidu.platform.comapi.map.t) -> a
    void a(boolean) -> a
    void e() -> e
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    android.os.Bundle d() -> d
    void c() -> c
    int f() -> f
    int g() -> g
com.baidu.platform.comapi.map.j -> com.baidu.platform.comapi.map.j:
    com.baidu.platform.comapi.map.t a -> a
    com.baidu.platform.comapi.basestruct.GeoPoint fromPixels(int,int) -> fromPixels
    float metersToEquatorPixels(float) -> metersToEquatorPixels
    android.graphics.Point toPixels(com.baidu.platform.comapi.basestruct.GeoPoint,android.graphics.Point) -> toPixels
com.baidu.platform.comapi.map.k -> com.baidu.platform.comapi.map.k:
    com.baidu.platform.comapi.map.w a -> a
    long b -> b
    long c -> c
    java.lang.String d -> d
com.baidu.platform.comapi.map.l -> com.baidu.platform.comapi.map.l:
    int a -> a
    java.lang.String b -> b
    int c -> c
    int d -> d
    java.util.ArrayList e -> e
    void a(java.util.ArrayList) -> a
    java.util.ArrayList a() -> a
com.baidu.platform.comapi.map.m -> com.baidu.platform.comapi.map.m:
    com.baidu.platform.comjni.map.basemap.a a -> a
    com.baidu.platform.comapi.map.m b -> b
    com.baidu.platform.comapi.map.r c -> c
    android.os.Handler d -> d
    com.baidu.platform.comapi.map.m a(com.baidu.platform.comapi.map.t) -> a
    boolean b(com.baidu.platform.comapi.map.t) -> b
    void a() -> a
    void a(com.baidu.platform.comapi.map.q) -> a
    void b(com.baidu.platform.comapi.map.q) -> b
    boolean a(int) -> a
    boolean b(int) -> b
    boolean c(int) -> c
    boolean d(int) -> d
    boolean e(int) -> e
    boolean a(boolean) -> a
    java.util.ArrayList b() -> b
    java.util.ArrayList c() -> c
    java.util.ArrayList a(java.lang.String) -> a
    com.baidu.platform.comapi.map.p f(int) -> f
    java.util.ArrayList d() -> d
    com.baidu.platform.comapi.map.r e() -> e
com.baidu.platform.comapi.map.n -> com.baidu.platform.comapi.map.n:
    com.baidu.platform.comapi.map.m a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.platform.comapi.map.o -> com.baidu.platform.comapi.map.o:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    int e -> e
    int f -> f
    com.baidu.platform.comapi.basestruct.c g -> g
    int h -> h
    int i -> i
    boolean j -> j
    int k -> k
    int l -> l
com.baidu.platform.comapi.map.p -> com.baidu.platform.comapi.map.p:
    com.baidu.platform.comapi.map.o a -> a
    void a(com.baidu.platform.comapi.map.o) -> a
    com.baidu.platform.comapi.map.o a() -> a
com.baidu.platform.comapi.map.q -> com.baidu.platform.comapi.map.q:
    void a(int,int) -> a
com.baidu.platform.comapi.map.r -> com.baidu.platform.comapi.map.r:
    com.baidu.platform.comapi.map.q a -> a
    void a(com.baidu.platform.comapi.map.q) -> a
    void b(com.baidu.platform.comapi.map.q) -> b
    void a() -> a
    void a(android.os.Message) -> a
com.baidu.platform.comapi.map.s -> com.baidu.platform.comapi.map.s:
    com.baidu.platform.comapi.map.s a -> a
    java.lang.String b -> b
    com.baidu.platform.comapi.map.i a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void c() -> c
    android.os.Bundle d() -> d
com.baidu.platform.comapi.map.t -> com.baidu.platform.comapi.map.t:
    com.baidu.platform.comjni.map.basemap.a j -> j
    android.content.Context k -> k
    com.baidu.platform.comapi.map.v l -> l
    int m -> m
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    java.util.Map e -> e
    java.util.Map f -> f
    java.util.Map g -> g
    java.util.Map h -> h
    android.os.Bundle n -> n
    android.os.Handler o -> o
    int p -> p
    boolean q -> q
    boolean r -> r
    int s -> s
    int t -> t
    int u -> u
    int v -> v
    long w -> w
    int x -> x
    int y -> y
    boolean z -> z
    boolean A -> A
    com.baidu.platform.comapi.map.t$a B -> B
    int C -> C
    int D -> D
    boolean E -> E
    boolean F -> F
    boolean G -> G
    android.view.VelocityTracker H -> H
    long I -> I
    long J -> J
    long K -> K
    long L -> L
    int M -> M
    float N -> N
    float O -> O
    boolean P -> P
    long Q -> Q
    long R -> R
    boolean S -> S
    long T -> T
    long U -> U
    long V -> V
    boolean W -> W
    boolean i -> i
    boolean X -> X
    com.baidu.platform.comapi.basestruct.GeoPoint Y -> Y
    boolean Z -> Z
    int aa -> aa
    int ab -> ab
    boolean ac -> ac
    boolean ad -> ad
    int a(int,int,int,int) -> a
    void a(com.baidu.platform.comapi.map.v) -> a
    int a() -> a
    void a(java.lang.String) -> a
    com.baidu.platform.comjni.map.basemap.a b() -> b
    double c() -> c
    void a(int,int) -> a
    boolean g(int,int) -> g
    void a(com.baidu.platform.comapi.basestruct.GeoPoint) -> a
    void a(com.baidu.platform.comapi.basestruct.GeoPoint,android.os.Message) -> a
    int a(int,int,int) -> a
    boolean a(android.view.MotionEvent) -> a
    void e(android.view.MotionEvent) -> e
    boolean b(android.view.MotionEvent) -> b
    boolean c(android.view.MotionEvent) -> c
    void d(android.view.MotionEvent) -> d
    void a(boolean) -> a
    boolean d() -> d
    void e() -> e
    boolean a(android.view.MotionEvent,android.view.MotionEvent,float,float) -> a
    boolean f() -> f
    boolean b(int,int) -> b
    void m() -> m
    boolean g() -> g
    boolean c(int,int) -> c
    void n() -> n
    void d(int,int) -> d
    void b(boolean) -> b
    int h() -> h
    int i() -> i
    void a(com.baidu.platform.comapi.map.x) -> a
    void a(com.baidu.platform.comapi.map.x,int) -> a
    com.baidu.platform.comapi.map.x j() -> j
    float k() -> k
    void a(android.os.Bundle,com.baidu.platform.comapi.map.A) -> a
    void o() -> o
    void p() -> p
    void l() -> l
    void e(int,int) -> e
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    boolean f(int,int) -> f
    boolean b(int,int,int) -> b
    com.baidu.platform.comapi.map.v a(com.baidu.platform.comapi.map.t) -> a
    boolean b(com.baidu.platform.comapi.map.t) -> b
    void c(com.baidu.platform.comapi.map.t) -> c
    boolean d(com.baidu.platform.comapi.map.t) -> d
    void e(com.baidu.platform.comapi.map.t) -> e
com.baidu.platform.comapi.map.t$a -> com.baidu.platform.comapi.map.t$a:
    int a -> a
    float b -> b
    float c -> c
    float d -> d
    float e -> e
    float f -> f
    float g -> g
    float h -> h
    float i -> i
    boolean j -> j
    float k -> k
    float l -> l
    double m -> m
com.baidu.platform.comapi.map.u -> com.baidu.platform.comapi.map.u:
    com.baidu.platform.comapi.map.t a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.platform.comapi.map.v -> com.baidu.platform.comapi.map.v:
    boolean l -> l
    boolean m -> m
    com.baidu.platform.comapi.map.t n -> n
    com.baidu.platform.comapi.map.A a -> a
    com.baidu.platform.comapi.map.j b -> b
    int o -> o
    com.baidu.platform.comapi.map.MapRenderer c -> c
    int d -> d
    com.baidu.platform.comapi.map.y e -> e
    com.baidu.platform.comapi.map.c f -> f
    com.baidu.platform.comapi.map.g g -> g
    com.baidu.platform.comapi.map.F h -> h
    android.view.GestureDetector i -> i
    java.util.List j -> j
    int p -> p
    int q -> q
    boolean k -> k
    void a(android.os.Bundle,android.content.Context) -> a
    void o() -> o
    void a() -> a
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void onResume() -> onResume
    void onPause() -> onPause
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean a(android.view.MotionEvent) -> a
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    com.baidu.platform.comapi.map.t b() -> b
    int c() -> c
    int d() -> d
    java.util.List e() -> e
    com.baidu.platform.comapi.map.Projection f() -> f
    boolean g() -> g
    boolean h() -> h
    void a(boolean) -> a
    void b(boolean) -> b
    void a(com.baidu.platform.comapi.map.y) -> a
    void a(com.baidu.platform.comapi.basestruct.GeoPoint,android.os.Message,java.lang.Runnable) -> a
    void a(int,int) -> a
    double i() -> i
    com.baidu.platform.comapi.basestruct.GeoPoint j() -> j
    float k() -> k
    int l() -> l
    int m() -> m
    void a(com.baidu.platform.comapi.map.x) -> a
    com.baidu.platform.comapi.map.x n() -> n
    void a(com.baidu.platform.comapi.map.c) -> a
    float a(com.baidu.platform.comapi.basestruct.b) -> a
com.baidu.platform.comapi.map.w -> com.baidu.platform.comapi.map.w:
    java.lang.String a -> a
    int b -> b
    java.lang.String c -> c
    com.baidu.platform.comapi.basestruct.GeoPoint d -> d
    int e -> e
    int f -> f
com.baidu.platform.comapi.map.x -> com.baidu.platform.comapi.map.x:
    float a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    com.baidu.platform.comapi.map.x$b f -> f
    com.baidu.platform.comapi.map.x$a g -> g
    long h -> h
    long i -> i
    boolean j -> j
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.baidu.platform.comapi.map.x$a -> com.baidu.platform.comapi.map.x$a:
    long a -> a
    long b -> b
    long c -> c
    long d -> d
    com.baidu.platform.comapi.basestruct.c e -> e
    com.baidu.platform.comapi.basestruct.c f -> f
    com.baidu.platform.comapi.basestruct.c g -> g
    com.baidu.platform.comapi.basestruct.c h -> h
    com.baidu.platform.comapi.map.x i -> i
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.baidu.platform.comapi.map.x$b -> com.baidu.platform.comapi.map.x$b:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    com.baidu.platform.comapi.map.x e -> e
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.baidu.platform.comapi.map.y -> com.baidu.platform.comapi.map.y:
    void b(java.util.List) -> b
    void a(java.util.List) -> a
    void a(java.util.List,int) -> a
    void c(java.util.List) -> c
    void d(java.util.List) -> d
    void a() -> a
    void b() -> b
    void c() -> c
    void a(int) -> a
    void a(int,com.baidu.platform.comapi.basestruct.GeoPoint) -> a
com.baidu.platform.comapi.map.z -> com.baidu.platform.comapi.map.z:
    int mType -> mType
    int mLayerID -> mLayerID
com.baidu.platform.comjni.base.location.JNILocation -> com.baidu.platform.comjni.base.location.JNILocation:
    int Create() -> Create
    boolean CoordinateEncryptEx(int,float,float,android.os.Bundle,java.lang.String) -> CoordinateEncryptEx
com.baidu.platform.comjni.base.location.a -> com.baidu.platform.comjni.base.location.a:
    int a -> a
    com.baidu.platform.comjni.base.location.JNILocation b -> b
    int a() -> a
    boolean a(float,float,android.os.Bundle,java.lang.String) -> a
com.baidu.platform.comjni.base.userdatacollect.JNIUserdataCollect -> com.baidu.platform.comjni.base.userdatacollect.JNIUserdataCollect:
    int Create() -> Create
    int Release(int) -> Release
    boolean CreateUDC(int,java.lang.String,android.os.Bundle) -> CreateUDC
    void AppendRecord(int,java.lang.String,java.lang.String) -> AppendRecord
    void Save(int) -> Save
com.baidu.platform.comjni.base.userdatacollect.a -> com.baidu.platform.comjni.base.userdatacollect.a:
    int a -> a
    com.baidu.platform.comjni.base.userdatacollect.JNIUserdataCollect b -> b
    int a() -> a
    int b() -> b
    boolean a(java.lang.String,android.os.Bundle) -> a
    void a(java.lang.String,java.lang.String) -> a
    void c() -> c
com.baidu.platform.comjni.engine.AppEngine -> com.baidu.platform.comjni.engine.AppEngine:
    void despatchMessage(int,int,int) -> despatchMessage
    boolean InitEngine(android.os.Bundle) -> InitEngine
    boolean UnInitEngine() -> UnInitEngine
    void SetProxyInfo(java.lang.String,int) -> SetProxyInfo
    boolean StartSocketProc() -> StartSocketProc
    boolean GetFlaxLength(android.os.Bundle) -> GetFlaxLength
com.baidu.platform.comjni.engine.JNIEngine -> com.baidu.platform.comjni.engine.JNIEngine:
    int initClass(java.lang.Object,int) -> initClass
    boolean InitEngine(android.os.Bundle) -> InitEngine
    boolean UnInitEngine() -> UnInitEngine
    void SetProxyInfo(java.lang.String,int) -> SetProxyInfo
    boolean StartSocketProc() -> StartSocketProc
    boolean GetFlaxLength(android.os.Bundle) -> GetFlaxLength
com.baidu.platform.comjni.engine.a -> com.baidu.platform.comjni.engine.a:
    android.util.SparseArray a -> a
    void a(int,android.os.Handler) -> a
    void b(int,android.os.Handler) -> b
    void a(int,int,int) -> a
    void a() -> a
com.baidu.platform.comjni.map.basemap.BaseMapCallback -> com.baidu.platform.comjni.map.basemap.BaseMapCallback:
    com.baidu.platform.comjni.map.basemap.BaseMapCallback a -> a
    boolean SetMapCallback(com.baidu.platform.comjni.map.basemap.BaseMapCallback) -> SetMapCallback
    int ReqLayerData(android.os.Bundle,int,int) -> ReqLayerData
com.baidu.platform.comjni.map.basemap.JNIBaseMap -> com.baidu.platform.comjni.map.basemap.JNIBaseMap:
    int Create() -> Create
    int SetCallback(int,com.baidu.platform.comjni.map.basemap.BaseMapCallback) -> SetCallback
    int Release(int) -> Release
    boolean Init(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int) -> Init
    void OnPause(int) -> OnPause
    void OnResume(int) -> OnResume
    void ResetImageRes(int) -> ResetImageRes
    void SetMapStatus(int,android.os.Bundle) -> SetMapStatus
    android.os.Bundle GetMapStatus(int) -> GetMapStatus
    void ShowSatelliteMap(int,boolean) -> ShowSatelliteMap
    void ShowTrafficMap(int,boolean) -> ShowTrafficMap
    void ShowLayers(int,int,boolean) -> ShowLayers
    void SetLayersClickable(int,int,boolean) -> SetLayersClickable
    void UpdateLayers(int,int) -> UpdateLayers
    int AddLayer(int,int,int,java.lang.String) -> AddLayer
    void ClearLayer(int,int) -> ClearLayer
    java.lang.String GetNearlyObjID(int,int,int,int,int) -> GetNearlyObjID
    java.lang.String ScrPtToGeoPoint(int,int,int) -> ScrPtToGeoPoint
    java.lang.String GeoPtToScrPoint(int,int,int) -> GeoPtToScrPoint
    void SaveScreenToLocal(int,java.lang.String) -> SaveScreenToLocal
    boolean OnRecordAdd(int,int) -> OnRecordAdd
    boolean OnRecordStart(int,int,boolean,int) -> OnRecordStart
    boolean OnRecordSuspend(int,int,boolean,int) -> OnRecordSuspend
    boolean OnRecordRemove(int,int,boolean) -> OnRecordRemove
    java.lang.String OnRecordGetAll(int) -> OnRecordGetAll
    java.lang.String OnRecordGetAt(int,int) -> OnRecordGetAt
    boolean OnRecordImport(int,boolean) -> OnRecordImport
    java.lang.String OnHotcityGet(int) -> OnHotcityGet
    java.lang.String OnSchcityGet(int,java.lang.String) -> OnSchcityGet
    void MoveToScrPoint(int,int,int) -> MoveToScrPoint
    void AddPopupData(int,android.os.Bundle) -> AddPopupData
    void AddItemData(int,android.os.Bundle) -> AddItemData
    boolean RemoveItemData(int,android.os.Bundle) -> RemoveItemData
    void AddLogoData(int,android.os.Bundle) -> AddLogoData
    int AddGeometryData(int,android.os.Bundle) -> AddGeometryData
    boolean RemoveGeometryData(int,android.os.Bundle) -> RemoveGeometryData
    int MapProc(int,int,int,int) -> MapProc
com.baidu.platform.comjni.map.basemap.a -> com.baidu.platform.comjni.map.basemap.a:
    int a -> a
    com.baidu.platform.comjni.map.basemap.JNIBaseMap b -> b
    com.baidu.platform.comjni.map.basemap.BaseMapCallback c -> c
    boolean a(com.baidu.platform.comjni.map.basemap.BaseMapCallback) -> a
    boolean a() -> a
    boolean b() -> b
    int c() -> c
    boolean a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int) -> a
    void d() -> d
    void e() -> e
    void f() -> f
    void a(android.os.Bundle) -> a
    android.os.Bundle g() -> g
    void a(boolean) -> a
    void b(boolean) -> b
    void a(int,boolean) -> a
    void b(int,boolean) -> b
    void a(int) -> a
    int a(int,int,java.lang.String) -> a
    void b(int) -> b
    java.lang.String a(int,int,int,int) -> a
    java.lang.String a(int,int) -> a
    java.lang.String b(int,int) -> b
    void a(java.lang.String) -> a
    boolean c(int) -> c
    boolean a(int,boolean,int) -> a
    boolean b(int,boolean,int) -> b
    boolean c(int,boolean) -> c
    java.lang.String h() -> h
    java.lang.String d(int) -> d
    boolean c(boolean) -> c
    java.lang.String i() -> i
    java.lang.String b(java.lang.String) -> b
    void c(int,int) -> c
    void b(android.os.Bundle) -> b
    void c(android.os.Bundle) -> c
    boolean d(android.os.Bundle) -> d
    void e(android.os.Bundle) -> e
    int f(android.os.Bundle) -> f
    boolean g(android.os.Bundle) -> g
    int b(int,int,int,int) -> b
com.baidu.platform.comjni.map.commonmemcache.JNICommonMemCache -> com.baidu.platform.comjni.map.commonmemcache.JNICommonMemCache:
    int Create() -> Create
    int Release(int) -> Release
    void Init(int,android.os.Bundle) -> Init
com.baidu.platform.comjni.map.commonmemcache.a -> com.baidu.platform.comjni.map.commonmemcache.a:
    int a -> a
    com.baidu.platform.comjni.map.commonmemcache.JNICommonMemCache b -> b
    int a() -> a
    int b() -> b
    void a(android.os.Bundle) -> a
com.baidu.platform.comjni.map.search.JNISearch -> com.baidu.platform.comjni.map.search.JNISearch:
    int Create() -> Create
    int QueryInterface(int) -> QueryInterface
    int Release(int) -> Release
    java.lang.String GetSearchResult(int,int) -> GetSearchResult
    boolean ForceSearchByCityName(int,android.os.Bundle) -> ForceSearchByCityName
    boolean AreaSearch(int,android.os.Bundle) -> AreaSearch
    boolean AreaMultiSearch(int,android.os.Bundle) -> AreaMultiSearch
    boolean RoutePlanByBus(int,android.os.Bundle) -> RoutePlanByBus
    boolean RoutePlanByCar(int,android.os.Bundle) -> RoutePlanByCar
    boolean RoutePlanByFoot(int,android.os.Bundle) -> RoutePlanByFoot
    boolean POIDetailSearchPlace(int,java.lang.String) -> POIDetailSearchPlace
    boolean BusLineDetailSearch(int,java.lang.String,java.lang.String) -> BusLineDetailSearch
    boolean SuggestionSearch(int,android.os.Bundle) -> SuggestionSearch
    boolean ReverseGeocodeSearch(int,int,int) -> ReverseGeocodeSearch
    boolean geocode(int,java.lang.String,java.lang.String) -> geocode
    boolean GeoSearch(int,android.os.Bundle) -> GeoSearch
    boolean GeoDetailSearch(int,android.os.Bundle) -> GeoDetailSearch
    boolean MapBoundSearch(int,android.os.Bundle) -> MapBoundSearch
com.baidu.platform.comjni.map.search.a -> com.baidu.platform.comjni.map.search.a:
    int a -> a
    com.baidu.platform.comjni.map.search.JNISearch b -> b
    int a() -> a
    int b() -> b
    int c() -> c
    java.lang.String a(int) -> a
    boolean a(android.os.Bundle) -> a
    boolean b(android.os.Bundle) -> b
    boolean c(android.os.Bundle) -> c
    boolean d(android.os.Bundle) -> d
    boolean e(android.os.Bundle) -> e
    boolean f(android.os.Bundle) -> f
    boolean a(java.lang.String) -> a
    boolean a(java.lang.String,java.lang.String) -> a
    boolean g(android.os.Bundle) -> g
    boolean a(int,int) -> a
    boolean b(java.lang.String,java.lang.String) -> b
    boolean h(android.os.Bundle) -> h
    boolean i(android.os.Bundle) -> i
    boolean j(android.os.Bundle) -> j
com.baidu.platform.comjni.permissioncheck.PermissionCheck -> com.baidu.platform.comjni.permissioncheck.PermissionCheck:
    boolean check(java.lang.String,java.lang.String) -> check
com.baidu.platform.comjni.tools.BundleKeySet -> com.baidu.platform.comjni.tools.BundleKeySet:
    java.lang.String[] getBundleKeys(android.os.Bundle) -> getBundleKeys
com.baidu.platform.comjni.tools.JNITools -> com.baidu.platform.comjni.tools.JNITools:
    boolean TransGeoStr2Pt(java.lang.Object) -> TransGeoStr2Pt
    void TransNodeStr2Pt(java.lang.Object) -> TransNodeStr2Pt
    boolean TransGeoStr2ComplexPt(java.lang.Object) -> TransGeoStr2ComplexPt
    void GetDistanceByMC(java.lang.Object) -> GetDistanceByMC
com.baidu.platform.comjni.tools.ParcelItem -> com.baidu.platform.comjni.tools.ParcelItem:
    android.os.Bundle b -> b
    android.os.Parcelable$Creator a -> a
    void setBundle(android.os.Bundle) -> setBundle
    android.os.Bundle getBundle() -> getBundle
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
com.baidu.platform.comjni.tools.a -> com.baidu.platform.comjni.tools.a:
    com.baidu.platform.comapi.basestruct.a a(java.lang.String) -> a
    double a(com.baidu.platform.comapi.basestruct.c,com.baidu.platform.comapi.basestruct.c) -> a
com.baidu.platform.comjni.tools.b -> com.baidu.platform.comjni.tools.b:
    com.baidu.platform.comjni.tools.ParcelItem a(android.os.Parcel) -> a
    com.baidu.platform.comjni.tools.ParcelItem[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.vi.AudioFilePlayer -> com.baidu.vi.AudioFilePlayer:
    android.media.MediaPlayer a -> a
    int b -> b
    void SetDataSource(java.lang.String) -> SetDataSource
    void Prepare() -> Prepare
    void Start() -> Start
    void Pause() -> Pause
    void Stop() -> Stop
    void Release() -> Release
    void Reset() -> Reset
    boolean IsPlaying() -> IsPlaying
    int GetCurrentPosition() -> GetCurrentPosition
    int GetDuration() -> GetDuration
    void SeekTo(int) -> SeekTo
    float GetVolume() -> GetVolume
    int GetMaxVolume(android.media.AudioManager) -> GetMaxVolume
    void SetVolume(float) -> SetVolume
    void SetOnPlayCompletedListener(int) -> SetOnPlayCompletedListener
    void SetOnErrorListener(int) -> SetOnErrorListener
    void onPlayCompleted(int) -> onPlayCompleted
    boolean onErrorOccured(int,int) -> onErrorOccured
    int a(com.baidu.vi.AudioFilePlayer) -> a
    void a(com.baidu.vi.AudioFilePlayer,int) -> a
    boolean a(com.baidu.vi.AudioFilePlayer,int,int) -> a
com.baidu.vi.AudioRecorder -> com.baidu.vi.AudioRecorder:
    android.media.AudioRecord a -> a
    int b -> b
    int c -> c
    int d -> d
    boolean e -> e
    int f -> f
    int g -> g
    boolean h -> h
    java.lang.Object i -> i
    android.os.Handler j -> j
    java.lang.Thread k -> k
    void handleReadError() -> handleReadError
    void handleReadData(byte[],int) -> handleReadData
    int getMinBufferSize(int,int,int,int) -> getMinBufferSize
    void setWay(int) -> setWay
    void onReadData(byte[],int) -> onReadData
    void onReadError() -> onReadError
    int start() -> start
    void stop() -> stop
    void release() -> release
    boolean a(com.baidu.vi.AudioRecorder) -> a
    android.media.AudioRecord b(com.baidu.vi.AudioRecorder) -> b
    int c(com.baidu.vi.AudioRecorder) -> c
    void d(com.baidu.vi.AudioRecorder) -> d
    void a(com.baidu.vi.AudioRecorder,byte[],int) -> a
com.baidu.vi.AudioRecorder$a -> com.baidu.vi.AudioRecorder$a:
    com.baidu.vi.AudioRecorder a -> a
    byte[] b -> b
    int c -> c
    com.baidu.vi.AudioRecorder d -> d
com.baidu.vi.MFE -> com.baidu.vi.MFE:
    int SPEECH_NOT_START -> SPEECH_NOT_START
    int SPEECH_START -> SPEECH_START
    int SPEECH_END -> SPEECH_END
    int SPEECH_EMPTY -> SPEECH_EMPTY
    int SPEECH_TOO_SHORT -> SPEECH_TOO_SHORT
    int MFE_SUCCESS -> MFE_SUCCESS
    int MFE_ERROR_UNKNOWN -> MFE_ERROR_UNKNOWN
    int MFE_STATE_ERR -> MFE_STATE_ERR
    int MFE_POINTER_ERR -> MFE_POINTER_ERR
    int MFE_MEMALLOC_ERR -> MFE_MEMALLOC_ERR
    int MFE_PARAMRANGE_ERR -> MFE_PARAMRANGE_ERR
    int MFE_SEND_TOOMORE_DATA_ONCE -> MFE_SEND_TOOMORE_DATA_ONCE
    int MFE_VAD_INIT_ERROR -> MFE_VAD_INIT_ERROR
    int PARAM_MAX_WAIT_DURATION -> PARAM_MAX_WAIT_DURATION
    int PARAM_MAX_SP_DURATION -> PARAM_MAX_SP_DURATION
    int PARAM_MAX_SP_PAUSE -> PARAM_MAX_SP_PAUSE
    int PARAM_MIN_SP_DURATION -> PARAM_MIN_SP_DURATION
    int PARAM_SLEEP_TIMEOUT -> PARAM_SLEEP_TIMEOUT
    int PARAM_ENERGY_THRESHOLD_SP -> PARAM_ENERGY_THRESHOLD_SP
    int PARAM_ENERGY_THRESHOLD_EP -> PARAM_ENERGY_THRESHOLD_EP
    int PARAM_OFFSET -> PARAM_OFFSET
    int PARAM_SPEECH_END -> PARAM_SPEECH_END
    int PARAM_SPEECH_MODE -> PARAM_SPEECH_MODE
    int MFE_FORMAT_BV32_8K -> MFE_FORMAT_BV32_8K
    int MFE_FORMAT_PCM_8K -> MFE_FORMAT_PCM_8K
    int MFE_FORMAT_ADPCM_8K -> MFE_FORMAT_ADPCM_8K
    int MFE_FORMAT_BV32_16K -> MFE_FORMAT_BV32_16K
    int MFE_FORMAT_PCM_16K -> MFE_FORMAT_PCM_16K
    int mfeInit() -> mfeInit
    int mfeInit(int,int) -> mfeInit
    int mfeExit() -> mfeExit
    int mfeOpen() -> mfeOpen
    int mfeClose() -> mfeClose
    int mfeStart() -> mfeStart
    int mfeStop() -> mfeStop
    int mfeSendData(short[],int) -> mfeSendData
    int mfeGetCallbackData(byte[],int) -> mfeGetCallbackData
    int mfeDetect() -> mfeDetect
com.baidu.vi.VDeviceAPI -> com.baidu.vi.VDeviceAPI:
    android.os.PowerManager$WakeLock a -> a
    android.content.BroadcastReceiver b -> b
    long getTotalSpace() -> getTotalSpace
    long getFreeSpace() -> getFreeSpace
    long getSdcardTotalSpace() -> getSdcardTotalSpace
    long getSdcardFreeSpace() -> getSdcardFreeSpace
    long getTotalMemory() -> getTotalMemory
    long getAvailableMemory() -> getAvailableMemory
    java.lang.String getOsVersion() -> getOsVersion
    void setupSoftware(java.lang.String) -> setupSoftware
    java.lang.String getModuleFileName() -> getModuleFileName
    java.lang.String getSdcardPath() -> getSdcardPath
    java.lang.String getCachePath() -> getCachePath
    java.lang.String getAppVersion() -> getAppVersion
    int getCurrentNetworkType() -> getCurrentNetworkType
    boolean isWifiConnected() -> isWifiConnected
    com.baidu.vi.i getNetworkInfo(int) -> getNetworkInfo
    void setNetworkChangedCallback() -> setNetworkChangedCallback
    void unsetNetworkChangedCallback() -> unsetNetworkChangedCallback
    void onNetworkStateChanged() -> onNetworkStateChanged
    android.net.wifi.ScanResult[] getWifiHotpot() -> getWifiHotpot
    float getSystemMetricsX() -> getSystemMetricsX
    float getSystemMetricsY() -> getSystemMetricsY
    float getScreenDensity() -> getScreenDensity
    int getScreenDensityDpi() -> getScreenDensityDpi
    void setScreenAlwaysOn(boolean) -> setScreenAlwaysOn
    int getScreenBrightness() -> getScreenBrightness
    void makeCall(java.lang.String) -> makeCall
    void sendSMS(java.lang.String,java.lang.String) -> sendSMS
    int sendMMS(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> sendMMS
    void openUrl(java.lang.String) -> openUrl
    java.lang.String getCellId() -> getCellId
    java.lang.String getLac() -> getLac
    java.lang.String getImei() -> getImei
    java.lang.String getImsi() -> getImsi
com.baidu.vi.VMsg -> com.baidu.vi.VMsg:
    android.os.Handler a -> a
    android.os.HandlerThread b -> b
    void init() -> init
    void destroy() -> destroy
    void postMessage(int,int,int) -> postMessage
    void OnUserCommand(int,int,int) -> OnUserCommand
    void a(int,int,int) -> a
com.baidu.vi.VMsg$a -> com.baidu.vi.VMsg$a:
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.vi.a -> com.baidu.vi.a:
    com.baidu.vi.AudioFilePlayer a -> a
    void onSeekComplete(android.media.MediaPlayer) -> onSeekComplete
com.baidu.vi.b -> com.baidu.vi.b:
    com.baidu.vi.AudioFilePlayer a -> a
    void onCompletion(android.media.MediaPlayer) -> onCompletion
com.baidu.vi.c -> com.baidu.vi.c:
    com.baidu.vi.AudioFilePlayer a -> a
    boolean onError(android.media.MediaPlayer,int,int) -> onError
com.baidu.vi.d -> com.baidu.vi.d:
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.vi.db.SQLiteDatabase4C -> com.baidu.vi.db.SQLiteDatabase4C:
    android.database.sqlite.SQLiteDatabase a -> a
    android.database.sqlite.SQLiteDatabase getSQLiteDatabase() -> getSQLiteDatabase
    boolean openDB(java.lang.String) -> openDB
    boolean closeDB() -> closeDB
    boolean isDBExists() -> isDBExists
    boolean isTableExists(java.lang.String) -> isTableExists
    com.baidu.vi.db.SQLiteStatement4C compileStatement(java.lang.String) -> compileStatement
    boolean transactionBegin() -> transactionBegin
    boolean transactionCommit() -> transactionCommit
    boolean transactionRollback() -> transactionRollback
    boolean isThreadSafe() -> isThreadSafe
com.baidu.vi.db.SQLiteResultSet4C -> com.baidu.vi.db.SQLiteResultSet4C:
    android.database.Cursor a -> a
    int getCount() -> getCount
    int getColumnCount() -> getColumnCount
    int getIntValue(int) -> getIntValue
    double getDoubleValue(int) -> getDoubleValue
    java.lang.String getStringValue(int) -> getStringValue
    byte[] getBlobValue(int) -> getBlobValue
    boolean next() -> next
    void close() -> close
com.baidu.vi.db.SQLiteStatement4C -> com.baidu.vi.db.SQLiteStatement4C:
    android.database.sqlite.SQLiteDatabase a -> a
    java.util.HashMap b -> b
    java.lang.String c -> c
    void bindNull(int) -> bindNull
    void bind(int,java.lang.String) -> bind
    void bind(int,int) -> bind
    void bind(int,double) -> bind
    void bind(int,byte[]) -> bind
    boolean execUpdate() -> execUpdate
    com.baidu.vi.db.SQLiteResultSet4C execQuery() -> execQuery
    java.lang.Object[] extractParameters() -> extractParameters
    java.lang.String[] extractStringParameters() -> extractStringParameters
    void clearBinds() -> clearBinds
    void Close() -> Close
com.baidu.vi.e -> com.baidu.vi.e:
    com.baidu.vi.AudioRecorder a -> a
    void run() -> run
com.baidu.vi.f -> com.baidu.vi.f:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.vi.g -> com.baidu.vi.g:
    android.app.Activity a -> a
    android.app.Activity a() -> a
com.baidu.vi.h -> com.baidu.vi.h:
    android.content.Context a -> a
    void a(android.content.Context) -> a
    android.content.Context a() -> a
com.baidu.vi.i -> com.baidu.vi.i:
    java.lang.String a -> a
    int b -> b
    int c -> c
com.baidu.vi.i$1 -> com.baidu.vi.i$1:
    int[] a -> a
com.easemob.EMCallBack -> com.easemob.EMCallBack:
    int ERROR_EXCEPTION -> ERROR_EXCEPTION
    int ERROR_SEND -> ERROR_SEND
    int ERROR_FILE_NOT_FOUND -> ERROR_FILE_NOT_FOUND
    int ERROR_EXCEPTION_NO_ERROR -> ERROR_EXCEPTION_NO_ERROR
    int ERROR_EXCEPTION_UNKNOWN_SERVER_ERROR -> ERROR_EXCEPTION_UNKNOWN_SERVER_ERROR
    int ERROR_EXCEPTION_NONETWORK_ERROR -> ERROR_EXCEPTION_NONETWORK_ERROR
    int ERROR_EXCEPTION_DNS_ERROR -> ERROR_EXCEPTION_DNS_ERROR
    int ERROR_EXCEPTION_UNABLE_CONNECT_TO_SERVER -> ERROR_EXCEPTION_UNABLE_CONNECT_TO_SERVER
    int ERROR_EXCEPTION_CONNECT_TIMER_OUT -> ERROR_EXCEPTION_CONNECT_TIMER_OUT
    int ERROR_EXCEPTION_INVALID_PASSWORD_USERNAME -> ERROR_EXCEPTION_INVALID_PASSWORD_USERNAME
    int ERROR_EXCEPTION_INVALID_KEYSTORE -> ERROR_EXCEPTION_INVALID_KEYSTORE
    int ERROR_EXCEPTION_IO_EXCEPTION -> ERROR_EXCEPTION_IO_EXCEPTION
    int ERROR_EXCEPTION_INVALID_CERTIFICATE -> ERROR_EXCEPTION_INVALID_CERTIFICATE
    int ERROR_EXCEPTION_ENCRYPTION_ERROR -> ERROR_EXCEPTION_ENCRYPTION_ERROR
    int ERROR_EXCEPTION_LOGOFFINPROGRESS_ERROR -> ERROR_EXCEPTION_LOGOFFINPROGRESS_ERROR
    int ERROR_EXCEPTION_INVALID_FILE -> ERROR_EXCEPTION_INVALID_FILE
    int ERROR_EXCEPTION_FILE_NOT_FOUND -> ERROR_EXCEPTION_FILE_NOT_FOUND
    java.lang.Object data -> data
    void onSuccess() -> onSuccess
    void onError(int,java.lang.String) -> onError
    void onProgress(int,java.lang.String) -> onProgress
com.easemob.a.a -> com.easemob.a.a:
    java.lang.String a -> a
    com.easemob.a.a b -> b
    long c -> c
    long d -> d
    long e -> e
    long f -> f
    long g -> g
    long h -> h
    long i -> i
    long j -> j
    long k -> k
    long l -> l
    long m -> m
    long n -> n
    long o -> o
    long p -> p
    long q -> q
    long r -> r
    int s -> s
    long t -> t
    long u -> u
    boolean v -> v
    void a() -> a
    void b() -> b
    void c() -> c
    void d() -> d
com.easemob.analytics.ActiveCollector -> com.easemob.analytics.ActiveCollector:
    java.lang.String perf_actived -> perf_actived
    java.lang.String collectActiveInfo(android.content.Context) -> collectActiveInfo
    void sendActivePacket(android.content.Context) -> sendActivePacket
    void sendUninstallPacket() -> sendUninstallPacket
com.easemob.analytics.ActiveCollector$1 -> com.easemob.analytics.ActiveCollector$1:
    android.content.Context val$context -> val$context
    void run() -> run
com.easemob.audio.AVNative -> com.easemob.audio.AVNative:
    java.lang.String TAG -> TAG
    int nativeVoeClient_Register(com.easemob.audio.IGxStatusCallback,android.content.Context,int,java.lang.String,int,java.lang.String,java.lang.String,short,java.lang.String) -> nativeVoeClient_Register
    int nativeVoeClient_FullDuplexSpeech(java.lang.String) -> nativeVoeClient_FullDuplexSpeech
    int nativeVoeClient_Stop(java.lang.String) -> nativeVoeClient_Stop
    int nativeVoeClient_Release(java.lang.String) -> nativeVoeClient_Release
    int nativeVoeClient_GetAudioLevel(java.lang.String) -> nativeVoeClient_GetAudioLevel
    int register(com.easemob.audio.IGxStatusCallback,android.content.Context,int,java.lang.String,int,java.lang.String,java.lang.String,short,java.lang.String) -> register
    int unregister(java.lang.String) -> unregister
    int stop(java.lang.String) -> stop
    int setFullDuplexSpeech(java.lang.String) -> setFullDuplexSpeech
    int GetAudioLevel(java.lang.String) -> GetAudioLevel
com.easemob.audio.IGxStatusCallback -> com.easemob.audio.IGxStatusCallback:
    void updateStatus(int) -> updateStatus
com.easemob.chat.ChatListener -> com.easemob.chat.ChatListener:
    java.lang.String TAG -> TAG
    java.lang.String previousFrom -> previousFrom
    java.lang.String previousBody -> previousBody
    long previousTime -> previousTime
    com.easemob.chat.EMChatManager chatManager -> chatManager
    java.util.concurrent.ExecutorService recvThreadPool -> recvThreadPool
    java.util.concurrent.ArrayBlockingQueue recentMsgIdQueue -> recentMsgIdQueue
    int RECENT_QUEUE_SIZE -> RECENT_QUEUE_SIZE
    java.util.Set offlineMsgUserSenders -> offlineMsgUserSenders
    java.util.Set offlineMsgGrpSenders -> offlineMsgGrpSenders
    long lastOfflineMsgTime -> lastOfflineMsgTime
    com.easemob.chat.EMMessage lastOfflineMsg -> lastOfflineMsg
    long OFFLINE_INTERVAL -> OFFLINE_INTERVAL
    boolean offlineMsgProcessed -> offlineMsgProcessed
    void ackMessage(org.jivesoftware.smack.packet.Message) -> ackMessage
    boolean isDuplicateMsg(org.jivesoftware.smack.packet.Message) -> isDuplicateMsg
    boolean processMessage(org.jivesoftware.smack.packet.Message) -> processMessage
    boolean processEMMessage(com.easemob.chat.EMMessage) -> processEMMessage
    void sendCmdMsgBroadcast(com.easemob.chat.EMMessage) -> sendCmdMsgBroadcast
    void sendOfflineMsgBroadcast() -> sendOfflineMsgBroadcast
    void setLocalUrl(com.easemob.chat.EMMessage) -> setLocalUrl
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
    void clearRecentMsgIdQueue() -> clearRecentMsgIdQueue
    void resetOfflineFlags() -> resetOfflineFlags
    com.easemob.chat.EMMessage access$0(com.easemob.chat.ChatListener) -> access$0
    void access$1(com.easemob.chat.ChatListener,boolean) -> access$1
    long access$2(com.easemob.chat.ChatListener) -> access$2
    void access$3(com.easemob.chat.ChatListener,com.easemob.chat.EMMessage) -> access$3
    void access$4(com.easemob.chat.ChatListener,long) -> access$4
com.easemob.chat.ChatListener$1 -> com.easemob.chat.ChatListener$1:
    com.easemob.chat.ChatListener this$0 -> this$0
    void run() -> run
    void sendBroadcast() -> sendBroadcast
com.easemob.chat.CmdMessageBody -> com.easemob.chat.CmdMessageBody:
    java.lang.String action -> action
    java.util.HashMap params -> params
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.easemob.chat.CmdMessageBody$1 -> com.easemob.chat.CmdMessageBody$1:
    com.easemob.chat.CmdMessageBody createFromParcel(android.os.Parcel) -> createFromParcel
    com.easemob.chat.CmdMessageBody[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.easemob.chat.CmdMsgProcessor -> com.easemob.chat.CmdMsgProcessor:
    java.lang.String getAction() -> getAction
    boolean processCmd(com.easemob.chat.EMMessage) -> processCmd
com.easemob.chat.ConnectionListener -> com.easemob.chat.ConnectionListener:
    void onConnected() -> onConnected
    void onDisConnected(java.lang.String) -> onDisConnected
    void onReConnected() -> onReConnected
    void onReConnecting() -> onReConnecting
    void onConnecting(java.lang.String) -> onConnecting
com.easemob.chat.EMCallDirection -> com.easemob.chat.EMCallDirection:
    com.easemob.chat.EMCallDirection OUTGOING -> OUTGOING
    com.easemob.chat.EMCallDirection INCOMING -> INCOMING
    com.easemob.chat.EMCallDirection NONE -> NONE
    java.lang.String direction -> direction
    com.easemob.chat.EMCallDirection[] ENUM$VALUES -> ENUM$VALUES
    java.lang.String toString() -> toString
    com.easemob.chat.EMCallDirection[] values() -> values
    com.easemob.chat.EMCallDirection valueOf(java.lang.String) -> valueOf
com.easemob.chat.EMCallStateChangeListener -> com.easemob.chat.EMCallStateChangeListener:
    void onCallStateChanged(com.easemob.chat.EMCallStateChangeListener$CallState,com.easemob.chat.EMCallStateChangeListener$CallError) -> onCallStateChanged
com.easemob.chat.EMCallStateChangeListener$CallError -> com.easemob.chat.EMCallStateChangeListener$CallError:
    com.easemob.chat.EMCallStateChangeListener$CallError ERROR_NONE -> ERROR_NONE
    com.easemob.chat.EMCallStateChangeListener$CallError ERROR_TRANSPORT -> ERROR_TRANSPORT
    com.easemob.chat.EMCallStateChangeListener$CallError ERROR_INAVAILABLE -> ERROR_INAVAILABLE
    com.easemob.chat.EMCallStateChangeListener$CallError REJECTED -> REJECTED
    com.easemob.chat.EMCallStateChangeListener$CallError ERROR_NORESPONSE -> ERROR_NORESPONSE
    com.easemob.chat.EMCallStateChangeListener$CallError ERROR_BUSY -> ERROR_BUSY
    java.lang.String error -> error
    com.easemob.chat.EMCallStateChangeListener$CallError[] $VALUES -> $VALUES
    com.easemob.chat.EMCallStateChangeListener$CallError[] values() -> values
    com.easemob.chat.EMCallStateChangeListener$CallError valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
com.easemob.chat.EMCallStateChangeListener$CallState -> com.easemob.chat.EMCallStateChangeListener$CallState:
    com.easemob.chat.EMCallStateChangeListener$CallState IDLE -> IDLE
    com.easemob.chat.EMCallStateChangeListener$CallState RINGING -> RINGING
    com.easemob.chat.EMCallStateChangeListener$CallState ANSWERING -> ANSWERING
    com.easemob.chat.EMCallStateChangeListener$CallState PAUSING -> PAUSING
    com.easemob.chat.EMCallStateChangeListener$CallState CONNECTING -> CONNECTING
    com.easemob.chat.EMCallStateChangeListener$CallState CONNECTED -> CONNECTED
    com.easemob.chat.EMCallStateChangeListener$CallState ACCEPTED -> ACCEPTED
    com.easemob.chat.EMCallStateChangeListener$CallState DISCONNNECTED -> DISCONNNECTED
    java.lang.String state -> state
    com.easemob.chat.EMCallStateChangeListener$CallState[] $VALUES -> $VALUES
    com.easemob.chat.EMCallStateChangeListener$CallState[] values() -> values
    com.easemob.chat.EMCallStateChangeListener$CallState valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
com.easemob.chat.EMCallerJingleSession -> com.easemob.chat.EMCallerJingleSession:
    java.lang.String TAG -> TAG
    boolean callAccepted -> callAccepted
    com.easemob.chat.EMCallerJingleSession buildPeer(java.lang.String) -> buildPeer
    void makeCall() -> makeCall
    void closeSession(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason) -> closeSession
    void handleSessionInitiate(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleSessionInitiate
    void handleSessionAccept(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleSessionAccept
    void handleSessionTerminate(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleSessionTerminate
    void handleCallAccept(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleCallAccept
    void onConnectionConnected() -> onConnectionConnected
    void onRelayCandidateSelected() -> onRelayCandidateSelected
    void onLocalCandidateSelected() -> onLocalCandidateSelected
com.easemob.chat.EMChat -> com.easemob.chat.EMChat:
    java.lang.String TAG -> TAG
    com.easemob.chat.EMChat instance -> instance
    java.lang.String version -> version
    com.easemob.chat.EMChatManager chatManager -> chatManager
    com.easemob.chat.EMSessionManager sessionManager -> sessionManager
    com.easemob.chat.EMContactManager contactManager -> contactManager
    boolean appInited -> appInited
    boolean autoLogin -> autoLogin
    boolean initSingleProcess -> initSingleProcess
    boolean sdkInited -> sdkInited
    java.lang.String PID_FILE -> PID_FILE
    com.easemob.chat.EMChat getInstance() -> getInstance
    void setDebugMode(boolean) -> setDebugMode
    void setLogMode(com.easemob.util.EMLog$ELogMode) -> setLogMode
    void setAutoLogin(boolean) -> setAutoLogin
    void setAppInited() -> setAppInited
    void setInitSingleProcess(boolean) -> setInitSingleProcess
    void uploadLog(com.easemob.EMCallBack) -> uploadLog
    void init(android.content.Context) -> init
    java.lang.String getVersion() -> getVersion
    boolean checkSDKInited(android.content.Context) -> checkSDKInited
com.easemob.chat.EMChatConfig -> com.easemob.chat.EMChatConfig:
    java.lang.String TAG -> TAG
    java.lang.String CONFIG_EASEMOB_APPKEY -> CONFIG_EASEMOB_APPKEY
    java.lang.String CONFIG_EASEMOB_CHAT_ADDRESS -> CONFIG_EASEMOB_CHAT_ADDRESS
    java.lang.String CONFIG_EASEMOB_CHAT_DOMAIN -> CONFIG_EASEMOB_CHAT_DOMAIN
    java.lang.String CONFIG_EASEMOB_GROUP_DOMAIN -> CONFIG_EASEMOB_GROUP_DOMAIN
    java.lang.String CONFIG_EASEMOB_API_URL -> CONFIG_EASEMOB_API_URL
    java.lang.String CHATSERVER -> CHATSERVER
    java.lang.String DOMAIN -> DOMAIN
    java.lang.String DOMAIN_SUFFIX -> DOMAIN_SUFFIX
    java.lang.String MUC_DOMAIN -> MUC_DOMAIN
    java.lang.String MUC_DOMAIN_SUFFIX -> MUC_DOMAIN_SUFFIX
    java.lang.String STUN_SERVER -> STUN_SERVER
    int STUN_SERVER_PORT -> STUN_SERVER_PORT
    java.lang.String USER_SERVER -> USER_SERVER
    java.lang.String UUID -> UUID
    java.lang.String SHARE_SERCRET -> SHARE_SERCRET
    java.lang.String TOKEN_ENTITY -> TOKEN_ENTITY
    java.lang.String APPKEY -> APPKEY
    com.easemob.chat.EMTransportAddress[] stunServerAddress -> stunServerAddress
    java.lang.String AccessToken -> AccessToken
    long AccessTokeSavedTime -> AccessTokeSavedTime
    android.content.Context applicationContext -> applicationContext
    boolean isHttps -> isHttps
    boolean debugMode -> debugMode
    com.easemob.chat.EMChatConfig instance -> instance
    boolean debugTrafficMode -> debugTrafficMode
    com.easemob.chat.EMChatConfig getInstance() -> getInstance
    boolean loadConfig(android.content.Context) -> loadConfig
    void printConfig() -> printConfig
    java.lang.String getDomain() -> getDomain
    android.content.Context getApplicationContext() -> getApplicationContext
    java.lang.String getStorageUrl() -> getStorageUrl
    boolean getIsHttps() -> getIsHttps
    void setStunServerAddress(com.easemob.chat.EMTransportAddress[]) -> setStunServerAddress
    com.easemob.chat.EMTransportAddress[] getStunServerAddress() -> getStunServerAddress
com.easemob.chat.EMChatDB -> com.easemob.chat.EMChatDB:
    java.lang.String TAG -> TAG
    com.easemob.chat.EMChatDB instance -> instance
    void initDB(android.content.Context,java.lang.String) -> initDB
    com.easemob.chat.EMChatDB getInstance() -> getInstance
    void closeDatabase() -> closeDatabase
    boolean saveMessage(com.easemob.chat.EMMessage) -> saveMessage
    void deleteMessage(java.lang.String) -> deleteMessage
    java.util.List findAllParticipantsWithMsg() -> findAllParticipantsWithMsg
    java.util.List findAllGroupsWithMsg() -> findAllGroupsWithMsg
    java.util.List findGroupMessages(java.lang.String) -> findGroupMessages
    java.util.List findGroupMessages(java.lang.String,java.lang.String,int) -> findGroupMessages
    java.util.List findMessages(java.lang.String) -> findMessages
    java.util.List findMessages(java.lang.String,java.lang.String,int) -> findMessages
    void deleteConversions(java.lang.String) -> deleteConversions
    void updateMessageAck(java.lang.String,boolean) -> updateMessageAck
    void updateMessageDelivered(java.lang.String,boolean) -> updateMessageDelivered
    void updateMessage(java.lang.String,android.content.ContentValues) -> updateMessage
    java.util.Map loadAllGroups() -> loadAllGroups
    com.easemob.chat.EMGroup loadGroup(java.lang.String) -> loadGroup
    void updateGroup(com.easemob.chat.EMGroup) -> updateGroup
    void deleteGroup(java.lang.String) -> deleteGroup
    void deleteGroupConversions(java.lang.String) -> deleteGroupConversions
    boolean importMessage(com.easemob.chat.EMMessage) -> importMessage
    java.util.List getConversationsUnread() -> getConversationsUnread
    void saveToken(java.lang.String,com.easemob.chat.core.b$a) -> saveToken
    com.easemob.chat.core.b$a getToken(java.lang.String) -> getToken
com.easemob.chat.EMChatManager -> com.easemob.chat.EMChatManager:
    java.lang.String TAG -> TAG
    java.lang.String NEW_MSG_BROADCAST -> NEW_MSG_BROADCAST
    java.lang.String READ_ACK_MSG_BROADCAST -> READ_ACK_MSG_BROADCAST
    java.lang.String DELIVERY_ACK_MSG_BROADCAST -> DELIVERY_ACK_MSG_BROADCAST
    java.lang.String CONTACT_INVITE_EVENT_BROADCAST -> CONTACT_INVITE_EVENT_BROADCAST
    java.lang.String OFFLINE_MSG_BROADCAST -> OFFLINE_MSG_BROADCAST
    java.lang.String INCOMING_VOICE_CALL_BROADCAST -> INCOMING_VOICE_CALL_BROADCAST
    java.lang.String CMD_MSG_BROADCAST -> CMD_MSG_BROADCAST
    int DEFAULT_LOAD_MESSAGE_COUNT -> DEFAULT_LOAD_MESSAGE_COUNT
    org.jivesoftware.smack.ChatManager xmppChatManager -> xmppChatManager
    com.easemob.chat.core.XmppConnectionManager xmppConnectionManager -> xmppConnectionManager
    com.easemob.chat.EMChatManager$EMChatManagerListener chatManagerListener -> chatManagerListener
    com.easemob.chat.ChatListener chatListener -> chatListener
    com.easemob.chat.GroupChatListener groupChatListener -> groupChatListener
    com.easemob.chat.RecvAckListener recvAckListener -> recvAckListener
    java.util.Map chats -> chats
    java.util.List connectionListeners -> connectionListeners
    android.os.Handler handler -> handler
    com.easemob.chat.EMChatManager$XmppConnectionListener xmppConnectionListener -> xmppConnectionListener
    com.easemob.chat.EMChatManager instance -> instance
    android.content.Context applicationContext -> applicationContext
    java.util.Hashtable allMessages -> allMessages
    java.util.Hashtable conversations -> conversations
    com.easemob.chat.EMNotifier notifier -> notifier
    com.easemob.util.CryptoUtils cryptoUtils -> cryptoUtils
    com.easemob.chat.EncryptProvider encryptProvider -> encryptProvider
    com.easemob.chat.EMCmdManager cmdManager -> cmdManager
    java.util.concurrent.ExecutorService sendThreadPool -> sendThreadPool
    com.easemob.chat.EMChatOptions chatOptions -> chatOptions
    com.easemob.chat.EMChatService boundService -> boundService
    com.easemob.chat.EMChatManager$ChatServiceConnection serviceConnection -> serviceConnection
    boolean isBound -> isBound
    java.util.ArrayList offlineRosterPresenceList -> offlineRosterPresenceList
    java.util.ArrayList offlineMessagesList -> offlineMessagesList
    java.util.ArrayList offlineCmdMessagesList -> offlineCmdMessagesList
    java.util.concurrent.ExecutorService msgCountThreadPool -> msgCountThreadPool
    boolean stopService -> stopService
    com.easemob.chat.EMChatManager getInstance() -> getInstance
    void addPacketListeners(org.jivesoftware.smack.XMPPConnection) -> addPacketListeners
    void init(android.content.Context,com.easemob.chat.core.XmppConnectionManager) -> init
    void processOfflinePresenceMessages() -> processOfflinePresenceMessages
    void processOfflineCmdMessages() -> processOfflineCmdMessages
    void processOfflineMessages() -> processOfflineMessages
    void processRosterPresence(org.jivesoftware.smack.packet.Presence) -> processRosterPresence
    void acceptInvitation(java.lang.String,boolean) -> acceptInvitation
    void acceptInvitation(java.lang.String) -> acceptInvitation
    void refuseInvitation(java.lang.String) -> refuseInvitation
    void sendVCard() -> sendVCard
    void sendMessage(com.easemob.chat.EMMessage) -> sendMessage
    int checkMessageError(com.easemob.chat.EMMessage) -> checkMessageError
    void sendMessage(com.easemob.chat.EMMessage,com.easemob.EMCallBack) -> sendMessage
    void asyncCallback(com.easemob.EMCallBack,int,java.lang.String) -> asyncCallback
    void sendGroupMessage(com.easemob.chat.EMMessage,com.easemob.EMCallBack) -> sendGroupMessage
    void notifyMessage(com.easemob.chat.EMMessage) -> notifyMessage
    void broadcastMessage(com.easemob.chat.EMMessage) -> broadcastMessage
    void notifiyReadAckMessage(java.lang.String,java.lang.String) -> notifiyReadAckMessage
    void notifyDeliveryAckMessage(java.lang.String,java.lang.String) -> notifyDeliveryAckMessage
    void notifyIncomingCall(java.lang.String) -> notifyIncomingCall
    java.lang.String getNewMessageBroadcastAction() -> getNewMessageBroadcastAction
    java.lang.String getCmdMessageBroadcastAction() -> getCmdMessageBroadcastAction
    java.lang.String getAckMessageBroadcastAction() -> getAckMessageBroadcastAction
    java.lang.String getDeliveryAckMessageBroadcastAction() -> getDeliveryAckMessageBroadcastAction
    java.lang.String getContactInviteEventBroadcastAction() -> getContactInviteEventBroadcastAction
    java.lang.String getOfflineMessageBroadcastAction() -> getOfflineMessageBroadcastAction
    java.lang.String getIncomingVoiceCallBroadcastAction() -> getIncomingVoiceCallBroadcastAction
    java.lang.String getBroadcastSuffix() -> getBroadcastSuffix
    void ackMessageRead(java.lang.String,java.lang.String) -> ackMessageRead
    void checkConnection() -> checkConnection
    void addConnectionListener(com.easemob.chat.ConnectionListener) -> addConnectionListener
    void removeConnectionListener(com.easemob.chat.ConnectionListener) -> removeConnectionListener
    com.easemob.chat.EMMessage getMessage(java.lang.String) -> getMessage
    void addMessage(com.easemob.chat.EMMessage) -> addMessage
    void addMessage(com.easemob.chat.EMMessage,boolean) -> addMessage
    com.easemob.chat.EMConversation getConversation(java.lang.String) -> getConversation
    com.easemob.chat.EMConversation getConversation(java.lang.String,boolean) -> getConversation
    boolean deleteConversation(java.lang.String) -> deleteConversation
    boolean deleteConversation(java.lang.String,boolean) -> deleteConversation
    boolean clearConversation(java.lang.String) -> clearConversation
    void loadConversations() -> loadConversations
    java.util.Hashtable getAllConversations() -> getAllConversations
    int getUnreadMsgsCount() -> getUnreadMsgsCount
    void activityResumed() -> activityResumed
    void login(java.lang.String,java.lang.String,com.easemob.EMCallBack) -> login
    void logout() -> logout
    void changePasswordOnServer(java.lang.String) -> changePasswordOnServer
    void createAccountOnServer(java.lang.String,java.lang.String) -> createAccountOnServer
    boolean isConnected() -> isConnected
    void saveMessage(com.easemob.chat.EMMessage) -> saveMessage
    void saveMessage(com.easemob.chat.EMMessage,boolean) -> saveMessage
    java.util.List getContactUserNames() -> getContactUserNames
    java.lang.String getCurrentUser() -> getCurrentUser
    com.easemob.chat.EMChatOptions getChatOptions() -> getChatOptions
    void setChatOptions(com.easemob.chat.EMChatOptions) -> setChatOptions
    void setEncryptProvider(com.easemob.chat.EncryptProvider) -> setEncryptProvider
    com.easemob.chat.EncryptProvider getEncryptProvider() -> getEncryptProvider
    void addVoiceCallStateChangeListener(com.easemob.chat.EMCallStateChangeListener) -> addVoiceCallStateChangeListener
    void makeVoiceCall(java.lang.String) -> makeVoiceCall
    void answerCall() -> answerCall
    void rejectCall() -> rejectCall
    void endCall() -> endCall
    java.lang.String getUniqueMessageId() -> getUniqueMessageId
    com.easemob.util.CryptoUtils getCryptoUtils() -> getCryptoUtils
    void doStartService() -> doStartService
    void doStopService() -> doStopService
    void onReconnectionSuccessful() -> onReconnectionSuccessful
    void onconnectionSuccessful() -> onconnectionSuccessful
    void asyncFetchMessage(com.easemob.chat.EMMessage) -> asyncFetchMessage
    java.lang.String importMessage(com.easemob.chat.EMMessage,boolean) -> importMessage
    void updateMsgState(com.easemob.chat.EMMessage) -> updateMsgState
    void updateMsgBody(com.easemob.chat.EMMessage) -> updateMsgBody
    boolean updateCurrentUserNick(java.lang.String) -> updateCurrentUserNick
    void initDB(android.content.Context,java.lang.String) -> initDB
    java.lang.String getAccessToken() -> getAccessToken
    void notifySendMsgLocks() -> notifySendMsgLocks
    java.util.List getConversationsUnread() -> getConversationsUnread
    void access$0(com.easemob.chat.EMChatManager,org.jivesoftware.smack.packet.Presence) -> access$0
    java.util.ArrayList access$1(com.easemob.chat.EMChatManager) -> access$1
    void access$2(com.easemob.chat.EMChatManager,com.easemob.chat.EMChatService) -> access$2
    java.util.Map access$3(com.easemob.chat.EMChatManager) -> access$3
    android.os.Handler access$4(com.easemob.chat.EMChatManager) -> access$4
    java.util.List access$5(com.easemob.chat.EMChatManager) -> access$5
    android.content.Context access$6(com.easemob.chat.EMChatManager) -> access$6
    com.easemob.util.CryptoUtils access$7(com.easemob.chat.EMChatManager) -> access$7
    void access$8(com.easemob.chat.EMChatManager,com.easemob.chat.EMMessage) -> access$8
    void access$9(com.easemob.chat.EMChatManager,com.easemob.chat.EMMessage) -> access$9
com.easemob.chat.EMChatManager$1 -> com.easemob.chat.EMChatManager$1:
    com.easemob.chat.EMChatManager this$0 -> this$0
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
com.easemob.chat.EMChatManager$10 -> com.easemob.chat.EMChatManager$10:
    com.easemob.chat.EMChatManager this$0 -> this$0
    void run() -> run
com.easemob.chat.EMChatManager$2 -> com.easemob.chat.EMChatManager$2:
    com.easemob.chat.EMChatManager this$0 -> this$0
    com.easemob.EMCallBack val$callback -> val$callback
    int val$error -> val$error
    java.lang.String val$errorMsg -> val$errorMsg
    void run() -> run
com.easemob.chat.EMChatManager$3 -> com.easemob.chat.EMChatManager$3:
    com.easemob.chat.EMChatManager this$0 -> this$0
    com.easemob.chat.ConnectionListener val$listener -> val$listener
    void run() -> run
com.easemob.chat.EMChatManager$4 -> com.easemob.chat.EMChatManager$4:
    com.easemob.chat.EMChatManager this$0 -> this$0
    com.easemob.chat.ConnectionListener val$listener -> val$listener
    void run() -> run
com.easemob.chat.EMChatManager$5 -> com.easemob.chat.EMChatManager$5:
    com.easemob.chat.EMChatManager this$0 -> this$0
    com.easemob.EMCallBack val$callback -> val$callback
    void onSuccess() -> onSuccess
    void onProgress(int,java.lang.String) -> onProgress
    void onError(int,java.lang.String) -> onError
com.easemob.chat.EMChatManager$6 -> com.easemob.chat.EMChatManager$6:
    com.easemob.chat.EMChatManager this$0 -> this$0
    byte[] encrypt(byte[],java.lang.String) -> encrypt
    byte[] decrypt(byte[],java.lang.String) -> decrypt
com.easemob.chat.EMChatManager$7 -> com.easemob.chat.EMChatManager$7:
    com.easemob.chat.EMChatManager this$0 -> this$0
    void run() -> run
com.easemob.chat.EMChatManager$8 -> com.easemob.chat.EMChatManager$8:
    com.easemob.chat.EMChatManager this$0 -> this$0
    void run() -> run
com.easemob.chat.EMChatManager$9 -> com.easemob.chat.EMChatManager$9:
    com.easemob.chat.EMChatManager this$0 -> this$0
    java.lang.String val$localThumbnailFilePath -> val$localThumbnailFilePath
    com.easemob.chat.EMMessage val$msg -> val$msg
    com.easemob.chat.FileMessageBody val$msgbody -> val$msgbody
    void onSuccess(java.lang.String) -> onSuccess
    void onError(java.lang.String) -> onError
    void onProgress(int) -> onProgress
com.easemob.chat.EMChatManager$ChatServiceConnection -> com.easemob.chat.EMChatManager$ChatServiceConnection:
    com.easemob.chat.EMChatManager this$0 -> this$0
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.easemob.chat.EMChatManager$EMChatManagerListener -> com.easemob.chat.EMChatManager$EMChatManagerListener:
    com.easemob.chat.EMChatManager this$0 -> this$0
    void chatCreated(org.jivesoftware.smack.Chat,boolean) -> chatCreated
com.easemob.chat.EMChatManager$SingleInvitationListener -> com.easemob.chat.EMChatManager$SingleInvitationListener:
    com.easemob.chat.EMChatManager this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
com.easemob.chat.EMChatManager$XmppConnectionListener -> com.easemob.chat.EMChatManager$XmppConnectionListener:
    com.easemob.chat.EMChatManager this$0 -> this$0
    void connectionClosed() -> connectionClosed
    void connectionClosedOnError(java.lang.Exception) -> connectionClosedOnError
    void reconnectingIn(int) -> reconnectingIn
    void reconnectionFailed(java.lang.Exception) -> reconnectionFailed
    void reconnectionSuccessful() -> reconnectionSuccessful
    com.easemob.chat.EMChatManager access$1(com.easemob.chat.EMChatManager$XmppConnectionListener) -> access$1
com.easemob.chat.EMChatManager$XmppConnectionListener$1 -> com.easemob.chat.EMChatManager$XmppConnectionListener$1:
    com.easemob.chat.EMChatManager$XmppConnectionListener this$1 -> this$1
    void run() -> run
com.easemob.chat.EMChatManager$XmppConnectionListener$2 -> com.easemob.chat.EMChatManager$XmppConnectionListener$2:
    com.easemob.chat.EMChatManager$XmppConnectionListener this$1 -> this$1
    java.lang.Exception val$exception -> val$exception
    void run() -> run
com.easemob.chat.EMChatManager$XmppConnectionListener$3 -> com.easemob.chat.EMChatManager$XmppConnectionListener$3:
    com.easemob.chat.EMChatManager$XmppConnectionListener this$1 -> this$1
    java.lang.Exception val$arg0 -> val$arg0
    void run() -> run
com.easemob.chat.EMChatOptions -> com.easemob.chat.EMChatOptions:
    boolean acceptInvitationAlways -> acceptInvitationAlways
    boolean useEncryption -> useEncryption
    boolean useRoster -> useRoster
    boolean noticedBySound -> noticedBySound
    boolean noticedByVibrate -> noticedByVibrate
    boolean notificationEnable -> notificationEnable
    boolean useSpeaker -> useSpeaker
    boolean requireReadAck -> requireReadAck
    boolean requireDeliveryAck -> requireDeliveryAck
    boolean requireServerAck -> requireServerAck
    boolean audioFileWithExt -> audioFileWithExt
    com.easemob.chat.OnMessageNotifyListener onMessageNotifyListener -> onMessageNotifyListener
    com.easemob.chat.OnNotificationClickListener onNotificationClickListener -> onNotificationClickListener
    boolean showNotification -> showNotification
    android.net.Uri ringUri -> ringUri
    java.util.List receiveNotNotifyGroupIds -> receiveNotNotifyGroupIds
    boolean getRequireAck() -> getRequireAck
    void setRequireAck(boolean) -> setRequireAck
    boolean getRequireDeliveryAck() -> getRequireDeliveryAck
    void setRequireDeliveryAck(boolean) -> setRequireDeliveryAck
    boolean getNoticedBySound() -> getNoticedBySound
    void setNoticeBySound(boolean) -> setNoticeBySound
    boolean getNoticedByVibrate() -> getNoticedByVibrate
    void setNoticedByVibrate(boolean) -> setNoticedByVibrate
    boolean getNotificationEnable() -> getNotificationEnable
    void setNotificationEnable(boolean) -> setNotificationEnable
    boolean getNotifyBySoundAndVibrate() -> getNotifyBySoundAndVibrate
    void setNotifyBySoundAndVibrate(boolean) -> setNotifyBySoundAndVibrate
    boolean getUseSpeaker() -> getUseSpeaker
    void setUseSpeaker(boolean) -> setUseSpeaker
    void setUseEncryption(boolean) -> setUseEncryption
    boolean getUseEncryption() -> getUseEncryption
    boolean getUseRoster() -> getUseRoster
    void setUseRoster(boolean) -> setUseRoster
    boolean getAcceptInvitationAlways() -> getAcceptInvitationAlways
    void setAcceptInvitationAlways(boolean) -> setAcceptInvitationAlways
    boolean getRequireServerAck() -> getRequireServerAck
    boolean getAudioFileWithExt() -> getAudioFileWithExt
    void setAudioFileWithExt(boolean) -> setAudioFileWithExt
    void setRequireServerAck(boolean) -> setRequireServerAck
    void setNotifyText(com.easemob.chat.OnMessageNotifyListener) -> setNotifyText
    void setOnNotificationClickListener(com.easemob.chat.OnNotificationClickListener) -> setOnNotificationClickListener
    void setShowNotificationInBackgroud(boolean) -> setShowNotificationInBackgroud
    boolean isShowNotificationInBackgroud() -> isShowNotificationInBackgroud
    void setNotifyRingUri(android.net.Uri) -> setNotifyRingUri
    android.net.Uri getNotifyRingUri() -> getNotifyRingUri
    void setReceiveNotNoifyGroup(java.util.List) -> setReceiveNotNoifyGroup
    java.util.List getReceiveNoNotifyGroup() -> getReceiveNoNotifyGroup
com.easemob.chat.EMChatService -> com.easemob.chat.EMChatService:
    java.lang.String TAG -> TAG
    android.os.IBinder mBinder -> mBinder
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onDestroy() -> onDestroy
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean onUnbind(android.content.Intent) -> onUnbind
com.easemob.chat.EMChatService$LocalBinder -> com.easemob.chat.EMChatService$LocalBinder:
    com.easemob.chat.EMChatService this$0 -> this$0
    com.easemob.chat.EMChatService getService() -> getService
com.easemob.chat.EMCmdManager -> com.easemob.chat.EMCmdManager:
    java.lang.String TAG -> TAG
    com.easemob.chat.EMCmdManager instance -> instance
    java.util.List cmdProcessors -> cmdProcessors
    com.easemob.chat.EMCmdManager getInstance() -> getInstance
    void addCmdProcessor(com.easemob.chat.CmdMsgProcessor) -> addCmdProcessor
    void processCmd(com.easemob.chat.EMMessage) -> processCmd
com.easemob.chat.EMContact -> com.easemob.chat.EMContact:
    java.lang.String eid -> eid
    java.lang.String username -> username
    java.lang.String nick -> nick
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void setUsername(java.lang.String) -> setUsername
    java.lang.String getUsername() -> getUsername
    void setNick(java.lang.String) -> setNick
    java.lang.String getNick() -> getNick
    int compare(com.easemob.chat.EMContact) -> compare
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String getEid() -> getEid
    void setEid(java.lang.String) -> setEid
com.easemob.chat.EMContact$1 -> com.easemob.chat.EMContact$1:
    com.easemob.chat.EMContact createFromParcel(android.os.Parcel) -> createFromParcel
    com.easemob.chat.EMContact[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.easemob.chat.EMContactListener -> com.easemob.chat.EMContactListener:
    void onContactAdded(java.util.List) -> onContactAdded
    void onContactDeleted(java.util.List) -> onContactDeleted
    void onContactInvited(java.lang.String,java.lang.String) -> onContactInvited
    void onContactAgreed(java.lang.String) -> onContactAgreed
    void onContactRefused(java.lang.String) -> onContactRefused
com.easemob.chat.EMContactManager -> com.easemob.chat.EMContactManager:
    java.lang.String TAG -> TAG
    java.util.Map contactTable -> contactTable
    com.easemob.chat.EMRosterListener rosterListener -> rosterListener
    org.jivesoftware.smack.Roster roster -> roster
    com.easemob.chat.RosterStorageImpl rosterStorage -> rosterStorage
    com.easemob.chat.EMContactManager instance -> instance
    java.lang.String black_list_name -> black_list_name
    boolean enableRosterVersion -> enableRosterVersion
    com.easemob.chat.EMContactListener contactListener -> contactListener
    java.util.Set deleteContactsSet -> deleteContactsSet
    java.lang.String BROADCAST_CONTACT_CHANGED_ACTION -> BROADCAST_CONTACT_CHANGED_ACTION
    com.easemob.chat.core.XmppConnectionManager xmppConnectionManager -> xmppConnectionManager
    android.content.Context context -> context
    com.easemob.chat.EMContactManager getInstance() -> getInstance
    void init(android.content.Context,com.easemob.chat.core.XmppConnectionManager) -> init
    void addContact(java.lang.String,java.lang.String) -> addContact
    void deleteContact(java.lang.String) -> deleteContact
    void addContactInternal(com.easemob.chat.EMContact) -> addContactInternal
    void deleteContactInternal(java.lang.String) -> deleteContactInternal
    com.easemob.chat.EMContact getContactByUserName(java.lang.String) -> getContactByUserName
    void removeContactFromRoster(java.lang.String) -> removeContactFromRoster
    void removeContactByUsername(java.lang.String) -> removeContactByUsername
    void reset() -> reset
    org.jivesoftware.smack.RosterStorage getRosterStorage(android.content.Context) -> getRosterStorage
    java.util.List getRosterUserNames() -> getRosterUserNames
    void addContactToRosterThroughPresence(java.lang.String,java.lang.String) -> addContactToRosterThroughPresence
    java.lang.String getBareEidFromUserName(java.lang.String) -> getBareEidFromUserName
    java.lang.String getEidFromUserName(java.lang.String) -> getEidFromUserName
    java.lang.String getUserNameFromEid(java.lang.String) -> getUserNameFromEid
    java.lang.String getEidFromGroupId(java.lang.String) -> getEidFromGroupId
    java.lang.String getGroupIdFromEid(java.lang.String) -> getGroupIdFromEid
    java.lang.String getCurrentUserFullJid() -> getCurrentUserFullJid
    java.util.List getContactUserNames() -> getContactUserNames
    void setContactListener(com.easemob.chat.EMContactListener) -> setContactListener
    void removeContactListener() -> removeContactListener
    void addUserToBlackList(java.lang.String,boolean) -> addUserToBlackList
    void deleteUserFromBlackList(java.lang.String) -> deleteUserFromBlackList
    java.util.List getBlackListUsernames() -> getBlackListUsernames
    void addToPrivacyList(java.lang.String,boolean) -> addToPrivacyList
    void deleteFromPrivacyList(java.lang.String) -> deleteFromPrivacyList
    java.lang.String getContactChangeAction() -> getContactChangeAction
    void checkConnection() -> checkConnection
    void loadContacts() -> loadContacts
com.easemob.chat.EMConversation -> com.easemob.chat.EMConversation:
    java.lang.String TAG -> TAG
    java.util.List messages -> messages
    int unreadMsgCount -> unreadMsgCount
    java.lang.String username -> username
    boolean isGroup -> isGroup
    com.easemob.chat.EMContact opposite -> opposite
    void addMessage(com.easemob.chat.EMMessage) -> addMessage
    void addMessage(com.easemob.chat.EMMessage,boolean) -> addMessage
    void saveUnreadMsgCount(int) -> saveUnreadMsgCount
    void deleteUnreadMsgCountRecord() -> deleteUnreadMsgCountRecord
    int getUnreadMsgCount() -> getUnreadMsgCount
    void resetUnsetMsgCount() -> resetUnsetMsgCount
    int getMsgCount() -> getMsgCount
    com.easemob.chat.EMMessage getMessage(int) -> getMessage
    java.util.List loadMoreMsgFromDB(java.lang.String,int) -> loadMoreMsgFromDB
    java.util.List loadMoreGroupMsgFromDB(java.lang.String,int) -> loadMoreGroupMsgFromDB
    com.easemob.chat.EMMessage getMessage(java.lang.String) -> getMessage
    java.util.List getAllMessages() -> getAllMessages
    int getMessagePosition(com.easemob.chat.EMMessage) -> getMessagePosition
    java.lang.String getUserName() -> getUserName
    void removeMessage(java.lang.String) -> removeMessage
    boolean getIsGroup() -> getIsGroup
    boolean isGroup() -> isGroup
    void setGroup(boolean) -> setGroup
    com.easemob.chat.EMMessage getLastMessage() -> getLastMessage
    void clear() -> clear
    java.lang.String access$0(com.easemob.chat.EMConversation) -> access$0
com.easemob.chat.EMConversation$1 -> com.easemob.chat.EMConversation$1:
    com.easemob.chat.EMConversation this$0 -> this$0
    int val$count -> val$count
    void run() -> run
com.easemob.chat.EMConversation$2 -> com.easemob.chat.EMConversation$2:
    com.easemob.chat.EMConversation this$0 -> this$0
    void run() -> run
com.easemob.chat.EMEncryptUtils -> com.easemob.chat.EMEncryptUtils:
    java.lang.String TAG -> TAG
    java.lang.String encryptMessage(java.lang.String,java.lang.String) -> encryptMessage
    java.lang.String decryptMessage(java.lang.String,java.lang.String) -> decryptMessage
    java.lang.String encryptFile(java.lang.String,java.lang.String) -> encryptFile
    void decryptFile(java.lang.String,java.lang.String) -> decryptFile
com.easemob.chat.EMGroup -> com.easemob.chat.EMGroup:
    java.lang.String description -> description
    java.lang.String owner -> owner
    java.util.ArrayList members -> members
    long lastModifiedTime -> lastModifiedTime
    boolean isPublic -> isPublic
    boolean allowInvites -> allowInvites
    boolean membersOnly -> membersOnly
    int maxUsers -> maxUsers
    int affiliationsCount -> affiliationsCount
    boolean isMsgBlocked -> isMsgBlocked
    java.lang.String getDescription() -> getDescription
    void setDescription(java.lang.String) -> setDescription
    java.lang.String getOwner() -> getOwner
    void setOwner(java.lang.String) -> setOwner
    void addMember(java.lang.String) -> addMember
    void removeMember(java.lang.String) -> removeMember
    java.util.List getMembers() -> getMembers
    void setMembers(java.util.List) -> setMembers
    java.lang.String getGroupId() -> getGroupId
    void setGroupId(java.lang.String) -> setGroupId
    java.lang.String getGroupName() -> getGroupName
    void setGroupName(java.lang.String) -> setGroupName
    boolean isPublic() -> isPublic
    void setIsPublic(boolean) -> setIsPublic
    boolean isAllowInvites() -> isAllowInvites
    boolean isMembersOnly() -> isMembersOnly
    int getMaxUsers() -> getMaxUsers
    void setMaxUsers(int) -> setMaxUsers
    int getAffiliationsCount() -> getAffiliationsCount
    void setAffiliationsCount(int) -> setAffiliationsCount
    boolean getMsgBlocked() -> getMsgBlocked
    java.lang.String toString() -> toString
    android.graphics.Bitmap getGroupAvator() -> getGroupAvator
    void copyGroup(com.easemob.chat.EMGroup) -> copyGroup
    long getLastModifiedTime() -> getLastModifiedTime
    void setLastModifiedTime(long) -> setLastModifiedTime
    void setPublic(boolean) -> setPublic
com.easemob.chat.EMGroupInfo -> com.easemob.chat.EMGroupInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String groupId -> groupId
    java.lang.String groupName -> groupName
    java.lang.String getGroupId() -> getGroupId
    void setGroupId(java.lang.String) -> setGroupId
    java.lang.String getGroupName() -> getGroupName
    void setGroupName(java.lang.String) -> setGroupName
    java.lang.String toString() -> toString
com.easemob.chat.EMGroupManager -> com.easemob.chat.EMGroupManager:
    java.lang.String MUC_NS_USER -> MUC_NS_USER
    java.lang.String TAG -> TAG
    java.lang.String PERMISSION_ERROR_ADD -> PERMISSION_ERROR_ADD
    java.lang.String PERMISSION_ERROR_REMOVE -> PERMISSION_ERROR_REMOVE
    java.lang.String PERMISSION_ERROR_DELETE -> PERMISSION_ERROR_DELETE
    java.lang.String PERMISSION_ERROR -> PERMISSION_ERROR
    java.util.Map allGroups -> allGroups
    com.easemob.chat.core.XmppConnectionManager xmppConnectionManager -> xmppConnectionManager
    java.util.Map multiUserChats -> multiUserChats
    com.easemob.chat.EMGroupManager instance -> instance
    android.content.Context appContext -> appContext
    java.util.ArrayList groupChangeListeners -> groupChangeListeners
    boolean autoAcceptInvitation -> autoAcceptInvitation
    java.util.ArrayList offlineGroupEvents -> offlineGroupEvents
    com.easemob.chat.EMGroupManager$MucApplyListener applyListener -> applyListener
    int DEFAULT_MAX_USERS -> DEFAULT_MAX_USERS
    java.lang.Object mutex -> mutex
    boolean receivedQuery -> receivedQuery
    com.easemob.chat.EMGroupManager$MUCInvitationListener invitationListener -> invitationListener
    int[] $SWITCH_TABLE$com$easemob$chat$EMGroupManager$GroupEventType -> $SWITCH_TABLE$com$easemob$chat$EMGroupManager$GroupEventType
    com.easemob.chat.EMGroupManager getInstance() -> getInstance
    void init(android.content.Context,com.easemob.chat.core.XmppConnectionManager) -> init
    java.util.List getAllGroups() -> getAllGroups
    com.easemob.chat.EMGroup getGroup(java.lang.String) -> getGroup
    void loadAllGroups() -> loadAllGroups
    void joinGroupsAfterLogin() -> joinGroupsAfterLogin
    java.lang.String generateGroupId() -> generateGroupId
    com.easemob.chat.EMGroup createPublicGroup(java.lang.String,java.lang.String,java.lang.String[],boolean) -> createPublicGroup
    java.lang.String[] filterOwnerFromMembers(java.lang.String,java.lang.String[]) -> filterOwnerFromMembers
    com.easemob.chat.EMGroup createPublicGroup(java.lang.String,java.lang.String,java.lang.String[],boolean,int) -> createPublicGroup
    com.easemob.chat.EMGroup createPrivateGroup(java.lang.String,java.lang.String,java.lang.String[]) -> createPrivateGroup
    com.easemob.chat.EMGroup createPrivateGroup(java.lang.String,java.lang.String,java.lang.String[],boolean) -> createPrivateGroup
    com.easemob.chat.EMGroup createPrivateGroup(java.lang.String,java.lang.String,java.lang.String[],boolean,int) -> createPrivateGroup
    com.easemob.chat.EMGroup createGroup(java.lang.String,java.lang.String,java.lang.String[]) -> createGroup
    void createPrivateXmppMUC(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,int) -> createPrivateXmppMUC
    void createPublicXmppMUC(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,int) -> createPublicXmppMUC
    void exitAndDeleteGroup(java.lang.String) -> exitAndDeleteGroup
    org.jivesoftware.smackx.muc.MultiUserChat getMUC(java.lang.String) -> getMUC
    org.jivesoftware.smackx.muc.MultiUserChat getMUCWithoutJoin(java.lang.String) -> getMUCWithoutJoin
    void deleteMUC(java.lang.String) -> deleteMUC
    void leaveMUC(java.lang.String,java.lang.String) -> leaveMUC
    void leaveMUCRemoveMember(java.lang.String,java.lang.String) -> leaveMUCRemoveMember
    void deleteLocalGroup(java.lang.String) -> deleteLocalGroup
    void checkGroupOwner(com.easemob.chat.EMGroup,java.lang.String) -> checkGroupOwner
    void addUsersToGroup(java.lang.String,java.lang.String[]) -> addUsersToGroup
    void addUserToMUC(java.lang.String,java.lang.String,boolean) -> addUserToMUC
    void removeUserFromGroup(java.lang.String,java.lang.String) -> removeUserFromGroup
    void removeUserFromMUC(java.lang.String,java.lang.String) -> removeUserFromMUC
    void joinMUC(java.lang.String,java.lang.String) -> joinMUC
    void exitFromGroup(java.lang.String) -> exitFromGroup
    com.easemob.chat.EMGroup getGroupFromServer(java.lang.String) -> getGroupFromServer
    com.easemob.chat.EMGroup createOrUpdateLocalGroup(com.easemob.chat.EMGroup) -> createOrUpdateLocalGroup
    com.easemob.chat.EMGroup getMUC(java.lang.String,java.lang.String,boolean,boolean) -> getMUC
    java.util.List getGroupsFromServer() -> getGroupsFromServer
    java.util.List getAllPublicGroupsFromServer() -> getAllPublicGroupsFromServer
    void syncGroupsWithRemoteGroupList(java.util.List) -> syncGroupsWithRemoteGroupList
    void deleteAllLocalGroups() -> deleteAllLocalGroups
    java.util.List getJoinedMUCs(java.lang.String) -> getJoinedMUCs
    java.util.List getPublicMUCs(java.lang.String,java.lang.String) -> getPublicMUCs
    java.lang.String formatGroupName(java.lang.String) -> formatGroupName
    void logout() -> logout
    void removeMucs() -> removeMucs
    void retrieveUserMucsOnServer(java.lang.String) -> retrieveUserMucsOnServer
    void joinGroup(java.lang.String) -> joinGroup
    void changeGroupName(java.lang.String,java.lang.String) -> changeGroupName
    void addGroupChangeListener(com.easemob.chat.GroupChangeListener) -> addGroupChangeListener
    void removeGroupChangeListener(com.easemob.chat.GroupChangeListener) -> removeGroupChangeListener
    void acceptInvitation(java.lang.String) -> acceptInvitation
    void declineInvitation(java.lang.String,java.lang.String,java.lang.String) -> declineInvitation
    void acceptApplication(java.lang.String,java.lang.String) -> acceptApplication
    void declineApplication(java.lang.String,java.lang.String,java.lang.String) -> declineApplication
    void addMuc(java.lang.String,org.jivesoftware.smackx.muc.MultiUserChat) -> addMuc
    void removeMuc(java.lang.String) -> removeMuc
    void setAutoAcceptInvitation(boolean) -> setAutoAcceptInvitation
    void inviteUser(java.lang.String,java.lang.String[],java.lang.String) -> inviteUser
    void inviteUserMUC(java.lang.String,java.util.List,java.lang.String) -> inviteUserMUC
    void applyJoinToGroup(java.lang.String,java.lang.String) -> applyJoinToGroup
    void blockGroupMessage(java.lang.String) -> blockGroupMessage
    void unblockGroupMessage(java.lang.String) -> unblockGroupMessage
    void blockUser(java.lang.String,java.lang.String) -> blockUser
    void blockUserMuc(java.lang.String,java.lang.String) -> blockUserMuc
    void unblockUser(java.lang.String,java.lang.String) -> unblockUser
    void unblockUserMuc(java.lang.String,java.lang.String) -> unblockUserMuc
    java.util.List getBlockedUsers(java.lang.String) -> getBlockedUsers
    java.util.List getBlockedUsersMuc(java.lang.String) -> getBlockedUsersMuc
    void processOfflineMessages() -> processOfflineMessages
    void apply(org.jivesoftware.smack.packet.Message,java.lang.String,java.lang.String,java.lang.String) -> apply
    void decline(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> decline
    void accept(java.lang.String,java.lang.String,java.lang.String) -> accept
    java.lang.String access$0() -> access$0
    boolean access$1(com.easemob.chat.EMGroupManager) -> access$1
    java.lang.Object access$2(com.easemob.chat.EMGroupManager) -> access$2
    void access$3(com.easemob.chat.EMGroupManager,boolean) -> access$3
    int[] $SWITCH_TABLE$com$easemob$chat$EMGroupManager$GroupEventType() -> $SWITCH_TABLE$com$easemob$chat$EMGroupManager$GroupEventType
com.easemob.chat.EMGroupManager$1 -> com.easemob.chat.EMGroupManager$1:
    com.easemob.chat.EMGroupManager this$0 -> this$0
    void run() -> run
com.easemob.chat.EMGroupManager$2 -> com.easemob.chat.EMGroupManager$2:
    com.easemob.chat.EMGroupManager this$0 -> this$0
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
com.easemob.chat.EMGroupManager$3 -> com.easemob.chat.EMGroupManager$3:
    int[] $SwitchMap$com$easemob$chat$EMGroupManager$GroupEventType -> $SwitchMap$com$easemob$chat$EMGroupManager$GroupEventType
com.easemob.chat.EMGroupManager$GroupChangeEvent -> com.easemob.chat.EMGroupManager$GroupChangeEvent:
    java.lang.String groupId -> groupId
    java.lang.String groupName -> groupName
    java.lang.String inviterUserName -> inviterUserName
    java.lang.String reason -> reason
    com.easemob.chat.EMGroupManager$GroupEventType type -> type
    com.easemob.chat.EMGroupManager this$0 -> this$0
com.easemob.chat.EMGroupManager$GroupEventType -> com.easemob.chat.EMGroupManager$GroupEventType:
    com.easemob.chat.EMGroupManager$GroupEventType Invitate -> Invitate
    com.easemob.chat.EMGroupManager$GroupEventType Apply -> Apply
    com.easemob.chat.EMGroupManager$GroupEventType ApplicationAccept -> ApplicationAccept
    com.easemob.chat.EMGroupManager$GroupEventType ApplicationDeclind -> ApplicationDeclind
    com.easemob.chat.EMGroupManager$GroupEventType[] ENUM$VALUES -> ENUM$VALUES
    com.easemob.chat.EMGroupManager$GroupEventType[] values() -> values
    com.easemob.chat.EMGroupManager$GroupEventType valueOf(java.lang.String) -> valueOf
com.easemob.chat.EMGroupManager$MUCInvitationListener -> com.easemob.chat.EMGroupManager$MUCInvitationListener:
    com.easemob.chat.EMGroupManager this$0 -> this$0
    void invitationReceived(org.jivesoftware.smack.Connection,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.jivesoftware.smack.packet.Message) -> invitationReceived
com.easemob.chat.EMGroupManager$MUCPresenceListener -> com.easemob.chat.EMGroupManager$MUCPresenceListener:
    java.lang.String MUC_ELEMENT_NAME -> MUC_ELEMENT_NAME
    java.lang.String ITEM_DESTROY -> ITEM_DESTROY
    java.lang.String ITEM_EXITMUC -> ITEM_EXITMUC
    com.easemob.chat.EMGroupManager this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
    void handleRoomDestroy(java.lang.String) -> handleRoomDestroy
    void handleUserRemove(java.lang.String) -> handleUserRemove
com.easemob.chat.EMGroupManager$MUCSearchIQ -> com.easemob.chat.EMGroupManager$MUCSearchIQ:
    com.easemob.chat.EMGroupManager this$0 -> this$0
    java.lang.String getChildElementXML() -> getChildElementXML
com.easemob.chat.EMGroupManager$MucApplyListener -> com.easemob.chat.EMGroupManager$MucApplyListener:
    java.lang.String TAG -> TAG
    com.easemob.chat.EMGroupManager this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
com.easemob.chat.EMGroupManager$MucUserStatusListener -> com.easemob.chat.EMGroupManager$MucUserStatusListener:
    java.lang.String roomJid -> roomJid
    com.easemob.chat.EMGroupManager this$0 -> this$0
    void adminGranted() -> adminGranted
    void adminRevoked() -> adminRevoked
    void banned(java.lang.String,java.lang.String) -> banned
    void kicked(java.lang.String,java.lang.String) -> kicked
    void membershipGranted() -> membershipGranted
    void membershipRevoked() -> membershipRevoked
    void moderatorGranted() -> moderatorGranted
    void moderatorRevoked() -> moderatorRevoked
    void ownershipGranted() -> ownershipGranted
    void ownershipRevoked() -> ownershipRevoked
    void voiceGranted() -> voiceGranted
    void voiceRevoked() -> voiceRevoked
com.easemob.chat.EMGroupManager$RoomQueryIQ -> com.easemob.chat.EMGroupManager$RoomQueryIQ:
    com.easemob.chat.EMGroupManager this$0 -> this$0
    java.lang.String getChildElementXML() -> getChildElementXML
com.easemob.chat.EMGroupManager$SearchPacketListener -> com.easemob.chat.EMGroupManager$SearchPacketListener:
    com.easemob.chat.EMGroupManager this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
com.easemob.chat.EMJingleStreamManager -> com.easemob.chat.EMJingleStreamManager:
    java.lang.String MEDIA_AUDIO -> MEDIA_AUDIO
    java.lang.String MEDIA_VIDIO -> MEDIA_VIDIO
    java.lang.String TAG -> TAG
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension$CreatorEnum creator -> creator
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension$SendersEnum senders -> senders
    java.util.List mediaNames -> mediaNames
    com.easemob.audio.AVNative avNative -> avNative
    java.util.List getMediaNames() -> getMediaNames
    boolean addDefaultMedia(com.xonami.javaBells.MediaType,java.lang.String) -> addDefaultMedia
    java.util.List createContentList(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension$SendersEnum) -> createContentList
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension createContentPacketExtention(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension$SendersEnum,java.lang.String) -> createContentPacketExtention
    java.util.List parseIncomingAndBuildMedia(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ,net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension$SendersEnum) -> parseIncomingAndBuildMedia
    java.util.List parseIncomingAndBuildMedia(java.util.List,net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension$SendersEnum) -> parseIncomingAndBuildMedia
    void startStream(com.easemob.chat.EMStreamParams) -> startStream
    void stopStream() -> stopStream
    boolean streamStarted() -> streamStarted
    java.lang.String access$000() -> access$000
com.easemob.chat.EMJingleStreamManager$1 -> com.easemob.chat.EMJingleStreamManager$1:
    com.easemob.chat.EMJingleStreamManager this$0 -> this$0
    void updateStatus(int) -> updateStatus
com.easemob.chat.EMMessage -> com.easemob.chat.EMMessage:
    java.lang.String TAG -> TAG
    com.easemob.chat.EMMessage$Type type -> type
    com.easemob.chat.EMMessage$Direct direct -> direct
    com.easemob.chat.EMMessage$Status status -> status
    com.easemob.chat.EMContact from -> from
    com.easemob.chat.EMContact to -> to
    com.easemob.chat.MessageBody body -> body
    java.lang.String msgId -> msgId
    boolean isAcked -> isAcked
    boolean isDelivered -> isDelivered
    long msgTime -> msgTime
    com.easemob.chat.EMMessage$ChatType chatType -> chatType
    int progress -> progress
    java.util.Hashtable attributes -> attributes
    boolean unread -> unread
    boolean offline -> offline
    java.lang.String ATTR_ENCRYPTED -> ATTR_ENCRYPTED
    android.os.Parcelable$Creator CREATOR -> CREATOR
    com.easemob.chat.EMMessage$Type getType() -> getType
    com.easemob.chat.MessageBody getBody() -> getBody
    long getMsgTime() -> getMsgTime
    void setMsgTime(long) -> setMsgTime
    com.easemob.chat.EMMessage createSendMessage(com.easemob.chat.EMMessage$Type) -> createSendMessage
    com.easemob.chat.EMMessage createReceiveMessage(com.easemob.chat.EMMessage$Type) -> createReceiveMessage
    void addBody(com.easemob.chat.MessageBody) -> addBody
    java.lang.String getFrom() -> getFrom
    void setFrom(java.lang.String) -> setFrom
    void setTo(java.lang.String) -> setTo
    java.lang.String getTo() -> getTo
    java.lang.String getMsgId() -> getMsgId
    void setMsgId(java.lang.String) -> setMsgId
    void setReceipt(java.lang.String) -> setReceipt
    java.lang.String toString() -> toString
    void setAttribute(java.lang.String,boolean) -> setAttribute
    void setAttribute(java.lang.String,int) -> setAttribute
    void setAttribute(java.lang.String,java.lang.String) -> setAttribute
    boolean getBooleanAttribute(java.lang.String) -> getBooleanAttribute
    boolean getBooleanAttribute(java.lang.String,boolean) -> getBooleanAttribute
    int getIntAttribute(java.lang.String,int) -> getIntAttribute
    int getIntAttribute(java.lang.String) -> getIntAttribute
    java.lang.String getStringAttribute(java.lang.String) -> getStringAttribute
    java.lang.String getStringAttribute(java.lang.String,java.lang.String) -> getStringAttribute
    com.easemob.chat.EMMessage$ChatType getChatType() -> getChatType
    void setChatType(com.easemob.chat.EMMessage$ChatType) -> setChatType
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object clone() -> clone
    boolean isAcked() -> isAcked
    void setAcked(boolean) -> setAcked
    boolean isDelivered() -> isDelivered
    void setDelivered(boolean) -> setDelivered
    boolean isUnread() -> isUnread
    void setUnread(boolean) -> setUnread
    void setType(com.easemob.chat.EMMessage$Type) -> setType
com.easemob.chat.EMMessage$1 -> com.easemob.chat.EMMessage$1:
    com.easemob.chat.EMMessage createFromParcel(android.os.Parcel) -> createFromParcel
    com.easemob.chat.EMMessage[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.easemob.chat.EMMessage$ChatType -> com.easemob.chat.EMMessage$ChatType:
    com.easemob.chat.EMMessage$ChatType Chat -> Chat
    com.easemob.chat.EMMessage$ChatType GroupChat -> GroupChat
    com.easemob.chat.EMMessage$ChatType[] ENUM$VALUES -> ENUM$VALUES
    com.easemob.chat.EMMessage$ChatType[] values() -> values
    com.easemob.chat.EMMessage$ChatType valueOf(java.lang.String) -> valueOf
com.easemob.chat.EMMessage$Direct -> com.easemob.chat.EMMessage$Direct:
    com.easemob.chat.EMMessage$Direct SEND -> SEND
    com.easemob.chat.EMMessage$Direct RECEIVE -> RECEIVE
    com.easemob.chat.EMMessage$Direct[] ENUM$VALUES -> ENUM$VALUES
    com.easemob.chat.EMMessage$Direct[] values() -> values
    com.easemob.chat.EMMessage$Direct valueOf(java.lang.String) -> valueOf
com.easemob.chat.EMMessage$Status -> com.easemob.chat.EMMessage$Status:
    com.easemob.chat.EMMessage$Status SUCCESS -> SUCCESS
    com.easemob.chat.EMMessage$Status FAIL -> FAIL
    com.easemob.chat.EMMessage$Status INPROGRESS -> INPROGRESS
    com.easemob.chat.EMMessage$Status CREATE -> CREATE
    com.easemob.chat.EMMessage$Status[] ENUM$VALUES -> ENUM$VALUES
    com.easemob.chat.EMMessage$Status[] values() -> values
    com.easemob.chat.EMMessage$Status valueOf(java.lang.String) -> valueOf
com.easemob.chat.EMMessage$Type -> com.easemob.chat.EMMessage$Type:
    com.easemob.chat.EMMessage$Type TXT -> TXT
    com.easemob.chat.EMMessage$Type IMAGE -> IMAGE
    com.easemob.chat.EMMessage$Type VIDEO -> VIDEO
    com.easemob.chat.EMMessage$Type LOCATION -> LOCATION
    com.easemob.chat.EMMessage$Type VOICE -> VOICE
    com.easemob.chat.EMMessage$Type FILE -> FILE
    com.easemob.chat.EMMessage$Type CMD -> CMD
    com.easemob.chat.EMMessage$Type[] ENUM$VALUES -> ENUM$VALUES
    com.easemob.chat.EMMessage$Type[] values() -> values
    com.easemob.chat.EMMessage$Type valueOf(java.lang.String) -> valueOf
com.easemob.chat.EMNotifier -> com.easemob.chat.EMNotifier:
    java.lang.String TAG -> TAG
    android.media.Ringtone ringtone -> ringtone
    java.lang.String[] msg_eng -> msg_eng
    java.lang.String[] msg_ch -> msg_ch
    int notifyID -> notifyID
    android.app.NotificationManager notificationManager -> notificationManager
    java.util.HashSet fromUsers -> fromUsers
    int notificationNum -> notificationNum
    android.content.Context appContext -> appContext
    java.lang.String appName -> appName
    java.lang.String packageName -> packageName
    java.lang.String[] msgs -> msgs
    long lastNotifiyTime -> lastNotifiyTime
    com.easemob.chat.EMNotifier instance -> instance
    com.easemob.chat.OnMessageNotifyListener onMessageNotifyListener -> onMessageNotifyListener
    int[] $SWITCH_TABLE$com$easemob$chat$EMMessage$Type -> $SWITCH_TABLE$com$easemob$chat$EMMessage$Type
    com.easemob.chat.EMNotifier getInstance(android.content.Context) -> getInstance
    void stop() -> stop
    void resetNotificationCount() -> resetNotificationCount
    void notifyChatMsg(com.easemob.chat.EMMessage) -> notifyChatMsg
    void sendReadAckMsgBroadcast(java.lang.String,java.lang.String) -> sendReadAckMsgBroadcast
    void sendDeliveryAckMsgBroadcast(java.lang.String,java.lang.String) -> sendDeliveryAckMsgBroadcast
    void sendBroadcast(com.easemob.chat.EMMessage) -> sendBroadcast
    void sendNotification(com.easemob.chat.EMMessage) -> sendNotification
    void notifyOnNewMsg() -> notifyOnNewMsg
    void cancelNotificaton() -> cancelNotificaton
    void sendIncomingVoiceCallBroadcast(java.lang.String) -> sendIncomingVoiceCallBroadcast
    int[] $SWITCH_TABLE$com$easemob$chat$EMMessage$Type() -> $SWITCH_TABLE$com$easemob$chat$EMMessage$Type
com.easemob.chat.EMNotifier$1 -> com.easemob.chat.EMNotifier$1:
    com.easemob.chat.EMNotifier this$0 -> this$0
    void run() -> run
com.easemob.chat.EMNotifier$2 -> com.easemob.chat.EMNotifier$2:
    int[] $SwitchMap$com$easemob$chat$EMMessage$Type -> $SwitchMap$com$easemob$chat$EMMessage$Type
com.easemob.chat.EMReceiverJingleSession -> com.easemob.chat.EMReceiverJingleSession:
    java.lang.String TAG -> TAG
    java.util.List acceptedContent -> acceptedContent
    boolean isCallerUsingRelay -> isCallerUsingRelay
    boolean peerSendCallerRelay -> peerSendCallerRelay
    void closeSession(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason) -> closeSession
    void handleCallerRelay(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleCallerRelay
    void handleSessionAccept(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleSessionAccept
    void answerCall() -> answerCall
    void acceptContent() -> acceptContent
    void rejectCall() -> rejectCall
    void rejectSessionInitiate() -> rejectSessionInitiate
    void acceptSessionInitiate() -> acceptSessionInitiate
    void handleSessionInitiate(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleSessionInitiate
    void handleSessionTerminate(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleSessionTerminate
    void onConnectionConnected() -> onConnectionConnected
    boolean acceptCallFrom(java.lang.String) -> acceptCallFrom
    void onRelayCandidateSelected() -> onRelayCandidateSelected
    void onLocalCandidateSelected() -> onLocalCandidateSelected
com.easemob.chat.EMRosterListener -> com.easemob.chat.EMRosterListener:
    java.lang.String TAG -> TAG
    com.easemob.chat.EMContactManager contactManager -> contactManager
    org.jivesoftware.smack.Roster roster -> roster
    void entriesAdded(java.util.Collection) -> entriesAdded
    void entriesDeleted(java.util.Collection) -> entriesDeleted
    void entriesUpdated(java.util.Collection) -> entriesUpdated
    void presenceChanged(org.jivesoftware.smack.packet.Presence) -> presenceChanged
com.easemob.chat.EMSDKLocalTest -> com.easemob.chat.EMSDKLocalTest:
    long previousMsgTime -> previousMsgTime
    void addMsgs(java.lang.String,int) -> addMsgs
    void addConversations(int,int) -> addConversations
    com.easemob.chat.EMMessage createSentTextMsg(java.lang.String) -> createSentTextMsg
    com.easemob.chat.EMMessage createReceivedTextMsg(java.lang.String) -> createReceivedTextMsg
    long getNextMsgTime() -> getNextMsgTime
com.easemob.chat.EMSessionHandler -> com.easemob.chat.EMSessionHandler:
    com.easemob.chat.EMVoiceCallSession activeSession -> activeSession
    java.lang.String TAG -> TAG
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
    com.easemob.chat.EMVoiceCallSession getActiveSession() -> getActiveSession
    void setActiveSession(com.easemob.chat.EMVoiceCallSession) -> setActiveSession
    boolean isGeneralJiq(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> isGeneralJiq
    boolean jiqAccepted(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> jiqAccepted
com.easemob.chat.EMSessionManager -> com.easemob.chat.EMSessionManager:
    java.lang.String TAG -> TAG
    com.easemob.chat.core.XmppConnectionManager xmppConnectionManager -> xmppConnectionManager
    android.content.Context appContext -> appContext
    java.lang.String PREF_KEY_LOGIN_USER -> PREF_KEY_LOGIN_USER
    java.lang.String PREF_KEY_LOGIN_PWD -> PREF_KEY_LOGIN_PWD
    com.easemob.chat.EMContact currentUser -> currentUser
    com.easemob.chat.EMSessionManager instance -> instance
    java.lang.String lastLoginUser -> lastLoginUser
    java.lang.String lastLoginPwd -> lastLoginPwd
    com.easemob.chat.core.HeartBeatReceiver heartbeatReceiver -> heartbeatReceiver
    android.app.PendingIntent heartbeatIntent -> heartbeatIntent
    int HEARTBEAT_INTERVAL -> HEARTBEAT_INTERVAL
    int WIFI_HEARTBEAT_INTERVAL -> WIFI_HEARTBEAT_INTERVAL
    boolean loginOngoing -> loginOngoing
    com.easemob.chat.EMSessionManager getInstance(android.content.Context) -> getInstance
    void initXmppConnection(java.lang.String,java.lang.String) -> initXmppConnection
    void initDB() -> initDB
    void loginSync(java.lang.String,java.lang.String,boolean,com.easemob.EMCallBack) -> loginSync
    void login(java.lang.String,java.lang.String,boolean,com.easemob.EMCallBack) -> login
    void logout() -> logout
    void scheduleNextHeartBeat() -> scheduleNextHeartBeat
    void stopHeartbeatTimer() -> stopHeartbeatTimer
    java.lang.String getLastLoginUser() -> getLastLoginUser
    void setLastLoginUser(java.lang.String) -> setLastLoginUser
    java.lang.String getLastLoginPwd() -> getLastLoginPwd
    void setLastLoginPwd(java.lang.String) -> setLastLoginPwd
    boolean isConnected() -> isConnected
    com.easemob.chat.core.XmppConnectionManager getXmppConnectionManager() -> getXmppConnectionManager
    java.lang.String getLoginUserName() -> getLoginUserName
    void changePasswordXMPP(java.lang.String) -> changePasswordXMPP
    void createAccountXMPP(java.lang.String,java.lang.String) -> createAccountXMPP
    void access$0(com.easemob.chat.EMSessionManager,java.lang.String,java.lang.String,boolean,com.easemob.EMCallBack) -> access$0
    com.easemob.chat.core.XmppConnectionManager access$1(com.easemob.chat.EMSessionManager) -> access$1
    void access$2(com.easemob.chat.EMSessionManager,boolean) -> access$2
com.easemob.chat.EMSessionManager$1 -> com.easemob.chat.EMSessionManager$1:
    com.easemob.chat.EMSessionManager this$0 -> this$0
    java.lang.String val$username -> val$username
    java.lang.String val$password -> val$password
    boolean val$fromLoginLayout -> val$fromLoginLayout
    com.easemob.EMCallBack val$callback -> val$callback
    void run() -> run
com.easemob.chat.EMSessionManager$2 -> com.easemob.chat.EMSessionManager$2:
    com.easemob.chat.EMSessionManager this$0 -> this$0
    void run() -> run
com.easemob.chat.EMStreamParams -> com.easemob.chat.EMStreamParams:
    java.lang.String remoteAddress -> remoteAddress
    java.lang.String localAddress -> localAddress
    int remotePort -> remotePort
    int localPort -> localPort
    short channelNumber -> channelNumber
com.easemob.chat.EMTransportAddress -> com.easemob.chat.EMTransportAddress:
    java.lang.String address -> address
    int port -> port
    com.easemob.chat.EMTransportAddress$EMTransportType type -> type
com.easemob.chat.EMTransportAddress$EMTransportType -> com.easemob.chat.EMTransportAddress$EMTransportType:
    com.easemob.chat.EMTransportAddress$EMTransportType EUdp -> EUdp
    com.easemob.chat.EMTransportAddress$EMTransportType ETcp -> ETcp
    com.easemob.chat.EMTransportAddress$EMTransportType[] $VALUES -> $VALUES
    com.easemob.chat.EMTransportAddress$EMTransportType[] values() -> values
    com.easemob.chat.EMTransportAddress$EMTransportType valueOf(java.lang.String) -> valueOf
com.easemob.chat.EMVoiceCallManager -> com.easemob.chat.EMVoiceCallManager:
    java.lang.String TAG -> TAG
    com.easemob.chat.EMVoiceCallManager instance -> instance
    org.ice4j.TransportAddress[] serverAddress -> serverAddress
    com.easemob.chat.EMSessionHandler incomingCallListener -> incomingCallListener
    com.easemob.chat.EMSessionHandler outgoingCallHandler -> outgoingCallHandler
    com.easemob.chat.EMCallStateChangeListener stateChangeListener -> stateChangeListener
    com.easemob.chat.EMVoiceCallManager$CallStateChangeListenerDelegate stateChangeListenerDelegate -> stateChangeListenerDelegate
    boolean inited -> inited
    com.easemob.chat.EMVoiceCallSession activeSession -> activeSession
    java.lang.Thread makingCallThread -> makingCallThread
    java.util.Timer callingTimer -> callingTimer
    boolean callWasEnded -> callWasEnded
    long CALLING_TIMEROUT -> CALLING_TIMEROUT
    void init() -> init
    com.easemob.chat.EMVoiceCallManager getInstance() -> getInstance
    boolean isActiveCallOngoing() -> isActiveCallOngoing
    com.easemob.chat.EMVoiceCallSession getActiveSession() -> getActiveSession
    com.easemob.chat.EMCallDirection getCallDirection() -> getCallDirection
    void addStateChangeListener(com.easemob.chat.EMCallStateChangeListener) -> addStateChangeListener
    org.ice4j.TransportAddress[] getStunServerAddresses() -> getStunServerAddresses
    void startListeningCall() -> startListeningCall
    void makeVoiceCall(java.lang.String) -> makeVoiceCall
    void startCallingTimer() -> startCallingTimer
    void answerCall() -> answerCall
    void rejectCall() -> rejectCall
    void endCall() -> endCall
    void onCallRinging(com.easemob.chat.EMVoiceCallSession) -> onCallRinging
    void onJingleInitiateAction(com.easemob.chat.EMVoiceCallSession) -> onJingleInitiateAction
    void registerConnectionListener() -> registerConnectionListener
    void checkConnection() -> checkConnection
    java.lang.String access$0() -> access$0
    java.util.Timer access$1(com.easemob.chat.EMVoiceCallManager) -> access$1
    void access$2(com.easemob.chat.EMVoiceCallManager,com.easemob.chat.EMVoiceCallSession) -> access$2
    com.easemob.chat.EMCallStateChangeListener access$3(com.easemob.chat.EMVoiceCallManager) -> access$3
    org.ice4j.TransportAddress[] access$4(com.easemob.chat.EMVoiceCallManager) -> access$4
    com.easemob.chat.EMVoiceCallManager$CallStateChangeListenerDelegate access$5(com.easemob.chat.EMVoiceCallManager) -> access$5
    void access$6(com.easemob.chat.EMVoiceCallManager,com.easemob.chat.EMSessionHandler) -> access$6
    com.easemob.chat.EMVoiceCallSession access$7(com.easemob.chat.EMVoiceCallManager) -> access$7
    com.easemob.chat.EMSessionHandler access$8(com.easemob.chat.EMVoiceCallManager) -> access$8
    boolean access$9(com.easemob.chat.EMVoiceCallManager) -> access$9
    void access$10(com.easemob.chat.EMVoiceCallManager,boolean) -> access$10
    void access$11(com.easemob.chat.EMVoiceCallManager,java.lang.Thread) -> access$11
    void access$12(com.easemob.chat.EMVoiceCallManager) -> access$12
    com.easemob.chat.EMSessionHandler access$13(com.easemob.chat.EMVoiceCallManager) -> access$13
    void access$14(com.easemob.chat.EMVoiceCallManager,com.easemob.chat.EMSessionHandler) -> access$14
    void access$15(com.easemob.chat.EMVoiceCallManager) -> access$15
com.easemob.chat.EMVoiceCallManager$1 -> com.easemob.chat.EMVoiceCallManager$1:
    com.easemob.chat.EMVoiceCallManager this$0 -> this$0
    boolean jiqAccepted(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> jiqAccepted
    com.xonami.javaBells.JingleSession createJingleSession(java.lang.String,net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> createJingleSession
com.easemob.chat.EMVoiceCallManager$2 -> com.easemob.chat.EMVoiceCallManager$2:
    com.easemob.chat.EMVoiceCallManager this$0 -> this$0
    java.lang.String val$user -> val$user
    org.jivesoftware.smack.XMPPConnection val$connection -> val$connection
    void run() -> run
    com.easemob.chat.EMVoiceCallManager access$0(com.easemob.chat.EMVoiceCallManager$2) -> access$0
com.easemob.chat.EMVoiceCallManager$2$1 -> com.easemob.chat.EMVoiceCallManager$2$1:
    com.easemob.chat.EMVoiceCallManager$2 this$1 -> this$1
    java.lang.String val$tojid -> val$tojid
    com.easemob.chat.EMJingleStreamManager val$jsm -> val$jsm
    com.xonami.javaBells.IceAgent val$iceAgent -> val$iceAgent
    boolean jiqAccepted(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> jiqAccepted
    com.xonami.javaBells.JingleSession createJingleSession(java.lang.String,net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> createJingleSession
com.easemob.chat.EMVoiceCallManager$3 -> com.easemob.chat.EMVoiceCallManager$3:
    com.easemob.chat.EMVoiceCallManager this$0 -> this$0
    void run() -> run
com.easemob.chat.EMVoiceCallManager$4 -> com.easemob.chat.EMVoiceCallManager$4:
    com.easemob.chat.EMVoiceCallManager this$0 -> this$0
    com.easemob.chat.EMReceiverJingleSession val$receiver -> val$receiver
    void run() -> run
com.easemob.chat.EMVoiceCallManager$5 -> com.easemob.chat.EMVoiceCallManager$5:
    com.easemob.chat.EMVoiceCallManager this$0 -> this$0
    com.easemob.chat.EMReceiverJingleSession val$receiver -> val$receiver
    void run() -> run
com.easemob.chat.EMVoiceCallManager$6 -> com.easemob.chat.EMVoiceCallManager$6:
    com.easemob.chat.EMVoiceCallManager this$0 -> this$0
    void run() -> run
com.easemob.chat.EMVoiceCallManager$7 -> com.easemob.chat.EMVoiceCallManager$7:
    com.easemob.chat.EMVoiceCallManager this$0 -> this$0
    void onConnected() -> onConnected
    void onDisConnected(java.lang.String) -> onDisConnected
    void onReConnected() -> onReConnected
    void onReConnecting() -> onReConnecting
    void onConnecting(java.lang.String) -> onConnecting
com.easemob.chat.EMVoiceCallManager$CallStateChangeListenerDelegate -> com.easemob.chat.EMVoiceCallManager$CallStateChangeListenerDelegate:
    com.easemob.chat.EMVoiceCallManager this$0 -> this$0
    void onCallStateChanged(com.easemob.chat.EMCallStateChangeListener$CallState,com.easemob.chat.EMCallStateChangeListener$CallError) -> onCallStateChanged
com.easemob.chat.EMVoiceCallSession -> com.easemob.chat.EMVoiceCallSession:
    java.lang.String TAG -> TAG
    com.xonami.javaBells.IceAgent iceAgent -> iceAgent
    com.easemob.chat.EMJingleStreamManager jingleStreamManager -> jingleStreamManager
    org.ice4j.TransportAddress[] serverAddress -> serverAddress
    com.easemob.chat.EMCallStateChangeListener stateChangeListener -> stateChangeListener
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ jingleIQ -> jingleIQ
    com.easemob.chat.EMCallStateChangeListener$CallState callState -> callState
    com.easemob.chat.EMStreamParams streamParams -> streamParams
    boolean isLocalHostCandiate -> isLocalHostCandiate
    boolean selectionDone -> selectionDone
    boolean noNeedToCloseSesson -> noNeedToCloseSesson
    com.easemob.chat.EMCallDirection callDirection -> callDirection
    java.lang.String getPeerJid() -> getPeerJid
    com.easemob.chat.EMVoiceCallSession build(com.xonami.javaBells.IceAgent) -> build
    com.easemob.chat.EMVoiceCallSession build(com.easemob.chat.EMJingleStreamManager) -> build
    com.easemob.chat.EMVoiceCallSession build(org.ice4j.TransportAddress[]) -> build
    com.easemob.chat.EMVoiceCallSession registerCallStateListener(com.easemob.chat.EMCallStateChangeListener) -> registerCallStateListener
    com.easemob.chat.EMCallDirection getCallDirection() -> getCallDirection
    com.easemob.chat.EMCallStateChangeListener$CallState getCallState() -> getCallState
    void handleCallAccept(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleCallAccept
    void handleCallerRelay(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleCallerRelay
    void onBusy() -> onBusy
    void endCall() -> endCall
    void propertyChange(java.beans.PropertyChangeEvent) -> propertyChange
    void onCandiateCollectionStateCompleted(java.beans.PropertyChangeEvent) -> onCandiateCollectionStateCompleted
    void onCandiateCollectionStateFailed(java.beans.PropertyChangeEvent) -> onCandiateCollectionStateFailed
    void onCandiateCollectionStateTerminated(java.beans.PropertyChangeEvent) -> onCandiateCollectionStateTerminated
    void onRelayCandidateSelected() -> onRelayCandidateSelected
    void onLocalCandidateSelected() -> onLocalCandidateSelected
    void connectRelayServer() -> connectRelayServer
    void connectPeer() -> connectPeer
    void connectPeerRelay() -> connectPeerRelay
    void onConnectionConnected() -> onConnectionConnected
    void closeSession(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason) -> closeSession
    void changeState(com.easemob.chat.EMCallStateChangeListener$CallState,com.easemob.chat.EMCallStateChangeListener$CallError) -> changeState
    void free() -> free
    void onTimerOut() -> onTimerOut
    void printCandidateCollectionInfo(java.beans.PropertyChangeEvent) -> printCandidateCollectionInfo
    java.lang.String access$0() -> access$0
com.easemob.chat.EMVoiceCallSession$1 -> com.easemob.chat.EMVoiceCallSession$1:
    com.easemob.chat.EMVoiceCallSession this$0 -> this$0
    org.ice4j.socket.RelayedCandidateDatagramSocket$Channel val$myChannel -> val$myChannel
    org.ice4j.socket.RelayedCandidateDatagramSocket val$socket -> val$socket
    org.ice4j.ice.Agent val$fAgent -> val$fAgent
    void channelBound(org.ice4j.socket.RelayedCandidateDatagramSocket$Channel) -> channelBound
    void channelSetConfirmed(org.ice4j.socket.RelayedCandidateDatagramSocket$Channel) -> channelSetConfirmed
com.easemob.chat.EmRandomStringMethod -> com.easemob.chat.EmRandomStringMethod:
    java.lang.String createRandomString() -> createRandomString
com.easemob.chat.EncryptProvider -> com.easemob.chat.EncryptProvider:
    byte[] encrypt(byte[],java.lang.String) -> encrypt
    byte[] decrypt(byte[],java.lang.String) -> decrypt
com.easemob.chat.FileMessageBody -> com.easemob.chat.FileMessageBody:
    com.easemob.EMCallBack downloadCallback -> downloadCallback
    boolean downloaded -> downloaded
    java.lang.String fileName -> fileName
    java.lang.String localUrl -> localUrl
    java.lang.String remoteUrl -> remoteUrl
    java.lang.String secret -> secret
    void setDownloadCallback(com.easemob.EMCallBack) -> setDownloadCallback
    java.lang.String getFileName() -> getFileName
    void setFileName(java.lang.String) -> setFileName
    java.lang.String getLocalUrl() -> getLocalUrl
    void setLocalUrl(java.lang.String) -> setLocalUrl
    java.lang.String getRemoteUrl() -> getRemoteUrl
    void setRemoteUrl(java.lang.String) -> setRemoteUrl
    void setSecret(java.lang.String) -> setSecret
    java.lang.String getSecret() -> getSecret
com.easemob.chat.GroupChangeListener -> com.easemob.chat.GroupChangeListener:
    void onInvitationReceived(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> onInvitationReceived
    void onApplicationReceived(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> onApplicationReceived
    void onApplicationAccept(java.lang.String,java.lang.String,java.lang.String) -> onApplicationAccept
    void onApplicationDeclined(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> onApplicationDeclined
    void onInvitationAccpted(java.lang.String,java.lang.String,java.lang.String) -> onInvitationAccpted
    void onInvitationDeclined(java.lang.String,java.lang.String,java.lang.String) -> onInvitationDeclined
    void onUserRemoved(java.lang.String,java.lang.String) -> onUserRemoved
    void onGroupDestroy(java.lang.String,java.lang.String) -> onGroupDestroy
com.easemob.chat.GroupChatListener -> com.easemob.chat.GroupChatListener:
    java.lang.String TAG -> TAG
    boolean processMessage(org.jivesoftware.smack.packet.Message) -> processMessage
    void processGroupMessage(org.jivesoftware.smack.packet.Message,com.easemob.chat.EMMessage) -> processGroupMessage
com.easemob.chat.GroupReomveListener -> com.easemob.chat.GroupReomveListener:
    void onInvitationReceived(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> onInvitationReceived
    void onApplicationReceived(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> onApplicationReceived
    void onApplicationAccept(java.lang.String,java.lang.String,java.lang.String) -> onApplicationAccept
    void onApplicationDeclined(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> onApplicationDeclined
    void onInvitationAccpted(java.lang.String,java.lang.String,java.lang.String) -> onInvitationAccpted
    void onInvitationDeclined(java.lang.String,java.lang.String,java.lang.String) -> onInvitationDeclined
com.easemob.chat.ImageMessageBody -> com.easemob.chat.ImageMessageBody:
    java.lang.String thumbnailUrl -> thumbnailUrl
    java.lang.String thumbnailSecret -> thumbnailSecret
    int width -> width
    int height -> height
    boolean sendOriginalImage -> sendOriginalImage
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getThumbnailUrl() -> getThumbnailUrl
    void setThumbnailUrl(java.lang.String) -> setThumbnailUrl
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void setThumbnailSecret(java.lang.String) -> setThumbnailSecret
    java.lang.String getThumbnailSecret() -> getThumbnailSecret
    void setSendOriginalImage(boolean) -> setSendOriginalImage
    boolean isSendOriginalImage() -> isSendOriginalImage
    int getWidth() -> getWidth
    int getHeight() -> getHeight
com.easemob.chat.ImageMessageBody$1 -> com.easemob.chat.ImageMessageBody$1:
    com.easemob.chat.ImageMessageBody createFromParcel(android.os.Parcel) -> createFromParcel
    com.easemob.chat.ImageMessageBody[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.easemob.chat.InitSmackStaticCode -> com.easemob.chat.InitSmackStaticCode:
    void initStaticCode(android.content.Context) -> initStaticCode
com.easemob.chat.LocationMessageBody -> com.easemob.chat.LocationMessageBody:
    java.lang.String address -> address
    double latitude -> latitude
    double longitude -> longitude
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getAddress() -> getAddress
    double getLatitude() -> getLatitude
    double getLongitude() -> getLongitude
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.easemob.chat.LocationMessageBody$1 -> com.easemob.chat.LocationMessageBody$1:
    com.easemob.chat.LocationMessageBody createFromParcel(android.os.Parcel) -> createFromParcel
    com.easemob.chat.LocationMessageBody[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.easemob.chat.MessageBody -> com.easemob.chat.MessageBody:
com.easemob.chat.MessageEncoder -> com.easemob.chat.MessageEncoder:
    java.lang.String TAG -> TAG
    java.lang.String ATTR_TYPE -> ATTR_TYPE
    java.lang.String ATTR_TO -> ATTR_TO
    java.lang.String ATTR_FROM -> ATTR_FROM
    java.lang.String ATTR_MSG -> ATTR_MSG
    java.lang.String ATTR_URL -> ATTR_URL
    java.lang.String ATTR_LOCALURL -> ATTR_LOCALURL
    java.lang.String ATTR_THUMB_LOCALURL -> ATTR_THUMB_LOCALURL
    java.lang.String ATTR_FILENAME -> ATTR_FILENAME
    java.lang.String ATTR_THUMBNAIL -> ATTR_THUMBNAIL
    java.lang.String ATTR_SECRET -> ATTR_SECRET
    java.lang.String ATTR_SIZE -> ATTR_SIZE
    java.lang.String ATTR_IMG_WIDTH -> ATTR_IMG_WIDTH
    java.lang.String ATTR_IMG_HEIGHT -> ATTR_IMG_HEIGHT
    java.lang.String ATTR_THUMBNAIL_SECRET -> ATTR_THUMBNAIL_SECRET
    java.lang.String ATTR_LENGTH -> ATTR_LENGTH
    java.lang.String ATTR_ADDRESS -> ATTR_ADDRESS
    java.lang.String ATTR_LATITUDE -> ATTR_LATITUDE
    java.lang.String ATTR_LONGITUDE -> ATTR_LONGITUDE
    java.lang.String ATTR_ACTION -> ATTR_ACTION
    java.lang.String ATTR_PARAM -> ATTR_PARAM
    java.lang.String ATTR_FILE_LENGTH -> ATTR_FILE_LENGTH
    java.lang.String ATTR_EXT -> ATTR_EXT
    java.lang.String ATTR_TYPE_TXT -> ATTR_TYPE_TXT
    java.lang.String ATTR_TYPE_IMG -> ATTR_TYPE_IMG
    java.lang.String ATTR_TYPE_VOICE -> ATTR_TYPE_VOICE
    java.lang.String ATTR_TYPE_VIDEO -> ATTR_TYPE_VIDEO
    java.lang.String ATTR_TYPE_LOCATION -> ATTR_TYPE_LOCATION
    java.lang.String ATTR_TYPE_CMD -> ATTR_TYPE_CMD
    java.lang.String ATTR_TYPE_file -> ATTR_TYPE_file
    java.lang.String getJSONMsg(com.easemob.chat.EMMessage,boolean) -> getJSONMsg
    void addExtAttr(java.lang.StringBuffer,com.easemob.chat.EMMessage) -> addExtAttr
    void addImageBody(java.lang.StringBuffer,com.easemob.chat.EMMessage,boolean) -> addImageBody
    void addVideoBody(java.lang.StringBuffer,com.easemob.chat.EMMessage,boolean) -> addVideoBody
    void addTxtBody(java.lang.StringBuffer,com.easemob.chat.EMMessage) -> addTxtBody
    void addCmdBody(java.lang.StringBuffer,com.easemob.chat.EMMessage) -> addCmdBody
    void addVoiceBody(java.lang.StringBuffer,com.easemob.chat.EMMessage,boolean) -> addVoiceBody
    void addFileBody(java.lang.StringBuffer,com.easemob.chat.EMMessage,boolean) -> addFileBody
    void addLocationBody(java.lang.StringBuffer,com.easemob.chat.EMMessage) -> addLocationBody
    com.easemob.chat.EMMessage parseXmppMsg(org.jivesoftware.smack.packet.Message) -> parseXmppMsg
    com.easemob.chat.EMMessage getMsgFromJson(java.lang.String) -> getMsgFromJson
com.easemob.chat.NormalFileMessageBody -> com.easemob.chat.NormalFileMessageBody:
    long fileSize -> fileSize
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
    long getFileSize() -> getFileSize
com.easemob.chat.NormalFileMessageBody$1 -> com.easemob.chat.NormalFileMessageBody$1:
    com.easemob.chat.NormalFileMessageBody createFromParcel(android.os.Parcel) -> createFromParcel
    com.easemob.chat.NormalFileMessageBody[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.easemob.chat.NotificationCompat -> com.easemob.chat.NotificationCompat:
    int FLAG_HIGH_PRIORITY -> FLAG_HIGH_PRIORITY
    int PRIORITY_DEFAULT -> PRIORITY_DEFAULT
    int PRIORITY_LOW -> PRIORITY_LOW
    int PRIORITY_MIN -> PRIORITY_MIN
    int PRIORITY_HIGH -> PRIORITY_HIGH
    int PRIORITY_MAX -> PRIORITY_MAX
    com.easemob.chat.NotificationCompat$NotificationCompatImpl IMPL -> IMPL
    com.easemob.chat.NotificationCompat$NotificationCompatImpl access$000() -> access$000
com.easemob.chat.NotificationCompat$Action -> com.easemob.chat.NotificationCompat$Action:
    int icon -> icon
    java.lang.CharSequence title -> title
    android.app.PendingIntent actionIntent -> actionIntent
com.easemob.chat.NotificationCompat$BigPictureStyle -> com.easemob.chat.NotificationCompat$BigPictureStyle:
    android.graphics.Bitmap mPicture -> mPicture
    android.graphics.Bitmap mBigLargeIcon -> mBigLargeIcon
    boolean mBigLargeIconSet -> mBigLargeIconSet
    com.easemob.chat.NotificationCompat$BigPictureStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    com.easemob.chat.NotificationCompat$BigPictureStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    com.easemob.chat.NotificationCompat$BigPictureStyle bigPicture(android.graphics.Bitmap) -> bigPicture
    com.easemob.chat.NotificationCompat$BigPictureStyle bigLargeIcon(android.graphics.Bitmap) -> bigLargeIcon
com.easemob.chat.NotificationCompat$BigTextStyle -> com.easemob.chat.NotificationCompat$BigTextStyle:
    java.lang.CharSequence mBigText -> mBigText
    com.easemob.chat.NotificationCompat$BigTextStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    com.easemob.chat.NotificationCompat$BigTextStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    com.easemob.chat.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence) -> bigText
com.easemob.chat.NotificationCompat$Builder -> com.easemob.chat.NotificationCompat$Builder:
    android.content.Context mContext -> mContext
    java.lang.CharSequence mContentTitle -> mContentTitle
    java.lang.CharSequence mContentText -> mContentText
    android.app.PendingIntent mContentIntent -> mContentIntent
    android.app.PendingIntent mFullScreenIntent -> mFullScreenIntent
    android.widget.RemoteViews mTickerView -> mTickerView
    android.graphics.Bitmap mLargeIcon -> mLargeIcon
    java.lang.CharSequence mContentInfo -> mContentInfo
    int mNumber -> mNumber
    int mPriority -> mPriority
    boolean mUseChronometer -> mUseChronometer
    com.easemob.chat.NotificationCompat$Style mStyle -> mStyle
    java.lang.CharSequence mSubText -> mSubText
    int mProgressMax -> mProgressMax
    int mProgress -> mProgress
    boolean mProgressIndeterminate -> mProgressIndeterminate
    java.util.ArrayList mActions -> mActions
    android.app.Notification mNotification -> mNotification
    com.easemob.chat.NotificationCompat$Builder setWhen(long) -> setWhen
    com.easemob.chat.NotificationCompat$Builder setUsesChronometer(boolean) -> setUsesChronometer
    com.easemob.chat.NotificationCompat$Builder setSmallIcon(int) -> setSmallIcon
    com.easemob.chat.NotificationCompat$Builder setSmallIcon(int,int) -> setSmallIcon
    com.easemob.chat.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> setContentTitle
    com.easemob.chat.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> setContentText
    com.easemob.chat.NotificationCompat$Builder setSubText(java.lang.CharSequence) -> setSubText
    com.easemob.chat.NotificationCompat$Builder setNumber(int) -> setNumber
    com.easemob.chat.NotificationCompat$Builder setContentInfo(java.lang.CharSequence) -> setContentInfo
    com.easemob.chat.NotificationCompat$Builder setProgress(int,int,boolean) -> setProgress
    com.easemob.chat.NotificationCompat$Builder setContent(android.widget.RemoteViews) -> setContent
    com.easemob.chat.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> setContentIntent
    com.easemob.chat.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent) -> setDeleteIntent
    com.easemob.chat.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean) -> setFullScreenIntent
    com.easemob.chat.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> setTicker
    com.easemob.chat.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews) -> setTicker
    com.easemob.chat.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    com.easemob.chat.NotificationCompat$Builder setSound(android.net.Uri) -> setSound
    com.easemob.chat.NotificationCompat$Builder setSound(android.net.Uri,int) -> setSound
    com.easemob.chat.NotificationCompat$Builder setVibrate(long[]) -> setVibrate
    com.easemob.chat.NotificationCompat$Builder setLights(int,int,int) -> setLights
    com.easemob.chat.NotificationCompat$Builder setOngoing(boolean) -> setOngoing
    com.easemob.chat.NotificationCompat$Builder setOnlyAlertOnce(boolean) -> setOnlyAlertOnce
    com.easemob.chat.NotificationCompat$Builder setAutoCancel(boolean) -> setAutoCancel
    com.easemob.chat.NotificationCompat$Builder setDefaults(int) -> setDefaults
    void setFlag(int,boolean) -> setFlag
    com.easemob.chat.NotificationCompat$Builder setPriority(int) -> setPriority
    com.easemob.chat.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    com.easemob.chat.NotificationCompat$Builder setStyle(com.easemob.chat.NotificationCompat$Style) -> setStyle
    android.app.Notification getNotification() -> getNotification
    android.app.Notification build() -> build
com.easemob.chat.NotificationCompat$InboxStyle -> com.easemob.chat.NotificationCompat$InboxStyle:
    java.util.ArrayList mTexts -> mTexts
    com.easemob.chat.NotificationCompat$InboxStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    com.easemob.chat.NotificationCompat$InboxStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    com.easemob.chat.NotificationCompat$InboxStyle addLine(java.lang.CharSequence) -> addLine
com.easemob.chat.NotificationCompat$NotificationCompatImpl -> com.easemob.chat.NotificationCompat$NotificationCompatImpl:
    android.app.Notification build(com.easemob.chat.NotificationCompat$Builder) -> build
com.easemob.chat.NotificationCompat$NotificationCompatImplBase -> com.easemob.chat.NotificationCompat$NotificationCompatImplBase:
    android.app.Notification build(com.easemob.chat.NotificationCompat$Builder) -> build
com.easemob.chat.NotificationCompat$NotificationCompatImplGingerbread -> com.easemob.chat.NotificationCompat$NotificationCompatImplGingerbread:
    android.app.Notification build(com.easemob.chat.NotificationCompat$Builder) -> build
com.easemob.chat.NotificationCompat$NotificationCompatImplHoneycomb -> com.easemob.chat.NotificationCompat$NotificationCompatImplHoneycomb:
    android.app.Notification build(com.easemob.chat.NotificationCompat$Builder) -> build
com.easemob.chat.NotificationCompat$NotificationCompatImplIceCreamSandwich -> com.easemob.chat.NotificationCompat$NotificationCompatImplIceCreamSandwich:
    android.app.Notification build(com.easemob.chat.NotificationCompat$Builder) -> build
com.easemob.chat.NotificationCompat$NotificationCompatImplJellybean -> com.easemob.chat.NotificationCompat$NotificationCompatImplJellybean:
    android.app.Notification build(com.easemob.chat.NotificationCompat$Builder) -> build
com.easemob.chat.NotificationCompat$Style -> com.easemob.chat.NotificationCompat$Style:
    com.easemob.chat.NotificationCompat$Builder mBuilder -> mBuilder
    java.lang.CharSequence mBigContentTitle -> mBigContentTitle
    java.lang.CharSequence mSummaryText -> mSummaryText
    boolean mSummaryTextSet -> mSummaryTextSet
    void setBuilder(com.easemob.chat.NotificationCompat$Builder) -> setBuilder
    android.app.Notification build() -> build
com.easemob.chat.NotificationCompatGingerbread -> com.easemob.chat.NotificationCompatGingerbread:
    android.app.Notification add(android.app.Notification,android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent,android.app.PendingIntent) -> add
com.easemob.chat.NotificationCompatHoneycomb -> com.easemob.chat.NotificationCompatHoneycomb:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> add
com.easemob.chat.NotificationCompatIceCreamSandwich -> com.easemob.chat.NotificationCompatIceCreamSandwich:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean) -> add
com.easemob.chat.NotificationCompatJellybean -> com.easemob.chat.NotificationCompatJellybean:
    android.app.Notification$Builder b -> b
    void addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    void addBigTextStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> addBigTextStyle
    void addBigPictureStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean) -> addBigPictureStyle
    void addInboxStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> addInboxStyle
    android.app.Notification build() -> build
com.easemob.chat.OnMessageNotifyListener -> com.easemob.chat.OnMessageNotifyListener:
    java.lang.String onNewMessageNotify(com.easemob.chat.EMMessage) -> onNewMessageNotify
    java.lang.String onLatestMessageNotify(com.easemob.chat.EMMessage,int,int) -> onLatestMessageNotify
    java.lang.String onSetNotificationTitle(com.easemob.chat.EMMessage) -> onSetNotificationTitle
com.easemob.chat.OnNotificationClickListener -> com.easemob.chat.OnNotificationClickListener:
    android.content.Intent onNotificationClick(com.easemob.chat.EMMessage) -> onNotificationClick
com.easemob.chat.ReceiveMessageThread -> com.easemob.chat.ReceiveMessageThread:
    java.lang.String TAG -> TAG
    com.easemob.chat.EMMessage msg -> msg
    com.easemob.chat.FileMessageBody msgbody -> msgbody
    boolean encrypted -> encrypted
    void run() -> run
    void updateMsgState() -> updateMsgState
    void updateMsgBody(com.easemob.chat.EMMessage) -> updateMsgBody
    boolean access$0(com.easemob.chat.ReceiveMessageThread) -> access$0
    com.easemob.chat.EMMessage access$1(com.easemob.chat.ReceiveMessageThread) -> access$1
    com.easemob.chat.FileMessageBody access$2(com.easemob.chat.ReceiveMessageThread) -> access$2
com.easemob.chat.ReceiveMessageThread$1 -> com.easemob.chat.ReceiveMessageThread$1:
    com.easemob.chat.ReceiveMessageThread this$0 -> this$0
    java.lang.String val$localThumbnailFilePath -> val$localThumbnailFilePath
    void onSuccess(java.lang.String) -> onSuccess
    void onError(java.lang.String) -> onError
    void onProgress(int) -> onProgress
com.easemob.chat.RecvAckListener -> com.easemob.chat.RecvAckListener:
    java.lang.String TAG -> TAG
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
    boolean processClientAckMessage(org.jivesoftware.smack.packet.Message) -> processClientAckMessage
    void onReadAckReceived(com.easemob.chat.EMMessage) -> onReadAckReceived
    void onDeliveryAckReceived(com.easemob.chat.EMMessage) -> onDeliveryAckReceived
com.easemob.chat.RosterStorageImpl -> com.easemob.chat.RosterStorageImpl:
    java.lang.String TAG -> TAG
    java.lang.String PERF_KEY_ROSTERVER -> PERF_KEY_ROSTERVER
    java.lang.String version -> version
    com.easemob.chat.EMContactManager contactManager -> contactManager
    android.content.Context appContext -> appContext
    java.util.ArrayList rosterItems -> rosterItems
    void loadEntries() -> loadEntries
    void addEntry(org.jivesoftware.smack.packet.RosterPacket$Item,java.lang.String) -> addEntry
    java.util.List getEntries() -> getEntries
    org.jivesoftware.smack.packet.RosterPacket$Item getEntry(java.lang.String) -> getEntry
    int getEntryCount() -> getEntryCount
    java.lang.String getRosterVersion() -> getRosterVersion
    void updateRosterVersion(java.lang.String) -> updateRosterVersion
    void removeEntry(java.lang.String,java.lang.String) -> removeEntry
    void updateLocalEntry(org.jivesoftware.smack.packet.RosterPacket$Item) -> updateLocalEntry
com.easemob.chat.SendMessageThread -> com.easemob.chat.SendMessageThread:
    java.lang.String TAG -> TAG
    java.lang.String PERF -> PERF
    org.jivesoftware.smack.Chat chat -> chat
    org.jivesoftware.smackx.muc.MultiUserChat muc -> muc
    com.easemob.chat.EMMessage msg -> msg
    com.easemob.EMCallBack callback -> callback
    int WAIT_TIME_OUT -> WAIT_TIME_OUT
    java.util.Hashtable sendLocks -> sendLocks
    java.lang.Object mutex -> mutex
    int WAIT_SEND_TIME_OUT -> WAIT_SEND_TIME_OUT
    java.util.Hashtable sendMsgLocks -> sendMsgLocks
    java.lang.Object sendMutex -> sendMutex
    java.lang.String groupId -> groupId
    int[] $SWITCH_TABLE$com$easemob$chat$EMMessage$Type -> $SWITCH_TABLE$com$easemob$chat$EMMessage$Type
    void addSendLock(java.lang.String,java.lang.Object) -> addSendLock
    void notifySendLock(java.lang.String) -> notifySendLock
    void run() -> run
    void sendMessageXmpp(com.easemob.chat.EMMessage) -> sendMessageXmpp
    void sendImageMessage(com.easemob.chat.EMMessage,com.easemob.EMCallBack) -> sendImageMessage
    void sendVideoMessage(com.easemob.chat.EMMessage,com.easemob.EMCallBack) -> sendVideoMessage
    java.util.Map uploadEncryptedThumbnailImage(java.io.File,com.easemob.chat.EMMessage) -> uploadEncryptedThumbnailImage
    void sendFileMessage(com.easemob.chat.EMMessage,com.easemob.EMCallBack) -> sendFileMessage
    void updateMsgState(com.easemob.chat.EMMessage) -> updateMsgState
    java.lang.String getThumbnailImagePath(java.lang.String) -> getThumbnailImagePath
    void checkConnection() -> checkConnection
    void addSendMsgLock(java.lang.String,java.lang.Object) -> addSendMsgLock
    void notifySendMsgLocks() -> notifySendMsgLocks
    int[] $SWITCH_TABLE$com$easemob$chat$EMMessage$Type() -> $SWITCH_TABLE$com$easemob$chat$EMMessage$Type
    void access$1(com.easemob.chat.SendMessageThread,com.easemob.chat.EMMessage) -> access$1
    java.util.Map access$2(com.easemob.chat.SendMessageThread,java.io.File,com.easemob.chat.EMMessage) -> access$2
    void access$3(com.easemob.chat.SendMessageThread,com.easemob.chat.EMMessage) -> access$3
com.easemob.chat.SendMessageThread$1 -> com.easemob.chat.SendMessageThread$1:
    com.easemob.chat.SendMessageThread this$0 -> this$0
    com.easemob.chat.EMMessage val$msg -> val$msg
    long val$startTime -> val$startTime
    long val$fileLength -> val$fileLength
    com.easemob.EMCallBack val$callback -> val$callback
    boolean val$needToDeleteFile -> val$needToDeleteFile
    java.io.File val$fileToSend -> val$fileToSend
    java.lang.String val$remoteFilePath -> val$remoteFilePath
    com.easemob.chat.ImageMessageBody val$imgMsgBody -> val$imgMsgBody
    void onProgress(int) -> onProgress
    void onError(java.lang.String) -> onError
    void onSuccess(java.lang.String) -> onSuccess
com.easemob.chat.SendMessageThread$2 -> com.easemob.chat.SendMessageThread$2:
    com.easemob.chat.SendMessageThread this$0 -> this$0
    java.lang.String val$remoteFilePath -> val$remoteFilePath
    java.lang.String val$thumFilePath -> val$thumFilePath
    com.easemob.chat.EMMessage val$msg -> val$msg
    com.easemob.EMCallBack val$callback -> val$callback
    com.easemob.chat.VideoMessageBody val$videoMsgBody -> val$videoMsgBody
    void onSuccess(java.lang.String) -> onSuccess
    void onProgress(int) -> onProgress
    void onError(java.lang.String) -> onError
com.easemob.chat.SendMessageThread$3 -> com.easemob.chat.SendMessageThread$3:
    com.easemob.chat.SendMessageThread this$0 -> this$0
    java.util.Map val$maps -> val$maps
    void onSuccess(java.lang.String) -> onSuccess
    void onError(java.lang.String) -> onError
    void onProgress(int) -> onProgress
com.easemob.chat.SendMessageThread$4 -> com.easemob.chat.SendMessageThread$4:
    com.easemob.chat.SendMessageThread this$0 -> this$0
    com.easemob.chat.EMMessage val$msg -> val$msg
    long val$startTime -> val$startTime
    long val$fileLength -> val$fileLength
    com.easemob.EMCallBack val$callback -> val$callback
    java.lang.String val$remoteFilePath -> val$remoteFilePath
    com.easemob.chat.FileMessageBody val$fileMsgBody -> val$fileMsgBody
    void onProgress(int) -> onProgress
    void onError(java.lang.String) -> onError
    void onSuccess(java.lang.String) -> onSuccess
com.easemob.chat.SendMessageThread$5 -> com.easemob.chat.SendMessageThread$5:
    int[] $SwitchMap$com$easemob$chat$EMMessage$Type -> $SwitchMap$com$easemob$chat$EMMessage$Type
com.easemob.chat.StartServiceReceiver -> com.easemob.chat.StartServiceReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void schduleNextHeartbeat(android.content.Context) -> schduleNextHeartbeat
com.easemob.chat.SwipeCmdProcessor -> com.easemob.chat.SwipeCmdProcessor:
    java.lang.String TAG -> TAG
    java.lang.String action -> action
    java.lang.String getAction() -> getAction
    boolean processCmd(com.easemob.chat.EMMessage) -> processCmd
    void deleteDir(java.io.File) -> deleteDir
com.easemob.chat.TextMessageBody -> com.easemob.chat.TextMessageBody:
    java.lang.String message -> message
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getMessage() -> getMessage
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.easemob.chat.TextMessageBody$1 -> com.easemob.chat.TextMessageBody$1:
    com.easemob.chat.TextMessageBody createFromParcel(android.os.Parcel) -> createFromParcel
    com.easemob.chat.TextMessageBody[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.easemob.chat.VideoMessageBody -> com.easemob.chat.VideoMessageBody:
    int length -> length
    java.lang.String thumbnailUrl -> thumbnailUrl
    java.lang.String localThumb -> localThumb
    java.lang.String thumbnailSecret -> thumbnailSecret
    long file_length -> file_length
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getThumbnailUrl() -> getThumbnailUrl
    void setThumbnailUrl(java.lang.String) -> setThumbnailUrl
    long getVideoFileLength() -> getVideoFileLength
    void setVideoFileLength(long) -> setVideoFileLength
    void setLocalThumb(java.lang.String) -> setLocalThumb
    java.lang.String getLocalThumb() -> getLocalThumb
    int getLength() -> getLength
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void setThumbnailSecret(java.lang.String) -> setThumbnailSecret
    java.lang.String getThumbnailSecret() -> getThumbnailSecret
com.easemob.chat.VideoMessageBody$1 -> com.easemob.chat.VideoMessageBody$1:
    com.easemob.chat.VideoMessageBody[] newArray(int) -> newArray
    com.easemob.chat.VideoMessageBody createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.easemob.chat.VoiceMessageBody -> com.easemob.chat.VoiceMessageBody:
    int length -> length
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int getLength() -> getLength
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.easemob.chat.VoiceMessageBody$1 -> com.easemob.chat.VoiceMessageBody$1:
    com.easemob.chat.VoiceMessageBody createFromParcel(android.os.Parcel) -> createFromParcel
    com.easemob.chat.VoiceMessageBody[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.easemob.chat.a.a.a -> com.easemob.chat.a.a.a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String getChildElementXML() -> getChildElementXML
com.easemob.chat.a.a.b -> com.easemob.chat.a.a.b:
com.easemob.chat.core.HeartBeatReceiver -> com.easemob.chat.core.HeartBeatReceiver:
    java.lang.String TAG -> TAG
    long previousTime -> previousTime
    com.easemob.chat.core.f pingPacket -> pingPacket
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.easemob.chat.core.XmppConnectionManager -> com.easemob.chat.core.XmppConnectionManager:
    java.lang.String TAG -> TAG
    java.lang.String PERF -> PERF
    java.lang.String RESOURCE -> RESOURCE
    java.lang.String bareJid -> bareJid
    java.lang.String password -> password
    java.lang.String host -> host
    org.jivesoftware.smack.XMPPConnection connection -> connection
    com.easemob.chat.core.XmppConnectionManager$PingListener pingListener -> pingListener
    org.jivesoftware.smack.ConnectionConfiguration connectionConfig -> connectionConfig
    com.easemob.chat.core.XmppConnectionManager$XmppConnectionListener connectionListener -> connectionListener
    android.content.Context context -> context
    boolean isForcedDisconnect -> isForcedDisconnect
    org.jivesoftware.smack.ConnectionListener chatConnectionListener -> chatConnectionListener
    com.easemob.chat.core.XmppConnectionManager instance -> instance
    int XMPP_PORT -> XMPP_PORT
    int[] ports -> ports
    java.lang.String xmppResource -> xmppResource
    boolean isDone -> isDone
    boolean enableWakeLock -> enableWakeLock
    android.os.PowerManager$WakeLock wakeLock -> wakeLock
    java.lang.String LOCK -> LOCK
    int attempts -> attempts
    java.lang.Thread reconnectionThread -> reconnectionThread
    boolean autoreconnect -> autoreconnect
    com.easemob.chat.core.XmppConnectionManager getInstance() -> getInstance
    void resetInstance() -> resetInstance
    void initConnectionConfig() -> initConnectionConfig
    void setChatConnectionListener(org.jivesoftware.smack.ConnectionListener) -> setChatConnectionListener
    void connect() -> connect
    void initConnection() -> initConnection
    void login() -> login
    void setupConnection() -> setupConnection
    void reuse() -> reuse
    void connectSync(boolean) -> connectSync
    void reConnect() -> reConnect
    void reconnectSync() -> reconnectSync
    void reconnectASync() -> reconnectASync
    boolean disconnect() -> disconnect
    org.jivesoftware.smack.XMPPConnection getConnection() -> getConnection
    boolean isAuthentificated() -> isAuthentificated
    boolean isConnected() -> isConnected
    void initFeatures() -> initFeatures
    void discoverServerFeatures() -> discoverServerFeatures
    void configure(org.jivesoftware.smack.provider.ProviderManager) -> configure
    void setAutoReconnect(boolean) -> setAutoReconnect
    boolean getAutoReconnect() -> getAutoReconnect
    void resetAttempts() -> resetAttempts
    int timeDelay() -> timeDelay
    void startReconnectionThread() -> startReconnectionThread
    void onDisconnected() -> onDisconnected
    java.lang.String getXmppResource(android.content.Context) -> getXmppResource
    void setBlackListActive() -> setBlackListActive
    java.lang.String access$0() -> access$0
    org.jivesoftware.smack.XMPPConnection access$1(com.easemob.chat.core.XmppConnectionManager) -> access$1
    void access$2(com.easemob.chat.core.XmppConnectionManager) -> access$2
    void access$3(com.easemob.chat.core.XmppConnectionManager) -> access$3
    android.content.Context access$4(com.easemob.chat.core.XmppConnectionManager) -> access$4
    int access$5(com.easemob.chat.core.XmppConnectionManager) -> access$5
    org.jivesoftware.smack.ConnectionListener access$6(com.easemob.chat.core.XmppConnectionManager) -> access$6
com.easemob.chat.core.XmppConnectionManager$1 -> com.easemob.chat.core.XmppConnectionManager$1:
    com.easemob.chat.core.XmppConnectionManager this$0 -> this$0
    void run() -> run
com.easemob.chat.core.XmppConnectionManager$2 -> com.easemob.chat.core.XmppConnectionManager$2:
    com.easemob.chat.core.XmppConnectionManager this$0 -> this$0
    void run() -> run
com.easemob.chat.core.XmppConnectionManager$PingListener -> com.easemob.chat.core.XmppConnectionManager$PingListener:
    com.easemob.chat.core.XmppConnectionManager this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
com.easemob.chat.core.XmppConnectionManager$XmppConnectionListener -> com.easemob.chat.core.XmppConnectionManager$XmppConnectionListener:
    com.easemob.chat.core.XmppConnectionManager this$0 -> this$0
    void connectionClosed() -> connectionClosed
    void connectionClosedOnError(java.lang.Exception) -> connectionClosedOnError
    void reconnectingIn(int) -> reconnectingIn
    void reconnectionFailed(java.lang.Exception) -> reconnectionFailed
    void reconnectionSuccessful() -> reconnectionSuccessful
com.easemob.chat.core.a -> com.easemob.chat.core.a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String toXML() -> toXML
com.easemob.chat.core.b -> com.easemob.chat.core.b:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    long f -> f
    com.easemob.chat.core.b g -> g
    com.easemob.chat.core.b a() -> a
    java.lang.String a(java.lang.String,java.lang.String) -> a
    java.lang.String b() -> b
    long c() -> c
    void d() -> d
com.easemob.chat.core.b$a -> com.easemob.chat.core.b$a:
    java.lang.String a -> a
    long b -> b
    java.lang.String a() -> a
    com.easemob.chat.core.b$a a(java.lang.String) -> a
    long b() -> b
    com.easemob.chat.core.b$a a(long) -> a
com.easemob.chat.core.c -> com.easemob.chat.core.c:
    java.lang.String d -> d
    java.lang.String a -> a
    int e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String b -> b
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String c -> c
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    java.lang.String w -> w
    java.lang.String x -> x
    java.lang.String y -> y
    java.lang.String z -> z
    java.lang.String A -> A
    java.lang.String B -> B
    java.lang.String C -> C
    java.lang.String D -> D
    java.lang.String E -> E
    java.lang.String F -> F
    java.lang.String G -> G
    java.lang.String H -> H
    java.lang.String I -> I
    java.lang.String J -> J
    java.lang.String K -> K
    java.lang.String L -> L
    java.lang.String M -> M
    com.easemob.chat.core.c N -> N
    java.lang.String O -> O
    android.content.Context P -> P
    void a(android.content.Context,java.lang.String) -> a
    com.easemob.chat.core.c a() -> a
    void b() -> b
    boolean a(com.easemob.chat.EMMessage) -> a
    void a(java.lang.String) -> a
    java.util.List c() -> c
    java.util.List d() -> d
    java.util.List b(java.lang.String) -> b
    java.util.List a(java.lang.String,java.lang.String,int) -> a
    java.util.List c(java.lang.String) -> c
    java.util.List b(java.lang.String,java.lang.String,int) -> b
    com.easemob.chat.EMMessage a(android.database.Cursor) -> a
    void d(java.lang.String) -> d
    void a(java.lang.String,boolean) -> a
    void b(java.lang.String,boolean) -> b
    void a(java.lang.String,android.content.ContentValues) -> a
    java.lang.String a(java.util.List) -> a
    void a(com.easemob.chat.EMGroup) -> a
    java.util.Map e() -> e
    com.easemob.chat.EMGroup e(java.lang.String) -> e
    com.easemob.chat.EMGroup b(android.database.Cursor) -> b
    void b(com.easemob.chat.EMGroup) -> b
    void f(java.lang.String) -> f
    void g(java.lang.String) -> g
    boolean b(com.easemob.chat.EMMessage) -> b
    int h(java.lang.String) -> h
    void a(java.lang.String,int) -> a
    void i(java.lang.String) -> i
    java.util.List f() -> f
    void a(java.lang.String,com.easemob.chat.core.b$a) -> a
    com.easemob.chat.core.b$a j(java.lang.String) -> j
    void a(java.lang.String,java.lang.String) -> a
    void k(java.lang.String) -> k
    java.util.List g() -> g
    java.lang.String h() -> h
com.easemob.chat.core.c$a -> com.easemob.chat.core.c$a:
    com.easemob.chat.core.c$a instance -> instance
    java.lang.String username -> username
    com.easemob.chat.core.c$a getInstance(android.content.Context,java.lang.String) -> getInstance
    void closeDB() -> closeDB
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.easemob.chat.core.d -> com.easemob.chat.core.d:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
com.easemob.chat.core.e -> com.easemob.chat.core.e:
    java.lang.String b -> b
    java.lang.String a -> a
    java.lang.String getChildElementXML() -> getChildElementXML
com.easemob.chat.core.f -> com.easemob.chat.core.f:
    java.lang.String toXML() -> toXML
com.easemob.chat.testConnectionCheck -> com.easemob.chat.testConnectionCheck:
    void testConnection() -> testConnection
com.easemob.chat.testConnectionCheck$1 -> com.easemob.chat.testConnectionCheck$1:
    com.easemob.chat.testConnectionCheck this$0 -> this$0
    void run() -> run
com.easemob.cloud.CloudFileManager -> com.easemob.cloud.CloudFileManager:
    java.util.Properties sessionContext -> sessionContext
    java.lang.String TAG -> TAG
    com.easemob.cloud.CloudFileManager instance -> instance
    boolean authorization() -> authorization
    java.lang.String getRemoteFileName(java.lang.String,java.lang.String) -> getRemoteFileName
    void uploadFileInBackground(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,com.easemob.cloud.CloudOperationCallback) -> uploadFileInBackground
    void downloadFile(java.lang.String,java.lang.String,java.lang.String,java.util.Map,com.easemob.cloud.CloudOperationCallback) -> downloadFile
    void deleteFileInBackground(java.lang.String,java.lang.String,java.lang.String,com.easemob.cloud.CloudOperationCallback) -> deleteFileInBackground
com.easemob.cloud.CloudFileMetaData -> com.easemob.cloud.CloudFileMetaData:
    java.lang.String name -> name
    java.lang.String lastModified -> lastModified
    java.lang.String size -> size
    java.lang.String path -> path
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getLastModified() -> getLastModified
    void setLastModified(java.lang.String) -> setLastModified
    java.lang.String getSize() -> getSize
    void setSize(java.lang.String) -> setSize
    java.lang.String toString() -> toString
com.easemob.cloud.CloudOperationCallback -> com.easemob.cloud.CloudOperationCallback:
    void onSuccess(java.lang.String) -> onSuccess
    void onError(java.lang.String) -> onError
    void onProgress(int) -> onProgress
com.easemob.cloud.CustomMultiPartEntity -> com.easemob.cloud.CustomMultiPartEntity:
    com.easemob.cloud.CustomMultiPartEntity$ProgressListener a -> a
    void writeTo(java.io.OutputStream) -> writeTo
com.easemob.cloud.CustomMultiPartEntity$CountingOutputStream -> com.easemob.cloud.CustomMultiPartEntity$CountingOutputStream:
    com.easemob.cloud.CustomMultiPartEntity$ProgressListener listener -> listener
    long transferred -> transferred
    void write(byte[],int,int) -> write
    void write(int) -> write
com.easemob.cloud.CustomMultiPartEntity$ProgressListener -> com.easemob.cloud.CustomMultiPartEntity$ProgressListener:
    void transferred(long) -> transferred
com.easemob.cloud.HttpClientConfig -> com.easemob.cloud.HttpClientConfig:
    java.lang.String EASEMOB_USERSERVER_DOMAIN_ID -> EASEMOB_USERSERVER_DOMAIN_ID
    java.lang.String EASEMOB_PLATFORM -> EASEMOB_PLATFORM
    java.lang.String getEaseMobUserServerDomainId() -> getEaseMobUserServerDomainId
    java.lang.String getDefaultUserAgent() -> getDefaultUserAgent
    org.apache.http.impl.client.DefaultHttpClient getDefaultHttpClient() -> getDefaultHttpClient
    java.lang.String getFileRemoteUrl(java.lang.String) -> getFileRemoteUrl
    java.lang.String getFileDirRemoteUrl() -> getFileDirRemoteUrl
    java.lang.String getBaseUrlByAppKey() -> getBaseUrlByAppKey
com.easemob.cloud.HttpClientManager -> com.easemob.cloud.HttpClientManager:
    java.lang.String Method_GET -> Method_GET
    java.lang.String Method_POST -> Method_POST
    java.lang.String Method_PUT -> Method_PUT
    java.lang.String Method_DELETE -> Method_DELETE
    java.lang.String sendHttpRequest(java.lang.String,java.util.Map,java.lang.String,java.lang.String) -> sendHttpRequest
com.easemob.cloud.HttpFileManager -> com.easemob.cloud.HttpFileManager:
    java.lang.String PERF -> PERF
    long MAX_ALLOWED_FILE_SIZE -> MAX_ALLOWED_FILE_SIZE
    long totalSize -> totalSize
    android.content.Context appContext -> appContext
    boolean tokenRetrieved -> tokenRetrieved
    boolean authorization() -> authorization
    boolean sendFiletoServerHttp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,com.easemob.cloud.CloudOperationCallback) -> sendFiletoServerHttp
    java.lang.String getMimeType(java.io.File) -> getMimeType
    void uploadFileInBackground(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,com.easemob.cloud.CloudOperationCallback) -> uploadFileInBackground
    void uploadFile(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,com.easemob.cloud.CloudOperationCallback) -> uploadFile
    void downloadFile(java.lang.String,java.lang.String,java.lang.String,java.util.Map,com.easemob.cloud.CloudOperationCallback) -> downloadFile
    void downloadFile(java.lang.String,java.lang.String,java.util.Map,com.easemob.cloud.CloudOperationCallback) -> downloadFile
    java.lang.String retryToGetToken() -> retryToGetToken
    void deleteFileInBackground(java.lang.String,java.lang.String,java.lang.String,com.easemob.cloud.CloudOperationCallback) -> deleteFileInBackground
    long access$000(com.easemob.cloud.HttpFileManager) -> access$000
    boolean access$100(com.easemob.cloud.HttpFileManager,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,com.easemob.cloud.CloudOperationCallback) -> access$100
    java.lang.String access$200(com.easemob.cloud.HttpFileManager) -> access$200
com.easemob.cloud.HttpFileManager$1 -> com.easemob.cloud.HttpFileManager$1:
    com.easemob.cloud.CloudOperationCallback a -> a
    com.easemob.cloud.HttpFileManager b -> b
    void transferred(long) -> transferred
com.easemob.cloud.HttpFileManager$2 -> com.easemob.cloud.HttpFileManager$2:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.util.Map e -> e
    com.easemob.cloud.CloudOperationCallback f -> f
    com.easemob.cloud.HttpFileManager g -> g
    void a() -> a
com.easemob.cloud.HttpFileManager$3 -> com.easemob.cloud.HttpFileManager$3:
    com.easemob.cloud.CloudOperationCallback a -> a
    java.util.Map b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    com.easemob.cloud.HttpFileManager e -> e
    void a() -> a
com.easemob.cloud.HttpFileManager$4 -> com.easemob.cloud.HttpFileManager$4:
    java.lang.String a -> a
    java.lang.String b -> b
    com.easemob.cloud.CloudOperationCallback c -> c
    com.easemob.cloud.HttpFileManager d -> d
    void a() -> a
com.easemob.cloud.MySSLSocketFactory -> com.easemob.cloud.MySSLSocketFactory:
    javax.net.ssl.SSLContext sslContext -> sslContext
    javax.net.ssl.TrustManager tm -> tm
    java.net.Socket createSocket() -> createSocket
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
com.easemob.cloud.MySSLSocketFactory$1 -> com.easemob.cloud.MySSLSocketFactory$1:
    com.easemob.cloud.MySSLSocketFactory this$0 -> this$0
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
com.easemob.debug.DebugHelper -> com.easemob.debug.DebugHelper:
    java.lang.String UUID -> UUID
    java.lang.String TOKEN_ENTITY -> TOKEN_ENTITY
    java.lang.String TAG -> TAG
    void uploadLog(android.content.Context,java.lang.String,com.easemob.EMCallBack) -> uploadLog
com.easemob.debug.DebugHelper$1 -> com.easemob.debug.DebugHelper$1:
    com.easemob.EMCallBack val$callback -> val$callback
    android.content.Context val$applicationContext -> val$applicationContext
    java.lang.String val$remoteServer -> val$remoteServer
    void run() -> run
com.easemob.debug.DebugHelper$1$1 -> com.easemob.debug.DebugHelper$1$1:
    com.easemob.debug.DebugHelper$1 this$1 -> this$1
    com.easemob.EMCallBack val$callback -> val$callback
    java.lang.String val$remoteServer -> val$remoteServer
    void onSuccess(java.lang.String) -> onSuccess
    void onError(java.lang.String) -> onError
    void onProgress(int) -> onProgress
com.easemob.exceptions.EMAuthenticationException -> com.easemob.exceptions.EMAuthenticationException:
    long serialVersionUID -> serialVersionUID
com.easemob.exceptions.EMDuplicateResourceException -> com.easemob.exceptions.EMDuplicateResourceException:
    long serialVersionUID -> serialVersionUID
com.easemob.exceptions.EMNetworkUnconnectedException -> com.easemob.exceptions.EMNetworkUnconnectedException:
    long serialVersionUID -> serialVersionUID
com.easemob.exceptions.EMNoActiveCallException -> com.easemob.exceptions.EMNoActiveCallException:
    long serialVersionUID -> serialVersionUID
com.easemob.exceptions.EMPermissionException -> com.easemob.exceptions.EMPermissionException:
    long serialVersionUID -> serialVersionUID
com.easemob.exceptions.EMResourceNotExistException -> com.easemob.exceptions.EMResourceNotExistException:
    long serialVersionUID -> serialVersionUID
com.easemob.exceptions.EMServiceNotReadyException -> com.easemob.exceptions.EMServiceNotReadyException:
    long serialVersionUID -> serialVersionUID
com.easemob.exceptions.EaseMobException -> com.easemob.exceptions.EaseMobException:
    int errorCode -> errorCode
    long serialVersionUID -> serialVersionUID
    int getErrorCode() -> getErrorCode
    void setErrorCode(int) -> setErrorCode
com.easemob.util.CryptoUtils -> com.easemob.util.CryptoUtils:
    javax.crypto.Cipher cipher -> cipher
    javax.crypto.Cipher decipher -> decipher
    int ALGORIGHM_DES -> ALGORIGHM_DES
    int ALGORIGHM_AES -> ALGORIGHM_AES
    byte[] keyBytes -> keyBytes
    java.lang.String key -> key
    java.lang.String HEXES -> HEXES
    void init(int) -> init
    void initDES() -> initDES
    void initAES() -> initAES
    java.lang.String encryptBase64String(java.lang.String) -> encryptBase64String
    java.lang.String decryptBase64String(java.lang.String) -> decryptBase64String
    byte[] encrypt(java.lang.String) -> encrypt
    byte[] encrypt(byte[]) -> encrypt
    byte[] decrypt(byte[]) -> decrypt
    java.lang.String getHex(byte[]) -> getHex
com.easemob.util.DateUtils -> com.easemob.util.DateUtils:
    long INTERVAL_IN_MILLISECONDS -> INTERVAL_IN_MILLISECONDS
    java.lang.String getTimestampString(java.util.Date) -> getTimestampString
    boolean isCloseEnough(long,long) -> isCloseEnough
    boolean isSameDay(long) -> isSameDay
    boolean isYesterday(long) -> isYesterday
    java.util.Date StringToDate(java.lang.String,java.lang.String) -> StringToDate
    java.lang.String toTime(int) -> toTime
    java.lang.String toTimeBySecond(int) -> toTimeBySecond
    com.easemob.util.TimeInfo getYesterdayStartAndEndTime() -> getYesterdayStartAndEndTime
    com.easemob.util.TimeInfo getTodayStartAndEndTime() -> getTodayStartAndEndTime
    com.easemob.util.TimeInfo getBeforeYesterdayStartAndEndTime() -> getBeforeYesterdayStartAndEndTime
    com.easemob.util.TimeInfo getCurrentMonthStartAndEndTime() -> getCurrentMonthStartAndEndTime
    com.easemob.util.TimeInfo getLastMonthStartAndEndTime() -> getLastMonthStartAndEndTime
    java.lang.String getTimestampStr() -> getTimestampStr
com.easemob.util.DensityUtil -> com.easemob.util.DensityUtil:
    int dip2px(android.content.Context,float) -> dip2px
    int px2dip(android.content.Context,float) -> px2dip
    int sp2px(android.content.Context,float) -> sp2px
    int px2sp(android.content.Context,float) -> px2sp
com.easemob.util.DeviceUuidFactory -> com.easemob.util.DeviceUuidFactory:
    java.lang.String PREFS_FILE -> PREFS_FILE
    java.lang.String PREFS_DEVICE_ID -> PREFS_DEVICE_ID
    java.util.UUID uuid -> uuid
    java.util.UUID generateDeviceUuid(android.content.Context) -> generateDeviceUuid
    java.util.UUID getDeviceUuid() -> getDeviceUuid
    boolean isEmpty(java.lang.Object) -> isEmpty
com.easemob.util.EMLog -> com.easemob.util.EMLog:
    boolean debugMode -> debugMode
    com.easemob.util.EMLog$ELogMode logMode -> logMode
    com.easemob.util.FileLogger fileLog -> fileLog
    void d(java.lang.String,java.lang.String) -> d
    void d(java.lang.String,java.lang.String,java.lang.Throwable) -> d
    void e(java.lang.String,java.lang.String) -> e
    void e(java.lang.String,java.lang.String,java.lang.Throwable) -> e
    void i(java.lang.String,java.lang.String) -> i
    void v(java.lang.String,java.lang.String) -> v
    void w(java.lang.String,java.lang.String) -> w
    void w(java.lang.String,java.lang.String,java.lang.Throwable) -> w
    void setLogMode(com.easemob.util.EMLog$ELogMode) -> setLogMode
    java.io.File getLogRoot() -> getLogRoot
    void freeLogFiles() -> freeLogFiles
com.easemob.util.EMLog$1 -> com.easemob.util.EMLog$1:
    int[] $SwitchMap$com$easemob$util$EMLog$ELogMode -> $SwitchMap$com$easemob$util$EMLog$ELogMode
com.easemob.util.EMLog$ELogMode -> com.easemob.util.EMLog$ELogMode:
    com.easemob.util.EMLog$ELogMode KLogConsoleOnly -> KLogConsoleOnly
    com.easemob.util.EMLog$ELogMode KLogFileOnly -> KLogFileOnly
    com.easemob.util.EMLog$ELogMode KLogConsoleFile -> KLogConsoleFile
    com.easemob.util.EMLog$ELogMode[] $VALUES -> $VALUES
    com.easemob.util.EMLog$ELogMode[] values() -> values
    com.easemob.util.EMLog$ELogMode valueOf(java.lang.String) -> valueOf
com.easemob.util.EasyUtils -> com.easemob.util.EasyUtils:
    java.util.Hashtable resourceTable -> resourceTable
    boolean isAppRunningForeground(android.content.Context) -> isAppRunningForeground
    java.lang.String getTopActivityName(android.content.Context) -> getTopActivityName
    java.lang.String getTimeStamp() -> getTimeStamp
    boolean writeToZipFile(byte[],java.lang.String) -> writeToZipFile
    java.lang.String getAppResourceString(android.content.Context,java.lang.String) -> getAppResourceString
    java.lang.String convertByteArrayToString(byte[]) -> convertByteArrayToString
com.easemob.util.FileLogger -> com.easemob.util.FileLogger:
    java.lang.String TAG -> TAG
    long MB -> MB
    long LOG_LIMIT -> LOG_LIMIT
    long FREE_SPACE_LIMIT -> FREE_SPACE_LIMIT
    long FREE_SPACE_TIMER -> FREE_SPACE_TIMER
    java.lang.String INFO_COLOR -> INFO_COLOR
    java.lang.String ERROR_COLOR -> ERROR_COLOR
    java.lang.String WARN_COLOR -> WARN_COLOR
    java.lang.String DEBUG_COLOR -> DEBUG_COLOR
    java.util.concurrent.ExecutorService singleThreadService -> singleThreadService
    java.io.File logRoot -> logRoot
    java.util.Timer timer -> timer
    boolean spaceAvailable -> spaceAvailable
    void d(java.lang.String,java.lang.String) -> d
    void e(java.lang.String,java.lang.String) -> e
    void i(java.lang.String,java.lang.String) -> i
    void w(java.lang.String,java.lang.String) -> w
    void v(java.lang.String,java.lang.String) -> v
    void startThreadService(java.lang.String,java.lang.String) -> startThreadService
    java.lang.Runnable getWriterRunnable(java.lang.String,java.lang.String) -> getWriterRunnable
    java.io.File getAvailableFile() -> getAvailableFile
    java.lang.String getLogFileName(int) -> getLogFileName
    java.io.File getLogFolder() -> getLogFolder
    void removeFolderBeforeDay(java.lang.String,int) -> removeFolderBeforeDay
    void removeOldFolders() -> removeOldFolders
    void deleteFile(java.io.File) -> deleteFile
    long getDirSize(java.io.File) -> getDirSize
    java.lang.String getSpecifiedDayBefore(java.lang.String,int) -> getSpecifiedDayBefore
    java.io.File getStorageDir() -> getStorageDir
    void getSortedFileListByName(java.util.List) -> getSortedFileListByName
    boolean spaceIsAlearting() -> spaceIsAlearting
    boolean logSizeAlearting() -> logSizeAlearting
    boolean freeSpace() -> freeSpace
    void freeLogFolder() -> freeLogFolder
    void freeOldFolders() -> freeOldFolders
    void freeOldFiles() -> freeOldFiles
    long getCurrentAvailabeSpace() -> getCurrentAvailabeSpace
    java.io.File getLogRoot() -> getLogRoot
    void checkAndFreeLogFiles() -> checkAndFreeLogFiles
    void startCleanUpTimer() -> startCleanUpTimer
    java.util.Timer access$000(com.easemob.util.FileLogger) -> access$000
    void access$100(com.easemob.util.FileLogger) -> access$100
    java.io.File access$200(com.easemob.util.FileLogger) -> access$200
    boolean access$302(com.easemob.util.FileLogger,boolean) -> access$302
    java.util.concurrent.ExecutorService access$400(com.easemob.util.FileLogger) -> access$400
com.easemob.util.FileLogger$1 -> com.easemob.util.FileLogger$1:
    java.lang.String val$msg -> val$msg
    java.lang.String val$color -> val$color
    com.easemob.util.FileLogger this$0 -> this$0
    void run() -> run
com.easemob.util.FileLogger$2 -> com.easemob.util.FileLogger$2:
    int compare(java.io.File,java.io.File) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.easemob.util.FileLogger$3 -> com.easemob.util.FileLogger$3:
    com.easemob.util.FileLogger this$0 -> this$0
    void run() -> run
com.easemob.util.FileLogger$3$1 -> com.easemob.util.FileLogger$3$1:
    com.easemob.util.FileLogger$3 this$1 -> this$1
    void run() -> run
com.easemob.util.FileUtils -> com.easemob.util.FileUtils:
    java.lang.String[] fileTypes -> fileTypes
    java.io.File[] loadFiles(java.io.File) -> loadFiles
    java.lang.String getMIMEType(java.io.File) -> getMIMEType
    java.lang.String getMIMEType(java.lang.String) -> getMIMEType
    void openFile(java.io.File,android.app.Activity) -> openFile
    void openFile(android.net.Uri,java.lang.String,android.app.Activity) -> openFile
    void saveObjectToFile(java.lang.Object,java.io.File) -> saveObjectToFile
    java.lang.Object readObjectFromFile(java.io.File) -> readObjectFromFile
com.easemob.util.FileUtils$MyComparator -> com.easemob.util.FileUtils$MyComparator:
    int compare(java.io.File,java.io.File) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.easemob.util.HanziToPinyin -> com.easemob.util.HanziToPinyin:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    char[] UNIHANS -> UNIHANS
    byte[][] PINYINS -> PINYINS
    java.lang.String FIRST_PINYIN_UNIHAN -> FIRST_PINYIN_UNIHAN
    java.lang.String LAST_PINYIN_UNIHAN -> LAST_PINYIN_UNIHAN
    java.text.Collator COLLATOR -> COLLATOR
    com.easemob.util.HanziToPinyin sInstance -> sInstance
    boolean mHasChinaCollator -> mHasChinaCollator
    com.easemob.util.HanziToPinyin getInstance() -> getInstance
    boolean doSelfValidation() -> doSelfValidation
    com.easemob.util.HanziToPinyin$Token getToken(char) -> getToken
    java.util.ArrayList get(java.lang.String) -> get
    void addToken(java.lang.StringBuilder,java.util.ArrayList,int) -> addToken
com.easemob.util.HanziToPinyin$Token -> com.easemob.util.HanziToPinyin$Token:
    java.lang.String SEPARATOR -> SEPARATOR
    int LATIN -> LATIN
    int PINYIN -> PINYIN
    int UNKNOWN -> UNKNOWN
    int type -> type
    java.lang.String source -> source
    java.lang.String target -> target
com.easemob.util.ImageUtils -> com.easemob.util.ImageUtils:
    int SCALE_IMAGE_WIDTH -> SCALE_IMAGE_WIDTH
    int SCALE_IMAGE_HEIGHT -> SCALE_IMAGE_HEIGHT
    android.graphics.Bitmap getRoundedCornerBitmap(android.graphics.Bitmap) -> getRoundedCornerBitmap
    android.graphics.Bitmap getRoundedCornerBitmap(android.graphics.Bitmap,float) -> getRoundedCornerBitmap
    android.graphics.Bitmap getVideoThumbnail(java.lang.String,int,int,int) -> getVideoThumbnail
    java.lang.String saveVideoThumb(java.io.File,int,int,int) -> saveVideoThumb
    android.graphics.Bitmap decodeScaleImage(java.lang.String,int,int) -> decodeScaleImage
    android.graphics.Bitmap decodeScaleImage(android.content.Context,int,int,int) -> decodeScaleImage
    int calculateInSampleSize(android.graphics.BitmapFactory$Options,int,int) -> calculateInSampleSize
    java.lang.String getThumbnailImage(java.lang.String,int) -> getThumbnailImage
    java.lang.String getScaledImage(android.content.Context,java.lang.String) -> getScaledImage
    java.lang.String getScaledImage(android.content.Context,java.lang.String,int) -> getScaledImage
    android.graphics.Bitmap mergeImages(int,int,java.util.List) -> mergeImages
    int readPictureDegree(java.lang.String) -> readPictureDegree
    android.graphics.Bitmap rotaingImageView(int,android.graphics.Bitmap) -> rotaingImageView
    android.graphics.BitmapFactory$Options getBitmapOptions(java.lang.String) -> getBitmapOptions
com.easemob.util.LatLng -> com.easemob.util.LatLng:
    double latitude -> latitude
    double longitude -> longitude
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.easemob.util.NetUtils -> com.easemob.util.NetUtils:
    java.lang.String TAG -> TAG
    int LOW_SPEED_UPLOAD_BUF_SIZE -> LOW_SPEED_UPLOAD_BUF_SIZE
    int HIGH_SPEED_UPLOAD_BUF_SIZE -> HIGH_SPEED_UPLOAD_BUF_SIZE
    int MAX_SPEED_UPLOAD_BUF_SIZE -> MAX_SPEED_UPLOAD_BUF_SIZE
    int LOW_SPEED_DOWNLOAD_BUF_SIZE -> LOW_SPEED_DOWNLOAD_BUF_SIZE
    int HIGH_SPEED_DOWNLOAD_BUF_SIZE -> HIGH_SPEED_DOWNLOAD_BUF_SIZE
    int MAX_SPEED_DOWNLOAD_BUF_SIZE -> MAX_SPEED_DOWNLOAD_BUF_SIZE
    boolean hasNetwork(android.content.Context) -> hasNetwork
    boolean hasDataConnection(android.content.Context) -> hasDataConnection
    boolean isWifiConnection(android.content.Context) -> isWifiConnection
    int getUploadBufSize(android.content.Context) -> getUploadBufSize
    int getDownloadBufSize(android.content.Context) -> getDownloadBufSize
    boolean isConnectionFast(int,int) -> isConnectionFast
com.easemob.util.PathUtil -> com.easemob.util.PathUtil:
    java.lang.String pathPrefix -> pathPrefix
    java.lang.String historyPathName -> historyPathName
    java.lang.String imagePathName -> imagePathName
    java.lang.String voicePathName -> voicePathName
    java.lang.String filePathName -> filePathName
    java.lang.String videoPathName -> videoPathName
    java.lang.String netdiskDownloadPathName -> netdiskDownloadPathName
    java.lang.String meetingPathName -> meetingPathName
    java.io.File storageDir -> storageDir
    com.easemob.util.PathUtil instance -> instance
    java.io.File voicePath -> voicePath
    java.io.File imagePath -> imagePath
    java.io.File historyPath -> historyPath
    java.io.File videoPath -> videoPath
    java.io.File filePath -> filePath
    com.easemob.util.PathUtil getInstance() -> getInstance
    void initDirs(java.lang.String,java.lang.String,android.content.Context) -> initDirs
    java.io.File getImagePath() -> getImagePath
    java.io.File getVoicePath() -> getVoicePath
    java.io.File getFilePath() -> getFilePath
    java.io.File getVideoPath() -> getVideoPath
    java.io.File getHistoryPath() -> getHistoryPath
    java.io.File getStorageDir(android.content.Context) -> getStorageDir
    java.io.File generateImagePath(java.lang.String,java.lang.String,android.content.Context) -> generateImagePath
    java.io.File generateVoicePath(java.lang.String,java.lang.String,android.content.Context) -> generateVoicePath
    java.io.File generateFiePath(java.lang.String,java.lang.String,android.content.Context) -> generateFiePath
    java.io.File generateVideoPath(java.lang.String,java.lang.String,android.content.Context) -> generateVideoPath
    java.io.File generateHistoryPath(java.lang.String,java.lang.String,android.content.Context) -> generateHistoryPath
    java.io.File generateMessagePath(java.lang.String,java.lang.String,android.content.Context) -> generateMessagePath
    java.io.File getTempPath(java.io.File) -> getTempPath
com.easemob.util.PerfUtils -> com.easemob.util.PerfUtils:
    int getTimeSpendSecond(long) -> getTimeSpendSecond
    int getSpeed(long,long) -> getSpeed
com.easemob.util.TextFormater -> com.easemob.util.TextFormater:
    int GB_SP_DIFF -> GB_SP_DIFF
    int[] secPosvalueList -> secPosvalueList
    char[] firstLetter -> firstLetter
    java.lang.String getDataSize(long) -> getDataSize
    java.lang.String getKBDataSize(long) -> getKBDataSize
    java.lang.String formatStr(android.content.Context,int,java.lang.String) -> formatStr
    java.lang.String getFirstLetter(java.lang.String) -> getFirstLetter
    char convert(byte[]) -> convert
com.easemob.util.TimeInfo -> com.easemob.util.TimeInfo:
    long startTime -> startTime
    long endTime -> endTime
    long getStartTime() -> getStartTime
    void setStartTime(long) -> setStartTime
    long getEndTime() -> getEndTime
    void setEndTime(long) -> setEndTime
com.easemob.util.VoiceRecorder -> com.easemob.util.VoiceRecorder:
    android.media.MediaRecorder recorder -> recorder
    java.lang.String PREFIX -> PREFIX
    java.lang.String EXTENSION -> EXTENSION
    boolean isRecording -> isRecording
    long startTime -> startTime
    java.lang.String voiceFilePath -> voiceFilePath
    java.lang.String voiceFileName -> voiceFileName
    java.io.File file -> file
    android.os.Handler handler -> handler
    java.lang.String startRecording(java.lang.String,java.lang.String,android.content.Context) -> startRecording
    void discardRecording() -> discardRecording
    int stopRecoding() -> stopRecoding
    void finalize() -> finalize
    java.lang.String getVoiceFileName(java.lang.String) -> getVoiceFileName
    boolean isRecording() -> isRecording
    java.lang.String getVoiceFilePath() -> getVoiceFilePath
    boolean access$000(com.easemob.util.VoiceRecorder) -> access$000
    android.os.Handler access$100(com.easemob.util.VoiceRecorder) -> access$100
com.easemob.util.VoiceRecorder$1 -> com.easemob.util.VoiceRecorder$1:
    com.easemob.util.VoiceRecorder this$0 -> this$0
    void run() -> run
com.easemob.util.ZipUtils -> com.easemob.util.ZipUtils:
    int BUFF_SIZE -> BUFF_SIZE
    void zip(java.io.File,java.io.File) -> zip
    void zipFiles(java.io.File,java.util.zip.ZipOutputStream,java.lang.String) -> zipFiles
    void zipFile(java.io.File,java.util.zip.ZipOutputStream,java.lang.String) -> zipFile
com.feytuo.chat.activity.AddContactActivity -> com.feytuo.chat.activity.AddContactActivity:
    android.widget.EditText editText -> a
    android.widget.Button searchBtn -> b
    android.widget.ListView addContactListView -> c
    com.feytuo.chat.adapter.AddContactAdapter adapter -> d
    java.util.List listData -> e
    void onCreate(android.os.Bundle) -> onCreate
    void searchContact(android.view.View) -> searchContact
    void isUserExistInBmob(java.lang.String) -> a
    void back(android.view.View) -> back
    void onResume() -> onResume
    void onPause() -> onPause
    java.util.List access$0(com.feytuo.chat.activity.AddContactActivity) -> a
    com.feytuo.chat.adapter.AddContactAdapter access$1(com.feytuo.chat.activity.AddContactActivity) -> b
com.feytuo.chat.activity.AddContactActivity$1 -> com.feytuo.chat.activity.a:
    com.feytuo.chat.activity.AddContactActivity this$0 -> a
    void onSuccess(java.util.List) -> onSuccess
    void onError(int,java.lang.String) -> onError
com.feytuo.chat.activity.AlertDialog -> com.feytuo.chat.activity.AlertDialog:
    android.widget.TextView mTextView -> a
    android.widget.Button mButton -> b
    int position -> c
    android.widget.ImageView imageView -> d
    android.widget.EditText editText -> e
    boolean isEditextShow -> f
    void onCreate(android.os.Bundle) -> onCreate
    void ok(android.view.View) -> ok
    void cancel(android.view.View) -> cancel
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
com.feytuo.chat.activity.BaiduMapActivity -> com.feytuo.chat.activity.BaiduMapActivity:
    com.baidu.mapapi.map.MapView mMapView -> a
    com.baidu.mapapi.map.MapController mMapController -> o
    com.baidu.mapapi.map.MKMapViewListener mMapListener -> b
    android.widget.FrameLayout mMapViewContainer -> c
    com.baidu.location.LocationClient mLocClient -> d
    com.feytuo.chat.activity.BaiduMapActivity$MyLocationListenner myListener -> e
    com.feytuo.chat.activity.BaiduMapActivity$NotifyLister mNotifyer -> f
    android.widget.Button sendButton -> g
    android.widget.EditText indexText -> h
    int index -> i
    com.baidu.location.BDLocation lastLocation -> j
    com.feytuo.chat.activity.BaiduMapActivity instance -> k
    android.app.ProgressDialog progressDialog -> l
    com.baidu.mapapi.map.ItemizedOverlay mAddrOverlay -> m
    com.baidu.mapapi.BMapManager mBMapManager -> n
    void onCreate(android.os.Bundle) -> onCreate
    void showMap(double,double,java.lang.String) -> a
    void showMapWithLocationClient() -> a
    void onPause() -> onPause
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    void initMapView() -> b
    void back(android.view.View) -> back
    void sendLocation(android.view.View) -> sendLocation
    void initEngineManager(android.content.Context) -> a
    com.baidu.mapapi.map.MapController access$0(com.feytuo.chat.activity.BaiduMapActivity) -> a
com.feytuo.chat.activity.BaiduMapActivity$1 -> com.feytuo.chat.activity.b:
    com.feytuo.chat.activity.BaiduMapActivity this$0 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.feytuo.chat.activity.BaiduMapActivity$2 -> com.feytuo.chat.activity.c:
    com.feytuo.chat.activity.BaiduMapActivity this$0 -> a
    void onMapMoveFinish() -> onMapMoveFinish
    void onClickMapPoi(com.baidu.mapapi.map.MapPoi) -> onClickMapPoi
    void onGetCurrentMap(android.graphics.Bitmap) -> onGetCurrentMap
    void onMapAnimationFinish() -> onMapAnimationFinish
com.feytuo.chat.activity.BaiduMapActivity$MyGeneralListener -> com.feytuo.chat.activity.d:
    com.feytuo.chat.activity.BaiduMapActivity this$0 -> a
    void onGetNetworkState(int) -> onGetNetworkState
    void onGetPermissionState(int) -> onGetPermissionState
com.feytuo.chat.activity.BaiduMapActivity$MyLocationListenner -> com.feytuo.chat.activity.e:
    com.feytuo.chat.activity.BaiduMapActivity this$0 -> a
    void onReceiveLocation(com.baidu.location.BDLocation) -> onReceiveLocation
com.feytuo.chat.activity.BaiduMapActivity$NotifyLister -> com.feytuo.chat.activity.f:
    void onNotify(com.baidu.location.BDLocation,float) -> onNotify
com.feytuo.chat.activity.BaseActivity -> com.feytuo.chat.activity.BaseActivity:
    void onResume() -> onResume
com.feytuo.chat.activity.BlacklistActivity -> com.feytuo.chat.activity.BlacklistActivity:
    android.widget.ListView listView -> a
    com.feytuo.chat.activity.BlacklistActivity$BlacklistAdapater adapter -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void removeOutBlacklist(java.lang.String) -> a
    void back(android.view.View) -> back
com.feytuo.chat.activity.BlacklistActivity$1 -> com.feytuo.chat.activity.g:
    com.feytuo.chat.activity.BlacklistActivity this$0 -> a
    void run() -> run
com.feytuo.chat.activity.BlacklistActivity$BlacklistAdapater -> com.feytuo.chat.activity.h:
    com.feytuo.laoxianghao.dao.LXHUserDao userDao -> b
    com.feytuo.laoxianghao.util.ImageLoader mImageLoader -> c
    com.feytuo.chat.activity.BlacklistActivity this$0 -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setUserInfo(java.lang.String,android.widget.TextView,android.widget.ImageView) -> a
    void setUserInfoFromBmob(java.lang.String,android.widget.TextView,android.widget.ImageView) -> b
    com.feytuo.laoxianghao.util.ImageLoader access$0(com.feytuo.chat.activity.BlacklistActivity$BlacklistAdapater) -> a
    com.feytuo.laoxianghao.dao.LXHUserDao access$1(com.feytuo.chat.activity.BlacklistActivity$BlacklistAdapater) -> b
com.feytuo.chat.activity.BlacklistActivity$BlacklistAdapater$1 -> com.feytuo.chat.activity.i:
    com.feytuo.chat.activity.BlacklistActivity$BlacklistAdapater this$1 -> a
    android.widget.TextView val$nameTV -> b
    android.widget.ImageView val$personHeadImg -> c
    void onSuccess(java.util.List) -> onSuccess
    void onError(int,java.lang.String) -> onError
com.feytuo.chat.activity.BlacklistActivity$BlacklistAdapater$ViewHolder -> com.feytuo.chat.activity.j:
    android.widget.ImageView avatarImageView -> b
    android.widget.TextView nickTextView -> c
    com.feytuo.chat.activity.BlacklistActivity$BlacklistAdapater this$1 -> a
    void access$0(com.feytuo.chat.activity.BlacklistActivity$BlacklistAdapater$ViewHolder,android.widget.ImageView) -> a
    void access$1(com.feytuo.chat.activity.BlacklistActivity$BlacklistAdapater$ViewHolder,android.widget.TextView) -> a
    android.widget.TextView access$2(com.feytuo.chat.activity.BlacklistActivity$BlacklistAdapater$ViewHolder) -> a
    android.widget.ImageView access$3(com.feytuo.chat.activity.BlacklistActivity$BlacklistAdapater$ViewHolder) -> b
com.feytuo.chat.activity.ChatActivity -> com.feytuo.chat.activity.ChatActivity:
    android.view.View recordingContainer -> d
    android.widget.ImageView micImage -> e
    android.widget.TextView recordingHint -> f
    android.widget.ListView listView -> g
    com.feytuo.chat.widget.PasteEditText mEditTextContent -> h
    android.view.View buttonSetModeKeyboard -> i
    android.view.View buttonSetModeVoice -> j
    android.view.View buttonSend -> k
    android.view.View buttonPressToSpeak -> l
    android.support.v4.view.ViewPager expressionViewpager -> m
    android.widget.LinearLayout expressionContainer -> n
    android.widget.LinearLayout btnContainer -> o
    android.widget.ImageView locationImgview -> p
    android.view.View more -> q
    android.text.ClipboardManager clipboard -> r
    android.view.inputmethod.InputMethodManager manager -> s
    java.util.List reslist -> t
    android.graphics.drawable.Drawable[] micImages -> u
    int chatType -> v
    com.easemob.chat.EMConversation conversation -> w
    com.feytuo.chat.activity.ChatActivity$NewMessageBroadcastReceiver receiver -> x
    com.feytuo.chat.activity.ChatActivity activityInstance -> a
    java.lang.String toChatUsername -> y
    com.easemob.util.VoiceRecorder voiceRecorder -> z
    com.feytuo.chat.adapter.MessageAdapter adapter -> A
    java.io.File cameraFile -> B
    int resendPos -> b
    com.feytuo.chat.activity.ChatActivity$GroupListener groupListener -> C
    android.widget.ImageView iv_emoticons_normal -> D
    android.widget.ImageView iv_emoticons_checked -> E
    android.widget.RelativeLayout edittext_layout -> F
    android.widget.ProgressBar loadmorePB -> G
    boolean isloading -> H
    int pagesize -> I
    boolean haveMoreData -> J
    android.widget.Button btnMore -> K
    java.lang.String playMsgId -> c
    android.os.Handler micImageHandler -> L
    com.easemob.chat.EMGroup group -> M
    com.feytuo.laoxianghao.view.OnloadDialog pd -> N
    android.content.BroadcastReceiver ackMessageReceiver -> O
    android.content.BroadcastReceiver deliveryAckMessageReceiver -> P
    android.os.PowerManager$WakeLock wakeLock -> Q
    int[] $SWITCH_TABLE$com$easemob$chat$EMMessage$Type -> R
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void setUpView() -> e
    void setTitleName(java.lang.String,android.widget.TextView) -> a
    void forwardMessage(java.lang.String) -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onClick(android.view.View) -> onClick
    void selectPicFromCamera() -> b
    void selectFileFromLocal() -> f
    void selectPicFromLocal() -> c
    void sendText(java.lang.String) -> b
    void sendVoice(java.lang.String,java.lang.String,java.lang.String,boolean) -> a
    void sendPicture(java.lang.String) -> c
    void sendVideo(java.lang.String,java.lang.String,int) -> a
    void sendPicByUri(android.net.Uri) -> a
    void sendLocationMsg(double,double,java.lang.String,java.lang.String) -> a
    void sendFile(android.net.Uri) -> b
    void resendMessage() -> g
    void setModeVoice(android.view.View) -> setModeVoice
    void setModeKeyboard(android.view.View) -> setModeKeyboard
    void emptyHistory(android.view.View) -> emptyHistory
    void addFriend(android.view.View) -> addFriend
    void addContact() -> addContact
    void addToLocalDB(java.lang.String,java.lang.String,java.lang.String) -> a
    void setUserHead(com.feytuo.chat.domain.User) -> a
    void toGroupDetails(android.view.View) -> toGroupDetails
    void more(android.view.View) -> more
    void editClick(android.view.View) -> editClick
    android.view.View getGridChildView(int) -> b
    java.util.List getExpressionRes(int) -> a
    void onDestroy() -> onDestroy
    void onResume() -> onResume
    void onPause() -> onPause
    void hideKeyboard() -> h
    void addUserToBlacklist(java.lang.String) -> d
    void back(android.view.View) -> back
    void onBackPressed() -> onBackPressed
    void onNewIntent(android.content.Intent) -> onNewIntent
    android.widget.ImageView access$0(com.feytuo.chat.activity.ChatActivity) -> a
    android.graphics.drawable.Drawable[] access$1(com.feytuo.chat.activity.ChatActivity) -> b
    com.feytuo.chat.adapter.MessageAdapter access$2(com.feytuo.chat.activity.ChatActivity) -> c
    java.lang.String access$3(com.feytuo.chat.activity.ChatActivity) -> d
    android.widget.ListView access$4(com.feytuo.chat.activity.ChatActivity) -> e
    android.os.PowerManager$WakeLock access$5(com.feytuo.chat.activity.ChatActivity) -> f
    android.view.View access$6(com.feytuo.chat.activity.ChatActivity) -> g
    android.widget.TextView access$7(com.feytuo.chat.activity.ChatActivity) -> h
    com.easemob.util.VoiceRecorder access$8(com.feytuo.chat.activity.ChatActivity) -> i
    void access$9(com.feytuo.chat.activity.ChatActivity,java.lang.String,java.lang.String,java.lang.String,boolean) -> a
    boolean access$10(com.feytuo.chat.activity.ChatActivity) -> j
    boolean access$11(com.feytuo.chat.activity.ChatActivity) -> k
    android.widget.ProgressBar access$12(com.feytuo.chat.activity.ChatActivity) -> l
    int access$13(com.feytuo.chat.activity.ChatActivity) -> m
    com.easemob.chat.EMConversation access$14(com.feytuo.chat.activity.ChatActivity) -> n
    void access$15(com.feytuo.chat.activity.ChatActivity,boolean) -> a
    void access$16(com.feytuo.chat.activity.ChatActivity,boolean) -> b
    android.widget.RelativeLayout access$17(com.feytuo.chat.activity.ChatActivity) -> o
    android.view.View access$18(com.feytuo.chat.activity.ChatActivity) -> p
    android.widget.ImageView access$19(com.feytuo.chat.activity.ChatActivity) -> q
    android.widget.ImageView access$20(com.feytuo.chat.activity.ChatActivity) -> r
    android.widget.LinearLayout access$21(com.feytuo.chat.activity.ChatActivity) -> s
    android.widget.LinearLayout access$22(com.feytuo.chat.activity.ChatActivity) -> t
    android.widget.Button access$23(com.feytuo.chat.activity.ChatActivity) -> u
    android.view.View access$24(com.feytuo.chat.activity.ChatActivity) -> v
    void access$25(com.feytuo.chat.activity.ChatActivity) -> w
    int[] $SWITCH_TABLE$com$easemob$chat$EMMessage$Type() -> d
    void access$27(com.feytuo.chat.activity.ChatActivity,java.lang.String,java.lang.String,java.lang.String) -> a
    com.feytuo.laoxianghao.view.OnloadDialog access$28(com.feytuo.chat.activity.ChatActivity) -> x
    android.view.View access$29(com.feytuo.chat.activity.ChatActivity) -> y
    com.feytuo.chat.widget.PasteEditText access$30(com.feytuo.chat.activity.ChatActivity) -> z
com.feytuo.chat.activity.ChatActivity$1 -> com.feytuo.chat.activity.k:
    com.feytuo.chat.activity.ChatActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.feytuo.chat.activity.ChatActivity$10 -> com.feytuo.chat.activity.l:
    com.feytuo.chat.activity.ChatActivity this$0 -> a
    com.feytuo.chat.adapter.ExpressionAdapter val$expressionAdapter -> b
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.feytuo.chat.activity.ChatActivity$2 -> com.feytuo.chat.activity.m:
    com.feytuo.chat.activity.ChatActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.feytuo.chat.activity.ChatActivity$3 -> com.feytuo.chat.activity.n:
    com.feytuo.chat.activity.ChatActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.feytuo.chat.activity.ChatActivity$4 -> com.feytuo.chat.activity.o:
    com.feytuo.chat.activity.ChatActivity this$0 -> a
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.feytuo.chat.activity.ChatActivity$5 -> com.feytuo.chat.activity.p:
    com.feytuo.chat.activity.ChatActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.feytuo.chat.activity.ChatActivity$6 -> com.feytuo.chat.activity.q:
    com.feytuo.chat.activity.ChatActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.feytuo.chat.activity.ChatActivity$7 -> com.feytuo.chat.activity.r:
    com.feytuo.chat.activity.ChatActivity this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.feytuo.chat.activity.ChatActivity$8 -> com.feytuo.chat.activity.s:
    com.feytuo.chat.activity.ChatActivity this$0 -> a
    android.widget.TextView val$nickNameTV -> b
    java.lang.String val$userName -> c
    void onSuccess(java.util.List) -> onSuccess
    void onError(int,java.lang.String) -> onError
com.feytuo.chat.activity.ChatActivity$9 -> com.feytuo.chat.activity.t:
    com.feytuo.chat.activity.ChatActivity this$0 -> a
    void onSuccess(com.feytuo.laoxianghao.domain.LXHUser) -> a
    void onFailure(int,java.lang.String) -> onFailure
    void onSuccess(java.lang.Object) -> onSuccess
    com.feytuo.chat.activity.ChatActivity access$1(com.feytuo.chat.activity.ChatActivity$9) -> a
com.feytuo.chat.activity.ChatActivity$9$1 -> com.feytuo.chat.activity.u:
    com.feytuo.chat.activity.ChatActivity$9 this$1 -> a
    com.feytuo.laoxianghao.domain.LXHUser val$arg0 -> b
    void run() -> run
    com.feytuo.chat.activity.ChatActivity$9 access$0(com.feytuo.chat.activity.ChatActivity$9$1) -> a
com.feytuo.chat.activity.ChatActivity$9$1$1 -> com.feytuo.chat.activity.v:
    com.feytuo.chat.activity.ChatActivity$9$1 this$2 -> a
    com.feytuo.laoxianghao.domain.LXHUser val$arg0 -> b
    void run() -> run
com.feytuo.chat.activity.ChatActivity$9$1$2 -> com.feytuo.chat.activity.w:
    com.feytuo.chat.activity.ChatActivity$9$1 this$2 -> a
    java.lang.Exception val$e -> b
    void run() -> run
com.feytuo.chat.activity.ChatActivity$GroupListener -> com.feytuo.chat.activity.x:
    com.feytuo.chat.activity.ChatActivity this$0 -> a
    void onUserRemoved(java.lang.String,java.lang.String) -> onUserRemoved
    void onGroupDestroy(java.lang.String,java.lang.String) -> onGroupDestroy
    com.feytuo.chat.activity.ChatActivity access$0(com.feytuo.chat.activity.ChatActivity$GroupListener) -> a
com.feytuo.chat.activity.ChatActivity$GroupListener$1 -> com.feytuo.chat.activity.y:
    com.feytuo.chat.activity.ChatActivity$GroupListener this$1 -> a
    java.lang.String val$groupId -> b
    void run() -> run
com.feytuo.chat.activity.ChatActivity$GroupListener$2 -> com.feytuo.chat.activity.z:
    com.feytuo.chat.activity.ChatActivity$GroupListener this$1 -> a
    java.lang.String val$groupId -> b
    void run() -> run
com.feytuo.chat.activity.ChatActivity$ListScrollListener -> com.feytuo.chat.activity.aa:
    com.feytuo.chat.activity.ChatActivity this$0 -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.feytuo.chat.activity.ChatActivity$NewMessageBroadcastReceiver -> com.feytuo.chat.activity.ab:
    com.feytuo.chat.activity.ChatActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.feytuo.chat.activity.ChatActivity$PressToSpeakListen -> com.feytuo.chat.activity.ac:
    com.feytuo.chat.activity.ChatActivity this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.feytuo.chat.activity.ChatAllHistoryFragment -> com.feytuo.chat.activity.ChatAllHistoryFragment:
    android.view.inputmethod.InputMethodManager inputMethodManager -> c
    android.widget.ListView listView -> d
    com.feytuo.chat.adapter.ChatAllHistoryAdapter adapter -> e
    android.widget.ImageView noChatImageView -> f
    android.widget.RelativeLayout errorItem -> a
    android.widget.TextView errorText -> b
    boolean hidden -> g
    java.util.List groups -> h
    boolean isInitialized -> i
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void initView() -> c
    void setNoChatBackGround() -> d
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void refresh() -> a
    java.util.List loadConversationsWithRecentChat() -> e
    void sortConversationByLastChatTime(java.util.List) -> a
    void onHiddenChanged(boolean) -> onHiddenChanged
    void onResume() -> onResume
    boolean isInitialized() -> b
    com.feytuo.chat.adapter.ChatAllHistoryAdapter access$0(com.feytuo.chat.activity.ChatAllHistoryFragment) -> a
    void access$1(com.feytuo.chat.activity.ChatAllHistoryFragment,java.util.List) -> a
    java.util.List access$2(com.feytuo.chat.activity.ChatAllHistoryFragment) -> b
    android.view.inputmethod.InputMethodManager access$3(com.feytuo.chat.activity.ChatAllHistoryFragment) -> c
com.feytuo.chat.activity.ChatAllHistoryFragment$1 -> com.feytuo.chat.activity.ad:
    com.feytuo.chat.activity.ChatAllHistoryFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.feytuo.chat.activity.ChatAllHistoryFragment$2 -> com.feytuo.chat.activity.ae:
    com.feytuo.chat.activity.ChatAllHistoryFragment this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.feytuo.chat.activity.ChatAllHistoryFragment$3 -> com.feytuo.chat.activity.af:
    com.feytuo.chat.activity.ChatAllHistoryFragment this$0 -> a
    int compare(com.easemob.chat.EMConversation,com.easemob.chat.EMConversation) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.feytuo.chat.activity.ChatAndContactFragment -> com.feytuo.chat.activity.ChatAndContactFragment:
    java.lang.String TAG -> a
    android.support.v4.app.Fragment[] fragments -> b
    com.feytuo.chat.activity.ContactlistFragment contactListFragment -> c
    com.feytuo.chat.activity.ChatAllHistoryFragment chatHistoryFragment -> d
    android.support.v4.view.ViewPager viewPager -> e
    android.widget.ImageView cursorImage -> f
    android.widget.Button addContactView -> g
    android.widget.Button btnConversation -> h
    android.widget.Button btnAddressList -> i
    android.widget.RelativeLayout cursorConversationBtn -> j
    android.widget.RelativeLayout cursorFriendBtn -> k
    android.widget.TextView unreadLabel -> l
    android.widget.TextView unreadAddressLable -> m
    int cursorOffset -> n
    int currentOffset -> o
    int currentTabInCAC -> p
    android.view.View$OnClickListener listener -> q
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onStop() -> onStop
    void initViewPager(android.view.View) -> a
    void initView(android.view.View) -> b
    void leftcolor() -> e
    void rightcolor() -> f
    void initCursor(android.view.View) -> c
    void setCursor(int,int) -> a
    com.feytuo.chat.activity.ChatAllHistoryFragment getChatHistoryFragment() -> a
    com.feytuo.chat.activity.ContactlistFragment getContactListFragment() -> b
    android.widget.TextView getUnreadLabel() -> c
    android.widget.TextView getUnreadAddressLable() -> d
    void onResume() -> onResume
    void onPause() -> onPause
    void access$0(com.feytuo.chat.activity.ChatAndContactFragment) -> a
    android.support.v4.view.ViewPager access$1(com.feytuo.chat.activity.ChatAndContactFragment) -> b
    void access$2(com.feytuo.chat.activity.ChatAndContactFragment,int,int) -> a
    void access$3(com.feytuo.chat.activity.ChatAndContactFragment,int) -> a
    void access$4(com.feytuo.chat.activity.ChatAndContactFragment) -> c
    android.support.v4.app.Fragment[] access$5(com.feytuo.chat.activity.ChatAndContactFragment) -> d
    int access$6(com.feytuo.chat.activity.ChatAndContactFragment) -> e
    void access$7(com.feytuo.chat.activity.ChatAndContactFragment,int) -> b
    android.widget.ImageView access$8(com.feytuo.chat.activity.ChatAndContactFragment) -> f
    int access$9(com.feytuo.chat.activity.ChatAndContactFragment) -> g
com.feytuo.chat.activity.ChatAndContactFragment$1 -> com.feytuo.chat.activity.ag:
    com.feytuo.chat.activity.ChatAndContactFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.feytuo.chat.activity.ChatAndContactFragment$2 -> com.feytuo.chat.activity.ah:
    int currentPager -> b
    com.feytuo.chat.activity.ChatAndContactFragment this$0 -> a
    void onPageSelected(int) -> onPageSelected
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    com.feytuo.chat.activity.ChatAndContactFragment access$0(com.feytuo.chat.activity.ChatAndContactFragment$2) -> a
com.feytuo.chat.activity.ChatAndContactFragment$2$1 -> com.feytuo.chat.activity.ai:
    com.feytuo.chat.activity.ChatAndContactFragment$2 this$1 -> a
    android.widget.LinearLayout$LayoutParams val$params -> b
    void run() -> run
com.feytuo.chat.activity.ChatAndContactFragment$MyFragmentPagerAdapter -> com.feytuo.chat.activity.aj:
    com.feytuo.chat.activity.ChatAndContactFragment this$0 -> a
    android.support.v4.app.Fragment getItem(int) -> getItem
    int getCount() -> getCount
com.feytuo.chat.activity.ChatHistoryFragment -> com.feytuo.chat.activity.ChatHistoryFragment:
    android.view.inputmethod.InputMethodManager inputMethodManager -> c
    android.widget.ListView listView -> d
    java.util.Map contactList -> e
    com.feytuo.chat.adapter.ChatHistoryAdapter adapter -> f
    android.widget.EditText query -> g
    android.widget.ImageButton clearSearch -> h
    android.widget.RelativeLayout errorItem -> a
    android.widget.TextView errorText -> b
    boolean hidden -> i
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void refresh() -> a
    java.util.List loadUsersWithRecentChat() -> b
    void sortUserByLastChatTime(java.util.List) -> a
    void onHiddenChanged(boolean) -> onHiddenChanged
    void onResume() -> onResume
    com.feytuo.chat.adapter.ChatHistoryAdapter access$0(com.feytuo.chat.activity.ChatHistoryFragment) -> a
    android.view.inputmethod.InputMethodManager access$1(com.feytuo.chat.activity.ChatHistoryFragment) -> b
    android.widget.ImageButton access$2(com.feytuo.chat.activity.ChatHistoryFragment) -> c
    android.widget.EditText access$3(com.feytuo.chat.activity.ChatHistoryFragment) -> d
com.feytuo.chat.activity.ChatHistoryFragment$1 -> com.feytuo.chat.activity.ak:
    com.feytuo.chat.activity.ChatHistoryFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.feytuo.chat.activity.ChatHistoryFragment$2 -> com.feytuo.chat.activity.al:
    com.feytuo.chat.activity.ChatHistoryFragment this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.feytuo.chat.activity.ChatHistoryFragment$3 -> com.feytuo.chat.activity.am:
    com.feytuo.chat.activity.ChatHistoryFragment this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.feytuo.chat.activity.ChatHistoryFragment$4 -> com.feytuo.chat.activity.an:
    com.feytuo.chat.activity.ChatHistoryFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.feytuo.chat.activity.ChatHistoryFragment$5 -> com.feytuo.chat.activity.ao:
    com.feytuo.chat.activity.ChatHistoryFragment this$0 -> a
    int compare(com.easemob.chat.EMContact,com.easemob.chat.EMContact) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.feytuo.chat.activity.ContactlistFragment -> com.feytuo.chat.activity.ContactlistFragment:
    java.lang.String TAG -> a
    com.feytuo.chat.adapter.ContactAdapter adapter -> b
    java.util.List contactList -> c
    android.widget.ListView listView -> d
    boolean hidden -> e
    com.feytuo.chat.widget.Sidebar sidebar -> f
    android.view.inputmethod.InputMethodManager inputMethodManager -> g
    android.widget.ImageView noFriendImageView -> h
    boolean isInitialized -> i
    boolean isActivityCreated -> j
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void initView() -> a
    void setNoFriendBackGround() -> c
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void onHiddenChanged(boolean) -> onHiddenChanged
    void onResume() -> onResume
    void deleteContact(com.feytuo.chat.domain.User) -> a
    void moveToBlacklist(java.lang.String) -> a
    void refresh() -> b
    void getContactList() -> d
    com.feytuo.chat.adapter.ContactAdapter access$0(com.feytuo.chat.activity.ContactlistFragment) -> a
    android.view.inputmethod.InputMethodManager access$1(com.feytuo.chat.activity.ContactlistFragment) -> b
    void access$2(com.feytuo.chat.activity.ContactlistFragment) -> c
    void access$3(com.feytuo.chat.activity.ContactlistFragment) -> d
com.feytuo.chat.activity.ContactlistFragment$1 -> com.feytuo.chat.activity.ap:
    com.feytuo.chat.activity.ContactlistFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.feytuo.chat.activity.ContactlistFragment$2 -> com.feytuo.chat.activity.aq:
    com.feytuo.chat.activity.ContactlistFragment this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.feytuo.chat.activity.ContactlistFragment$3 -> com.feytuo.chat.activity.ar:
    com.feytuo.chat.activity.ContactlistFragment this$0 -> a
    com.feytuo.chat.domain.User val$tobeDeleteUser -> b
    void run() -> run
com.feytuo.chat.activity.ContactlistFragment$4 -> com.feytuo.chat.activity.as:
    com.feytuo.chat.activity.ContactlistFragment this$0 -> a
    com.feytuo.chat.domain.User val$tobeDeleteUser -> b
    android.app.ProgressDialog val$pd -> c
    void run() -> run
com.feytuo.chat.activity.ContactlistFragment$5 -> com.feytuo.chat.activity.at:
    com.feytuo.chat.activity.ContactlistFragment this$0 -> a
    java.lang.String val$username -> b
    android.app.ProgressDialog val$pd -> c
    void run() -> run
    com.feytuo.chat.activity.ContactlistFragment access$0(com.feytuo.chat.activity.ContactlistFragment$5) -> a
com.feytuo.chat.activity.ContactlistFragment$5$1 -> com.feytuo.chat.activity.au:
    com.feytuo.chat.activity.ContactlistFragment$5 this$1 -> a
    android.app.ProgressDialog val$pd -> b
    void run() -> run
com.feytuo.chat.activity.ContactlistFragment$5$2 -> com.feytuo.chat.activity.av:
    com.feytuo.chat.activity.ContactlistFragment$5 this$1 -> a
    android.app.ProgressDialog val$pd -> b
    com.easemob.exceptions.EaseMobException val$e -> c
    void run() -> run
com.feytuo.chat.activity.ContactlistFragment$6 -> com.feytuo.chat.activity.aw:
    com.feytuo.chat.activity.ContactlistFragment this$0 -> a
    void run() -> run
com.feytuo.chat.activity.ContactlistFragment$7 -> com.feytuo.chat.activity.ax:
    com.feytuo.chat.activity.ContactlistFragment this$0 -> a
    int compare(com.feytuo.chat.domain.User,com.feytuo.chat.domain.User) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.feytuo.chat.activity.ContextMenu -> com.feytuo.chat.activity.ContextMenu:
    int position -> a
    void onCreate(android.os.Bundle) -> onCreate
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void copy(android.view.View) -> copy
    void delete(android.view.View) -> delete
    void forward(android.view.View) -> forward
    void open(android.view.View) -> open
    void download(android.view.View) -> download
    void toCloud(android.view.View) -> toCloud
com.feytuo.chat.activity.DiagnoseActivity -> com.feytuo.chat.activity.DiagnoseActivity:
    android.widget.TextView currentVersion -> a
    android.widget.Button uploadLog -> b
    android.app.ProgressDialog progressDialog -> c
    void onCreate(android.os.Bundle) -> onCreate
    void back(android.view.View) -> back
    java.lang.String getVersionName() -> b
    void onClick(android.view.View) -> onClick
    void uploadlog() -> a
    android.app.ProgressDialog access$0(com.feytuo.chat.activity.DiagnoseActivity) -> a
com.feytuo.chat.activity.DiagnoseActivity$1 -> com.feytuo.chat.activity.ay:
    com.feytuo.chat.activity.DiagnoseActivity this$0 -> a
    void onSuccess() -> onSuccess
    void onProgress(int,java.lang.String) -> onProgress
    void onError(int,java.lang.String) -> onError
    com.feytuo.chat.activity.DiagnoseActivity access$0(com.feytuo.chat.activity.DiagnoseActivity$1) -> a
com.feytuo.chat.activity.DiagnoseActivity$1$1 -> com.feytuo.chat.activity.az:
    com.feytuo.chat.activity.DiagnoseActivity$1 this$1 -> a
    void run() -> run
com.feytuo.chat.activity.DiagnoseActivity$1$2 -> com.feytuo.chat.activity.ba:
    com.feytuo.chat.activity.DiagnoseActivity$1 this$1 -> a
    void run() -> run
com.feytuo.chat.activity.ExitGroupDialog -> com.feytuo.chat.activity.ExitGroupDialog:
    android.widget.TextView text -> a
    android.widget.Button exitBtn -> b
    void onCreate(android.os.Bundle) -> onCreate
    void logout(android.view.View) -> logout
    void cancel(android.view.View) -> cancel
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
com.feytuo.chat.activity.ForwardMessageActivity -> com.feytuo.chat.activity.ForwardMessageActivity:
    com.feytuo.chat.domain.User selectUser -> b
    java.lang.String forward_msg_id -> c
    void onCreate(android.os.Bundle) -> onCreate
    void onListItemClick(int) -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
com.feytuo.chat.activity.GroupDetailsActivity -> com.feytuo.chat.activity.GroupDetailsActivity:
    com.feytuo.chat.widget.ExpandGridView userGridview -> b
    java.lang.String groupId -> c
    android.widget.ProgressBar loadingPB -> d
    android.widget.Button exitBtn -> e
    android.widget.Button deleteBtn -> f
    com.easemob.chat.EMGroup group -> g
    com.feytuo.chat.activity.GroupDetailsActivity$GridAdapter adapter -> h
    int referenceWidth -> i
    int referenceHeight -> j
    android.app.ProgressDialog progressDialog -> k
    android.widget.RelativeLayout rl_switch_block_groupmsg -> l
    android.widget.ImageView iv_switch_block_groupmsg -> m
    android.widget.ImageView iv_switch_unblock_groupmsg -> n
    com.feytuo.chat.activity.GroupDetailsActivity instance -> a
    android.widget.RelativeLayout clearAllHistory -> o
    void onCreate(android.os.Bundle) -> onCreate
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void exitGroup(android.view.View) -> exitGroup
    void exitDeleteGroup(android.view.View) -> exitDeleteGroup
    void clearGroupHistory() -> a
    void exitGrop() -> c
    void deleteGrop() -> d
    void addMembersToGroup(java.lang.String[]) -> a
    void updateGroup() -> b
    void back(android.view.View) -> back
    void onBackPressed() -> onBackPressed
    void onDestroy() -> onDestroy
    void onClick(android.view.View) -> onClick
    com.easemob.chat.EMGroup access$0(com.feytuo.chat.activity.GroupDetailsActivity) -> a
    java.lang.String access$1(com.feytuo.chat.activity.GroupDetailsActivity) -> b
    int access$2(com.feytuo.chat.activity.GroupDetailsActivity) -> c
    int access$3(com.feytuo.chat.activity.GroupDetailsActivity) -> d
    com.feytuo.chat.activity.GroupDetailsActivity$GridAdapter access$4(com.feytuo.chat.activity.GroupDetailsActivity) -> e
    android.app.ProgressDialog access$5(com.feytuo.chat.activity.GroupDetailsActivity) -> f
    android.widget.ProgressBar access$6(com.feytuo.chat.activity.GroupDetailsActivity) -> g
    android.widget.Button access$7(com.feytuo.chat.activity.GroupDetailsActivity) -> h
    android.widget.Button access$8(com.feytuo.chat.activity.GroupDetailsActivity) -> i
    android.widget.ImageView access$9(com.feytuo.chat.activity.GroupDetailsActivity) -> j
    android.widget.ImageView access$10(com.feytuo.chat.activity.GroupDetailsActivity) -> k
com.feytuo.chat.activity.GroupDetailsActivity$1 -> com.feytuo.chat.activity.bb:
    com.feytuo.chat.activity.GroupDetailsActivity this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.feytuo.chat.activity.GroupDetailsActivity$2 -> com.feytuo.chat.activity.bc:
    com.feytuo.chat.activity.GroupDetailsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.feytuo.chat.activity.GroupDetailsActivity$3 -> com.feytuo.chat.activity.bd:
    com.feytuo.chat.activity.GroupDetailsActivity this$0 -> a
    void run() -> run
    com.feytuo.chat.activity.GroupDetailsActivity access$0(com.feytuo.chat.activity.GroupDetailsActivity$3) -> a
com.feytuo.chat.activity.GroupDetailsActivity$3$1 -> com.feytuo.chat.activity.be:
    com.feytuo.chat.activity.GroupDetailsActivity$3 this$1 -> a
    void run() -> run
com.feytuo.chat.activity.GroupDetailsActivity$3$2 -> com.feytuo.chat.activity.bf:
    com.feytuo.chat.activity.GroupDetailsActivity$3 this$1 -> a
    java.lang.Exception val$e -> b
    void run() -> run
com.feytuo.chat.activity.GroupDetailsActivity$4 -> com.feytuo.chat.activity.bg:
    com.feytuo.chat.activity.GroupDetailsActivity this$0 -> a
    void run() -> run
    com.feytuo.chat.activity.GroupDetailsActivity access$0(com.feytuo.chat.activity.GroupDetailsActivity$4) -> a
com.feytuo.chat.activity.GroupDetailsActivity$4$1 -> com.feytuo.chat.activity.bh:
    com.feytuo.chat.activity.GroupDetailsActivity$4 this$1 -> a
    void run() -> run
com.feytuo.chat.activity.GroupDetailsActivity$4$2 -> com.feytuo.chat.activity.bi:
    com.feytuo.chat.activity.GroupDetailsActivity$4 this$1 -> a
    java.lang.Exception val$e -> b
    void run() -> run
com.feytuo.chat.activity.GroupDetailsActivity$5 -> com.feytuo.chat.activity.bj:
    com.feytuo.chat.activity.GroupDetailsActivity this$0 -> a
    java.lang.String[] val$newmembers -> b
    void run() -> run
    com.feytuo.chat.activity.GroupDetailsActivity access$0(com.feytuo.chat.activity.GroupDetailsActivity$5) -> a
com.feytuo.chat.activity.GroupDetailsActivity$5$1 -> com.feytuo.chat.activity.bk:
    com.feytuo.chat.activity.GroupDetailsActivity$5 this$1 -> a
    void run() -> run
com.feytuo.chat.activity.GroupDetailsActivity$5$2 -> com.feytuo.chat.activity.bl:
    com.feytuo.chat.activity.GroupDetailsActivity$5 this$1 -> a
    java.lang.Exception val$e -> b
    void run() -> run
com.feytuo.chat.activity.GroupDetailsActivity$6 -> com.feytuo.chat.activity.bm:
    com.feytuo.chat.activity.GroupDetailsActivity this$0 -> a
    void run() -> run
    com.feytuo.chat.activity.GroupDetailsActivity access$0(com.feytuo.chat.activity.GroupDetailsActivity$6) -> a
com.feytuo.chat.activity.GroupDetailsActivity$6$1 -> com.feytuo.chat.activity.bn:
    com.feytuo.chat.activity.GroupDetailsActivity$6 this$1 -> a
    void run() -> run
com.feytuo.chat.activity.GroupDetailsActivity$6$2 -> com.feytuo.chat.activity.bo:
    com.feytuo.chat.activity.GroupDetailsActivity$6 this$1 -> a
    void run() -> run
com.feytuo.chat.activity.GroupDetailsActivity$GridAdapter -> com.feytuo.chat.activity.bp:
    int res -> c
    boolean isInDeleteMode -> a
    java.util.List objects -> d
    com.feytuo.chat.activity.GroupDetailsActivity this$0 -> b
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int getCount() -> getCount
    com.feytuo.chat.activity.GroupDetailsActivity access$0(com.feytuo.chat.activity.GroupDetailsActivity$GridAdapter) -> a
com.feytuo.chat.activity.GroupDetailsActivity$GridAdapter$1 -> com.feytuo.chat.activity.bq:
    com.feytuo.chat.activity.GroupDetailsActivity$GridAdapter this$1 -> a
    void onClick(android.view.View) -> onClick
com.feytuo.chat.activity.GroupDetailsActivity$GridAdapter$2 -> com.feytuo.chat.activity.br:
    com.feytuo.chat.activity.GroupDetailsActivity$GridAdapter this$1 -> a
    void onClick(android.view.View) -> onClick
com.feytuo.chat.activity.GroupDetailsActivity$GridAdapter$3 -> com.feytuo.chat.activity.bs:
    com.feytuo.chat.activity.GroupDetailsActivity$GridAdapter this$1 -> a
    java.lang.String val$username -> b
    void onClick(android.view.View) -> onClick
    void deleteMembersFromGroup(java.lang.String) -> a
    com.feytuo.chat.activity.GroupDetailsActivity$GridAdapter access$0(com.feytuo.chat.activity.GroupDetailsActivity$GridAdapter$3) -> a
com.feytuo.chat.activity.GroupDetailsActivity$GridAdapter$3$1 -> com.feytuo.chat.activity.bt:
    com.feytuo.chat.activity.GroupDetailsActivity$GridAdapter$3 this$2 -> a
    java.lang.String val$username -> b
    android.app.ProgressDialog val$deleteDialog -> c
    void run() -> run
    com.feytuo.chat.activity.GroupDetailsActivity$GridAdapter$3 access$0(com.feytuo.chat.activity.GroupDetailsActivity$GridAdapter$3$1) -> a
com.feytuo.chat.activity.GroupDetailsActivity$GridAdapter$3$1$1 -> com.feytuo.chat.activity.bu:
    com.feytuo.chat.activity.GroupDetailsActivity$GridAdapter$3$1 this$3 -> a
    android.app.ProgressDialog val$deleteDialog -> b
    void run() -> run
com.feytuo.chat.activity.GroupDetailsActivity$GridAdapter$3$1$2 -> com.feytuo.chat.activity.bv:
    com.feytuo.chat.activity.GroupDetailsActivity$GridAdapter$3$1 this$3 -> a
    java.lang.Exception val$e -> b
    void run() -> run
com.feytuo.chat.activity.GroupPickContactsActivity -> com.feytuo.chat.activity.GroupPickContactsActivity:
    android.widget.ListView listView -> b
    boolean isCreatingNewGroup -> a
    boolean isSignleChecked -> c
    com.feytuo.chat.activity.GroupPickContactsActivity$PickContactAdapter contactAdapter -> d
    java.util.List exitingMembers -> e
    void onCreate(android.os.Bundle) -> onCreate
    void save(android.view.View) -> save
    java.util.List getToBeAddMembers() -> a
    void back(android.view.View) -> back
    java.util.List access$0(com.feytuo.chat.activity.GroupPickContactsActivity) -> a
    boolean access$1(com.feytuo.chat.activity.GroupPickContactsActivity) -> b
    com.feytuo.chat.activity.GroupPickContactsActivity$PickContactAdapter access$2(com.feytuo.chat.activity.GroupPickContactsActivity) -> c
com.feytuo.chat.activity.GroupPickContactsActivity$1 -> com.feytuo.chat.activity.bw:
    com.feytuo.chat.activity.GroupPickContactsActivity this$0 -> a
    int compare(com.feytuo.chat.domain.User,com.feytuo.chat.domain.User) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.feytuo.chat.activity.GroupPickContactsActivity$2 -> com.feytuo.chat.activity.bx:
    com.feytuo.chat.activity.GroupPickContactsActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.feytuo.chat.activity.GroupPickContactsActivity$PickContactAdapter -> com.feytuo.chat.activity.by:
    boolean[] isCheckedArray -> b
    com.feytuo.chat.activity.GroupPickContactsActivity this$0 -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    boolean[] access$0(com.feytuo.chat.activity.GroupPickContactsActivity$PickContactAdapter) -> a
    com.feytuo.chat.activity.GroupPickContactsActivity access$1(com.feytuo.chat.activity.GroupPickContactsActivity$PickContactAdapter) -> b
com.feytuo.chat.activity.GroupPickContactsActivity$PickContactAdapter$1 -> com.feytuo.chat.activity.bz:
    com.feytuo.chat.activity.GroupPickContactsActivity$PickContactAdapter this$1 -> a
    java.lang.String val$username -> b
    android.widget.CheckBox val$checkBox -> c
    int val$position -> d
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.feytuo.chat.activity.GroupSimpleDetailActivity -> com.feytuo.chat.activity.GroupSimpleDetailActivity:
    android.widget.Button btn_add_group -> a
    android.widget.TextView tv_admin -> b
    android.widget.TextView tv_name -> c
    android.widget.TextView tv_introduction -> d
    com.easemob.chat.EMGroup group -> e
    java.lang.String groupid -> f
    android.widget.ProgressBar progressBar -> g
    void onCreate(android.os.Bundle) -> onCreate
    void addToGroup(android.view.View) -> addToGroup
    void back(android.view.View) -> back
    java.lang.String access$0(com.feytuo.chat.activity.GroupSimpleDetailActivity) -> a
    void access$1(com.feytuo.chat.activity.GroupSimpleDetailActivity,com.easemob.chat.EMGroup) -> a
    android.widget.ProgressBar access$2(com.feytuo.chat.activity.GroupSimpleDetailActivity) -> b
    com.easemob.chat.EMGroup access$3(com.feytuo.chat.activity.GroupSimpleDetailActivity) -> c
    android.widget.Button access$4(com.feytuo.chat.activity.GroupSimpleDetailActivity) -> d
    android.widget.TextView access$5(com.feytuo.chat.activity.GroupSimpleDetailActivity) -> e
    android.widget.TextView access$6(com.feytuo.chat.activity.GroupSimpleDetailActivity) -> f
    android.widget.TextView access$7(com.feytuo.chat.activity.GroupSimpleDetailActivity) -> g
com.feytuo.chat.activity.GroupSimpleDetailActivity$1 -> com.feytuo.chat.activity.ca:
    com.feytuo.chat.activity.GroupSimpleDetailActivity this$0 -> a
    void run() -> run
    com.feytuo.chat.activity.GroupSimpleDetailActivity access$0(com.feytuo.chat.activity.GroupSimpleDetailActivity$1) -> a
com.feytuo.chat.activity.GroupSimpleDetailActivity$1$1 -> com.feytuo.chat.activity.cb:
    com.feytuo.chat.activity.GroupSimpleDetailActivity$1 this$1 -> a
    void run() -> run
com.feytuo.chat.activity.GroupSimpleDetailActivity$1$2 -> com.feytuo.chat.activity.cc:
    com.feytuo.chat.activity.GroupSimpleDetailActivity$1 this$1 -> a
    com.easemob.exceptions.EaseMobException val$e -> b
    void run() -> run
com.feytuo.chat.activity.GroupSimpleDetailActivity$2 -> com.feytuo.chat.activity.cd:
    com.feytuo.chat.activity.GroupSimpleDetailActivity this$0 -> a
    android.app.ProgressDialog val$pd -> b
    void run() -> run
    com.feytuo.chat.activity.GroupSimpleDetailActivity access$0(com.feytuo.chat.activity.GroupSimpleDetailActivity$2) -> a
com.feytuo.chat.activity.GroupSimpleDetailActivity$2$1 -> com.feytuo.chat.activity.ce:
    com.feytuo.chat.activity.GroupSimpleDetailActivity$2 this$1 -> a
    android.app.ProgressDialog val$pd -> b
    void run() -> run
com.feytuo.chat.activity.GroupSimpleDetailActivity$2$2 -> com.feytuo.chat.activity.cf:
    com.feytuo.chat.activity.GroupSimpleDetailActivity$2 this$1 -> a
    android.app.ProgressDialog val$pd -> b
    com.easemob.exceptions.EaseMobException val$e -> c
    void run() -> run
com.feytuo.chat.activity.GroupsActivity -> com.feytuo.chat.activity.GroupsActivity:
    android.widget.ListView groupListView -> c
    java.util.List grouplist -> a
    com.feytuo.chat.adapter.GroupAdapter groupAdapter -> d
    android.view.inputmethod.InputMethodManager inputMethodManager -> e
    com.feytuo.chat.activity.GroupsActivity instance -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onPublicGroups(android.view.View) -> onPublicGroups
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    void back(android.view.View) -> back
    com.feytuo.chat.adapter.GroupAdapter access$0(com.feytuo.chat.activity.GroupsActivity) -> a
    android.view.inputmethod.InputMethodManager access$1(com.feytuo.chat.activity.GroupsActivity) -> b
com.feytuo.chat.activity.GroupsActivity$1 -> com.feytuo.chat.activity.cg:
    com.feytuo.chat.activity.GroupsActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.feytuo.chat.activity.GroupsActivity$2 -> com.feytuo.chat.activity.ch:
    com.feytuo.chat.activity.GroupsActivity this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.feytuo.chat.activity.ImageGridActivity -> com.feytuo.chat.activity.ImageGridActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
com.feytuo.chat.activity.ImageGridFragment -> com.feytuo.chat.activity.ImageGridFragment:
    int mImageThumbSize -> b
    int mImageThumbSpacing -> c
    com.feytuo.chat.activity.ImageGridFragment$ImageAdapter mAdapter -> d
    com.feytuo.chat.video.util.ImageResizer mImageResizer -> e
    java.util.List mList -> a
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void getVideoFile() -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    com.feytuo.chat.video.util.ImageResizer access$0(com.feytuo.chat.activity.ImageGridFragment) -> a
    int access$1(com.feytuo.chat.activity.ImageGridFragment) -> b
    int access$2(com.feytuo.chat.activity.ImageGridFragment) -> c
    com.feytuo.chat.activity.ImageGridFragment$ImageAdapter access$3(com.feytuo.chat.activity.ImageGridFragment) -> d
com.feytuo.chat.activity.ImageGridFragment$1 -> com.feytuo.chat.activity.ci:
    com.feytuo.chat.activity.ImageGridFragment this$0 -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.feytuo.chat.activity.ImageGridFragment$2 -> com.feytuo.chat.activity.cj:
    com.feytuo.chat.activity.ImageGridFragment this$0 -> a
    android.widget.GridView val$mGridView -> b
    void onGlobalLayout() -> onGlobalLayout
com.feytuo.chat.activity.ImageGridFragment$ImageAdapter -> com.feytuo.chat.activity.ck:
    android.content.Context mContext -> b
    int mItemHeight -> c
    android.widget.RelativeLayout$LayoutParams mImageViewLayoutParams -> d
    com.feytuo.chat.activity.ImageGridFragment this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setItemHeight(int) -> a
com.feytuo.chat.activity.ImageGridFragment$ImageAdapter$ViewHolder -> com.feytuo.chat.activity.cl:
    com.feytuo.chat.widget.RecyclingImageView imageView -> a
    android.widget.ImageView icon -> b
    android.widget.TextView tvDur -> c
    android.widget.TextView tvSize -> d
    com.feytuo.chat.activity.ImageGridFragment$ImageAdapter this$1 -> e
com.feytuo.chat.activity.LoginActivity -> com.feytuo.chat.activity.LoginActivity:
    android.widget.EditText usernameEditText -> a
    android.widget.EditText passwordEditText -> b
    boolean progressShow -> c
    void onCreate(android.os.Bundle) -> onCreate
    void login(android.view.View) -> login
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void register(android.view.View) -> register
    void onResume() -> onResume
    void setUserHearder(java.lang.String,com.feytuo.chat.domain.User) -> a
    android.widget.EditText access$0(com.feytuo.chat.activity.LoginActivity) -> a
    void access$1(com.feytuo.chat.activity.LoginActivity,boolean) -> a
    boolean access$2(com.feytuo.chat.activity.LoginActivity) -> b
com.feytuo.chat.activity.LoginActivity$1 -> com.feytuo.chat.activity.cm:
    com.feytuo.chat.activity.LoginActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.feytuo.chat.activity.LoginActivity$2 -> com.feytuo.chat.activity.cn:
    com.feytuo.chat.activity.LoginActivity this$0 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.feytuo.chat.activity.LoginActivity$3 -> com.feytuo.chat.activity.co:
    com.feytuo.chat.activity.LoginActivity this$0 -> a
    java.lang.String val$username -> b
    java.lang.String val$password -> c
    android.app.ProgressDialog val$pd -> d
    void onSuccess() -> onSuccess
    void onProgress(int,java.lang.String) -> onProgress
    void onError(int,java.lang.String) -> onError
    com.feytuo.chat.activity.LoginActivity access$0(com.feytuo.chat.activity.LoginActivity$3) -> a
com.feytuo.chat.activity.LoginActivity$3$1 -> com.feytuo.chat.activity.cp:
    com.feytuo.chat.activity.LoginActivity$3 this$1 -> a
    android.app.ProgressDialog val$pd -> b
    void run() -> run
com.feytuo.chat.activity.LoginActivity$3$2 -> com.feytuo.chat.activity.cq:
    com.feytuo.chat.activity.LoginActivity$3 this$1 -> a
    android.app.ProgressDialog val$pd -> b
    java.lang.String val$message -> c
    void run() -> run
com.feytuo.chat.activity.MainActivity -> com.feytuo.chat.activity.MainActivity:
    android.widget.Button[] mTabs -> b
    com.feytuo.chat.activity.ChatAndContactFragment cacFragment -> a
    com.feytuo.chat.activity.SettingsFragment settingFragment -> c
    android.support.v4.app.Fragment mainFragment -> d
    com.feytuo.laoxianghao.fragment.FindFragment findFragment -> e
    android.support.v4.app.Fragment[] fragments -> f
    int index -> g
    int currentTabIndex -> h
    com.feytuo.chat.activity.MainActivity$NewMessageBroadcastReceiver msgReceiver -> i
    boolean isConflict -> j
    android.content.BroadcastReceiver ackMessageReceiver -> k
    com.feytuo.chat.db.InviteMessgeDao inviteMessgeDao -> l
    com.feytuo.chat.db.UserDao userDao -> m
    android.app.AlertDialog$Builder conflictBuilder -> n
    boolean isConflictDialogShow -> o
    void onCreate(android.os.Bundle) -> onCreate
    void registerHXListeners() -> a
    void initShare(android.os.Bundle) -> a
    void onTabpublishClicked(android.view.View) -> onTabpublishClicked
    void initView(android.os.Bundle) -> b
    void onTabClicked(android.view.View) -> onTabClicked
    void onDestroy() -> onDestroy
    void updateUnreadLabel() -> b
    void updateUnreadAddressLable() -> c
    int getUnreadAddressCountTotal() -> d
    int getUnreadMsgCountTotal() -> e
    void notifyNewIviteMessage(com.feytuo.chat.domain.InviteMessage) -> a
    void saveInviteMsg(com.feytuo.chat.domain.InviteMessage) -> b
    void setUserHead(java.lang.String,com.feytuo.chat.domain.User) -> a
    void onResume() -> onResume
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void showConflictDialog() -> f
    void onResponse(com.sina.weibo.sdk.api.share.BaseResponse) -> onResponse
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onPause() -> onPause
    com.feytuo.chat.db.UserDao access$0(com.feytuo.chat.activity.MainActivity) -> a
    void access$1(com.feytuo.chat.activity.MainActivity) -> b
    void access$2(com.feytuo.chat.activity.MainActivity,com.feytuo.chat.domain.InviteMessage) -> a
    void access$3(com.feytuo.chat.activity.MainActivity,android.app.AlertDialog$Builder) -> a
com.feytuo.chat.activity.MainActivity$1 -> com.feytuo.chat.activity.cr:
    com.feytuo.chat.activity.MainActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.feytuo.chat.activity.MainActivity$2 -> com.feytuo.chat.activity.cs:
    com.feytuo.chat.activity.MainActivity this$0 -> a
    void run() -> run
com.feytuo.chat.activity.MainActivity$3 -> com.feytuo.chat.activity.ct:
    com.feytuo.chat.activity.MainActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.feytuo.chat.activity.MainActivity$MyConnectionListener -> com.feytuo.chat.activity.cu:
    com.feytuo.chat.activity.MainActivity this$0 -> a
    void onConnected() -> onConnected
    void onDisConnected(java.lang.String) -> onDisConnected
    void onReConnected() -> onReConnected
    void onReConnecting() -> onReConnecting
    void onConnecting(java.lang.String) -> onConnecting
com.feytuo.chat.activity.MainActivity$MyContactListener -> com.feytuo.chat.activity.cv:
    com.feytuo.chat.activity.MainActivity this$0 -> a
    void onContactAdded(java.util.List) -> onContactAdded
    void getUserInfoFromBmob(java.util.List) -> a
    void onContactDeleted(java.util.List) -> onContactDeleted
    void onContactInvited(java.lang.String,java.lang.String) -> onContactInvited
    void onContactAgreed(java.lang.String) -> onContactAgreed
    void onContactRefused(java.lang.String) -> onContactRefused
    com.feytuo.chat.activity.MainActivity access$1(com.feytuo.chat.activity.MainActivity$MyContactListener) -> a
com.feytuo.chat.activity.MainActivity$MyContactListener$1 -> com.feytuo.chat.activity.cw:
    com.feytuo.chat.activity.MainActivity$MyContactListener this$1 -> a
    void onSuccess(java.util.List) -> onSuccess
    void onError(int,java.lang.String) -> onError
com.feytuo.chat.activity.MainActivity$MyGroupChangeListener -> com.feytuo.chat.activity.cx:
    com.feytuo.chat.activity.MainActivity this$0 -> a
    void onInvitationReceived(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> onInvitationReceived
    void onInvitationAccpted(java.lang.String,java.lang.String,java.lang.String) -> onInvitationAccpted
    void onInvitationDeclined(java.lang.String,java.lang.String,java.lang.String) -> onInvitationDeclined
    void onUserRemoved(java.lang.String,java.lang.String) -> onUserRemoved
    void onGroupDestroy(java.lang.String,java.lang.String) -> onGroupDestroy
    void onApplicationReceived(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> onApplicationReceived
    void onApplicationAccept(java.lang.String,java.lang.String,java.lang.String) -> onApplicationAccept
    void onApplicationDeclined(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> onApplicationDeclined
    com.feytuo.chat.activity.MainActivity access$1(com.feytuo.chat.activity.MainActivity$MyGroupChangeListener) -> a
com.feytuo.chat.activity.MainActivity$MyGroupChangeListener$1 -> com.feytuo.chat.activity.cy:
    com.feytuo.chat.activity.MainActivity$MyGroupChangeListener this$1 -> a
    void run() -> run
com.feytuo.chat.activity.MainActivity$MyGroupChangeListener$2 -> com.feytuo.chat.activity.cz:
    com.feytuo.chat.activity.MainActivity$MyGroupChangeListener this$1 -> a
    void run() -> run
com.feytuo.chat.activity.MainActivity$MyGroupChangeListener$3 -> com.feytuo.chat.activity.da:
    com.feytuo.chat.activity.MainActivity$MyGroupChangeListener this$1 -> a
    void run() -> run
com.feytuo.chat.activity.MainActivity$MyGroupChangeListener$4 -> com.feytuo.chat.activity.db:
    com.feytuo.chat.activity.MainActivity$MyGroupChangeListener this$1 -> a
    void run() -> run
com.feytuo.chat.activity.MainActivity$NewMessageBroadcastReceiver -> com.feytuo.chat.activity.dc:
    com.feytuo.chat.activity.MainActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.feytuo.chat.activity.NewFriendsMsgActivity -> com.feytuo.chat.activity.NewFriendsMsgActivity:
    android.widget.ListView listView -> a
    void onCreate(android.os.Bundle) -> onCreate
    void back(android.view.View) -> back
com.feytuo.chat.activity.NewGroupActivity -> com.feytuo.chat.activity.NewGroupActivity:
    android.widget.EditText groupNameEditText -> a
    android.app.ProgressDialog progressDialog -> b
    android.widget.EditText introductionEditText -> c
    android.widget.CheckBox checkBox -> d
    android.widget.CheckBox memberCheckbox -> e
    android.widget.LinearLayout openInviteContainer -> f
    void onCreate(android.os.Bundle) -> onCreate
    void save(android.view.View) -> save
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void back(android.view.View) -> back
    android.widget.LinearLayout access$0(com.feytuo.chat.activity.NewGroupActivity) -> a
    android.widget.EditText access$1(com.feytuo.chat.activity.NewGroupActivity) -> b
    android.widget.EditText access$2(com.feytuo.chat.activity.NewGroupActivity) -> c
    android.widget.CheckBox access$3(com.feytuo.chat.activity.NewGroupActivity) -> d
    android.widget.CheckBox access$4(com.feytuo.chat.activity.NewGroupActivity) -> e
    android.app.ProgressDialog access$5(com.feytuo.chat.activity.NewGroupActivity) -> f
com.feytuo.chat.activity.NewGroupActivity$1 -> com.feytuo.chat.activity.dd:
    com.feytuo.chat.activity.NewGroupActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.feytuo.chat.activity.NewGroupActivity$2 -> com.feytuo.chat.activity.de:
    com.feytuo.chat.activity.NewGroupActivity this$0 -> a
    android.content.Intent val$data -> b
    void run() -> run
    com.feytuo.chat.activity.NewGroupActivity access$0(com.feytuo.chat.activity.NewGroupActivity$2) -> a
com.feytuo.chat.activity.NewGroupActivity$2$1 -> com.feytuo.chat.activity.df:
    com.feytuo.chat.activity.NewGroupActivity$2 this$1 -> a
    void run() -> run
com.feytuo.chat.activity.NewGroupActivity$2$2 -> com.feytuo.chat.activity.dg:
    com.feytuo.chat.activity.NewGroupActivity$2 this$1 -> a
    java.lang.Exception val$e -> b
    void run() -> run
com.feytuo.chat.activity.PickContactNoCheckboxActivity -> com.feytuo.chat.activity.PickContactNoCheckboxActivity:
    android.widget.ListView listView -> b
    com.feytuo.chat.widget.Sidebar sidebar -> c
    com.feytuo.chat.adapter.ContactAdapter contactAdapter -> a
    java.util.List contactList -> d
    void onCreate(android.os.Bundle) -> onCreate
    void onListItemClick(int) -> a
    void back(android.view.View) -> back
    void getContactList() -> a
com.feytuo.chat.activity.PickContactNoCheckboxActivity$1 -> com.feytuo.chat.activity.dh:
    com.feytuo.chat.activity.PickContactNoCheckboxActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.feytuo.chat.activity.PickContactNoCheckboxActivity$2 -> com.feytuo.chat.activity.di:
    com.feytuo.chat.activity.PickContactNoCheckboxActivity this$0 -> a
    int compare(com.feytuo.chat.domain.User,com.feytuo.chat.domain.User) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.feytuo.chat.activity.PublicGroupsActivity -> com.feytuo.chat.activity.PublicGroupsActivity:
    android.widget.ProgressBar pb -> a
    android.widget.ListView listView -> b
    android.widget.EditText query -> c
    android.widget.ImageButton clearSearch -> d
    com.feytuo.chat.activity.PublicGroupsActivity$GroupsAdapter adapter -> e
    void onCreate(android.os.Bundle) -> onCreate
    void back(android.view.View) -> back
    android.widget.ProgressBar access$0(com.feytuo.chat.activity.PublicGroupsActivity) -> a
    void access$1(com.feytuo.chat.activity.PublicGroupsActivity,com.feytuo.chat.activity.PublicGroupsActivity$GroupsAdapter) -> a
    android.widget.ListView access$2(com.feytuo.chat.activity.PublicGroupsActivity) -> b
    com.feytuo.chat.activity.PublicGroupsActivity$GroupsAdapter access$3(com.feytuo.chat.activity.PublicGroupsActivity) -> c
    void access$4(com.feytuo.chat.activity.PublicGroupsActivity,android.widget.EditText) -> a
    void access$5(com.feytuo.chat.activity.PublicGroupsActivity,android.widget.ImageButton) -> a
    android.widget.EditText access$6(com.feytuo.chat.activity.PublicGroupsActivity) -> d
    android.widget.ImageButton access$7(com.feytuo.chat.activity.PublicGroupsActivity) -> e
com.feytuo.chat.activity.PublicGroupsActivity$1 -> com.feytuo.chat.activity.dj:
    com.feytuo.chat.activity.PublicGroupsActivity this$0 -> a
    void run() -> run
    com.feytuo.chat.activity.PublicGroupsActivity access$0(com.feytuo.chat.activity.PublicGroupsActivity$1) -> a
com.feytuo.chat.activity.PublicGroupsActivity$1$1 -> com.feytuo.chat.activity.dk:
    com.feytuo.chat.activity.PublicGroupsActivity$1 this$1 -> a
    java.util.List val$groupsList -> b
    void run() -> run
    com.feytuo.chat.activity.PublicGroupsActivity$1 access$0(com.feytuo.chat.activity.PublicGroupsActivity$1$1) -> a
com.feytuo.chat.activity.PublicGroupsActivity$1$1$1 -> com.feytuo.chat.activity.dl:
    com.feytuo.chat.activity.PublicGroupsActivity$1$1 this$2 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.feytuo.chat.activity.PublicGroupsActivity$1$1$2 -> com.feytuo.chat.activity.dm:
    com.feytuo.chat.activity.PublicGroupsActivity$1$1 this$2 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.feytuo.chat.activity.PublicGroupsActivity$1$1$3 -> com.feytuo.chat.activity.dn:
    com.feytuo.chat.activity.PublicGroupsActivity$1$1 this$2 -> a
    void onClick(android.view.View) -> onClick
com.feytuo.chat.activity.PublicGroupsActivity$1$2 -> com.feytuo.chat.activity.do:
    com.feytuo.chat.activity.PublicGroupsActivity$1 this$1 -> a
    void run() -> run
com.feytuo.chat.activity.PublicGroupsActivity$GroupsAdapter -> com.feytuo.chat.activity.dp:
    android.view.LayoutInflater inflater -> b
    com.feytuo.chat.activity.PublicGroupsActivity this$0 -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.feytuo.chat.activity.RecorderVideoActivity -> com.feytuo.chat.activity.RecorderVideoActivity:
    android.os.PowerManager$WakeLock mWakeLock -> h
    android.widget.ImageView btnStart -> i
    android.widget.ImageView btnStop -> j
    android.media.MediaRecorder mediarecorder -> k
    android.view.SurfaceView surfaceview -> l
    android.view.SurfaceHolder surfaceHolder -> m
    java.lang.String localPath -> a
    android.hardware.Camera mCamera -> n
    int previewWidth -> o
    int previewHeight -> p
    android.hardware.Camera$Parameters cameraParameters -> b
    int defaultCameraId -> c
    int defaultScreenResolution -> d
    int cameraSelection -> e
    int defaultVideoFrameRate -> f
    android.media.MediaScannerConnection msc -> g
    void onCreate(android.os.Bundle) -> onCreate
    void back(android.view.View) -> back
    void onResume() -> onResume
    void handleSurfaceChanged() -> c
    void onPause() -> onPause
    void onClick(android.view.View) -> onClick
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    void releaseCamera() -> a
    void initpreview() -> b
    void setCameraDisplayOrientation(android.app.Activity,int,android.hardware.Camera) -> a
    void sendVideo(android.view.View) -> sendVideo
    void onInfo(android.media.MediaRecorder,int,int) -> onInfo
    void onError(android.media.MediaRecorder,int,int) -> onError
    void onDestroy() -> onDestroy
    void onBackPressed() -> onBackPressed
    void showFailDialog() -> d
com.feytuo.chat.activity.RecorderVideoActivity$1 -> com.feytuo.chat.activity.dq:
    com.feytuo.chat.activity.RecorderVideoActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.feytuo.chat.activity.RecorderVideoActivity$2 -> com.feytuo.chat.activity.dr:
    com.feytuo.chat.activity.RecorderVideoActivity this$0 -> a
    void onScanCompleted(java.lang.String,android.net.Uri) -> onScanCompleted
    void onMediaScannerConnected() -> onMediaScannerConnected
com.feytuo.chat.activity.RecorderVideoActivity$3 -> com.feytuo.chat.activity.ds:
    com.feytuo.chat.activity.RecorderVideoActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.feytuo.chat.activity.RegisterActivity -> com.feytuo.chat.activity.RegisterActivity:
    android.widget.EditText userNameEditText -> a
    android.widget.EditText passwordEditText -> b
    android.widget.EditText confirmPwdEditText -> c
    void onCreate(android.os.Bundle) -> onCreate
    void register(android.view.View) -> register
    void back(android.view.View) -> back
com.feytuo.chat.activity.RegisterActivity$1 -> com.feytuo.chat.activity.dt:
    com.feytuo.chat.activity.RegisterActivity this$0 -> a
    java.lang.String val$username -> b
    java.lang.String val$pwd -> c
    android.app.ProgressDialog val$pd -> d
    void run() -> run
    com.feytuo.chat.activity.RegisterActivity access$0(com.feytuo.chat.activity.RegisterActivity$1) -> a
com.feytuo.chat.activity.RegisterActivity$1$1 -> com.feytuo.chat.activity.du:
    com.feytuo.chat.activity.RegisterActivity$1 this$1 -> a
    android.app.ProgressDialog val$pd -> b
    java.lang.String val$username -> c
    void run() -> run
com.feytuo.chat.activity.RegisterActivity$1$2 -> com.feytuo.chat.activity.dv:
    com.feytuo.chat.activity.RegisterActivity$1 this$1 -> a
    android.app.ProgressDialog val$pd -> b
    java.lang.Exception val$e -> c
    void run() -> run
com.feytuo.chat.activity.SettingsFragment -> com.feytuo.chat.activity.SettingsFragment:
    java.lang.String TAG -> b
    java.lang.String TEMP_HEAD_IMAGE -> c
    android.widget.RelativeLayout personNickRela -> d
    android.widget.TextView personNickText -> e
    android.widget.RelativeLayout personSignRela -> f
    android.widget.TextView personSignText -> g
    android.widget.RelativeLayout personHomeRela -> h
    android.widget.TextView personHomeText -> i
    android.widget.RelativeLayout personTieziRela -> j
    android.widget.RelativeLayout personSetRela -> k
    android.widget.RelativeLayout personAboutRela -> l
    android.widget.ImageView personHeadImg -> m
    android.widget.TextView personHeadNick -> n
    android.widget.ImageView redPoint -> o
    android.app.AlertDialog dialog -> p
    java.io.File tempFile -> a
    int crop -> q
    com.feytuo.laoxianghao.domain.LXHUser user -> r
    com.feytuo.laoxianghao.util.ImageLoader mImageLoader -> s
    java.io.File uploadFile -> t
    android.graphics.Bitmap photo -> u
    android.app.ProgressDialog pd -> v
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void initview() -> a
    void setViewContent() -> b
    void setHead(java.lang.String,java.lang.String,android.widget.ImageView) -> a
    void getHeadUrlFromBmob(java.lang.String,android.widget.ImageView) -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void startPhotoZoom(android.net.Uri,int) -> a
    void setPicToView(android.content.Intent) -> a
    void upload2Bmob(java.io.File) -> a
    void updateHeadUrl2Bmob(java.lang.String) -> a
    java.lang.String getPhotoFileName() -> c
    void getMyCommentNotice() -> d
    void onResume() -> onResume
    void onPause() -> onPause
    android.app.AlertDialog access$0(com.feytuo.chat.activity.SettingsFragment) -> a
    void access$1(com.feytuo.chat.activity.SettingsFragment,android.app.AlertDialog) -> a
    android.widget.ImageView access$2(com.feytuo.chat.activity.SettingsFragment) -> b
    com.feytuo.laoxianghao.util.ImageLoader access$3(com.feytuo.chat.activity.SettingsFragment) -> c
    void access$4(com.feytuo.chat.activity.SettingsFragment,java.lang.String) -> a
    android.app.ProgressDialog access$5(com.feytuo.chat.activity.SettingsFragment) -> d
    java.io.File access$6(com.feytuo.chat.activity.SettingsFragment) -> e
    void access$7(com.feytuo.chat.activity.SettingsFragment,java.io.File) -> a
    android.graphics.Bitmap access$8(com.feytuo.chat.activity.SettingsFragment) -> f
    android.widget.ImageView access$9(com.feytuo.chat.activity.SettingsFragment) -> g
com.feytuo.chat.activity.SettingsFragment$1 -> com.feytuo.chat.activity.dw:
    com.feytuo.chat.activity.SettingsFragment this$0 -> a
    android.widget.ImageView val$head_iv -> b
    java.lang.String val$userName -> c
    void onSuccess(java.util.List) -> onSuccess
    void onError(int,java.lang.String) -> onError
com.feytuo.chat.activity.SettingsFragment$2 -> com.feytuo.chat.activity.dx:
    com.feytuo.chat.activity.SettingsFragment this$0 -> a
    cn.bmob.v3.datatype.BmobFile val$bmobFile -> b
    void onSuccess() -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.feytuo.chat.activity.SettingsFragment$3 -> com.feytuo.chat.activity.dy:
    com.feytuo.chat.activity.SettingsFragment this$0 -> a
    java.lang.String val$userId -> b
    java.lang.String val$fileUrl -> c
    void onSuccess() -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.feytuo.chat.activity.SettingsFragment$4 -> com.feytuo.chat.activity.dz:
    com.feytuo.chat.activity.SettingsFragment this$0 -> a
    java.util.List val$netCommentNum -> b
    java.util.List val$myInvIds -> c
    java.util.List val$localCommentNum -> d
    void onSuccess(java.util.List) -> onSuccess
    void onError(int,java.lang.String) -> onError
com.feytuo.chat.activity.SettingsFragment$Linstener -> com.feytuo.chat.activity.ea:
    com.feytuo.chat.activity.SettingsFragment this$0 -> a
    void onClick(android.view.View) -> onClick
    com.feytuo.chat.activity.SettingsFragment access$0(com.feytuo.chat.activity.SettingsFragment$Linstener) -> a
com.feytuo.chat.activity.SettingsFragment$Linstener$1 -> com.feytuo.chat.activity.eb:
    com.feytuo.chat.activity.SettingsFragment$Linstener this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.feytuo.chat.activity.ShowBigImage -> com.feytuo.chat.activity.ShowBigImage:
    android.app.ProgressDialog pd -> a
    com.feytuo.chat.widget.photoview.PhotoView image -> b
    int default_res -> c
    boolean deleteAfterDownload -> d
    boolean showAvator -> e
    java.lang.String localFilePath -> f
    java.lang.String username -> g
    android.graphics.Bitmap bitmap -> h
    boolean isDownloaded -> i
    android.widget.ProgressBar loadLocalPb -> j
    void onCreate(android.os.Bundle) -> onCreate
    void downloadImage(java.lang.String,java.util.Map) -> a
    void onBackPressed() -> onBackPressed
    java.lang.String access$0(com.feytuo.chat.activity.ShowBigImage) -> a
    void access$1(com.feytuo.chat.activity.ShowBigImage,android.graphics.Bitmap) -> a
    android.graphics.Bitmap access$2(com.feytuo.chat.activity.ShowBigImage) -> b
    com.feytuo.chat.widget.photoview.PhotoView access$3(com.feytuo.chat.activity.ShowBigImage) -> c
    int access$4(com.feytuo.chat.activity.ShowBigImage) -> d
    void access$5(com.feytuo.chat.activity.ShowBigImage,boolean) -> a
    android.app.ProgressDialog access$6(com.feytuo.chat.activity.ShowBigImage) -> e
com.feytuo.chat.activity.ShowBigImage$1 -> com.feytuo.chat.activity.ec:
    com.feytuo.chat.activity.ShowBigImage this$0 -> a
    void onClick(android.view.View) -> onClick
com.feytuo.chat.activity.ShowBigImage$2 -> com.feytuo.chat.activity.ed:
    com.feytuo.chat.activity.ShowBigImage this$0 -> a
    void onSuccess(java.lang.String) -> onSuccess
    void onError(java.lang.String) -> onError
    void onProgress(int) -> onProgress
    com.feytuo.chat.activity.ShowBigImage access$0(com.feytuo.chat.activity.ShowBigImage$2) -> a
com.feytuo.chat.activity.ShowBigImage$2$1 -> com.feytuo.chat.activity.ee:
    com.feytuo.chat.activity.ShowBigImage$2 this$1 -> a
    void run() -> run
com.feytuo.chat.activity.ShowBigImage$2$2 -> com.feytuo.chat.activity.ef:
    com.feytuo.chat.activity.ShowBigImage$2 this$1 -> a
    void run() -> run
com.feytuo.chat.activity.ShowBigImage$2$3 -> com.feytuo.chat.activity.eg:
    com.feytuo.chat.activity.ShowBigImage$2 this$1 -> a
    int val$progress -> b
    void run() -> run
com.feytuo.chat.activity.ShowBigImage$3 -> com.feytuo.chat.activity.eh:
    com.feytuo.chat.activity.ShowBigImage this$0 -> a
    com.easemob.cloud.HttpFileManager val$httpFileMgr -> b
    java.lang.String val$remoteFilePath -> c
    java.util.Map val$headers -> d
    com.easemob.cloud.CloudOperationCallback val$callback -> e
    void run() -> run
com.feytuo.chat.activity.ShowNormalFileActivity -> com.feytuo.chat.activity.ShowNormalFileActivity:
    android.widget.ProgressBar progressBar -> a
    java.io.File file -> b
    void onCreate(android.os.Bundle) -> onCreate
    java.io.File access$0(com.feytuo.chat.activity.ShowNormalFileActivity) -> a
    android.widget.ProgressBar access$1(com.feytuo.chat.activity.ShowNormalFileActivity) -> b
com.feytuo.chat.activity.ShowNormalFileActivity$1 -> com.feytuo.chat.activity.ei:
    com.feytuo.chat.activity.ShowNormalFileActivity this$0 -> a
    com.easemob.chat.FileMessageBody val$messageBody -> b
    java.util.Map val$maps -> c
    void run() -> run
    com.feytuo.chat.activity.ShowNormalFileActivity access$0(com.feytuo.chat.activity.ShowNormalFileActivity$1) -> a
com.feytuo.chat.activity.ShowNormalFileActivity$1$1 -> com.feytuo.chat.activity.ej:
    com.feytuo.chat.activity.ShowNormalFileActivity$1 this$1 -> a
    void onSuccess(java.lang.String) -> onSuccess
    void onProgress(int) -> onProgress
    void onError(java.lang.String) -> onError
    com.feytuo.chat.activity.ShowNormalFileActivity$1 access$0(com.feytuo.chat.activity.ShowNormalFileActivity$1$1) -> a
com.feytuo.chat.activity.ShowNormalFileActivity$1$1$1 -> com.feytuo.chat.activity.ek:
    com.feytuo.chat.activity.ShowNormalFileActivity$1$1 this$2 -> a
    void run() -> run
com.feytuo.chat.activity.ShowNormalFileActivity$1$1$2 -> com.feytuo.chat.activity.el:
    com.feytuo.chat.activity.ShowNormalFileActivity$1$1 this$2 -> a
    int val$progress -> b
    void run() -> run
com.feytuo.chat.activity.ShowNormalFileActivity$1$1$3 -> com.feytuo.chat.activity.em:
    com.feytuo.chat.activity.ShowNormalFileActivity$1$1 this$2 -> a
    java.lang.String val$msg -> b
    void run() -> run
com.feytuo.chat.activity.ShowVideoActivity -> com.feytuo.chat.activity.ShowVideoActivity:
    android.widget.RelativeLayout loadingLayout -> a
    android.widget.ProgressBar progressBar -> b
    java.lang.String localFilePath -> c
    void onCreate(android.os.Bundle) -> onCreate
    void downloadVideo(java.lang.String,java.util.Map) -> a
    void onBackPressed() -> onBackPressed
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    android.widget.RelativeLayout access$0(com.feytuo.chat.activity.ShowVideoActivity) -> a
    android.widget.ProgressBar access$1(com.feytuo.chat.activity.ShowVideoActivity) -> b
    java.lang.String access$2(com.feytuo.chat.activity.ShowVideoActivity) -> c
com.feytuo.chat.activity.ShowVideoActivity$1 -> com.feytuo.chat.activity.en:
    com.feytuo.chat.activity.ShowVideoActivity this$0 -> a
    void onSuccess(java.lang.String) -> onSuccess
    void onProgress(int) -> onProgress
    void onError(java.lang.String) -> onError
    com.feytuo.chat.activity.ShowVideoActivity access$0(com.feytuo.chat.activity.ShowVideoActivity$1) -> a
com.feytuo.chat.activity.ShowVideoActivity$1$1 -> com.feytuo.chat.activity.eo:
    com.feytuo.chat.activity.ShowVideoActivity$1 this$1 -> a
    void run() -> run
com.feytuo.chat.activity.ShowVideoActivity$1$2 -> com.feytuo.chat.activity.ep:
    com.feytuo.chat.activity.ShowVideoActivity$1 this$1 -> a
    int val$progress -> b
    void run() -> run
com.feytuo.chat.activity.ShowVideoActivity$1$3 -> com.feytuo.chat.activity.eq:
    com.feytuo.chat.activity.ShowVideoActivity$1 this$1 -> a
    void run() -> run
com.feytuo.chat.activity.ShowVideoActivity$2 -> com.feytuo.chat.activity.er:
    com.feytuo.chat.activity.ShowVideoActivity this$0 -> a
    com.easemob.cloud.HttpFileManager val$httpFileMgr -> b
    java.lang.String val$remoteUrl -> c
    java.util.Map val$header -> d
    com.easemob.cloud.CloudOperationCallback val$callback -> e
    void run() -> run
com.feytuo.chat.activity.VoiceCallActivity -> com.feytuo.chat.activity.VoiceCallActivity:
    android.widget.LinearLayout comingBtnContainer -> b
    android.widget.Button hangupBtn -> c
    android.widget.Button refuseBtn -> d
    android.widget.Button answerBtn -> e
    android.widget.ImageView muteImage -> f
    android.widget.ImageView handsFreeImage -> g
    boolean isMuteState -> h
    boolean isHandsfreeState -> i
    boolean isInComingCall -> j
    android.widget.TextView callStateTextView -> k
    android.media.SoundPool soundPool -> l
    int streamID -> m
    boolean endCallTriggerByMe -> n
    android.os.Handler handler -> o
    android.media.Ringtone ringtone -> p
    int outgoing -> q
    android.widget.TextView nickTextView -> r
    android.widget.TextView durationTextView -> s
    android.media.AudioManager audioManager -> t
    android.widget.Chronometer chronometer -> u
    java.lang.String callDruationText -> v
    java.lang.String username -> w
    com.feytuo.chat.activity.VoiceCallActivity$CallingState callingState -> x
    java.lang.String msgid -> a
    boolean isAnswered -> y
    android.widget.LinearLayout voiceContronlLayout -> z
    int[] $SWITCH_TABLE$com$feytuo$chat$activity$VoiceCallActivity$CallingState -> A
    void onCreate(android.os.Bundle) -> onCreate
    void addCallStateListener() -> a
    void onClick(android.view.View) -> onClick
    int playMakeCallSounds() -> e
    void onDestroy() -> onDestroy
    void onBackPressed() -> onBackPressed
    void openSpeakerOn() -> b
    void closeSpeakerOn() -> c
    void saveCallRecord() -> f
    int access$0(com.feytuo.chat.activity.VoiceCallActivity) -> a
    void access$1(com.feytuo.chat.activity.VoiceCallActivity,int) -> a
    android.widget.TextView access$2(com.feytuo.chat.activity.VoiceCallActivity) -> b
    android.media.SoundPool access$3(com.feytuo.chat.activity.VoiceCallActivity) -> c
    int access$4(com.feytuo.chat.activity.VoiceCallActivity) -> d
    android.widget.Chronometer access$5(com.feytuo.chat.activity.VoiceCallActivity) -> e
    void access$6(com.feytuo.chat.activity.VoiceCallActivity,com.feytuo.chat.activity.VoiceCallActivity$CallingState) -> a
    android.os.Handler access$7(com.feytuo.chat.activity.VoiceCallActivity) -> f
    void access$8(com.feytuo.chat.activity.VoiceCallActivity) -> g
    void access$9(com.feytuo.chat.activity.VoiceCallActivity,java.lang.String) -> a
    boolean access$10(com.feytuo.chat.activity.VoiceCallActivity) -> h
    boolean access$11(com.feytuo.chat.activity.VoiceCallActivity) -> i
    boolean access$12(com.feytuo.chat.activity.VoiceCallActivity) -> j
    int[] $SWITCH_TABLE$com$feytuo$chat$activity$VoiceCallActivity$CallingState() -> d
com.feytuo.chat.activity.VoiceCallActivity$1 -> com.feytuo.chat.activity.es:
    com.feytuo.chat.activity.VoiceCallActivity this$0 -> a
    void run() -> run
com.feytuo.chat.activity.VoiceCallActivity$2 -> com.feytuo.chat.activity.et:
    com.feytuo.chat.activity.VoiceCallActivity this$0 -> a
    void run() -> run
com.feytuo.chat.activity.VoiceCallActivity$3 -> com.feytuo.chat.activity.eu:
    com.feytuo.chat.activity.VoiceCallActivity this$0 -> a
    int[] $SWITCH_TABLE$com$easemob$chat$EMCallStateChangeListener$CallState -> b
    void onCallStateChanged(com.easemob.chat.EMCallStateChangeListener$CallState,com.easemob.chat.EMCallStateChangeListener$CallError) -> onCallStateChanged
    int[] $SWITCH_TABLE$com$easemob$chat$EMCallStateChangeListener$CallState() -> a
    com.feytuo.chat.activity.VoiceCallActivity access$1(com.feytuo.chat.activity.VoiceCallActivity$3) -> a
com.feytuo.chat.activity.VoiceCallActivity$3$1 -> com.feytuo.chat.activity.ev:
    com.feytuo.chat.activity.VoiceCallActivity$3 this$1 -> a
    void run() -> run
com.feytuo.chat.activity.VoiceCallActivity$3$2 -> com.feytuo.chat.activity.ew:
    com.feytuo.chat.activity.VoiceCallActivity$3 this$1 -> a
    void run() -> run
com.feytuo.chat.activity.VoiceCallActivity$3$3 -> com.feytuo.chat.activity.ex:
    com.feytuo.chat.activity.VoiceCallActivity$3 this$1 -> a
    void run() -> run
com.feytuo.chat.activity.VoiceCallActivity$3$4 -> com.feytuo.chat.activity.ey:
    com.feytuo.chat.activity.VoiceCallActivity$3 this$1 -> a
    com.easemob.chat.EMCallStateChangeListener$CallError val$fError -> b
    void postDelayedCloseMsg() -> a
    void run() -> run
    com.feytuo.chat.activity.VoiceCallActivity$3 access$0(com.feytuo.chat.activity.VoiceCallActivity$3$4) -> a
com.feytuo.chat.activity.VoiceCallActivity$3$4$1 -> com.feytuo.chat.activity.ez:
    com.feytuo.chat.activity.VoiceCallActivity$3$4 this$2 -> a
    void run() -> run
com.feytuo.chat.activity.VoiceCallActivity$CallingState -> com.feytuo.chat.activity.fa:
    com.feytuo.chat.activity.VoiceCallActivity$CallingState CANCED -> a
    com.feytuo.chat.activity.VoiceCallActivity$CallingState NORMAL -> b
    com.feytuo.chat.activity.VoiceCallActivity$CallingState REFUESD -> c
    com.feytuo.chat.activity.VoiceCallActivity$CallingState BEREFUESD -> d
    com.feytuo.chat.activity.VoiceCallActivity$CallingState UNANSWERED -> e
    com.feytuo.chat.activity.VoiceCallActivity$CallingState OFFLINE -> f
    com.feytuo.chat.activity.VoiceCallActivity$CallingState NORESPONSE -> g
    com.feytuo.chat.activity.VoiceCallActivity$CallingState BUSY -> h
    com.feytuo.chat.activity.VoiceCallActivity$CallingState[] ENUM$VALUES -> i
    com.feytuo.chat.activity.VoiceCallActivity$CallingState[] values() -> values
    com.feytuo.chat.activity.VoiceCallActivity$CallingState valueOf(java.lang.String) -> valueOf
com.feytuo.chat.adapter.AddContactAdapter -> com.feytuo.chat.adapter.a:
    java.util.List data -> a
    android.content.Context context -> b
    com.feytuo.laoxianghao.util.ImageLoader mImageLoader -> c
    com.feytuo.laoxianghao.view.OnloadDialog pd -> d
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void addContact(com.feytuo.laoxianghao.domain.LXHUser) -> addContact
    void addToLocalDB(java.lang.String,java.lang.String,java.lang.String) -> a
    void setUserHead(com.feytuo.chat.domain.User) -> a
    java.util.List access$0(com.feytuo.chat.adapter.AddContactAdapter) -> a
    void access$1(com.feytuo.chat.adapter.AddContactAdapter,java.lang.String,java.lang.String,java.lang.String) -> a
    android.content.Context access$2(com.feytuo.chat.adapter.AddContactAdapter) -> b
    com.feytuo.laoxianghao.view.OnloadDialog access$3(com.feytuo.chat.adapter.AddContactAdapter) -> c
com.feytuo.chat.adapter.AddContactAdapter$1 -> com.feytuo.chat.adapter.b:
    com.feytuo.chat.adapter.AddContactAdapter this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.feytuo.chat.adapter.AddContactAdapter$2 -> com.feytuo.chat.adapter.c:
    com.feytuo.chat.adapter.AddContactAdapter this$0 -> a
    com.feytuo.laoxianghao.domain.LXHUser val$user -> b
    void run() -> run
    com.feytuo.chat.adapter.AddContactAdapter access$0(com.feytuo.chat.adapter.AddContactAdapter$2) -> a
com.feytuo.chat.adapter.AddContactAdapter$2$1 -> com.feytuo.chat.adapter.d:
    com.feytuo.chat.adapter.AddContactAdapter$2 this$1 -> a
    com.feytuo.laoxianghao.domain.LXHUser val$user -> b
    void run() -> run
com.feytuo.chat.adapter.AddContactAdapter$2$2 -> com.feytuo.chat.adapter.e:
    com.feytuo.chat.adapter.AddContactAdapter$2 this$1 -> a
    java.lang.Exception val$e -> b
    void run() -> run
com.feytuo.chat.adapter.AddContactAdapter$ViewHolder -> com.feytuo.chat.adapter.f:
    android.widget.ImageView head -> b
    android.widget.TextView nickName -> c
    android.widget.Button add -> d
    com.feytuo.chat.adapter.AddContactAdapter this$0 -> a
    void access$0(com.feytuo.chat.adapter.AddContactAdapter$ViewHolder,android.widget.ImageView) -> a
    void access$1(com.feytuo.chat.adapter.AddContactAdapter$ViewHolder,android.widget.TextView) -> a
    void access$2(com.feytuo.chat.adapter.AddContactAdapter$ViewHolder,android.widget.Button) -> a
    android.widget.TextView access$3(com.feytuo.chat.adapter.AddContactAdapter$ViewHolder) -> a
    android.widget.ImageView access$4(com.feytuo.chat.adapter.AddContactAdapter$ViewHolder) -> b
    android.widget.Button access$5(com.feytuo.chat.adapter.AddContactAdapter$ViewHolder) -> c
com.feytuo.chat.adapter.ChatAllHistoryAdapter -> com.feytuo.chat.adapter.g:
    java.lang.String TAG -> a
    android.view.LayoutInflater inflater -> b
    android.content.Context context -> c
    com.feytuo.laoxianghao.util.ImageLoader mImageLoader -> d
    com.feytuo.chat.db.UserDao userDao -> e
    int[] $SWITCH_TABLE$com$easemob$chat$EMMessage$Type -> f
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.String getMessageDigest(com.easemob.chat.EMMessage,android.content.Context) -> a
    void setUserNickName(java.lang.String,android.widget.TextView) -> a
    void getNickNameFromBmob(java.lang.String,android.widget.TextView) -> b
    void setUserHeadUrl(java.lang.String,android.widget.ImageView) -> a
    void getHeadUrlFromBmob(java.lang.String,android.widget.ImageView) -> b
    java.lang.String getStrng(android.content.Context,int) -> a
    int[] $SWITCH_TABLE$com$easemob$chat$EMMessage$Type() -> a
    com.feytuo.chat.db.UserDao access$1(com.feytuo.chat.adapter.ChatAllHistoryAdapter) -> a
    com.feytuo.laoxianghao.util.ImageLoader access$2(com.feytuo.chat.adapter.ChatAllHistoryAdapter) -> b
com.feytuo.chat.adapter.ChatAllHistoryAdapter$1 -> com.feytuo.chat.adapter.h:
    com.feytuo.chat.adapter.ChatAllHistoryAdapter this$0 -> a
    android.widget.TextView val$nameTV -> b
    java.lang.String val$userName -> c
    void onSuccess(java.util.List) -> onSuccess
    void onError(int,java.lang.String) -> onError
com.feytuo.chat.adapter.ChatAllHistoryAdapter$2 -> com.feytuo.chat.adapter.i:
    com.feytuo.chat.adapter.ChatAllHistoryAdapter this$0 -> a
    android.widget.ImageView val$headUrlIV -> b
    java.lang.String val$userName -> c
    void onSuccess(java.util.List) -> onSuccess
    void onError(int,java.lang.String) -> onError
com.feytuo.chat.adapter.ChatAllHistoryAdapter$ViewHolder -> com.feytuo.chat.adapter.j:
    android.widget.TextView name -> a
    android.widget.TextView unreadLabel -> b
    android.widget.TextView message -> c
    android.widget.TextView time -> d
    android.widget.ImageView avatar -> e
    android.view.View msgState -> f
    android.widget.RelativeLayout list_item_layout -> g
com.feytuo.chat.adapter.ChatHistoryAdapter -> com.feytuo.chat.adapter.k:
    android.view.LayoutInflater inflater -> a
    int[] $SWITCH_TABLE$com$easemob$chat$EMMessage$Type -> b
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.String getMessageDigest(com.easemob.chat.EMMessage,android.content.Context) -> a
    java.lang.String getStrng(android.content.Context,int) -> a
    int[] $SWITCH_TABLE$com$easemob$chat$EMMessage$Type() -> a
com.feytuo.chat.adapter.ChatHistoryAdapter$ViewHolder -> com.feytuo.chat.adapter.l:
    android.widget.TextView name -> a
    android.widget.TextView unreadLabel -> b
    android.widget.TextView message -> c
    android.widget.TextView time -> d
    android.widget.ImageView avatar -> e
    android.view.View msgState -> f
    android.widget.RelativeLayout list_item_layout -> g
com.feytuo.chat.adapter.ContactAdapter -> com.feytuo.chat.adapter.m:
    java.lang.String TAG -> a
    android.view.LayoutInflater layoutInflater -> b
    android.widget.EditText query -> c
    android.widget.ImageButton clearSearch -> d
    android.util.SparseIntArray positionOfSection -> e
    android.util.SparseIntArray sectionOfPosition -> f
    com.feytuo.chat.widget.Sidebar sidebar -> g
    int res -> h
    java.util.List data -> i
    java.util.List mOriginalValues -> j
    com.feytuo.laoxianghao.util.ImageLoader mImageLoader -> k
    int getViewTypeCount() -> getViewTypeCount
    int getItemViewType(int) -> getItemViewType
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    com.feytuo.chat.domain.User getItem(int) -> a
    int getCount() -> getCount
    int getPositionForSection(int) -> getPositionForSection
    int getSectionForPosition(int) -> getSectionForPosition
    java.lang.Object[] getSections() -> getSections
    android.widget.Filter getFilter() -> getFilter
    java.lang.Object getItem(int) -> getItem
    android.widget.ImageButton access$1(com.feytuo.chat.adapter.ContactAdapter) -> a
    com.feytuo.chat.widget.Sidebar access$2(com.feytuo.chat.adapter.ContactAdapter) -> b
    android.widget.EditText access$3(com.feytuo.chat.adapter.ContactAdapter) -> c
    void access$4(com.feytuo.chat.adapter.ContactAdapter,java.util.List) -> a
    java.util.List access$5(com.feytuo.chat.adapter.ContactAdapter) -> d
    void access$6(com.feytuo.chat.adapter.ContactAdapter,java.util.List) -> b
com.feytuo.chat.adapter.ContactAdapter$1 -> com.feytuo.chat.adapter.n:
    com.feytuo.chat.adapter.ContactAdapter this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.feytuo.chat.adapter.ContactAdapter$2 -> com.feytuo.chat.adapter.o:
    com.feytuo.chat.adapter.ContactAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.feytuo.chat.adapter.ContactAdapter$3 -> com.feytuo.chat.adapter.p:
    com.feytuo.chat.adapter.ContactAdapter this$0 -> a
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
com.feytuo.chat.adapter.ExpressionAdapter -> com.feytuo.chat.adapter.q:
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.feytuo.chat.adapter.ExpressionPagerAdapter -> com.feytuo.chat.adapter.ExpressionPagerAdapter:
    java.util.List views -> a
    int getCount() -> getCount
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
com.feytuo.chat.adapter.GroupAdapter -> com.feytuo.chat.adapter.r:
    android.view.LayoutInflater inflater -> a
    int getViewTypeCount() -> getViewTypeCount
    int getItemViewType(int) -> getItemViewType
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int getCount() -> getCount
com.feytuo.chat.adapter.GroupAdapter$1 -> com.feytuo.chat.adapter.s:
    com.feytuo.chat.adapter.GroupAdapter this$0 -> a
    android.widget.ImageButton val$clearSearch -> b
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.feytuo.chat.adapter.GroupAdapter$2 -> com.feytuo.chat.adapter.t:
    com.feytuo.chat.adapter.GroupAdapter this$0 -> a
    android.widget.EditText val$query -> b
    void onClick(android.view.View) -> onClick
com.feytuo.chat.adapter.MessageAdapter -> com.feytuo.chat.adapter.u:
    java.lang.String username -> a
    android.view.LayoutInflater inflater -> b
    android.app.Activity activity -> c
    com.easemob.chat.EMConversation conversation -> d
    android.content.Context context -> e
    java.util.Map timers -> f
    com.feytuo.laoxianghao.util.ImageLoader mImageLoader -> g
    com.feytuo.chat.db.UserDao userDao -> h
    com.feytuo.laoxianghao.dao.LXHUserDao lxhuserDao -> i
    int[] $SWITCH_TABLE$com$easemob$chat$EMMessage$Type -> j
    int[] $SWITCH_TABLE$com$easemob$chat$EMMessage$Status -> k
    int getCount() -> getCount
    void refresh() -> a
    com.easemob.chat.EMMessage getItem(int) -> a
    long getItemId(int) -> getItemId
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    android.view.View createViewByMessage(com.easemob.chat.EMMessage,int) -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setHead(java.lang.String,android.widget.ImageView,int) -> a
    void getHeadUrlFromBmob(java.lang.String,android.widget.ImageView,int) -> b
    void handleTextMessage(com.easemob.chat.EMMessage,com.feytuo.chat.adapter.MessageAdapter$ViewHolder,int) -> a
    void handleVoiceCallMessage(com.easemob.chat.EMMessage,com.feytuo.chat.adapter.MessageAdapter$ViewHolder,int) -> b
    void handleImageMessage(com.easemob.chat.EMMessage,com.feytuo.chat.adapter.MessageAdapter$ViewHolder,int,android.view.View) -> a
    void handleVideoMessage(com.easemob.chat.EMMessage,com.feytuo.chat.adapter.MessageAdapter$ViewHolder,int,android.view.View) -> b
    void handleVoiceMessage(com.easemob.chat.EMMessage,com.feytuo.chat.adapter.MessageAdapter$ViewHolder,int,android.view.View) -> c
    void handleFileMessage(com.easemob.chat.EMMessage,com.feytuo.chat.adapter.MessageAdapter$ViewHolder,int,android.view.View) -> d
    void handleLocationMessage(com.easemob.chat.EMMessage,com.feytuo.chat.adapter.MessageAdapter$ViewHolder,int,android.view.View) -> e
    void sendMsgInBackground(com.easemob.chat.EMMessage,com.feytuo.chat.adapter.MessageAdapter$ViewHolder) -> a
    void showDownloadImageProgress(com.easemob.chat.EMMessage,com.feytuo.chat.adapter.MessageAdapter$ViewHolder) -> b
    void sendPictureMessage(com.easemob.chat.EMMessage,com.feytuo.chat.adapter.MessageAdapter$ViewHolder) -> c
    void updateSendedView(com.easemob.chat.EMMessage,com.feytuo.chat.adapter.MessageAdapter$ViewHolder) -> d
    boolean showImageView(java.lang.String,android.widget.ImageView,java.lang.String,java.lang.String,com.easemob.chat.EMMessage) -> a
    void showVideoThumbView(java.lang.String,android.widget.ImageView,java.lang.String,com.easemob.chat.EMMessage) -> a
    java.lang.Object getItem(int) -> getItem
    android.content.Context access$1(com.feytuo.chat.adapter.MessageAdapter) -> a
    android.app.Activity access$2(com.feytuo.chat.adapter.MessageAdapter) -> b
    int[] $SWITCH_TABLE$com$easemob$chat$EMMessage$Type() -> b
    java.lang.String access$4(com.feytuo.chat.adapter.MessageAdapter) -> c
    com.feytuo.laoxianghao.util.ImageLoader access$5(com.feytuo.chat.adapter.MessageAdapter) -> d
    com.feytuo.chat.db.UserDao access$6(com.feytuo.chat.adapter.MessageAdapter) -> e
    com.feytuo.laoxianghao.dao.LXHUserDao access$7(com.feytuo.chat.adapter.MessageAdapter) -> f
    int[] $SWITCH_TABLE$com$easemob$chat$EMMessage$Status() -> c
    void access$9(com.feytuo.chat.adapter.MessageAdapter,com.easemob.chat.EMMessage,com.feytuo.chat.adapter.MessageAdapter$ViewHolder) -> a
com.feytuo.chat.adapter.MessageAdapter$1 -> com.feytuo.chat.adapter.v:
    com.feytuo.chat.adapter.MessageAdapter this$0 -> a
    int val$position -> b
    com.easemob.chat.EMMessage val$message -> c
    void onClick(android.view.View) -> onClick
com.feytuo.chat.adapter.MessageAdapter$10 -> com.feytuo.chat.adapter.w:
    com.feytuo.chat.adapter.MessageAdapter this$0 -> a
    int val$position -> b
    boolean onLongClick(android.view.View) -> onLongClick
com.feytuo.chat.adapter.MessageAdapter$11 -> com.feytuo.chat.adapter.x:
    com.feytuo.chat.adapter.MessageAdapter this$0 -> a
    com.feytuo.chat.adapter.MessageAdapter$ViewHolder val$holder -> b
    void onSuccess() -> onSuccess
    void onProgress(int,java.lang.String) -> onProgress
    void onError(int,java.lang.String) -> onError
    com.feytuo.chat.adapter.MessageAdapter access$0(com.feytuo.chat.adapter.MessageAdapter$11) -> a
com.feytuo.chat.adapter.MessageAdapter$11$1 -> com.feytuo.chat.adapter.y:
    com.feytuo.chat.adapter.MessageAdapter$11 this$1 -> a
    com.feytuo.chat.adapter.MessageAdapter$ViewHolder val$holder -> b
    void run() -> run
com.feytuo.chat.adapter.MessageAdapter$11$2 -> com.feytuo.chat.adapter.z:
    com.feytuo.chat.adapter.MessageAdapter$11 this$1 -> a
    com.feytuo.chat.adapter.MessageAdapter$ViewHolder val$holder -> b
    void run() -> run
com.feytuo.chat.adapter.MessageAdapter$12 -> com.feytuo.chat.adapter.aa:
    com.feytuo.chat.adapter.MessageAdapter this$0 -> a
    java.lang.String val$filePath -> b
    com.easemob.chat.NormalFileMessageBody val$fileMessageBody -> c
    com.easemob.chat.EMMessage val$message -> d
    void onClick(android.view.View) -> onClick
com.feytuo.chat.adapter.MessageAdapter$13 -> com.feytuo.chat.adapter.ab:
    com.feytuo.chat.adapter.MessageAdapter this$0 -> a
    com.feytuo.chat.adapter.MessageAdapter$ViewHolder val$holder -> b
    com.easemob.chat.EMMessage val$message -> c
    java.util.Timer val$timer -> d
    void run() -> run
    com.feytuo.chat.adapter.MessageAdapter access$0(com.feytuo.chat.adapter.MessageAdapter$13) -> a
com.feytuo.chat.adapter.MessageAdapter$13$1 -> com.feytuo.chat.adapter.ac:
    com.feytuo.chat.adapter.MessageAdapter$13 this$1 -> a
    com.feytuo.chat.adapter.MessageAdapter$ViewHolder val$holder -> b
    com.easemob.chat.EMMessage val$message -> c
    java.util.Timer val$timer -> d
    void run() -> run
com.feytuo.chat.adapter.MessageAdapter$14 -> com.feytuo.chat.adapter.ad:
    com.feytuo.chat.adapter.MessageAdapter this$0 -> a
    int val$position -> b
    boolean onLongClick(android.view.View) -> onLongClick
com.feytuo.chat.adapter.MessageAdapter$15 -> com.feytuo.chat.adapter.ae:
    com.feytuo.chat.adapter.MessageAdapter this$0 -> a
    com.easemob.chat.EMMessage val$message -> b
    com.feytuo.chat.adapter.MessageAdapter$ViewHolder val$holder -> c
    void onSuccess() -> onSuccess
    void onError(int,java.lang.String) -> onError
    void onProgress(int,java.lang.String) -> onProgress
com.feytuo.chat.adapter.MessageAdapter$16 -> com.feytuo.chat.adapter.af:
    com.feytuo.chat.adapter.MessageAdapter this$0 -> a
    com.easemob.chat.EMMessage val$message -> b
    com.feytuo.chat.adapter.MessageAdapter$ViewHolder val$holder -> c
    void onSuccess() -> onSuccess
    void onError(int,java.lang.String) -> onError
    void onProgress(int,java.lang.String) -> onProgress
    com.feytuo.chat.adapter.MessageAdapter access$0(com.feytuo.chat.adapter.MessageAdapter$16) -> a
com.feytuo.chat.adapter.MessageAdapter$16$1 -> com.feytuo.chat.adapter.ag:
    com.feytuo.chat.adapter.MessageAdapter$16 this$1 -> a
    com.easemob.chat.EMMessage val$message -> b
    com.feytuo.chat.adapter.MessageAdapter$ViewHolder val$holder -> c
    void run() -> run
com.feytuo.chat.adapter.MessageAdapter$16$2 -> com.feytuo.chat.adapter.ah:
    com.feytuo.chat.adapter.MessageAdapter$16 this$1 -> a
    com.feytuo.chat.adapter.MessageAdapter$ViewHolder val$holder -> b
    int val$progress -> c
    void run() -> run
com.feytuo.chat.adapter.MessageAdapter$17 -> com.feytuo.chat.adapter.ai:
    com.feytuo.chat.adapter.MessageAdapter this$0 -> a
    com.feytuo.chat.adapter.MessageAdapter$ViewHolder val$holder -> b
    void onSuccess() -> onSuccess
    void onError(int,java.lang.String) -> onError
    void onProgress(int,java.lang.String) -> onProgress
    com.feytuo.chat.adapter.MessageAdapter access$0(com.feytuo.chat.adapter.MessageAdapter$17) -> a
com.feytuo.chat.adapter.MessageAdapter$17$1 -> com.feytuo.chat.adapter.aj:
    com.feytuo.chat.adapter.MessageAdapter$17 this$1 -> a
    com.feytuo.chat.adapter.MessageAdapter$ViewHolder val$holder -> b
    void run() -> run
com.feytuo.chat.adapter.MessageAdapter$17$2 -> com.feytuo.chat.adapter.ak:
    com.feytuo.chat.adapter.MessageAdapter$17 this$1 -> a
    com.feytuo.chat.adapter.MessageAdapter$ViewHolder val$holder -> b
    void run() -> run
com.feytuo.chat.adapter.MessageAdapter$17$3 -> com.feytuo.chat.adapter.al:
    com.feytuo.chat.adapter.MessageAdapter$17 this$1 -> a
    com.feytuo.chat.adapter.MessageAdapter$ViewHolder val$holder -> b
    int val$progress -> c
    void run() -> run
com.feytuo.chat.adapter.MessageAdapter$18 -> com.feytuo.chat.adapter.am:
    com.feytuo.chat.adapter.MessageAdapter this$0 -> a
    com.easemob.chat.EMMessage val$message -> b
    com.feytuo.chat.adapter.MessageAdapter$ViewHolder val$holder -> c
    void run() -> run
com.feytuo.chat.adapter.MessageAdapter$19 -> com.feytuo.chat.adapter.an:
    com.feytuo.chat.adapter.MessageAdapter this$0 -> a
    java.lang.String val$localFullSizePath -> b
    com.easemob.chat.EMMessage val$message -> c
    java.lang.String val$remote -> d
    void onClick(android.view.View) -> onClick
com.feytuo.chat.adapter.MessageAdapter$2 -> com.feytuo.chat.adapter.ao:
    com.feytuo.chat.adapter.MessageAdapter this$0 -> a
    int val$position -> b
    boolean onLongClick(android.view.View) -> onLongClick
com.feytuo.chat.adapter.MessageAdapter$20 -> com.feytuo.chat.adapter.ap:
    com.feytuo.chat.adapter.MessageAdapter this$0 -> a
    com.easemob.chat.EMMessage val$message -> b
    void onClick(android.view.View) -> onClick
com.feytuo.chat.adapter.MessageAdapter$3 -> com.feytuo.chat.adapter.aq:
    com.feytuo.chat.adapter.MessageAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.feytuo.chat.adapter.MessageAdapter$4 -> com.feytuo.chat.adapter.ar:
    com.feytuo.chat.adapter.MessageAdapter this$0 -> a
    android.widget.ImageView val$head_iv -> b
    int val$type -> c
    java.lang.String val$userName -> d
    void onSuccess(java.util.List) -> onSuccess
    void onError(int,java.lang.String) -> onError
com.feytuo.chat.adapter.MessageAdapter$5 -> com.feytuo.chat.adapter.as:
    com.feytuo.chat.adapter.MessageAdapter this$0 -> a
    int val$position -> b
    boolean onLongClick(android.view.View) -> onLongClick
com.feytuo.chat.adapter.MessageAdapter$6 -> com.feytuo.chat.adapter.at:
    com.feytuo.chat.adapter.MessageAdapter this$0 -> a
    int val$position -> b
    boolean onLongClick(android.view.View) -> onLongClick
com.feytuo.chat.adapter.MessageAdapter$7 -> com.feytuo.chat.adapter.au:
    com.feytuo.chat.adapter.MessageAdapter this$0 -> a
    com.feytuo.chat.adapter.MessageAdapter$ViewHolder val$holder -> b
    com.easemob.chat.EMMessage val$message -> c
    java.util.Timer val$timer -> d
    void run() -> run
    com.feytuo.chat.adapter.MessageAdapter access$0(com.feytuo.chat.adapter.MessageAdapter$7) -> a
com.feytuo.chat.adapter.MessageAdapter$7$1 -> com.feytuo.chat.adapter.av:
    com.feytuo.chat.adapter.MessageAdapter$7 this$1 -> a
    com.feytuo.chat.adapter.MessageAdapter$ViewHolder val$holder -> b
    com.easemob.chat.EMMessage val$message -> c
    java.util.Timer val$timer -> d
    void run() -> run
com.feytuo.chat.adapter.MessageAdapter$8 -> com.feytuo.chat.adapter.aw:
    com.feytuo.chat.adapter.MessageAdapter this$0 -> a
    int val$position -> b
    boolean onLongClick(android.view.View) -> onLongClick
com.feytuo.chat.adapter.MessageAdapter$9 -> com.feytuo.chat.adapter.ax:
    com.feytuo.chat.adapter.MessageAdapter this$0 -> a
    com.feytuo.chat.adapter.MessageAdapter$ViewHolder val$holder -> b
    com.easemob.chat.EMMessage val$message -> c
    java.util.Timer val$timer -> d
    void run() -> run
    com.feytuo.chat.adapter.MessageAdapter access$0(com.feytuo.chat.adapter.MessageAdapter$9) -> a
com.feytuo.chat.adapter.MessageAdapter$9$1 -> com.feytuo.chat.adapter.ay:
    com.feytuo.chat.adapter.MessageAdapter$9 this$1 -> a
    com.feytuo.chat.adapter.MessageAdapter$ViewHolder val$holder -> b
    com.easemob.chat.EMMessage val$message -> c
    java.util.Timer val$timer -> d
    void run() -> run
com.feytuo.chat.adapter.MessageAdapter$MapClickListener -> com.feytuo.chat.adapter.az:
    com.easemob.util.LatLng location -> a
    java.lang.String address -> b
    com.feytuo.chat.adapter.MessageAdapter this$0 -> c
    void onClick(android.view.View) -> onClick
com.feytuo.chat.adapter.MessageAdapter$ViewHolder -> com.feytuo.chat.adapter.ba:
    android.widget.ImageView iv -> a
    android.widget.TextView tv -> b
    android.widget.ProgressBar pb -> c
    android.widget.ImageView staus_iv -> d
    android.widget.ImageView head_iv -> e
    android.widget.TextView tv_userId -> f
    android.widget.ImageView playBtn -> g
    android.widget.TextView timeLength -> h
    android.widget.TextView size -> i
    android.widget.LinearLayout container_status_btn -> j
    android.widget.LinearLayout ll_container -> k
    android.widget.ImageView iv_read_status -> l
    android.widget.TextView tv_ack -> m
    android.widget.TextView tv_delivered -> n
    android.widget.TextView tv_file_name -> o
    android.widget.TextView tv_file_size -> p
    android.widget.TextView tv_file_download_state -> q
com.feytuo.chat.adapter.NewFriendsMsgAdapter -> com.feytuo.chat.adapter.bb:
    android.content.Context context -> a
    com.feytuo.chat.db.InviteMessgeDao messgeDao -> b
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void acceptInvitation(android.widget.Button,com.feytuo.chat.domain.InviteMessage) -> a
    void access$0(com.feytuo.chat.adapter.NewFriendsMsgAdapter,android.widget.Button,com.feytuo.chat.domain.InviteMessage) -> a
    android.content.Context access$1(com.feytuo.chat.adapter.NewFriendsMsgAdapter) -> a
    com.feytuo.chat.db.InviteMessgeDao access$2(com.feytuo.chat.adapter.NewFriendsMsgAdapter) -> b
com.feytuo.chat.adapter.NewFriendsMsgAdapter$1 -> com.feytuo.chat.adapter.bc:
    com.feytuo.chat.adapter.NewFriendsMsgAdapter this$0 -> a
    com.feytuo.chat.adapter.NewFriendsMsgAdapter$ViewHolder val$holder -> b
    com.feytuo.chat.domain.InviteMessage val$msg -> c
    void onClick(android.view.View) -> onClick
com.feytuo.chat.adapter.NewFriendsMsgAdapter$2 -> com.feytuo.chat.adapter.bd:
    com.feytuo.chat.adapter.NewFriendsMsgAdapter this$0 -> a
    com.feytuo.chat.domain.InviteMessage val$msg -> b
    android.app.ProgressDialog val$pd -> c
    android.widget.Button val$button -> d
    void run() -> run
    com.feytuo.chat.adapter.NewFriendsMsgAdapter access$0(com.feytuo.chat.adapter.NewFriendsMsgAdapter$2) -> a
com.feytuo.chat.adapter.NewFriendsMsgAdapter$2$1 -> com.feytuo.chat.adapter.be:
    com.feytuo.chat.adapter.NewFriendsMsgAdapter$2 this$1 -> a
    android.app.ProgressDialog val$pd -> b
    android.widget.Button val$button -> c
    com.feytuo.chat.domain.InviteMessage val$msg -> d
    void run() -> run
com.feytuo.chat.adapter.NewFriendsMsgAdapter$2$2 -> com.feytuo.chat.adapter.bf:
    com.feytuo.chat.adapter.NewFriendsMsgAdapter$2 this$1 -> a
    android.app.ProgressDialog val$pd -> b
    java.lang.Exception val$e -> c
    void run() -> run
com.feytuo.chat.adapter.NewFriendsMsgAdapter$ViewHolder -> com.feytuo.chat.adapter.bg:
    android.widget.ImageView avator -> a
    android.widget.TextView name -> b
    android.widget.TextView reason -> c
    android.widget.Button status -> d
    android.widget.LinearLayout groupContainer -> e
    android.widget.TextView groupname -> f
com.feytuo.chat.adapter.VoicePlayClickListener -> com.feytuo.chat.adapter.bh:
    com.easemob.chat.EMMessage message -> a
    com.easemob.chat.VoiceMessageBody voiceBody -> b
    android.widget.ImageView voiceIconView -> c
    android.graphics.drawable.AnimationDrawable voiceAnimation -> i
    android.media.MediaPlayer mediaPlayer -> d
    android.widget.ImageView iv_read_status -> e
    android.app.Activity activity -> f
    com.easemob.chat.EMMessage$ChatType chatType -> j
    android.widget.BaseAdapter adapter -> k
    boolean isPlaying -> g
    com.feytuo.chat.adapter.VoicePlayClickListener currentPlayListener -> h
    void stopPlayVoice() -> a
    void playVoice(java.lang.String) -> a
    void showAnimation() -> b
    void onClick(android.view.View) -> onClick
    android.widget.BaseAdapter access$0(com.feytuo.chat.adapter.VoicePlayClickListener) -> a
com.feytuo.chat.adapter.VoicePlayClickListener$1 -> com.feytuo.chat.adapter.bi:
    com.feytuo.chat.adapter.VoicePlayClickListener this$0 -> a
    void onCompletion(android.media.MediaPlayer) -> onCompletion
com.feytuo.chat.adapter.VoicePlayClickListener$2 -> com.feytuo.chat.adapter.bj:
    com.feytuo.chat.adapter.VoicePlayClickListener this$0 -> a
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Void) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.feytuo.chat.db.DbOpenHelper -> com.feytuo.chat.a.a:
    com.feytuo.chat.db.DbOpenHelper instance -> a
    com.feytuo.chat.db.DbOpenHelper getInstance(android.content.Context) -> a
    java.lang.String getUserDatabaseName() -> b
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void closeDB() -> a
com.feytuo.chat.db.InviteMessgeDao -> com.feytuo.chat.a.b:
    com.feytuo.chat.db.DbOpenHelper dbHelper -> a
    java.lang.Integer saveMessage(com.feytuo.chat.domain.InviteMessage) -> a
    void updateMessage(int,android.content.ContentValues) -> a
    java.util.List getMessagesList() -> a
    void deleteMessage(java.lang.String) -> a
com.feytuo.chat.db.UserDao -> com.feytuo.chat.a.c:
    com.feytuo.chat.db.DbOpenHelper dbHelper -> a
    java.util.Map getContactList() -> a
    void deleteContact(java.lang.String) -> a
    void saveContact(com.feytuo.chat.domain.User) -> a
    void saveContactList(java.util.List) -> a
    java.lang.String getUserNickName(java.lang.String) -> b
    java.lang.String getUserHeadUrl(java.lang.String) -> c
    void updateNickName2Conversation(java.lang.String,java.lang.String) -> a
    void updateHeadUrl2Conversation(java.lang.String,java.lang.String) -> b
    void deleteAllUserInfoInConversation() -> b
com.feytuo.chat.domain.InviteMessage -> com.feytuo.chat.domain.a:
    java.lang.String from -> a
    long time -> b
    java.lang.String reason -> c
    com.feytuo.chat.domain.InviteMessage$InviteMesageStatus status -> d
    java.lang.String groupId -> e
    java.lang.String groupName -> f
    int id -> g
    java.lang.String getFrom() -> a
    void setFrom(java.lang.String) -> a
    long getTime() -> b
    void setTime(long) -> a
    java.lang.String getReason() -> c
    void setReason(java.lang.String) -> b
    com.feytuo.chat.domain.InviteMessage$InviteMesageStatus getStatus() -> d
    void setStatus(com.feytuo.chat.domain.InviteMessage$InviteMesageStatus) -> a
    int getId() -> e
    void setId(int) -> a
    java.lang.String getGroupId() -> f
    void setGroupId(java.lang.String) -> c
    java.lang.String getGroupName() -> g
    void setGroupName(java.lang.String) -> d
com.feytuo.chat.domain.InviteMessage$InviteMesageStatus -> com.feytuo.chat.domain.b:
    com.feytuo.chat.domain.InviteMessage$InviteMesageStatus BEINVITEED -> a
    com.feytuo.chat.domain.InviteMessage$InviteMesageStatus BEREFUSED -> b
    com.feytuo.chat.domain.InviteMessage$InviteMesageStatus BEAGREED -> c
    com.feytuo.chat.domain.InviteMessage$InviteMesageStatus BEAPPLYED -> d
    com.feytuo.chat.domain.InviteMessage$InviteMesageStatus AGREED -> e
    com.feytuo.chat.domain.InviteMessage$InviteMesageStatus REFUSED -> f
    com.feytuo.chat.domain.InviteMessage$InviteMesageStatus[] ENUM$VALUES -> g
    com.feytuo.chat.domain.InviteMessage$InviteMesageStatus[] values() -> values
    com.feytuo.chat.domain.InviteMessage$InviteMesageStatus valueOf(java.lang.String) -> valueOf
com.feytuo.chat.domain.User -> com.feytuo.chat.domain.User:
    int unreadMsgCount -> a
    java.lang.String headUrl -> b
    java.lang.String header -> c
    java.lang.String nickName -> d
    java.lang.String getNickName() -> a
    void setNickName(java.lang.String) -> a
    java.lang.String getHeader() -> b
    void setHeader(java.lang.String) -> b
    int getUnreadMsgCount() -> c
    void setUnreadMsgCount(int) -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String getHeadUrl() -> d
    void setHeadUrl(java.lang.String) -> c
com.feytuo.chat.domain.VideoEntity -> com.feytuo.chat.domain.c:
    int ID -> a
    java.lang.String title -> b
    java.lang.String filePath -> c
    int size -> d
    int duration -> e
com.feytuo.chat.receiver.VoiceCallReceiver -> com.feytuo.chat.receiver.VoiceCallReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.feytuo.chat.task.DownloadImageTask -> com.feytuo.chat.b.a:
    com.feytuo.chat.task.DownloadImageTask$DownloadFileCallback callback -> a
    android.graphics.Bitmap doInBackground(com.easemob.chat.EMMessage[]) -> a
    void onPostExecute(android.graphics.Bitmap) -> a
    void onPreExecute() -> onPreExecute
    void onProgressUpdate(java.lang.Integer[]) -> a
    java.lang.String getThumbnailImagePath(java.lang.String) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
com.feytuo.chat.task.DownloadImageTask$DownloadFileCallback -> com.feytuo.chat.b.b:
    void beforeDownload() -> a
    void downloadProgress(int) -> a
    void afterDownload(android.graphics.Bitmap) -> a
com.feytuo.chat.task.LoadImageTask -> com.feytuo.chat.b.c:
    android.widget.ImageView iv -> g
    java.lang.String localFullSizePath -> a
    java.lang.String thumbnailPath -> b
    java.lang.String remotePath -> c
    com.easemob.chat.EMMessage message -> d
    com.easemob.chat.EMMessage$ChatType chatType -> e
    android.app.Activity activity -> f
    android.graphics.Bitmap doInBackground(java.lang.Object[]) -> a
    void onPostExecute(android.graphics.Bitmap) -> a
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.feytuo.chat.task.LoadImageTask$1 -> com.feytuo.chat.b.d:
    com.feytuo.chat.task.LoadImageTask this$0 -> a
    void onClick(android.view.View) -> onClick
com.feytuo.chat.task.LoadImageTask$2 -> com.feytuo.chat.b.e:
    com.feytuo.chat.task.LoadImageTask this$0 -> a
    void run() -> run
com.feytuo.chat.task.LoadLocalBigImgTask -> com.feytuo.chat.b.f:
    android.widget.ProgressBar pb -> a
    com.feytuo.chat.widget.photoview.PhotoView photoView -> b
    java.lang.String path -> c
    int width -> d
    int height -> e
    android.content.Context context -> f
    void onPreExecute() -> onPreExecute
    android.graphics.Bitmap doInBackground(java.lang.Void[]) -> a
    void onPostExecute(android.graphics.Bitmap) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.feytuo.chat.task.LoadVideoImageTask -> com.feytuo.chat.b.g:
    android.widget.ImageView iv -> f
    java.lang.String thumbnailPath -> a
    java.lang.String thumbnailUrl -> b
    android.app.Activity activity -> c
    com.easemob.chat.EMMessage message -> d
    android.widget.BaseAdapter adapter -> e
    android.graphics.Bitmap doInBackground(java.lang.Object[]) -> a
    void onPostExecute(android.graphics.Bitmap) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.feytuo.chat.task.LoadVideoImageTask$1 -> com.feytuo.chat.b.h:
    com.feytuo.chat.task.LoadVideoImageTask this$0 -> a
    void onClick(android.view.View) -> onClick
com.feytuo.chat.task.LoadVideoImageTask$2 -> com.feytuo.chat.b.i:
    com.feytuo.chat.task.LoadVideoImageTask this$0 -> a
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Void) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.feytuo.chat.utils.CommonUtils -> com.feytuo.chat.utils.a:
    boolean isNetWorkConnected(android.content.Context) -> a
    boolean isExitsSdcard() -> a
    java.lang.String getTopActivity(android.content.Context) -> b
com.feytuo.chat.utils.ImageCache -> com.feytuo.chat.utils.b:
    com.feytuo.chat.utils.ImageCache imageCache -> a
    android.support.v4.util.LruCache cache -> b
    com.feytuo.chat.utils.ImageCache getInstance() -> a
    android.graphics.Bitmap put(java.lang.String,android.graphics.Bitmap) -> a
    android.graphics.Bitmap get(java.lang.String) -> a
com.feytuo.chat.utils.ImageCache$1 -> com.feytuo.chat.utils.c:
    com.feytuo.chat.utils.ImageCache this$0 -> a
    int sizeOf(java.lang.String,android.graphics.Bitmap) -> a
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
com.feytuo.chat.utils.ImageUtils -> com.feytuo.chat.utils.d:
    java.lang.String getImagePath(java.lang.String) -> a
    java.lang.String getThumbnailImagePath(java.lang.String) -> b
com.feytuo.chat.utils.PreferenceUtils -> com.feytuo.chat.utils.e:
    android.content.SharedPreferences mSharedPreferences -> a
    com.feytuo.chat.utils.PreferenceUtils mPreferenceUtils -> b
    android.content.SharedPreferences$Editor editor -> c
    java.lang.String SHARED_KEY_SETTING_NOTIFICATION -> d
    java.lang.String SHARED_KEY_SETTING_SOUND -> e
    java.lang.String SHARED_KEY_SETTING_VIBRATE -> f
    java.lang.String SHARED_KEY_SETTING_SPEAKER -> g
    com.feytuo.chat.utils.PreferenceUtils getInstance(android.content.Context) -> a
    void setSettingMsgNotification(boolean) -> a
    boolean getSettingMsgNotification() -> a
    void setSettingMsgSound(boolean) -> b
    boolean getSettingMsgSound() -> b
    void setSettingMsgVibrate(boolean) -> c
    boolean getSettingMsgVibrate() -> c
    void setSettingMsgSpeaker(boolean) -> d
    boolean getSettingMsgSpeaker() -> d
com.feytuo.chat.utils.SmileUtils -> com.feytuo.chat.utils.SmileUtils:
    java.lang.String xx_1 -> xx_1
    java.lang.String xx_2 -> xx_2
    java.lang.String xx_3 -> xx_3
    java.lang.String xx_4 -> xx_4
    java.lang.String xx_5 -> xx_5
    java.lang.String xx_6 -> xx_6
    java.lang.String xx_7 -> xx_7
    java.lang.String xx_8 -> xx_8
    java.lang.String xx_9 -> xx_9
    java.lang.String xx_10 -> xx_10
    java.lang.String xx_11 -> xx_11
    java.lang.String xx_12 -> xx_12
    java.lang.String xx_13 -> xx_13
    java.lang.String xx_14 -> xx_14
    java.lang.String xx_15 -> xx_15
    java.lang.String xx_16 -> xx_16
    java.lang.String xx_17 -> xx_17
    java.lang.String xx_18 -> xx_18
    java.lang.String xx_19 -> xx_19
    java.lang.String xx_20 -> xx_20
    java.lang.String xx_21 -> xx_21
    java.lang.String xx_22 -> xx_22
    java.lang.String xx_23 -> xx_23
    java.lang.String xx_24 -> xx_24
    java.lang.String xx_25 -> xx_25
    java.lang.String xx_26 -> xx_26
    java.lang.String xx_27 -> xx_27
    java.lang.String xx_28 -> xx_28
    java.lang.String xx_29 -> xx_29
    java.lang.String xx_30 -> xx_30
    java.lang.String xx_31 -> xx_31
    java.lang.String xx_32 -> xx_32
    java.lang.String xx_33 -> xx_33
    java.lang.String xx_34 -> xx_34
    java.lang.String xx_35 -> xx_35
    java.lang.String xx_36 -> xx_36
    java.lang.String xx_37 -> xx_37
    java.lang.String xx_38 -> xx_38
    java.lang.String xx_39 -> xx_39
    java.lang.String xx_40 -> xx_40
    java.lang.String xx_41 -> xx_41
    java.lang.String xx_42 -> xx_42
    java.lang.String xx_43 -> xx_43
    java.lang.String xx_44 -> xx_44
    java.lang.String xx_45 -> xx_45
    java.lang.String xx_46 -> xx_46
    java.lang.String xx_47 -> xx_47
    java.lang.String xx_48 -> xx_48
    java.lang.String xx_49 -> xx_49
    java.lang.String xx_50 -> xx_50
    java.lang.String xx_51 -> xx_51
    java.lang.String xx_52 -> xx_52
    java.lang.String xx_53 -> xx_53
    java.lang.String xx_54 -> xx_54
    java.lang.String xx_55 -> xx_55
    java.lang.String xx_56 -> xx_56
    java.lang.String xx_57 -> xx_57
    java.lang.String xx_58 -> xx_58
    java.lang.String xx_59 -> xx_59
    java.lang.String xx_60 -> xx_60
    java.lang.String xx_61 -> xx_61
    java.lang.String xx_62 -> xx_62
    java.lang.String xx_63 -> xx_63
    java.lang.String xx_64 -> xx_64
    java.lang.String xx_65 -> xx_65
    java.lang.String xx_66 -> xx_66
    java.lang.String xx_67 -> xx_67
    java.lang.String xx_68 -> xx_68
    java.lang.String xx_69 -> xx_69
    java.lang.String xx_70 -> xx_70
    java.lang.String xx_71 -> xx_71
    java.lang.String xx_72 -> xx_72
    java.lang.String xx_73 -> xx_73
    java.lang.String xx_74 -> xx_74
    java.lang.String xx_75 -> xx_75
    java.lang.String xx_76 -> xx_76
    java.lang.String xx_77 -> xx_77
    java.lang.String xx_78 -> xx_78
    java.lang.String xx_79 -> xx_79
    java.lang.String xx_80 -> xx_80
    java.lang.String xx_81 -> xx_81
    java.lang.String xx_82 -> xx_82
    java.lang.String xx_83 -> xx_83
    java.lang.String xx_84 -> xx_84
    java.lang.String xx_85 -> xx_85
    java.lang.String xx_86 -> xx_86
    java.lang.String xx_87 -> xx_87
    java.lang.String xx_88 -> xx_88
    java.lang.String xx_89 -> xx_89
    java.lang.String xx_90 -> xx_90
    android.text.Spannable$Factory spannableFactory -> spannableFactory
    java.util.Map emoticons -> emoticons
    void addPattern(java.util.Map,java.lang.String,int) -> addPattern
    boolean addSmiles(android.content.Context,android.text.Spannable) -> addSmiles
    android.text.Spannable getSmiledText(android.content.Context,java.lang.CharSequence) -> getSmiledText
    boolean containsKey(java.lang.String) -> containsKey
com.feytuo.chat.video.util.AsyncTask -> com.feytuo.chat.video.util.a:
    java.util.concurrent.ThreadFactory sThreadFactory -> d
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> e
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> a
    java.util.concurrent.Executor SERIAL_EXECUTOR -> b
    java.util.concurrent.Executor DUAL_THREAD_EXECUTOR -> c
    com.feytuo.chat.video.util.AsyncTask$InternalHandler sHandler -> f
    java.util.concurrent.Executor sDefaultExecutor -> g
    com.feytuo.chat.video.util.AsyncTask$WorkerRunnable mWorker -> h
    java.util.concurrent.FutureTask mFuture -> i
    com.feytuo.chat.video.util.AsyncTask$Status mStatus -> j
    java.util.concurrent.atomic.AtomicBoolean mCancelled -> k
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> l
    int[] $SWITCH_TABLE$com$feytuo$chat$video$util$AsyncTask$Status -> m
    void postResultIfNotInvoked(java.lang.Object) -> c
    java.lang.Object postResult(java.lang.Object) -> d
    java.lang.Object doInBackground(java.lang.Object[]) -> a
    void onPreExecute() -> a
    void onPostExecute(java.lang.Object) -> a
    void onProgressUpdate(java.lang.Object[]) -> b
    void onCancelled(java.lang.Object) -> b
    void onCancelled() -> b
    boolean isCancelled() -> c
    boolean cancel(boolean) -> cancel
    com.feytuo.chat.video.util.AsyncTask execute(java.lang.Object[]) -> c
    com.feytuo.chat.video.util.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> a
    void finish(java.lang.Object) -> e
    void access$0(com.feytuo.chat.video.util.AsyncTask,java.lang.Object) -> a
    java.util.concurrent.atomic.AtomicBoolean access$1(com.feytuo.chat.video.util.AsyncTask) -> a
    java.lang.Object access$2(com.feytuo.chat.video.util.AsyncTask,java.lang.Object) -> b
    void access$3(com.feytuo.chat.video.util.AsyncTask,java.lang.Object) -> c
    int[] $SWITCH_TABLE$com$feytuo$chat$video$util$AsyncTask$Status() -> d
com.feytuo.chat.video.util.AsyncTask$1 -> com.feytuo.chat.video.util.b:
    java.util.concurrent.atomic.AtomicInteger mCount -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.feytuo.chat.video.util.AsyncTask$2 -> com.feytuo.chat.video.util.c:
    com.feytuo.chat.video.util.AsyncTask this$0 -> a
    java.lang.Object call() -> call
com.feytuo.chat.video.util.AsyncTask$3 -> com.feytuo.chat.video.util.d:
    com.feytuo.chat.video.util.AsyncTask this$0 -> a
    void done() -> done
com.feytuo.chat.video.util.AsyncTask$AsyncTaskResult -> com.feytuo.chat.video.util.e:
    com.feytuo.chat.video.util.AsyncTask mTask -> a
    java.lang.Object[] mData -> b
com.feytuo.chat.video.util.AsyncTask$InternalHandler -> com.feytuo.chat.video.util.f:
    void handleMessage(android.os.Message) -> handleMessage
com.feytuo.chat.video.util.AsyncTask$SerialExecutor -> com.feytuo.chat.video.util.g:
    java.util.ArrayDeque mTasks -> a
    java.lang.Runnable mActive -> b
    void execute(java.lang.Runnable) -> execute
    void scheduleNext() -> a
com.feytuo.chat.video.util.AsyncTask$SerialExecutor$1 -> com.feytuo.chat.video.util.h:
    com.feytuo.chat.video.util.AsyncTask$SerialExecutor this$1 -> a
    java.lang.Runnable val$r -> b
    void run() -> run
com.feytuo.chat.video.util.AsyncTask$Status -> com.feytuo.chat.video.util.i:
    com.feytuo.chat.video.util.AsyncTask$Status PENDING -> a
    com.feytuo.chat.video.util.AsyncTask$Status RUNNING -> b
    com.feytuo.chat.video.util.AsyncTask$Status FINISHED -> c
    com.feytuo.chat.video.util.AsyncTask$Status[] ENUM$VALUES -> d
    com.feytuo.chat.video.util.AsyncTask$Status[] values() -> values
    com.feytuo.chat.video.util.AsyncTask$Status valueOf(java.lang.String) -> valueOf
com.feytuo.chat.video.util.AsyncTask$WorkerRunnable -> com.feytuo.chat.video.util.j:
    java.lang.Object[] mParams -> b
com.feytuo.chat.video.util.ImageCache -> com.feytuo.chat.video.util.ImageCache:
    android.support.v4.util.LruCache mMemoryCache -> a
    com.feytuo.chat.video.util.ImageCache$ImageCacheParams mCacheParams -> b
    java.util.Set mReusableBitmaps -> c
    com.feytuo.chat.video.util.ImageCache getInstance(android.support.v4.app.FragmentManager,com.feytuo.chat.video.util.ImageCache$ImageCacheParams) -> a
    void init(com.feytuo.chat.video.util.ImageCache$ImageCacheParams) -> a
    void addBitmapToCache(java.lang.String,android.graphics.drawable.BitmapDrawable) -> a
    android.graphics.drawable.BitmapDrawable getBitmapFromMemCache(java.lang.String) -> a
    void clearCache() -> a
    int getBitmapSize(android.graphics.drawable.BitmapDrawable) -> a
    com.feytuo.chat.video.util.ImageCache$RetainFragment findOrCreateRetainFragment(android.support.v4.app.FragmentManager) -> a
    java.util.Set access$0(com.feytuo.chat.video.util.ImageCache) -> a
com.feytuo.chat.video.util.ImageCache$1 -> com.feytuo.chat.video.util.k:
    com.feytuo.chat.video.util.ImageCache this$0 -> a
    void entryRemoved(boolean,java.lang.String,android.graphics.drawable.BitmapDrawable,android.graphics.drawable.BitmapDrawable) -> a
    int sizeOf(java.lang.String,android.graphics.drawable.BitmapDrawable) -> a
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
com.feytuo.chat.video.util.ImageCache$ImageCacheParams -> com.feytuo.chat.video.util.l:
    int memCacheSize -> a
    int compressQuality -> b
    boolean memoryCacheEnabled -> c
    boolean initDiskCacheOnCreate -> d
    void setMemCacheSizePercent(float) -> a
com.feytuo.chat.video.util.ImageCache$RetainFragment -> com.feytuo.chat.video.util.ImageCache$RetainFragment:
    java.lang.Object mObject -> a
    void onCreate(android.os.Bundle) -> onCreate
    void setObject(java.lang.Object) -> a
    java.lang.Object getObject() -> a
com.feytuo.chat.video.util.ImageResizer -> com.feytuo.chat.video.util.m:
    int mImageWidth -> a
    int mImageHeight -> b
    void setImageSize(int,int) -> a
    void setImageSize(int) -> a
    android.graphics.Bitmap processBitmap(java.lang.Object) -> a
com.feytuo.chat.video.util.ImageWorker -> com.feytuo.chat.video.util.n:
    com.feytuo.chat.video.util.ImageCache mImageCache -> a
    com.feytuo.chat.video.util.ImageCache$ImageCacheParams mImageCacheParams -> b
    android.graphics.Bitmap mLoadingBitmap -> e
    boolean mFadeInBitmap -> f
    boolean mExitTasksEarly -> g
    boolean mPauseWork -> c
    java.lang.Object mPauseWorkLock -> h
    android.content.res.Resources mResources -> d
    void loadImage(java.lang.Object,android.widget.ImageView) -> a
    void setLoadingImage(int) -> b
    void addImageCache(android.support.v4.app.FragmentManager,com.feytuo.chat.video.util.ImageCache$ImageCacheParams) -> a
    void setExitTasksEarly(boolean) -> a
    android.graphics.Bitmap processBitmap(java.lang.Object) -> a
    boolean cancelPotentialWork(java.lang.Object,android.widget.ImageView) -> b
    com.feytuo.chat.video.util.ImageWorker$BitmapWorkerTask getBitmapWorkerTask(android.widget.ImageView) -> b
    void setImageDrawable(android.widget.ImageView,android.graphics.drawable.Drawable) -> a
    void setPauseWork(boolean) -> b
    void clearCacheInternal() -> a
    void clearCache() -> b
    void closeCache() -> c
    java.lang.Object access$0(com.feytuo.chat.video.util.ImageWorker) -> a
    boolean access$1(com.feytuo.chat.video.util.ImageWorker) -> b
    com.feytuo.chat.video.util.ImageCache access$2(com.feytuo.chat.video.util.ImageWorker) -> c
    void access$3(com.feytuo.chat.video.util.ImageWorker,android.widget.ImageView,android.graphics.drawable.Drawable) -> a
    com.feytuo.chat.video.util.ImageWorker$BitmapWorkerTask access$4(android.widget.ImageView) -> a
com.feytuo.chat.video.util.ImageWorker$AsyncDrawable -> com.feytuo.chat.video.util.o:
    java.lang.ref.WeakReference bitmapWorkerTaskReference -> a
    com.feytuo.chat.video.util.ImageWorker$BitmapWorkerTask getBitmapWorkerTask() -> a
com.feytuo.chat.video.util.ImageWorker$BitmapWorkerTask -> com.feytuo.chat.video.util.p:
    java.lang.Object mData -> e
    java.lang.ref.WeakReference imageViewReference -> f
    com.feytuo.chat.video.util.ImageWorker this$0 -> d
    android.graphics.drawable.BitmapDrawable doInBackground(java.lang.Void[]) -> a
    void onPostExecute(android.graphics.drawable.BitmapDrawable) -> a
    void onCancelled(android.graphics.drawable.BitmapDrawable) -> b
    android.widget.ImageView getAttachedImageView() -> e
    void onPostExecute(java.lang.Object) -> a
    void onCancelled(java.lang.Object) -> b
    java.lang.Object doInBackground(java.lang.Object[]) -> a
    java.lang.Object access$3(com.feytuo.chat.video.util.ImageWorker$BitmapWorkerTask) -> a
com.feytuo.chat.video.util.ImageWorker$CacheAsyncTask -> com.feytuo.chat.video.util.q:
    com.feytuo.chat.video.util.ImageWorker this$0 -> d
    java.lang.Void doInBackground(java.lang.Object[]) -> d
    java.lang.Object doInBackground(java.lang.Object[]) -> a
com.feytuo.chat.video.util.RecyclingBitmapDrawable -> com.feytuo.chat.video.util.r:
    int mCacheRefCount -> a
    int mDisplayRefCount -> b
    boolean mHasBeenDisplayed -> c
    void setIsDisplayed(boolean) -> a
    void setIsCached(boolean) -> b
    void checkState() -> a
    boolean hasValidBitmap() -> b
com.feytuo.chat.video.util.Utils -> com.feytuo.chat.video.util.s:
    boolean hasHoneycomb() -> a
    boolean hasHoneycombMR1() -> b
    boolean hasJellyBean() -> c
    java.util.List getResolutionList(android.hardware.Camera) -> a
com.feytuo.chat.video.util.Utils$ResolutionComparator -> com.feytuo.chat.video.util.t:
    int compare(android.hardware.Camera$Size,android.hardware.Camera$Size) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.feytuo.chat.widget.ExpandGridView -> com.feytuo.chat.widget.ExpandGridView:
    void onMeasure(int,int) -> onMeasure
com.feytuo.chat.widget.PasteEditText -> com.feytuo.chat.widget.PasteEditText:
    android.content.Context context -> a
    boolean onTextContextMenuItem(int) -> onTextContextMenuItem
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.feytuo.chat.widget.RecyclingImageView -> com.feytuo.chat.widget.RecyclingImageView:
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    void notifyDrawable(android.graphics.drawable.Drawable,boolean) -> a
com.feytuo.chat.widget.Sidebar -> com.feytuo.chat.widget.Sidebar:
    android.graphics.Paint paint -> a
    android.widget.TextView header -> b
    float height -> c
    android.widget.ListView mListView -> d
    android.content.Context context -> e
    java.lang.String[] sections -> f
    void setListView(android.widget.ListView) -> setListView
    void init() -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    int sectionForPoint(float) -> a
    void setHeaderTextAndscroll(android.view.MotionEvent) -> setHeaderTextAndscroll
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
com.feytuo.chat.widget.photoview.Compat -> com.feytuo.chat.widget.photoview.a:
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
com.feytuo.chat.widget.photoview.PhotoView -> com.feytuo.chat.widget.photoview.PhotoView:
    com.feytuo.chat.widget.photoview.PhotoViewAttacher mAttacher -> a
    android.widget.ImageView$ScaleType mPendingScaleType -> b
    android.graphics.RectF getDisplayRect() -> getDisplayRect
    float getMinScale() -> getMinScale
    float getMidScale() -> getMidScale
    float getMaxScale() -> getMaxScale
    float getScale() -> getScale
    android.widget.ImageView$ScaleType getScaleType() -> getScaleType
    void setAllowParentInterceptOnEdge(boolean) -> setAllowParentInterceptOnEdge
    void setMinScale(float) -> setMinScale
    void setMidScale(float) -> setMidScale
    void setMaxScale(float) -> setMaxScale
    void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    void setImageResource(int) -> setImageResource
    void setImageURI(android.net.Uri) -> setImageURI
    void setOnMatrixChangeListener(com.feytuo.chat.widget.photoview.PhotoViewAttacher$OnMatrixChangedListener) -> setOnMatrixChangeListener
    void setOnLongClickListener(android.view.View$OnLongClickListener) -> setOnLongClickListener
    void setOnPhotoTapListener(com.feytuo.chat.widget.photoview.PhotoViewAttacher$OnPhotoTapListener) -> setOnPhotoTapListener
    void setOnViewTapListener(com.feytuo.chat.widget.photoview.PhotoViewAttacher$OnViewTapListener) -> setOnViewTapListener
    void setScaleType(android.widget.ImageView$ScaleType) -> setScaleType
    void setZoomable(boolean) -> setZoomable
    void onDetachedFromWindow() -> onDetachedFromWindow
com.feytuo.chat.widget.photoview.PhotoViewAttacher -> com.feytuo.chat.widget.photoview.b:
    boolean DEBUG -> a
    float mMinScale -> b
    float mMaxScale -> c
    boolean mAllowParentInterceptOnEdge -> d
    java.lang.ref.WeakReference mImageView -> e
    android.view.ViewTreeObserver mViewTreeObserver -> f
    android.view.GestureDetector mGestureDetector -> g
    com.feytuo.chat.widget.photoview.VersionedGestureDetector mScaleDragDetector -> h
    android.graphics.Matrix mBaseMatrix -> i
    android.graphics.Matrix mDrawMatrix -> j
    android.graphics.Matrix mSuppMatrix -> k
    android.graphics.RectF mDisplayRect -> l
    float[] mMatrixValues -> m
    com.feytuo.chat.widget.photoview.PhotoViewAttacher$OnMatrixChangedListener mMatrixChangeListener -> n
    com.feytuo.chat.widget.photoview.PhotoViewAttacher$OnPhotoTapListener mPhotoTapListener -> o
    com.feytuo.chat.widget.photoview.PhotoViewAttacher$OnViewTapListener mViewTapListener -> p
    android.view.View$OnLongClickListener mLongClickListener -> q
    int mIvTop -> r
    int mIvRight -> s
    int mIvBottom -> t
    int mIvLeft -> u
    com.feytuo.chat.widget.photoview.PhotoViewAttacher$FlingRunnable mCurrentFlingRunnable -> v
    int mScrollEdge -> w
    boolean mZoomEnabled -> x
    android.widget.ImageView$ScaleType mScaleType -> y
    int[] $SWITCH_TABLE$android$widget$ImageView$ScaleType -> z
    void checkZoomLevels(float,float) -> b
    boolean hasDrawable(android.widget.ImageView) -> a
    boolean isSupportedScaleType(android.widget.ImageView$ScaleType) -> b
    void setImageViewScaleTypeMatrix(android.widget.ImageView) -> b
    void cleanup() -> a
    android.graphics.RectF getDisplayRect() -> b
    android.widget.ImageView getImageView() -> c
    float getMinScale() -> d
    float getMaxScale() -> e
    float getScale() -> f
    android.widget.ImageView$ScaleType getScaleType() -> g
    boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    boolean onDoubleTapEvent(android.view.MotionEvent) -> onDoubleTapEvent
    void onDrag(float,float) -> a
    void onFling(float,float,float,float) -> a
    void onGlobalLayout() -> onGlobalLayout
    void onScale(float,float,float) -> a
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void setAllowParentInterceptOnEdge(boolean) -> a
    void setMinScale(float) -> a
    void setMaxScale(float) -> b
    void setOnLongClickListener(android.view.View$OnLongClickListener) -> a
    void setOnMatrixChangeListener(com.feytuo.chat.widget.photoview.PhotoViewAttacher$OnMatrixChangedListener) -> a
    void setOnPhotoTapListener(com.feytuo.chat.widget.photoview.PhotoViewAttacher$OnPhotoTapListener) -> a
    void setOnViewTapListener(com.feytuo.chat.widget.photoview.PhotoViewAttacher$OnViewTapListener) -> a
    void setScaleType(android.widget.ImageView$ScaleType) -> a
    void setZoomable(boolean) -> b
    void update() -> h
    void zoomTo(float,float,float) -> b
    android.graphics.Matrix getDisplayMatrix() -> i
    void cancelFling() -> l
    void checkAndDisplayMatrix() -> m
    void checkImageViewScaleType() -> n
    void checkMatrixBounds() -> o
    android.graphics.RectF getDisplayRect(android.graphics.Matrix) -> a
    float getValue(android.graphics.Matrix,int) -> a
    void resetMatrix() -> p
    void setImageViewMatrix(android.graphics.Matrix) -> b
    void updateBaseMatrix(android.graphics.drawable.Drawable) -> a
    float getMidScale() -> j
    void setMidScale(float) -> c
    android.graphics.Matrix access$0(com.feytuo.chat.widget.photoview.PhotoViewAttacher) -> a
    void access$1(com.feytuo.chat.widget.photoview.PhotoViewAttacher) -> b
    void access$2(com.feytuo.chat.widget.photoview.PhotoViewAttacher,android.graphics.Matrix) -> a
    int[] $SWITCH_TABLE$android$widget$ImageView$ScaleType() -> k
    android.view.View$OnLongClickListener access$4(com.feytuo.chat.widget.photoview.PhotoViewAttacher) -> c
    java.lang.ref.WeakReference access$5(com.feytuo.chat.widget.photoview.PhotoViewAttacher) -> d
com.feytuo.chat.widget.photoview.PhotoViewAttacher$1 -> com.feytuo.chat.widget.photoview.c:
    com.feytuo.chat.widget.photoview.PhotoViewAttacher this$0 -> a
    void onLongPress(android.view.MotionEvent) -> onLongPress
com.feytuo.chat.widget.photoview.PhotoViewAttacher$AnimatedZoomRunnable -> com.feytuo.chat.widget.photoview.d:
    float mFocalX -> b
    float mFocalY -> c
    float mTargetZoom -> d
    float mDeltaScale -> e
    com.feytuo.chat.widget.photoview.PhotoViewAttacher this$0 -> a
    void run() -> run
com.feytuo.chat.widget.photoview.PhotoViewAttacher$FlingRunnable -> com.feytuo.chat.widget.photoview.e:
    com.feytuo.chat.widget.photoview.ScrollerProxy mScroller -> b
    int mCurrentX -> c
    int mCurrentY -> d
    com.feytuo.chat.widget.photoview.PhotoViewAttacher this$0 -> a
    void cancelFling() -> a
    void fling(int,int,int,int) -> a
    void run() -> run
com.feytuo.chat.widget.photoview.PhotoViewAttacher$OnMatrixChangedListener -> com.feytuo.chat.widget.photoview.f:
    void onMatrixChanged(android.graphics.RectF) -> a
com.feytuo.chat.widget.photoview.PhotoViewAttacher$OnPhotoTapListener -> com.feytuo.chat.widget.photoview.g:
    void onPhotoTap(android.view.View,float,float) -> a
com.feytuo.chat.widget.photoview.PhotoViewAttacher$OnViewTapListener -> com.feytuo.chat.widget.photoview.h:
    void onViewTap(android.view.View,float,float) -> a
com.feytuo.chat.widget.photoview.SDK16 -> com.feytuo.chat.widget.photoview.i:
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
com.feytuo.chat.widget.photoview.ScrollerProxy -> com.feytuo.chat.widget.photoview.j:
    com.feytuo.chat.widget.photoview.ScrollerProxy getScroller(android.content.Context) -> a
    boolean computeScrollOffset() -> a
    void fling(int,int,int,int,int,int,int,int,int,int) -> a
    void forceFinished(boolean) -> a
    int getCurrX() -> b
    int getCurrY() -> c
com.feytuo.chat.widget.photoview.ScrollerProxy$GingerScroller -> com.feytuo.chat.widget.photoview.k:
    android.widget.OverScroller mScroller -> a
    boolean computeScrollOffset() -> a
    void fling(int,int,int,int,int,int,int,int,int,int) -> a
    void forceFinished(boolean) -> a
    int getCurrX() -> b
    int getCurrY() -> c
com.feytuo.chat.widget.photoview.ScrollerProxy$PreGingerScroller -> com.feytuo.chat.widget.photoview.l:
    android.widget.Scroller mScroller -> a
    boolean computeScrollOffset() -> a
    void fling(int,int,int,int,int,int,int,int,int,int) -> a
    void forceFinished(boolean) -> a
    int getCurrX() -> b
    int getCurrY() -> c
com.feytuo.chat.widget.photoview.VersionedGestureDetector -> com.feytuo.chat.widget.photoview.m:
    com.feytuo.chat.widget.photoview.VersionedGestureDetector$OnGestureListener mListener -> a
    com.feytuo.chat.widget.photoview.VersionedGestureDetector newInstance(android.content.Context,com.feytuo.chat.widget.photoview.VersionedGestureDetector$OnGestureListener) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> a
    boolean isScaling() -> a
com.feytuo.chat.widget.photoview.VersionedGestureDetector$CupcakeDetector -> com.feytuo.chat.widget.photoview.n:
    float mLastTouchX -> b
    float mLastTouchY -> c
    float mTouchSlop -> d
    float mMinimumVelocity -> e
    android.view.VelocityTracker mVelocityTracker -> f
    boolean mIsDragging -> g
    float getActiveX(android.view.MotionEvent) -> b
    float getActiveY(android.view.MotionEvent) -> c
    boolean isScaling() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> a
com.feytuo.chat.widget.photoview.VersionedGestureDetector$EclairDetector -> com.feytuo.chat.widget.photoview.o:
    int mActivePointerId -> f
    int mActivePointerIndex -> g
    float getActiveX(android.view.MotionEvent) -> b
    float getActiveY(android.view.MotionEvent) -> c
    boolean onTouchEvent(android.view.MotionEvent) -> a
com.feytuo.chat.widget.photoview.VersionedGestureDetector$FroyoDetector -> com.feytuo.chat.widget.photoview.p:
    android.view.ScaleGestureDetector mDetector -> f
    android.view.ScaleGestureDetector$OnScaleGestureListener mScaleListener -> g
    boolean isScaling() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> a
com.feytuo.chat.widget.photoview.VersionedGestureDetector$FroyoDetector$1 -> com.feytuo.chat.widget.photoview.q:
    com.feytuo.chat.widget.photoview.VersionedGestureDetector$FroyoDetector this$1 -> a
    boolean onScale(android.view.ScaleGestureDetector) -> onScale
    boolean onScaleBegin(android.view.ScaleGestureDetector) -> onScaleBegin
    void onScaleEnd(android.view.ScaleGestureDetector) -> onScaleEnd
com.feytuo.chat.widget.photoview.VersionedGestureDetector$OnGestureListener -> com.feytuo.chat.widget.photoview.r:
    void onDrag(float,float) -> a
    void onFling(float,float,float,float) -> a
    void onScale(float,float,float) -> a
com.feytuo.laoxianghao.AboutUsActivity -> com.feytuo.laoxianghao.AboutUsActivity:
    com.feytuo.laoxianghao.view.OnloadDialog pd -> a
    void onCreate(android.os.Bundle) -> onCreate
    void me_about_us_ret(android.view.View) -> me_about_us_ret
    void activity_about_us_feedback(android.view.View) -> activity_about_us_feedback
    void our_privacy_olicy(android.view.View) -> our_privacy_olicy
    void cleanCache(android.view.View) -> cleanCache
    void shareToFriends(android.view.View) -> shareToFriends
    void onResume() -> onResume
    void onPause() -> onPause
    com.feytuo.laoxianghao.view.OnloadDialog access$0(com.feytuo.laoxianghao.AboutUsActivity) -> a
com.feytuo.laoxianghao.AboutUsActivity$1 -> com.feytuo.laoxianghao.a:
    com.feytuo.laoxianghao.AboutUsActivity this$0 -> a
    void run() -> run
com.feytuo.laoxianghao.App -> com.feytuo.laoxianghao.App:
    android.content.SharedPreferences pre -> a
    android.content.Context applicationContext -> b
    android.app.Activity mainActivity -> h
    com.feytuo.laoxianghao.App instance -> i
    java.lang.String PREF_USERNAME -> c
    java.lang.String userName -> j
    java.lang.String password -> k
    java.util.Map contactList -> l
    com.feytuo.chat.db.UserDao userDao -> m
    com.feytuo.laoxianghao.share_qq.Share_QQ shareQQ -> d
    com.feytuo.laoxianghao.share_sina.Share_Weibo shareWeibo -> e
    com.feytuo.laoxianghao.wxapi.Share_Weixin shareWeixin -> f
    java.lang.String currentUserNick -> g
    void onCreate() -> onCreate
    void initThree() -> g
    boolean isLogin() -> a
    com.feytuo.laoxianghao.App getInstance() -> b
    java.util.Map getContactList() -> c
    void setContactList(java.util.Map) -> a
    java.lang.String getUserName() -> d
    java.lang.String getPassword() -> e
    void setUserName(java.lang.String) -> a
    void setPassword(java.lang.String) -> b
    void logout() -> logout
    void finishMainActivity() -> f
    java.lang.String getAppName(int) -> a
    void setMainActivity(android.app.Activity) -> a
com.feytuo.laoxianghao.App$1 -> com.feytuo.laoxianghao.b:
    com.feytuo.laoxianghao.App this$0 -> a
    android.content.Intent onNotificationClick(com.easemob.chat.EMMessage) -> onNotificationClick
com.feytuo.laoxianghao.App$2 -> com.feytuo.laoxianghao.c:
    com.feytuo.laoxianghao.App this$0 -> a
    java.lang.String onNewMessageNotify(com.easemob.chat.EMMessage) -> onNewMessageNotify
    java.lang.String onLatestMessageNotify(com.easemob.chat.EMMessage,int,int) -> onLatestMessageNotify
    java.lang.String onSetNotificationTitle(com.easemob.chat.EMMessage) -> onSetNotificationTitle
com.feytuo.laoxianghao.App$MyConnectionListener -> com.feytuo.laoxianghao.d:
    com.feytuo.laoxianghao.App this$0 -> a
    void onReConnecting() -> onReConnecting
    void onReConnected() -> onReConnected
    void onDisConnected(java.lang.String) -> onDisConnected
    void onConnecting(java.lang.String) -> onConnecting
    void onConnected() -> onConnected
com.feytuo.laoxianghao.CommentActivity -> com.feytuo.laoxianghao.CommentActivity:
    java.lang.String invId -> a
    int enterFrom -> b
    int STATE_REFRESH -> c
    int STATE_MORE -> d
    int LIMIT -> e
    int curPage -> f
    com.feytuo.listviewonload.XListView commentListview -> g
    java.util.List listItems -> h
    com.feytuo.laoxianghao.adapter.CommentListViewAdapter adapter -> i
    android.widget.EditText commentTextEdit -> j
    android.widget.LinearLayout commentRecordingLinear -> k
    android.widget.ImageView commentRecordingImg -> l
    android.widget.TextView commentRecordHintText -> m
    android.widget.ImageView commentAddImg -> n
    android.widget.Button commentCommentBtn -> o
    android.widget.LinearLayout commentRecordLinear -> p
    android.widget.Button commentRecordBtn -> q
    android.widget.ImageView commentRerecordimg -> r
    android.widget.ImageButton commentPlayRecordImgbutton -> s
    android.media.MediaRecorder mediaRecorder -> t
    java.lang.String fileAudioName -> u
    java.lang.String filePath -> v
    java.io.File fileAudio -> w
    android.media.MediaPlayer mp -> x
    boolean isReplay -> y
    android.os.Handler mHandlerlist -> z
    boolean isLuYin -> A
    com.feytuo.laoxianghao.domain.Invitation mInv -> B
    com.feytuo.laoxianghao.util.Location_Baidu locationBaidu -> C
    android.app.Dialog dialog -> D
    int recorderTime -> E
    java.util.Timer recorderTimer -> F
    android.graphics.drawable.AnimationDrawable animationDrawable -> G
    android.media.MediaPlayer$OnCompletionListener onCompletionListener -> H
    void onCreate(android.os.Bundle) -> onCreate
    void initLocation() -> e
    void getInvitationInfo() -> f
    void getFromServer() -> g
    void initview() -> h
    void initData() -> i
    void initlistview() -> j
    void initListViewData() -> k
    void getDataFromLocal() -> l
    void getDataFromNet(int,int) -> a
    void onRefresh() -> a
    void onLoadMore() -> b
    void onLoad() -> m
    void publishComment() -> c
    void uploadAudioFile(java.lang.String) -> a
    void uploadBaseInfo(java.lang.String,java.lang.String) -> a
    void addCommentToInvitation(com.feytuo.laoxianghao.domain.Comment) -> a
    void addInCurrrentInvitation() -> d
    void closeDialog() -> n
    void addCommentNum() -> o
    void stopAntherVoice() -> p
    void startAudio() -> q
    void stopAudio() -> r
    void pauseAudio() -> s
    void recordAudio() -> t
    void playAudio() -> u
    void commentReturnRelative(android.view.View) -> commentReturnRelative
    void onDestroy() -> onDestroy
    void onResume() -> onResume
    void onPause() -> onPause
    void HideKeyboard(android.view.View) -> HideKeyboard
    android.widget.TextView access$0(com.feytuo.laoxianghao.CommentActivity) -> a
    android.widget.ImageButton access$1(com.feytuo.laoxianghao.CommentActivity) -> b
    void access$2(com.feytuo.laoxianghao.CommentActivity,boolean) -> a
    android.widget.ImageView access$3(com.feytuo.laoxianghao.CommentActivity) -> c
    android.widget.Button access$4(com.feytuo.laoxianghao.CommentActivity) -> d
    android.widget.Button access$5(com.feytuo.laoxianghao.CommentActivity) -> e
    android.widget.LinearLayout access$6(com.feytuo.laoxianghao.CommentActivity) -> f
    void access$7(com.feytuo.laoxianghao.CommentActivity) -> g
    void access$8(com.feytuo.laoxianghao.CommentActivity) -> h
    android.widget.LinearLayout access$9(com.feytuo.laoxianghao.CommentActivity) -> i
    void access$10(com.feytuo.laoxianghao.CommentActivity) -> j
    boolean access$11(com.feytuo.laoxianghao.CommentActivity) -> k
    void access$12(com.feytuo.laoxianghao.CommentActivity) -> l
    void access$13(com.feytuo.laoxianghao.CommentActivity) -> m
    com.feytuo.laoxianghao.domain.Invitation access$14(com.feytuo.laoxianghao.CommentActivity) -> n
    com.feytuo.laoxianghao.adapter.CommentListViewAdapter access$15(com.feytuo.laoxianghao.CommentActivity) -> o
    android.widget.EditText access$16(com.feytuo.laoxianghao.CommentActivity) -> p
    void access$17(com.feytuo.laoxianghao.CommentActivity,int) -> a
    java.util.List access$18(com.feytuo.laoxianghao.CommentActivity) -> q
    java.lang.String access$19(com.feytuo.laoxianghao.CommentActivity) -> r
    int access$20(com.feytuo.laoxianghao.CommentActivity) -> s
    void access$21(com.feytuo.laoxianghao.CommentActivity,int,int) -> a
    void access$22(com.feytuo.laoxianghao.CommentActivity) -> t
    void access$23(com.feytuo.laoxianghao.CommentActivity,java.lang.String,java.lang.String) -> a
    void access$24(com.feytuo.laoxianghao.CommentActivity) -> u
    void access$25(com.feytuo.laoxianghao.CommentActivity) -> v
    int access$26(com.feytuo.laoxianghao.CommentActivity) -> w
    void access$27(com.feytuo.laoxianghao.CommentActivity,int) -> b
com.feytuo.laoxianghao.CommentActivity$1 -> com.feytuo.laoxianghao.e:
    com.feytuo.laoxianghao.CommentActivity this$0 -> a
    void onCompletion(android.media.MediaPlayer) -> onCompletion
com.feytuo.laoxianghao.CommentActivity$10 -> com.feytuo.laoxianghao.f:
    com.feytuo.laoxianghao.CommentActivity this$0 -> a
    void onSuccess() -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.feytuo.laoxianghao.CommentActivity$11 -> com.feytuo.laoxianghao.g:
    com.feytuo.laoxianghao.CommentActivity this$0 -> a
    void onSuccess() -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.feytuo.laoxianghao.CommentActivity$12 -> com.feytuo.laoxianghao.h:
    com.feytuo.laoxianghao.CommentActivity this$0 -> a
    void run() -> run
com.feytuo.laoxianghao.CommentActivity$2 -> com.feytuo.laoxianghao.i:
    com.feytuo.laoxianghao.CommentActivity this$0 -> a
    void onSuccess(com.feytuo.laoxianghao.domain.Invitation) -> a
    void onFailure(int,java.lang.String) -> onFailure
    void onSuccess(java.lang.Object) -> onSuccess
com.feytuo.laoxianghao.CommentActivity$3 -> com.feytuo.laoxianghao.j:
    com.feytuo.laoxianghao.CommentActivity this$0 -> a
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.feytuo.laoxianghao.CommentActivity$4 -> com.feytuo.laoxianghao.k:
    com.feytuo.laoxianghao.CommentActivity this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.feytuo.laoxianghao.CommentActivity$5 -> com.feytuo.laoxianghao.l:
    com.feytuo.laoxianghao.CommentActivity this$0 -> a
    int val$actionType -> b
    void onSuccess(java.util.List) -> onSuccess
    void onError(int,java.lang.String) -> onError
com.feytuo.laoxianghao.CommentActivity$6 -> com.feytuo.laoxianghao.m:
    com.feytuo.laoxianghao.CommentActivity this$0 -> a
    void run() -> run
com.feytuo.laoxianghao.CommentActivity$7 -> com.feytuo.laoxianghao.n:
    com.feytuo.laoxianghao.CommentActivity this$0 -> a
    void run() -> run
com.feytuo.laoxianghao.CommentActivity$8 -> com.feytuo.laoxianghao.o:
    com.feytuo.laoxianghao.CommentActivity this$0 -> a
    cn.bmob.v3.datatype.BmobFile val$bmobFile -> b
    java.lang.String val$comWords -> c
    void onSuccess() -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.feytuo.laoxianghao.CommentActivity$9 -> com.feytuo.laoxianghao.p:
    com.feytuo.laoxianghao.CommentActivity this$0 -> a
    com.feytuo.laoxianghao.domain.Comment val$comment -> b
    void onSuccess() -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.feytuo.laoxianghao.CommentActivity$ClickListener -> com.feytuo.laoxianghao.q:
    com.feytuo.laoxianghao.CommentActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.feytuo.laoxianghao.CommentActivity$OnToucher -> com.feytuo.laoxianghao.s:
    com.feytuo.laoxianghao.CommentActivity this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.feytuo.laoxianghao.FeedbackActivity -> com.feytuo.laoxianghao.FeedbackActivity:
    android.widget.Button feedbackSetButton -> a
    android.widget.EditText publishText -> b
    com.feytuo.laoxianghao.domain.LXHUser mUser -> c
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> b
    void feedbackReturnRelative(android.view.View) -> feedbackReturnRelative
    void sendFeedBack() -> a
    void addFeedBackToUser(com.feytuo.laoxianghao.domain.FeedBack) -> a
    void onResume() -> onResume
    void onPause() -> onPause
    void access$0(com.feytuo.laoxianghao.FeedbackActivity,com.feytuo.laoxianghao.domain.FeedBack) -> a
com.feytuo.laoxianghao.FeedbackActivity$1 -> com.feytuo.laoxianghao.t:
    com.feytuo.laoxianghao.FeedbackActivity this$0 -> a
    com.feytuo.laoxianghao.domain.FeedBack val$feedBack -> b
    void onFailure(int,java.lang.String) -> onFailure
    void onSuccess() -> onSuccess
com.feytuo.laoxianghao.FeedbackActivity$2 -> com.feytuo.laoxianghao.u:
    com.feytuo.laoxianghao.FeedbackActivity this$0 -> a
    void onSuccess() -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.feytuo.laoxianghao.FeedbackActivity$listener -> com.feytuo.laoxianghao.v:
    com.feytuo.laoxianghao.FeedbackActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.feytuo.laoxianghao.FindDetailsActivity -> com.feytuo.laoxianghao.FindDetailsActivity:
    com.feytuo.laoxianghao.adapter.FindListViewAdapter adapter -> a
    com.feytuo.listviewonload.ZrcListView findListView -> b
    android.os.Handler handler -> c
    java.util.List listItems -> d
    java.util.List listData -> e
    android.widget.TextView findTypeText -> f
    int STATE_REFRESH -> g
    int STATE_MORE -> h
    int LIMIT -> i
    int curPage -> j
    int type -> k
    android.widget.Button findPublishBtn -> l
    void onCreate(android.os.Bundle) -> onCreate
    void initview() -> a
    void findDetailsReturnBtn(android.view.View) -> findDetailsReturnBtn
    void getListDataFromLocal() -> c
    void initlistview() -> b
    android.view.animation.LayoutAnimationController getListAnim() -> d
    void refresh() -> e
    void loadMore() -> f
    void getListData(int,int) -> a
    void onResume() -> onResume
    void onPause() -> onPause
    int access$0(com.feytuo.laoxianghao.FindDetailsActivity) -> a
    void access$1(com.feytuo.laoxianghao.FindDetailsActivity) -> b
    void access$2(com.feytuo.laoxianghao.FindDetailsActivity) -> c
    com.feytuo.laoxianghao.adapter.FindListViewAdapter access$3(com.feytuo.laoxianghao.FindDetailsActivity) -> d
    void access$4(com.feytuo.laoxianghao.FindDetailsActivity,int,int) -> a
    int access$5(com.feytuo.laoxianghao.FindDetailsActivity) -> e
    void access$6(com.feytuo.laoxianghao.FindDetailsActivity,int) -> a
    java.util.List access$7(com.feytuo.laoxianghao.FindDetailsActivity) -> f
    com.feytuo.listviewonload.ZrcListView access$8(com.feytuo.laoxianghao.FindDetailsActivity) -> g
com.feytuo.laoxianghao.FindDetailsActivity$1 -> com.feytuo.laoxianghao.w:
    com.feytuo.laoxianghao.FindDetailsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.feytuo.laoxianghao.FindDetailsActivity$2 -> com.feytuo.laoxianghao.x:
    com.feytuo.laoxianghao.FindDetailsActivity this$0 -> a
    void onStart() -> a
com.feytuo.laoxianghao.FindDetailsActivity$3 -> com.feytuo.laoxianghao.y:
    com.feytuo.laoxianghao.FindDetailsActivity this$0 -> a
    void onStart() -> a
com.feytuo.laoxianghao.FindDetailsActivity$4 -> com.feytuo.laoxianghao.z:
    com.feytuo.laoxianghao.FindDetailsActivity this$0 -> a
    void run() -> run
com.feytuo.laoxianghao.FindDetailsActivity$5 -> com.feytuo.laoxianghao.aa:
    com.feytuo.laoxianghao.FindDetailsActivity this$0 -> a
    void run() -> run
com.feytuo.laoxianghao.FindDetailsActivity$6 -> com.feytuo.laoxianghao.ab:
    com.feytuo.laoxianghao.FindDetailsActivity this$0 -> a
    int val$actionType -> b
    void onSuccess(java.util.List) -> onSuccess
    void onError(int,java.lang.String) -> onError
com.feytuo.laoxianghao.MeAboutUsPrivacyPolicyActivity -> com.feytuo.laoxianghao.MeAboutUsPrivacyPolicyActivity:
    android.widget.TextView activityAboutUsPrivacyPolicy -> a
    void onCreate(android.os.Bundle) -> onCreate
    void me_about_us_privacy_policy_ret(android.view.View) -> me_about_us_privacy_policy_ret
    void onResume() -> onResume
    void onPause() -> onPause
com.feytuo.laoxianghao.PersonInvitationActivity -> com.feytuo.laoxianghao.PersonInvitationActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void initView(android.os.Bundle) -> a
    void messagecollectReturnRelative(android.view.View) -> messagecollectReturnRelative
    void onResume() -> onResume
    void onPause() -> onPause
com.feytuo.laoxianghao.PersonUpdateInfoActivity -> com.feytuo.laoxianghao.PersonUpdateInfoActivity:
    android.widget.TextView titleTypeText -> a
    android.widget.TextView typeTint -> b
    com.feytuo.chat.widget.PasteEditText mEditText -> c
    android.widget.RelativeLayout rela -> d
    android.widget.TextView wordnumText -> e
    java.lang.String type -> f
    void onCreate(android.os.Bundle) -> onCreate
    void initview() -> a
    void updateInfoSuccess(android.view.View) -> updateInfoSuccess
    void updateUserInfo(java.lang.String) -> a
    void personDetailsRetImg(android.view.View) -> personDetailsRetImg
    void onResume() -> onResume
    void onPause() -> onPause
    android.widget.RelativeLayout access$0(com.feytuo.laoxianghao.PersonUpdateInfoActivity) -> a
    android.widget.TextView access$1(com.feytuo.laoxianghao.PersonUpdateInfoActivity) -> b
    java.lang.String access$2(com.feytuo.laoxianghao.PersonUpdateInfoActivity) -> c
com.feytuo.laoxianghao.PersonUpdateInfoActivity$1 -> com.feytuo.laoxianghao.ac:
    com.feytuo.laoxianghao.PersonUpdateInfoActivity this$0 -> a
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.feytuo.laoxianghao.PersonUpdateInfoActivity$2 -> com.feytuo.laoxianghao.ad:
    com.feytuo.laoxianghao.PersonUpdateInfoActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.feytuo.laoxianghao.PersonUpdateInfoActivity$3 -> com.feytuo.laoxianghao.ae:
    com.feytuo.laoxianghao.PersonUpdateInfoActivity this$0 -> a
    java.lang.String val$userId -> b
    java.lang.String val$et -> c
    void onSuccess() -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.feytuo.laoxianghao.PublishActivity -> com.feytuo.laoxianghao.PublishActivity:
    android.widget.Button publishButton -> a
    android.widget.ImageView publishRerecordButton -> b
    android.widget.ImageView publishPlayRecordImgbutton -> c
    android.widget.TextView publishHint -> d
    android.widget.TextView publishRecordTime -> e
    android.widget.TextView publishTypeText -> f
    android.widget.TextView publishTitleLocation -> g
    android.widget.TextView publishHomeText -> h
    android.widget.EditText publishText -> i
    android.widget.LinearLayout publishRecordingLinear -> j
    android.widget.ImageView publishRecordingImg -> k
    android.media.MediaPlayer mp -> l
    java.lang.String fileAudioName -> m
    android.media.MediaRecorder mediaRecorder -> n
    java.lang.String filePath -> o
    boolean isLuYin -> p
    java.io.File fileAudio -> q
    boolean isReplay -> r
    android.widget.TextView publishwordnumText -> s
    android.os.CountDownTimer mCountDownTimer -> t
    java.util.Timer mCountUpTimer -> u
    java.util.Timer mProgressTimer -> v
    int mRecordTime -> w
    int type -> x
    android.widget.RelativeLayout publishCityRela -> y
    java.lang.String currentCity -> z
    android.widget.Button progress -> A
    com.feytuo.laoxianghao.util.Location_Baidu locationBaidu -> B
    com.feytuo.laoxianghao.view.PositionChooseDialog positionChooseDialog -> C
    com.feytuo.laoxianghao.domain.LXHUser mUser -> D
    android.app.Dialog dialog -> E
    android.graphics.drawable.AnimationDrawable animationDrawable -> F
    android.os.Handler mHandler -> G
    void onCreate(android.os.Bundle) -> onCreate
    void initHome() -> d
    void initLocation() -> e
    void setPosition(android.view.View) -> setPosition
    void setPosition(java.lang.String) -> setPosition
    void initViewType() -> a
    void initView() -> b
    void publishReturnRelative(android.view.View) -> publishReturnRelative
    void initData() -> f
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void savePublish() -> c
    void uploadAudioFile() -> g
    void uploadBaseInfo(java.lang.String) -> a
    void addInvitationToUser(com.feytuo.laoxianghao.domain.Invitation) -> a
    void saveInLocalDB(com.feytuo.laoxianghao.domain.Invitation) -> b
    void closeProgressDialog() -> h
    void startAudio() -> i
    void stopAudio() -> j
    void playAudio() -> k
    void pauseAudio() -> l
    void recordAudio() -> m
    void onDestroy() -> onDestroy
    void onResume() -> onResume
    void onPause() -> onPause
    int access$0(com.feytuo.laoxianghao.PublishActivity) -> a
    void access$1(com.feytuo.laoxianghao.PublishActivity,int) -> a
    android.widget.TextView access$2(com.feytuo.laoxianghao.PublishActivity) -> b
    java.util.Timer access$3(com.feytuo.laoxianghao.PublishActivity) -> c
    android.widget.ImageView access$4(com.feytuo.laoxianghao.PublishActivity) -> d
    android.media.MediaRecorder access$5(com.feytuo.laoxianghao.PublishActivity) -> e
    void access$6(com.feytuo.laoxianghao.PublishActivity) -> f
    void access$7(com.feytuo.laoxianghao.PublishActivity) -> g
    void access$8(com.feytuo.laoxianghao.PublishActivity) -> h
    boolean access$9(com.feytuo.laoxianghao.PublishActivity) -> i
    void access$10(com.feytuo.laoxianghao.PublishActivity) -> j
    void access$11(com.feytuo.laoxianghao.PublishActivity) -> k
    void access$12(com.feytuo.laoxianghao.PublishActivity,boolean) -> a
    android.widget.ImageView access$13(com.feytuo.laoxianghao.PublishActivity) -> l
    android.widget.TextView access$14(com.feytuo.laoxianghao.PublishActivity) -> m
    android.os.Handler access$15(com.feytuo.laoxianghao.PublishActivity) -> n
    android.widget.TextView access$16(com.feytuo.laoxianghao.PublishActivity) -> o
    void access$17(com.feytuo.laoxianghao.PublishActivity,java.lang.String) -> a
    void access$18(com.feytuo.laoxianghao.PublishActivity) -> p
    void access$19(com.feytuo.laoxianghao.PublishActivity,com.feytuo.laoxianghao.domain.Invitation) -> a
    void access$20(com.feytuo.laoxianghao.PublishActivity,com.feytuo.laoxianghao.domain.Invitation) -> b
com.feytuo.laoxianghao.PublishActivity$1 -> com.feytuo.laoxianghao.af:
    com.feytuo.laoxianghao.PublishActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.feytuo.laoxianghao.PublishActivity$2 -> com.feytuo.laoxianghao.ag:
    com.feytuo.laoxianghao.PublishActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.feytuo.laoxianghao.PublishActivity$3 -> com.feytuo.laoxianghao.ah:
    com.feytuo.laoxianghao.PublishActivity this$0 -> a
    cn.bmob.v3.datatype.BmobFile val$bmobFile -> b
    void onSuccess() -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.feytuo.laoxianghao.PublishActivity$4 -> com.feytuo.laoxianghao.ai:
    com.feytuo.laoxianghao.PublishActivity this$0 -> a
    com.feytuo.laoxianghao.domain.Invitation val$inv -> b
    void onSuccess() -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.feytuo.laoxianghao.PublishActivity$5 -> com.feytuo.laoxianghao.aj:
    com.feytuo.laoxianghao.PublishActivity this$0 -> a
    com.feytuo.laoxianghao.domain.Invitation val$inv -> b
    void onSuccess() -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.feytuo.laoxianghao.PublishActivity$6 -> com.feytuo.laoxianghao.ak:
    com.feytuo.laoxianghao.PublishActivity this$0 -> a
    void onError(android.media.MediaRecorder,int,int) -> onError
com.feytuo.laoxianghao.PublishActivity$7 -> com.feytuo.laoxianghao.al:
    com.feytuo.laoxianghao.PublishActivity this$0 -> a
    void run() -> run
com.feytuo.laoxianghao.PublishActivity$CountTask -> com.feytuo.laoxianghao.am:
    com.feytuo.laoxianghao.PublishActivity this$0 -> a
    void run() -> run
com.feytuo.laoxianghao.PublishActivity$MyCount -> com.feytuo.laoxianghao.an:
    com.feytuo.laoxianghao.PublishActivity this$0 -> a
    void onFinish() -> onFinish
    void onTick(long) -> onTick
com.feytuo.laoxianghao.PublishActivity$listener -> com.feytuo.laoxianghao.ao:
    com.feytuo.laoxianghao.PublishActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.feytuo.laoxianghao.R -> com.feytuo.laoxianghao.R:
com.feytuo.laoxianghao.R$anim -> com.feytuo.laoxianghao.R$anim:
    int abc_fade_in -> abc_fade_in
    int abc_fade_out -> abc_fade_out
    int abc_slide_in_bottom -> abc_slide_in_bottom
    int abc_slide_in_top -> abc_slide_in_top
    int abc_slide_out_bottom -> abc_slide_out_bottom
    int abc_slide_out_top -> abc_slide_out_top
    int bottomitem_in -> bottomitem_in
    int comment_record_in -> comment_record_in
    int comment_record_out -> comment_record_out
    int comment_turn_closed -> comment_turn_closed
    int comment_turn_open -> comment_turn_open
    int fade_in -> fade_in
    int fade_out -> fade_out
    int frame_comment_anim -> frame_comment_anim
    int frameanim -> frameanim
    int head_in -> head_in
    int head_out -> head_out
    int hold -> hold
    int imageprogress -> imageprogress
    int nn -> nn
    int progress_no -> progress_no
    int push_bottom_in -> push_bottom_in
    int push_bottom_out -> push_bottom_out
    int push_top_in -> push_top_in
    int push_top_in2 -> push_top_in2
    int push_top_out -> push_top_out
    int push_top_out2 -> push_top_out2
    int slide_in_from_left -> slide_in_from_left
    int slide_in_from_right -> slide_in_from_right
    int slide_out_to_left -> slide_out_to_left
    int slide_out_to_right -> slide_out_to_right
    int topitem_in -> topitem_in
    int voice_from_icon -> voice_from_icon
    int voice_to_icon -> voice_to_icon
com.feytuo.laoxianghao.R$array -> com.feytuo.laoxianghao.R$array:
    int head -> head
com.feytuo.laoxianghao.R$attr -> com.feytuo.laoxianghao.R$attr:
    int actionBarDivider -> actionBarDivider
    int actionBarItemBackground -> actionBarItemBackground
    int actionBarSize -> actionBarSize
    int actionBarSplitStyle -> actionBarSplitStyle
    int actionBarStyle -> actionBarStyle
    int actionBarTabBarStyle -> actionBarTabBarStyle
    int actionBarTabStyle -> actionBarTabStyle
    int actionBarTabTextStyle -> actionBarTabTextStyle
    int actionBarWidgetTheme -> actionBarWidgetTheme
    int actionButtonStyle -> actionButtonStyle
    int actionDropDownStyle -> actionDropDownStyle
    int actionLayout -> actionLayout
    int actionMenuTextAppearance -> actionMenuTextAppearance
    int actionMenuTextColor -> actionMenuTextColor
    int actionModeBackground -> actionModeBackground
    int actionModeCloseButtonStyle -> actionModeCloseButtonStyle
    int actionModeCloseDrawable -> actionModeCloseDrawable
    int actionModeCopyDrawable -> actionModeCopyDrawable
    int actionModeCutDrawable -> actionModeCutDrawable
    int actionModeFindDrawable -> actionModeFindDrawable
    int actionModePasteDrawable -> actionModePasteDrawable
    int actionModePopupWindowStyle -> actionModePopupWindowStyle
    int actionModeSelectAllDrawable -> actionModeSelectAllDrawable
    int actionModeShareDrawable -> actionModeShareDrawable
    int actionModeSplitBackground -> actionModeSplitBackground
    int actionModeStyle -> actionModeStyle
    int actionModeWebSearchDrawable -> actionModeWebSearchDrawable
    int actionOverflowButtonStyle -> actionOverflowButtonStyle
    int actionProviderClass -> actionProviderClass
    int actionViewClass -> actionViewClass
    int activityChooserViewStyle -> activityChooserViewStyle
    int background -> background
    int backgroundSplit -> backgroundSplit
    int backgroundStacked -> backgroundStacked
    int buttonBarButtonStyle -> buttonBarButtonStyle
    int buttonBarStyle -> buttonBarStyle
    int customNavigationLayout -> customNavigationLayout
    int disableChildrenWhenDisabled -> disableChildrenWhenDisabled
    int displayOptions -> displayOptions
    int divider -> divider
    int dividerHorizontal -> dividerHorizontal
    int dividerPadding -> dividerPadding
    int dividerVertical -> dividerVertical
    int dropDownListViewStyle -> dropDownListViewStyle
    int dropdownListPreferredItemHeight -> dropdownListPreferredItemHeight
    int expandActivityOverflowButtonDrawable -> expandActivityOverflowButtonDrawable
    int height -> height
    int homeAsUpIndicator -> homeAsUpIndicator
    int homeLayout -> homeLayout
    int icon -> icon
    int iconifiedByDefault -> iconifiedByDefault
    int indeterminateProgressStyle -> indeterminateProgressStyle
    int initialActivityCount -> initialActivityCount
    int isLightTheme -> isLightTheme
    int itemPadding -> itemPadding
    int listChoiceBackgroundIndicator -> listChoiceBackgroundIndicator
    int listPopupWindowStyle -> listPopupWindowStyle
    int listPreferredItemHeight -> listPreferredItemHeight
    int listPreferredItemHeightLarge -> listPreferredItemHeightLarge
    int listPreferredItemHeightSmall -> listPreferredItemHeightSmall
    int listPreferredItemPaddingLeft -> listPreferredItemPaddingLeft
    int listPreferredItemPaddingRight -> listPreferredItemPaddingRight
    int logo -> logo
    int navigationMode -> navigationMode
    int paddingEnd -> paddingEnd
    int paddingStart -> paddingStart
    int panelMenuListTheme -> panelMenuListTheme
    int panelMenuListWidth -> panelMenuListWidth
    int popupMenuStyle -> popupMenuStyle
    int popupPromptView -> popupPromptView
    int progressBarPadding -> progressBarPadding
    int progressBarStyle -> progressBarStyle
    int prompt -> prompt
    int queryHint -> queryHint
    int searchDropdownBackground -> searchDropdownBackground
    int searchResultListItemHeight -> searchResultListItemHeight
    int searchViewAutoCompleteTextView -> searchViewAutoCompleteTextView
    int searchViewCloseIcon -> searchViewCloseIcon
    int searchViewEditQuery -> searchViewEditQuery
    int searchViewEditQueryBackground -> searchViewEditQueryBackground
    int searchViewGoIcon -> searchViewGoIcon
    int searchViewSearchIcon -> searchViewSearchIcon
    int searchViewTextField -> searchViewTextField
    int searchViewTextFieldRight -> searchViewTextFieldRight
    int searchViewVoiceIcon -> searchViewVoiceIcon
    int selectableItemBackground -> selectableItemBackground
    int showAsAction -> showAsAction
    int showDividers -> showDividers
    int spinnerDropDownItemStyle -> spinnerDropDownItemStyle
    int spinnerMode -> spinnerMode
    int spinnerStyle -> spinnerStyle
    int subtitle -> subtitle
    int subtitleTextStyle -> subtitleTextStyle
    int textAllCaps -> textAllCaps
    int textAppearanceLargePopupMenu -> textAppearanceLargePopupMenu
    int textAppearanceListItem -> textAppearanceListItem
    int textAppearanceListItemSmall -> textAppearanceListItemSmall
    int textAppearanceSearchResultSubtitle -> textAppearanceSearchResultSubtitle
    int textAppearanceSearchResultTitle -> textAppearanceSearchResultTitle
    int textAppearanceSmallPopupMenu -> textAppearanceSmallPopupMenu
    int textColorSearchUrl -> textColorSearchUrl
    int title -> title
    int titleTextStyle -> titleTextStyle
    int windowActionBar -> windowActionBar
    int windowActionBarOverlay -> windowActionBarOverlay
    int windowFixedHeightMajor -> windowFixedHeightMajor
    int windowFixedHeightMinor -> windowFixedHeightMinor
    int windowFixedWidthMajor -> windowFixedWidthMajor
    int windowFixedWidthMinor -> windowFixedWidthMinor
    int windowSplitActionBar -> windowSplitActionBar
com.feytuo.laoxianghao.R$bool -> com.feytuo.laoxianghao.R$bool:
    int abc_action_bar_embed_tabs_pre_jb -> abc_action_bar_embed_tabs_pre_jb
    int abc_action_bar_expanded_action_views_exclusive -> abc_action_bar_expanded_action_views_exclusive
    int abc_config_actionMenuItemAllCaps -> abc_config_actionMenuItemAllCaps
    int abc_config_allowActionMenuItemTextWithIcon -> abc_config_allowActionMenuItemTextWithIcon
    int abc_config_showMenuShortcutsWhenKeyboardPresent -> abc_config_showMenuShortcutsWhenKeyboardPresent
    int abc_split_action_bar_is_narrow -> abc_split_action_bar_is_narrow
com.feytuo.laoxianghao.R$color -> com.feytuo.laoxianghao.R$color:
    int abc_search_url_text_holo -> abc_search_url_text_holo
    int abc_search_url_text_normal -> abc_search_url_text_normal
    int abc_search_url_text_pressed -> abc_search_url_text_pressed
    int abc_search_url_text_selected -> abc_search_url_text_selected
    int black -> black
    int black_deep -> black_deep
    int blue -> blue
    int bottom_bar_normal_bg -> bottom_bar_normal_bg
    int bottom_text_color_normal -> bottom_text_color_normal
    int btn_blue_normal -> btn_blue_normal
    int btn_blue_pressed -> btn_blue_pressed
    int btn_gray_normal -> btn_gray_normal
    int btn_gray_pressed -> btn_gray_pressed
    int btn_gray_pressed_status -> btn_gray_pressed_status
    int btn_green_noraml -> btn_green_noraml
    int btn_green_pressed -> btn_green_pressed
    int btn_login_normal -> btn_login_normal
    int btn_login_pressed -> btn_login_pressed
    int btn_logout_normal -> btn_logout_normal
    int btn_logout_pressed -> btn_logout_pressed
    int btn_pressed_green_solid -> btn_pressed_green_solid
    int btn_register_normal -> btn_register_normal
    int btn_register_pressed -> btn_register_pressed
    int btn_white_normal -> btn_white_normal
    int btn_white_pressed -> btn_white_pressed
    int button_no -> button_no
    int com_sina_weibo_sdk_blue -> com_sina_weibo_sdk_blue
    int com_sina_weibo_sdk_loginview_text_color -> com_sina_weibo_sdk_loginview_text_color
    int comment_hint -> comment_hint
    int common_bg -> common_bg
    int common_bottom_bar_normal_bg -> common_bottom_bar_normal_bg
    int common_bottom_bar_selected_bg -> common_bottom_bar_selected_bg
    int common_botton_bar_blue -> common_botton_bar_blue
    int common_top_bar_blue -> common_top_bar_blue
    int content_color -> content_color
    int copyright -> copyright
    int divider_list -> divider_list
    int error_item_color -> error_item_color
    int gray_normal -> gray_normal
    int gray_pressed -> gray_pressed
    int green -> green
    int grey -> grey
    int grid_state_focused -> grid_state_focused
    int grid_state_pressed -> grid_state_pressed
    int head_color -> head_color
    int hot -> hot
    int indexbg -> indexbg
    int indexbg_pressed -> indexbg_pressed
    int light_gray -> light_gray
    int main_botton_text_color -> main_botton_text_color
    int newtime -> newtime
    int orange -> orange
    int publish_btn_no_color -> publish_btn_no_color
    int red -> red
    int text_num_color -> text_num_color
    int text_time_color -> text_time_color
    int thinbule -> thinbule
    int top_bar_normal_bg -> top_bar_normal_bg
    int topic_index_bg -> topic_index_bg
    int translucent -> translucent
    int vifrification -> vifrification
    int voip_interface_text_color -> voip_interface_text_color
    int weibo_unline -> weibo_unline
    int weibo_unline_3d -> weibo_unline_3d
    int white -> white
    int yellow -> yellow
com.feytuo.laoxianghao.R$dimen -> com.feytuo.laoxianghao.R$dimen:
    int abc_action_bar_default_height -> abc_action_bar_default_height
    int abc_action_bar_icon_vertical_padding -> abc_action_bar_icon_vertical_padding
    int abc_action_bar_progress_bar_size -> abc_action_bar_progress_bar_size
    int abc_action_bar_stacked_max_height -> abc_action_bar_stacked_max_height
    int abc_action_bar_stacked_tab_max_width -> abc_action_bar_stacked_tab_max_width
    int abc_action_bar_subtitle_bottom_margin -> abc_action_bar_subtitle_bottom_margin
    int abc_action_bar_subtitle_text_size -> abc_action_bar_subtitle_text_size
    int abc_action_bar_subtitle_top_margin -> abc_action_bar_subtitle_top_margin
    int abc_action_bar_title_text_size -> abc_action_bar_title_text_size
    int abc_action_button_min_width -> abc_action_button_min_width
    int abc_config_prefDialogWidth -> abc_config_prefDialogWidth
    int abc_dropdownitem_icon_width -> abc_dropdownitem_icon_width
    int abc_dropdownitem_text_padding_left -> abc_dropdownitem_text_padding_left
    int abc_dropdownitem_text_padding_right -> abc_dropdownitem_text_padding_right
    int abc_panel_menu_list_width -> abc_panel_menu_list_width
    int abc_search_view_preferred_width -> abc_search_view_preferred_width
    int abc_search_view_text_min_width -> abc_search_view_text_min_width
    int activity_horizontal_margin -> activity_horizontal_margin
    int activity_vertical_margin -> activity_vertical_margin
    int call_button_padding_left -> call_button_padding_left
    int call_button_padding_right -> call_button_padding_right
    int call_button_padding_vertical -> call_button_padding_vertical
    int city_list_size -> city_list_size
    int city_text_size -> city_text_size
    int com_sina_weibo_sdk_loginview_compound_drawable_padding -> com_sina_weibo_sdk_loginview_compound_drawable_padding
    int com_sina_weibo_sdk_loginview_padding -> com_sina_weibo_sdk_loginview_padding
    int com_sina_weibo_sdk_loginview_padding_bottom -> com_sina_weibo_sdk_loginview_padding_bottom
    int com_sina_weibo_sdk_loginview_padding_left -> com_sina_weibo_sdk_loginview_padding_left
    int com_sina_weibo_sdk_loginview_padding_right -> com_sina_weibo_sdk_loginview_padding_right
    int com_sina_weibo_sdk_loginview_padding_top -> com_sina_weibo_sdk_loginview_padding_top
    int com_sina_weibo_sdk_loginview_text_size -> com_sina_weibo_sdk_loginview_text_size
    int dialog_fixed_height_major -> dialog_fixed_height_major
    int dialog_fixed_height_minor -> dialog_fixed_height_minor
    int dialog_fixed_width_major -> dialog_fixed_width_major
    int dialog_fixed_width_minor -> dialog_fixed_width_minor
    int field_margin_right -> field_margin_right
    int field_textsize -> field_textsize
    int find_picture -> find_picture
    int find_text_size -> find_text_size
    int headico -> headico
    int height_row_weixin -> height_row_weixin
    int height_top_bar -> height_top_bar
    int image_thumbnail_size -> image_thumbnail_size
    int image_thumbnail_spacing -> image_thumbnail_spacing
    int margin_8dip -> margin_8dip
    int margin_chat_activity -> margin_chat_activity
    int margin_ico_text -> margin_ico_text
    int margin_item_bottom -> margin_item_bottom
    int margin_item_top -> margin_item_top
    int margin_left_right -> margin_left_right
    int margin_text_ico -> margin_text_ico
    int margin_title_ico_ico -> margin_title_ico_ico
    int messageandcollext_text_size -> messageandcollext_text_size
    int padding_search_bar -> padding_search_bar
    int sidebar_text_size -> sidebar_text_size
    int size_avatar -> size_avatar
    int text_num_size -> text_num_size
    int text_share_size -> text_share_size
    int text_time_size -> text_time_size
    int title_city_size -> title_city_size
    int title_hight -> title_hight
    int title_text_size -> title_text_size
com.feytuo.laoxianghao.R$drawable -> com.feytuo.laoxianghao.R$drawable:
    int abc_ab_bottom_solid_dark_holo -> abc_ab_bottom_solid_dark_holo
    int abc_ab_bottom_solid_light_holo -> abc_ab_bottom_solid_light_holo
    int abc_ab_bottom_transparent_dark_holo -> abc_ab_bottom_transparent_dark_holo
    int abc_ab_bottom_transparent_light_holo -> abc_ab_bottom_transparent_light_holo
    int abc_ab_share_pack_holo_dark -> abc_ab_share_pack_holo_dark
    int abc_ab_share_pack_holo_light -> abc_ab_share_pack_holo_light
    int abc_ab_solid_dark_holo -> abc_ab_solid_dark_holo
    int abc_ab_solid_light_holo -> abc_ab_solid_light_holo
    int abc_ab_stacked_solid_dark_holo -> abc_ab_stacked_solid_dark_holo
    int abc_ab_stacked_solid_light_holo -> abc_ab_stacked_solid_light_holo
    int abc_ab_stacked_transparent_dark_holo -> abc_ab_stacked_transparent_dark_holo
    int abc_ab_stacked_transparent_light_holo -> abc_ab_stacked_transparent_light_holo
    int abc_ab_transparent_dark_holo -> abc_ab_transparent_dark_holo
    int abc_ab_transparent_light_holo -> abc_ab_transparent_light_holo
    int abc_cab_background_bottom_holo_dark -> abc_cab_background_bottom_holo_dark
    int abc_cab_background_bottom_holo_light -> abc_cab_background_bottom_holo_light
    int abc_cab_background_top_holo_dark -> abc_cab_background_top_holo_dark
    int abc_cab_background_top_holo_light -> abc_cab_background_top_holo_light
    int abc_ic_ab_back_holo_dark -> abc_ic_ab_back_holo_dark
    int abc_ic_ab_back_holo_light -> abc_ic_ab_back_holo_light
    int abc_ic_cab_done_holo_dark -> abc_ic_cab_done_holo_dark
    int abc_ic_cab_done_holo_light -> abc_ic_cab_done_holo_light
    int abc_ic_clear -> abc_ic_clear
    int abc_ic_clear_disabled -> abc_ic_clear_disabled
    int abc_ic_clear_holo_light -> abc_ic_clear_holo_light
    int abc_ic_clear_normal -> abc_ic_clear_normal
    int abc_ic_clear_search_api_disabled_holo_light -> abc_ic_clear_search_api_disabled_holo_light
    int abc_ic_clear_search_api_holo_light -> abc_ic_clear_search_api_holo_light
    int abc_ic_commit_search_api_holo_dark -> abc_ic_commit_search_api_holo_dark
    int abc_ic_commit_search_api_holo_light -> abc_ic_commit_search_api_holo_light
    int abc_ic_go -> abc_ic_go
    int abc_ic_go_search_api_holo_light -> abc_ic_go_search_api_holo_light
    int abc_ic_menu_moreoverflow_normal_holo_dark -> abc_ic_menu_moreoverflow_normal_holo_dark
    int abc_ic_menu_moreoverflow_normal_holo_light -> abc_ic_menu_moreoverflow_normal_holo_light
    int abc_ic_menu_share_holo_dark -> abc_ic_menu_share_holo_dark
    int abc_ic_menu_share_holo_light -> abc_ic_menu_share_holo_light
    int abc_ic_search -> abc_ic_search
    int abc_ic_search_api_holo_light -> abc_ic_search_api_holo_light
    int abc_ic_voice_search -> abc_ic_voice_search
    int abc_ic_voice_search_api_holo_light -> abc_ic_voice_search_api_holo_light
    int abc_item_background_holo_dark -> abc_item_background_holo_dark
    int abc_item_background_holo_light -> abc_item_background_holo_light
    int abc_list_divider_holo_dark -> abc_list_divider_holo_dark
    int abc_list_divider_holo_light -> abc_list_divider_holo_light
    int abc_list_focused_holo -> abc_list_focused_holo
    int abc_list_longpressed_holo -> abc_list_longpressed_holo
    int abc_list_pressed_holo_dark -> abc_list_pressed_holo_dark
    int abc_list_pressed_holo_light -> abc_list_pressed_holo_light
    int abc_list_selector_background_transition_holo_dark -> abc_list_selector_background_transition_holo_dark
    int abc_list_selector_background_transition_holo_light -> abc_list_selector_background_transition_holo_light
    int abc_list_selector_disabled_holo_dark -> abc_list_selector_disabled_holo_dark
    int abc_list_selector_disabled_holo_light -> abc_list_selector_disabled_holo_light
    int abc_list_selector_holo_dark -> abc_list_selector_holo_dark
    int abc_list_selector_holo_light -> abc_list_selector_holo_light
    int abc_menu_dropdown_panel_holo_dark -> abc_menu_dropdown_panel_holo_dark
    int abc_menu_dropdown_panel_holo_light -> abc_menu_dropdown_panel_holo_light
    int abc_menu_hardkey_panel_holo_dark -> abc_menu_hardkey_panel_holo_dark
    int abc_menu_hardkey_panel_holo_light -> abc_menu_hardkey_panel_holo_light
    int abc_search_dropdown_dark -> abc_search_dropdown_dark
    int abc_search_dropdown_light -> abc_search_dropdown_light
    int abc_spinner_ab_default_holo_dark -> abc_spinner_ab_default_holo_dark
    int abc_spinner_ab_default_holo_light -> abc_spinner_ab_default_holo_light
    int abc_spinner_ab_disabled_holo_dark -> abc_spinner_ab_disabled_holo_dark
    int abc_spinner_ab_disabled_holo_light -> abc_spinner_ab_disabled_holo_light
    int abc_spinner_ab_focused_holo_dark -> abc_spinner_ab_focused_holo_dark
    int abc_spinner_ab_focused_holo_light -> abc_spinner_ab_focused_holo_light
    int abc_spinner_ab_holo_dark -> abc_spinner_ab_holo_dark
    int abc_spinner_ab_holo_light -> abc_spinner_ab_holo_light
    int abc_spinner_ab_pressed_holo_dark -> abc_spinner_ab_pressed_holo_dark
    int abc_spinner_ab_pressed_holo_light -> abc_spinner_ab_pressed_holo_light
    int abc_tab_indicator_ab_holo -> abc_tab_indicator_ab_holo
    int abc_tab_selected_focused_holo -> abc_tab_selected_focused_holo
    int abc_tab_selected_holo -> abc_tab_selected_holo
    int abc_tab_selected_pressed_holo -> abc_tab_selected_pressed_holo
    int abc_tab_unselected_pressed_holo -> abc_tab_unselected_pressed_holo
    int abc_textfield_search_default_holo_dark -> abc_textfield_search_default_holo_dark
    int abc_textfield_search_default_holo_light -> abc_textfield_search_default_holo_light
    int abc_textfield_search_right_default_holo_dark -> abc_textfield_search_right_default_holo_dark
    int abc_textfield_search_right_default_holo_light -> abc_textfield_search_right_default_holo_light
    int abc_textfield_search_right_selected_holo_dark -> abc_textfield_search_right_selected_holo_dark
    int abc_textfield_search_right_selected_holo_light -> abc_textfield_search_right_selected_holo_light
    int abc_textfield_search_selected_holo_dark -> abc_textfield_search_selected_holo_dark
    int abc_textfield_search_selected_holo_light -> abc_textfield_search_selected_holo_light
    int abc_textfield_searchview_holo_dark -> abc_textfield_searchview_holo_dark
    int abc_textfield_searchview_holo_light -> abc_textfield_searchview_holo_light
    int abc_textfield_searchview_right_holo_dark -> abc_textfield_searchview_right_holo_dark
    int abc_textfield_searchview_right_holo_light -> abc_textfield_searchview_right_holo_light
    int actionbar_camera_icon -> actionbar_camera_icon
    int add -> add
    int addrecord -> addrecord
    int app_panel_video_icon -> app_panel_video_icon
    int app_pref_bg -> app_pref_bg
    int appitem_del_btn -> appitem_del_btn
    int appitem_del_btn_normal -> appitem_del_btn_normal
    int appitem_del_btn_pressed -> appitem_del_btn_pressed
    int back -> back
    int blue_add -> blue_add
    int btn_blue_normal_shape -> btn_blue_normal_shape
    int btn_blue_pressed_shape -> btn_blue_pressed_shape
    int btn_blue_selector -> btn_blue_selector
    int btn_bottom_selector -> btn_bottom_selector
    int btn_cancel_bj -> btn_cancel_bj
    int btn_cancel_normal_shape -> btn_cancel_normal_shape
    int btn_cancel_pressed_shape -> btn_cancel_pressed_shape
    int btn_gray_normal_shape -> btn_gray_normal_shape
    int btn_gray_pressed_shape -> btn_gray_pressed_shape
    int btn_gray_selector -> btn_gray_selector
    int btn_green_normal_shape -> btn_green_normal_shape
    int btn_green_pressed_shape -> btn_green_pressed_shape
    int btn_green_selector -> btn_green_selector
    int btn_logout_normal_shape -> btn_logout_normal_shape
    int btn_logout_pressed_shape -> btn_logout_pressed_shape
    int btn_style_alert_dialog_background -> btn_style_alert_dialog_background
    int btn_style_alert_dialog_special -> btn_style_alert_dialog_special
    int btn_white_normal_shape -> btn_white_normal_shape
    int btn_white_pressed_shape -> btn_white_pressed_shape
    int btn_white_selector -> btn_white_selector
    int button_bg -> button_bg
    int button_login_bg -> button_login_bg
    int button_myprofile_selector -> button_myprofile_selector
    int button_normal_shape -> button_normal_shape
    int button_register_bg -> button_register_bg
    int button_selector_shape -> button_selector_shape
    int buttonstyleleftno -> buttonstyleleftno
    int buttonstylerightno -> buttonstylerightno
    int chat_edit -> chat_edit
    int chat_edit_normal -> chat_edit_normal
    int chat_error_item_bg -> chat_error_item_bg
    int chat_face_normal -> chat_face_normal
    int chat_face_pressed -> chat_face_pressed
    int chat_face_selector -> chat_face_selector
    int chat_file_normal -> chat_file_normal
    int chat_file_pressed -> chat_file_pressed
    int chat_file_selector -> chat_file_selector
    int chat_image_normal -> chat_image_normal
    int chat_image_pressed -> chat_image_pressed
    int chat_image_selector -> chat_image_selector
    int chat_item_file -> chat_item_file
    int chat_location_noraml -> chat_location_noraml
    int chat_location_pressed -> chat_location_pressed
    int chat_location_selector -> chat_location_selector
    int chat_press_speak_btn -> chat_press_speak_btn
    int chat_press_speak_btn_normal -> chat_press_speak_btn_normal
    int chat_press_speak_btn_pressed -> chat_press_speak_btn_pressed
    int chat_selector -> chat_selector
    int chat_send_btn_normal -> chat_send_btn_normal
    int chat_send_btn_pressed -> chat_send_btn_pressed
    int chat_send_btn_selector -> chat_send_btn_selector
    int chat_takepic_normal -> chat_takepic_normal
    int chat_takepic_pressed -> chat_takepic_pressed
    int chat_takepic_selector -> chat_takepic_selector
    int chat_video_mask_to -> chat_video_mask_to
    int chat_video_normal -> chat_video_normal
    int chat_video_pressed -> chat_video_pressed
    int chat_video_selector -> chat_video_selector
    int chat_voice_call_normal -> chat_voice_call_normal
    int chat_voice_call_pressed -> chat_voice_call_pressed
    int chat_voice_call_receive -> chat_voice_call_receive
    int chat_voice_call_selector -> chat_voice_call_selector
    int chat_voice_call_self -> chat_voice_call_self
    int chatfrom_bg -> chatfrom_bg
    int chatfrom_bg_focused -> chatfrom_bg_focused
    int chatfrom_bg_normal -> chatfrom_bg_normal
    int chatfrom_voice_playing -> chatfrom_voice_playing
    int chatfrom_voice_playing_f1 -> chatfrom_voice_playing_f1
    int chatfrom_voice_playing_f2 -> chatfrom_voice_playing_f2
    int chatfrom_voice_playing_f3 -> chatfrom_voice_playing_f3
    int chatting_biaoqing_btn_enable -> chatting_biaoqing_btn_enable
    int chatting_biaoqing_btn_normal -> chatting_biaoqing_btn_normal
    int chatting_setmode_keyboard_btn -> chatting_setmode_keyboard_btn
    int chatting_setmode_keyboard_btn_normal -> chatting_setmode_keyboard_btn_normal
    int chatting_setmode_keyboard_btn_pressed -> chatting_setmode_keyboard_btn_pressed
    int chatting_setmode_voice_btn -> chatting_setmode_voice_btn
    int chatting_setmode_voice_btn_normal -> chatting_setmode_voice_btn_normal
    int chatting_setmode_voice_btn_pressed -> chatting_setmode_voice_btn_pressed
    int chatto_bg -> chatto_bg
    int chatto_bg_focused -> chatto_bg_focused
    int chatto_bg_normal -> chatto_bg_normal
    int chatto_voice_playing -> chatto_voice_playing
    int chatto_voice_playing_f1 -> chatto_voice_playing_f1
    int chatto_voice_playing_f2 -> chatto_voice_playing_f2
    int chatto_voice_playing_f3 -> chatto_voice_playing_f3
    int checkbox_bg_gray_selector -> checkbox_bg_gray_selector
    int checkbox_bg_selector -> checkbox_bg_selector
    int close_icon -> close_icon
    int collect_no -> collect_no
    int collect_press -> collect_press
    int com_sina_weibo_sdk_button_blue -> com_sina_weibo_sdk_button_blue
    int com_sina_weibo_sdk_button_grey -> com_sina_weibo_sdk_button_grey
    int com_sina_weibo_sdk_login_button_with_account_text -> com_sina_weibo_sdk_login_button_with_account_text
    int com_sina_weibo_sdk_login_button_with_frame_logo -> com_sina_weibo_sdk_login_button_with_frame_logo
    int com_sina_weibo_sdk_login_button_with_original_logo -> com_sina_weibo_sdk_login_button_with_original_logo
    int comment_audio_normal -> comment_audio_normal
    int comment_audio_play -> comment_audio_play
    int comment_audio_pressed -> comment_audio_pressed
    int comment_audio_selector -> comment_audio_selector
    int comment_no -> comment_no
    int comment_play -> comment_play
    int comment_press -> comment_press
    int comment_record_hint_four -> comment_record_hint_four
    int comment_record_hint_one -> comment_record_hint_one
    int comment_record_hint_three -> comment_record_hint_three
    int comment_record_hint_two -> comment_record_hint_two
    int comment_record_no -> comment_record_no
    int comment_record_pause -> comment_record_pause
    int comment_record_play -> comment_record_play
    int comment_record_press -> comment_record_press
    int comment_record_selector -> comment_record_selector
    int comment_selector -> comment_selector
    int common_gray_selector -> common_gray_selector
    int common_listview_headview_red_arrow -> common_listview_headview_red_arrow
    int common_selector -> common_selector
    int common_tab_bg -> common_tab_bg
    int confirm_dialog_bg2 -> confirm_dialog_bg2
    int confirm_dialog_bottom_bg -> confirm_dialog_bottom_bg
    int confirm_dialog_top_bg -> confirm_dialog_top_bg
    int contact_list_normal -> contact_list_normal
    int contact_list_selected -> contact_list_selected
    int contact_list_togroup -> contact_list_togroup
    int context_menu_item_bg -> context_menu_item_bg
    int conversation_normal -> conversation_normal
    int conversation_selected -> conversation_selected
    int corners_bg_indexbg -> corners_bg_indexbg
    int corners_blackbg -> corners_blackbg
    int corners_head -> corners_head
    int corners_headimg -> corners_headimg
    int corners_storke_black -> corners_storke_black
    int corners_storke_edit -> corners_storke_edit
    int corners_storke_edit_no -> corners_storke_edit_no
    int corners_storke_edit_press -> corners_storke_edit_press
    int corners_storke_indexbg -> corners_storke_indexbg
    int corners_storke_indexbg_no -> corners_storke_indexbg_no
    int corners_storke_indexbg_press -> corners_storke_indexbg_press
    int corners_storke_vifrification -> corners_storke_vifrification
    int corners_storke_vifrification_no -> corners_storke_vifrification_no
    int corners_storke_weibo -> corners_storke_weibo
    int corners_storke_white -> corners_storke_white
    int corners_storke_white_no -> corners_storke_white_no
    int corners_storke_white_press -> corners_storke_white_press
    int countrybuttonboundshape -> countrybuttonboundshape
    int custom_progressbar -> custom_progressbar
    int default_avatar -> default_avatar
    int default_image -> default_image
    int delete_expression -> delete_expression
    int dx_checkbox_gray_on -> dx_checkbox_gray_on
    int dx_checkbox_off -> dx_checkbox_off
    int dx_checkbox_on -> dx_checkbox_on
    int edit_text_bg -> edit_text_bg
    int emotionstore_progresscancelbtn -> emotionstore_progresscancelbtn
    int empty_photo -> empty_photo
    int find_no -> find_no
    int find_press -> find_press
    int findduanzi -> findduanzi
    int findktv -> findktv
    int findshow -> findshow
    int findtopic -> findtopic
    int friend_no -> friend_no
    int friend_press -> friend_press
    int geographical -> geographical
    int geographical_hot -> geographical_hot
    int group_icon -> group_icon
    int groups_icon -> groups_icon
    int head_choose_selector -> head_choose_selector
    int ic_com_sina_weibo_sdk_button_blue_focused -> ic_com_sina_weibo_sdk_button_blue_focused
    int ic_com_sina_weibo_sdk_button_blue_normal -> ic_com_sina_weibo_sdk_button_blue_normal
    int ic_com_sina_weibo_sdk_button_blue_pressed -> ic_com_sina_weibo_sdk_button_blue_pressed
    int ic_com_sina_weibo_sdk_button_grey_focused -> ic_com_sina_weibo_sdk_button_grey_focused
    int ic_com_sina_weibo_sdk_button_grey_normal -> ic_com_sina_weibo_sdk_button_grey_normal
    int ic_com_sina_weibo_sdk_button_grey_pressed -> ic_com_sina_weibo_sdk_button_grey_pressed
    int ic_com_sina_weibo_sdk_login_button_with_frame_logo_focused -> ic_com_sina_weibo_sdk_login_button_with_frame_logo_focused
    int ic_com_sina_weibo_sdk_login_button_with_frame_logo_normal -> ic_com_sina_weibo_sdk_login_button_with_frame_logo_normal
    int ic_com_sina_weibo_sdk_login_button_with_frame_logo_pressed -> ic_com_sina_weibo_sdk_login_button_with_frame_logo_pressed
    int ic_com_sina_weibo_sdk_login_with_account_text_focused -> ic_com_sina_weibo_sdk_login_with_account_text_focused
    int ic_com_sina_weibo_sdk_login_with_account_text_normal -> ic_com_sina_weibo_sdk_login_with_account_text_normal
    int ic_com_sina_weibo_sdk_login_with_account_text_pressed -> ic_com_sina_weibo_sdk_login_with_account_text_pressed
    int ic_com_sina_weibo_sdk_login_with_text -> ic_com_sina_weibo_sdk_login_with_text
    int ic_com_sina_weibo_sdk_logo -> ic_com_sina_weibo_sdk_logo
    int ic_launcher -> ic_launcher
    int icon360 -> icon360
    int icon_account -> icon_account
    int icon_marka -> icon_marka
    int icon_mute_normal -> icon_mute_normal
    int icon_mute_on -> icon_mute_on
    int icon_pwd -> icon_pwd
    int icon_speaker_normal -> icon_speaker_normal
    int icon_speaker_on -> icon_speaker_on
    int image_progress -> image_progress
    int imageviewboundshape -> imageviewboundshape
    int index_common_selector -> index_common_selector
    int index_no -> index_no
    int index_press -> index_press
    int index_topic_common_selector -> index_topic_common_selector
    int input_bar_bg_active -> input_bar_bg_active
    int input_bar_bg_normal -> input_bar_bg_normal
    int into_icon -> into_icon
    int location_msg -> location_msg
    int login_error_icon -> login_error_icon
    int login_normal -> login_normal
    int login_qq_normal -> login_qq_normal
    int login_qq_pressed -> login_qq_pressed
    int login_qq_selector -> login_qq_selector
    int login_sina_normal -> login_sina_normal
    int login_sina_pressed -> login_sina_pressed
    int login_sina_selector -> login_sina_selector
    int logo_uidemo -> logo_uidemo
    int m_no -> m_no
    int m_press -> m_press
    int main_bottom_item_bg -> main_bottom_item_bg
    int mini_avatar_shadow -> mini_avatar_shadow
    int mm_listitem_disable -> mm_listitem_disable
    int mm_listitem_pressed -> mm_listitem_pressed
    int mm_title_act_btn -> mm_title_act_btn
    int mm_title_act_btn_normal -> mm_title_act_btn_normal
    int mm_title_act_btn_pressed -> mm_title_act_btn_pressed
    int mm_title_back -> mm_title_back
    int mm_title_remove -> mm_title_remove
    int more_no -> more_no
    int more_press -> more_press
    int more_selector -> more_selector
    int msg_state_fail_resend -> msg_state_fail_resend
    int msg_state_fail_resend_pressed -> msg_state_fail_resend_pressed
    int msg_state_failed_resend -> msg_state_failed_resend
    int music_bg_button -> music_bg_button
    int music_bg_top -> music_bg_top
    int musicback -> musicback
    int musicplayone -> musicplayone
    int musicplaythree -> musicplaythree
    int musicplaytwo -> musicplaytwo
    int myprogress_style -> myprogress_style
    int new_friends_icon -> new_friends_icon
    int no_chat_bg -> no_chat_bg
    int no_friend_bg -> no_friend_bg
    int no_invitation_bg -> no_invitation_bg
    int notice_no -> notice_no
    int notice_no_redpoint -> notice_no_redpoint
    int notice_normal_selector -> notice_normal_selector
    int notice_press -> notice_press
    int notice_selector -> notice_selector
    int open_icon -> open_icon
    int p_no -> p_no
    int p_press -> p_press
    int pause_ico -> pause_ico
    int person -> person
    int person_head_bg -> person_head_bg
    int person_no -> person_no
    int person_press -> person_press
    int photogrid_list_selector -> photogrid_list_selector
    int play_ico -> play_ico
    int point -> point
    int progress_no -> progress_no
    int progress_press -> progress_press
    int progress_selector -> progress_selector
    int publish_btn_no -> publish_btn_no
    int publish_press -> publish_press
    int qq_no -> qq_no
    int qq_press -> qq_press
    int record -> record
    int record_animate_01 -> record_animate_01
    int record_animate_02 -> record_animate_02
    int record_animate_03 -> record_animate_03
    int record_animate_04 -> record_animate_04
    int record_animate_05 -> record_animate_05
    int record_animate_06 -> record_animate_06
    int record_animate_07 -> record_animate_07
    int record_animate_08 -> record_animate_08
    int record_animate_09 -> record_animate_09
    int record_animate_10 -> record_animate_10
    int record_animate_11 -> record_animate_11
    int record_animate_12 -> record_animate_12
    int record_animate_13 -> record_animate_13
    int record_animate_14 -> record_animate_14
    int recording_hint_bg -> recording_hint_bg
    int recording_text_hint_bg -> recording_text_hint_bg
    int red_circle -> red_circle
    int red_point -> red_point
    int redpoint -> redpoint
    int rerecord_no -> rerecord_no
    int rerecord_press -> rerecord_press
    int rerecord_selector -> rerecord_selector
    int return_head_common_selector -> return_head_common_selector
    int return_no -> return_no
    int return_press -> return_press
    int return_selector -> return_selector
    int right_arrow_icon -> right_arrow_icon
    int roominfo_add_btn -> roominfo_add_btn
    int roominfo_add_btn_normal -> roominfo_add_btn_normal
    int roominfo_add_btn_pressed -> roominfo_add_btn_pressed
    int seabar_input -> seabar_input
    int search_bar_edit_normal -> search_bar_edit_normal
    int search_bar_edit_pressed -> search_bar_edit_pressed
    int search_bar_edit_selector -> search_bar_edit_selector
    int search_bar_icon_normal -> search_bar_icon_normal
    int search_clear -> search_clear
    int search_clear_normal -> search_clear_normal
    int search_clear_pressed -> search_clear_pressed
    int select_city_bg -> select_city_bg
    int select_city_btn_selector -> select_city_btn_selector
    int settings_normal -> settings_normal
    int settings_selected -> settings_selected
    int share_f_selector -> share_f_selector
    int share_m_selector -> share_m_selector
    int share_no -> share_no
    int share_press -> share_press
    int share_q_selector -> share_q_selector
    int share_qq_selector -> share_qq_selector
    int share_selector -> share_selector
    int share_w_selector -> share_w_selector
    int share_x_selector -> share_x_selector
    int shortmessage -> shortmessage
    int show_head_toast_bg -> show_head_toast_bg
    int sidebar_background -> sidebar_background
    int sidebar_background_pressed -> sidebar_background_pressed
    int signin_local_gallry -> signin_local_gallry
    int slidetab_bg_press -> slidetab_bg_press
    int smiley_add_btn -> smiley_add_btn
    int smiley_add_btn_nor -> smiley_add_btn_nor
    int smiley_add_btn_pressed -> smiley_add_btn_pressed
    int smiley_minus_btn -> smiley_minus_btn
    int smiley_minus_btn_nor -> smiley_minus_btn_nor
    int smiley_minus_btn_pressed -> smiley_minus_btn_pressed
    int support_no -> support_no
    int support_press -> support_press
    int tab_chat_bg -> tab_chat_bg
    int tab_contact_list_bg -> tab_contact_list_bg
    int tab_find_bg -> tab_find_bg
    int tab_publish_bg -> tab_publish_bg
    int tab_setting_bg -> tab_setting_bg
    int tab_unread_bg -> tab_unread_bg
    int timestampe_bg -> timestampe_bg
    int title_ic_launcher -> title_ic_launcher
    int to_group_details_normal -> to_group_details_normal
    int type_select_btn -> type_select_btn
    int type_select_btn_nor -> type_select_btn_nor
    int type_select_btn_pressed -> type_select_btn_pressed
    int video_download_btn_nor -> video_download_btn_nor
    int video_play_btn_small_nor -> video_play_btn_small_nor
    int video_recorder_start_btn -> video_recorder_start_btn
    int video_recorder_stop_btn -> video_recorder_stop_btn
    int viewpager_tab -> viewpager_tab
    int vifrification -> vifrification
    int voice_call_hangup_bg -> voice_call_hangup_bg
    int voice_unread -> voice_unread
    int w_no -> w_no
    int w_press -> w_press
    int welcome_bg -> welcome_bg
    int x_no -> x_no
    int x_press -> x_press
    int xlistview_arrow -> xlistview_arrow
    int z_no -> z_no
    int z_press -> z_press
com.feytuo.laoxianghao.R$id -> com.feytuo.laoxianghao.R$id:
    int action_bar -> action_bar
    int action_bar_activity_content -> action_bar_activity_content
    int action_bar_container -> action_bar_container
    int action_bar_overlay_layout -> action_bar_overlay_layout
    int action_bar_root -> action_bar_root
    int action_bar_subtitle -> action_bar_subtitle
    int action_bar_title -> action_bar_title
    int action_context_bar -> action_context_bar
    int action_menu_divider -> action_menu_divider
    int action_menu_presenter -> action_menu_presenter
    int action_mode_close_button -> action_mode_close_button
    int action_settings -> action_settings
    int activity_chooser_view_content -> activity_chooser_view_content
    int add_contact_avatar -> add_contact_avatar
    int add_contact_btn -> add_contact_btn
    int add_contact_listview -> add_contact_listview
    int add_contact_nickname -> add_contact_nickname
    int add_to_blacklist -> add_to_blacklist
    int alert_message -> alert_message
    int always -> always
    int avatar -> avatar
    int avatar_container -> avatar_container
    int badge_delete -> badge_delete
    int bar_bottom -> bar_bottom
    int beginning -> beginning
    int bmapView -> bmapView
    int btn_add_to_group -> btn_add_to_group
    int btn_address_list -> btn_address_list
    int btn_answer_call -> btn_answer_call
    int btn_cancel -> btn_cancel
    int btn_container_address_list -> btn_container_address_list
    int btn_container_conversation -> btn_container_conversation
    int btn_container_find -> btn_container_find
    int btn_container_main_invitation -> btn_container_main_invitation
    int btn_container_publish -> btn_container_publish
    int btn_container_setting -> btn_container_setting
    int btn_conversation -> btn_conversation
    int btn_exit -> btn_exit
    int btn_exit_grp -> btn_exit_grp
    int btn_exitdel_grp -> btn_exitdel_grp
    int btn_file -> btn_file
    int btn_find -> btn_find
    int btn_friends_list -> btn_friends_list
    int btn_hangup_call -> btn_hangup_call
    int btn_location -> btn_location
    int btn_location_send -> btn_location_send
    int btn_logout -> btn_logout
    int btn_main_invitation -> btn_main_invitation
    int btn_more -> btn_more
    int btn_picture -> btn_picture
    int btn_press_to_speak -> btn_press_to_speak
    int btn_publish -> btn_publish
    int btn_refuse_call -> btn_refuse_call
    int btn_send -> btn_send
    int btn_set_mode_keyboard -> btn_set_mode_keyboard
    int btn_set_mode_voice -> btn_set_mode_voice
    int btn_setting -> btn_setting
    int btn_take_picture -> btn_take_picture
    int btn_video -> btn_video
    int btn_voice_call -> btn_voice_call
    int button_avatar -> button_avatar
    int button_uploadlog -> button_uploadlog
    int catalog -> catalog
    int cb_member_inviter -> cb_member_inviter
    int cb_public -> cb_public
    int chat_add_friend_btn -> chat_add_friend_btn
    int chatting_click_area -> chatting_click_area
    int chatting_content_iv -> chatting_content_iv
    int chatting_length_iv -> chatting_length_iv
    int chatting_size_iv -> chatting_size_iv
    int chatting_status_btn -> chatting_status_btn
    int chatting_video_data_area -> chatting_video_data_area
    int checkbox -> checkbox
    int chronometer -> chronometer
    int clear_all_history -> clear_all_history
    int collapseActionView -> collapseActionView
    int comment_add_img -> comment_add_img
    int comment_comment_btn -> comment_comment_btn
    int comment_edit_linearlayout -> comment_edit_linearlayout
    int comment_head_image -> comment_head_image
    int comment_img -> comment_img
    int comment_listview -> comment_listview
    int comment_music_bottom_bg -> comment_music_bottom_bg
    int comment_music_top_bg -> comment_music_top_bg
    int comment_nick_name -> comment_nick_name
    int comment_play_btn -> comment_play_btn
    int comment_play_record_imgbutton -> comment_play_record_imgbutton
    int comment_record_btn -> comment_record_btn
    int comment_record_hint_text -> comment_record_hint_text
    int comment_record_linearlayout -> comment_record_linearlayout
    int comment_recording_img -> comment_recording_img
    int comment_recording_linear -> comment_recording_linear
    int comment_rerecord_btn -> comment_rerecord_btn
    int comment_return_button_id -> comment_return_button_id
    int comment_text_context -> comment_text_context
    int comment_text_edit -> comment_text_edit
    int comment_time -> comment_time
    int comment_time_date -> comment_time_date
    int confirm_password -> confirm_password
    int contact_list_no_friend_img -> contact_list_no_friend_img
    int contact_viewpager -> contact_viewpager
    int container -> container
    int container_status_btn -> container_status_btn
    int container_to_group -> container_to_group
    int container_voice_call -> container_voice_call
    int conversation_no_chat_img -> conversation_no_chat_img
    int country_lvcountry -> country_lvcountry
    int cursor -> cursor
    int default_activity_button -> default_activity_button
    int delete_contact -> delete_contact
    int delete_message -> delete_message
    int dialog -> dialog
    int disableHome -> disableHome
    int dropdown -> dropdown
    int edit -> edit
    int edit_group_introduction -> edit_group_introduction
    int edit_group_name -> edit_group_name
    int edit_note -> edit_note
    int edit_query -> edit_query
    int edittext_layout -> edittext_layout
    int edittext_rela -> edittext_rela
    int email_contanier -> email_contanier
    int end -> end
    int et_sendmessage -> et_sendmessage
    int expand_activities_button -> expand_activities_button
    int expanded_menu -> expanded_menu
    int feedback_publish_text -> feedback_publish_text
    int feedback_set_button -> feedback_set_button
    int filter_edit -> filter_edit
    int find_details_return_btn -> find_details_return_btn
    int find_duanzi_img -> find_duanzi_img
    int find_duanzi_linear -> find_duanzi_linear
    int find_ktv_img -> find_ktv_img
    int find_ktv_linear -> find_ktv_linear
    int find_listview -> find_listview
    int find_publish_btn -> find_publish_btn
    int find_show_img -> find_show_img
    int find_show_linear -> find_show_linear
    int find_topic_img -> find_topic_img
    int find_topic_linear -> find_topic_linear
    int find_type_text -> find_type_text
    int floating_header -> floating_header
    int fragment_contact_viewpager_iv_new_contact -> fragment_contact_viewpager_iv_new_contact
    int fragment_container -> fragment_container
    int gridView -> gridView
    int gridview -> gridview
    int group_name -> group_name
    int header -> header
    int home -> home
    int homeAsUp -> homeAsUp
    int hotcitylinear -> hotcitylinear
    int icon -> icon
    int ifRoom -> ifRoom
    int image -> image
    int imageView -> imageView
    int imageview -> imageview
    int index_bottom_linearlayout -> index_bottom_linearlayout
    int index_comment_linerlayout -> index_comment_linerlayout
    int index_comment_num -> index_comment_num
    int index_feedback_linerlayout -> index_feedback_linerlayout
    int index_home_textview -> index_home_textview
    int index_ico_img -> index_ico_img
    int index_listview -> index_listview
    int index_locals_country -> index_locals_country
    int index_locals_time -> index_locals_time
    int index_progressbar_btn -> index_progressbar_btn
    int index_progressbar_layout -> index_progressbar_layout
    int index_progressbar_time -> index_progressbar_time
    int index_progressbar_top_img -> index_progressbar_top_img
    int index_select_city -> index_select_city
    int index_share_linerlayout -> index_share_linerlayout
    int index_support_linerlayout -> index_support_linerlayout
    int index_support_num -> index_support_num
    int index_text_describe -> index_text_describe
    int index_title_relactivelayout -> index_title_relactivelayout
    int index_topic_comment_linerlayout -> index_topic_comment_linerlayout
    int index_topic_comment_num -> index_topic_comment_num
    int index_topic_locals_time -> index_topic_locals_time
    int index_topic_progressbar_btn -> index_topic_progressbar_btn
    int index_topic_progressbar_layout -> index_topic_progressbar_layout
    int index_topic_progressbar_time -> index_topic_progressbar_time
    int index_topic_progressbar_top_img -> index_topic_progressbar_top_img
    int index_topic_share_linerlayout -> index_topic_share_linerlayout
    int index_topic_support_linerlayout -> index_topic_support_linerlayout
    int index_topic_support_num -> index_topic_support_num
    int index_topic_text_describe -> index_topic_text_describe
    int index_topic_top_layout -> index_topic_top_layout
    int index_topic_user_nick -> index_topic_user_nick
    int index_user_head -> index_user_head
    int index_user_nick -> index_user_nick
    int iv_call_icon -> iv_call_icon
    int iv_emoticons_checked -> iv_emoticons_checked
    int iv_emoticons_normal -> iv_emoticons_normal
    int iv_expression -> iv_expression
    int iv_handsfree -> iv_handsfree
    int iv_mute -> iv_mute
    int iv_neterror -> iv_neterror
    int iv_new_contact -> iv_new_contact
    int iv_password -> iv_password
    int iv_password2 -> iv_password2
    int iv_sendPicture -> iv_sendPicture
    int iv_switch_block_groupmsg -> iv_switch_block_groupmsg
    int iv_switch_close_notification -> iv_switch_close_notification
    int iv_switch_close_sound -> iv_switch_close_sound
    int iv_switch_close_speaker -> iv_switch_close_speaker
    int iv_switch_close_vibrate -> iv_switch_close_vibrate
    int iv_switch_open_notification -> iv_switch_open_notification
    int iv_switch_open_sound -> iv_switch_open_sound
    int iv_switch_open_speaker -> iv_switch_open_speaker
    int iv_switch_open_vibrate -> iv_switch_open_vibrate
    int iv_switch_unblock_groupmsg -> iv_switch_unblock_groupmsg
    int iv_unread_voice -> iv_unread_voice
    int iv_userhead -> iv_userhead
    int iv_username -> iv_username
    int iv_voice -> iv_voice
    int list -> list
    int listMode -> listMode
    int list_item -> list_item
    int list_item_layout -> list_item_layout
    int ll_black_list -> ll_black_list
    int ll_btn_container -> ll_btn_container
    int ll_click_area -> ll_click_area
    int ll_coming_call -> ll_coming_call
    int ll_face_container -> ll_face_container
    int ll_file_container -> ll_file_container
    int ll_group -> ll_group
    int ll_loading -> ll_loading
    int ll_location -> ll_location
    int ll_open_invite -> ll_open_invite
    int ll_user -> ll_user
    int ll_voice_control -> ll_voice_control
    int loading -> loading
    int loading_layout -> loading_layout
    int loadprogresabar_pro -> loadprogresabar_pro
    int login_qq_btn -> login_qq_btn
    int login_qq_img -> login_qq_img
    int login_sina_btn -> login_sina_btn
    int login_sina_img -> login_sina_img
    int mainLayout -> mainLayout
    int main_bottom -> main_bottom
    int main_no_invitation_img -> main_no_invitation_img
    int message -> message
    int message_listview -> message_listview
    int message_title -> message_title
    int mic_image -> mic_image
    int middle -> middle
    int more -> more
    int msg_state -> msg_state
    int msg_status -> msg_status
    int mymessage_collect_linerlayout -> mymessage_collect_linerlayout
    int mymessage_comment_linerlayout -> mymessage_comment_linerlayout
    int mymessage_locals_country -> mymessage_locals_country
    int mymessage_locals_time -> mymessage_locals_time
    int mymessage_record_time -> mymessage_record_time
    int mymessage_share_linerlayout -> mymessage_share_linerlayout
    int mymessage_support_linerlayout -> mymessage_support_linerlayout
    int mymessage_text_describe -> mymessage_text_describe
    int name -> name
    int never -> never
    int none -> none
    int normal -> normal
    int onload_dialog_message -> onload_dialog_message
    int our_privacy_olicy -> our_privacy_olicy
    int password -> password
    int pb_load_local -> pb_load_local
    int pb_load_more -> pb_load_more
    int pb_sending -> pb_sending
    int percentage -> percentage
    int person_about_rela -> person_about_rela
    int person_details_ret_img -> person_details_ret_img
    int person_edit -> person_edit
    int person_head_img -> person_head_img
    int person_head_nick -> person_head_nick
    int person_home_rela -> person_home_rela
    int person_home_text -> person_home_text
    int person_info_rela -> person_info_rela
    int person_invitation_container -> person_invitation_container
    int person_nick_rela -> person_nick_rela
    int person_nick_text -> person_nick_text
    int person_red_point -> person_red_point
    int person_set_rela -> person_set_rela
    int person_sign_rela -> person_sign_rela
    int person_sign_text -> person_sign_text
    int person_text -> person_text
    int person_tiezi_rela -> person_tiezi_rela
    int position_choose_listview -> position_choose_listview
    int position_choose_textview -> position_choose_textview
    int privacy_policy_id -> privacy_policy_id
    int progressBar -> progressBar
    int progress_circular -> progress_circular
    int progress_horizontal -> progress_horizontal
    int progressbar_id -> progressbar_id
    int publish_button -> publish_button
    int publish_hint -> publish_hint
    int publish_home_text -> publish_home_text
    int publish_myhome -> publish_myhome
    int publish_play_record_imgbutton -> publish_play_record_imgbutton
    int publish_record_time -> publish_record_time
    int publish_recording_img -> publish_recording_img
    int publish_recording_linear -> publish_recording_linear
    int publish_rerecord_button -> publish_rerecord_button
    int publish_return_relative -> publish_return_relative
    int publish_select_home_rela -> publish_select_home_rela
    int publish_text -> publish_text
    int publish_title_img_id -> publish_title_img_id
    int publish_title_location -> publish_title_location
    int publish_type_text -> publish_type_text
    int publish_wordnum_text -> publish_wordnum_text
    int pull_down_id -> pull_down_id
    int query -> query
    int radio -> radio
    int recorder_start -> recorder_start
    int recorder_stop -> recorder_stop
    int recording_container -> recording_container
    int recording_hint -> recording_hint
    int remove -> remove
    int return_button_id -> return_button_id
    int rl_bottom -> rl_bottom
    int rl_error_item -> rl_error_item
    int rl_list -> rl_list
    int rl_picture -> rl_picture
    int rl_switch_block_groupmsg -> rl_switch_block_groupmsg
    int rl_switch_notification -> rl_switch_notification
    int rl_switch_sound -> rl_switch_sound
    int rl_switch_speaker -> rl_switch_speaker
    int rl_switch_vibrate -> rl_switch_vibrate
    int rl_title_bar -> rl_title_bar
    int root_layout -> root_layout
    int row_rec_location -> row_rec_location
    int row_recv_pic -> row_recv_pic
    int search -> search
    int search_badge -> search_badge
    int search_bar -> search_bar
    int search_button -> search_button
    int search_clear -> search_clear
    int search_close_btn -> search_close_btn
    int search_edit_frame -> search_edit_frame
    int search_go_btn -> search_go_btn
    int search_mag_icon -> search_mag_icon
    int search_plate -> search_plate
    int search_src_text -> search_src_text
    int search_voice_btn -> search_voice_btn
    int select_city_hot_0 -> select_city_hot_0
    int select_city_hot_1 -> select_city_hot_1
    int select_city_hot_2 -> select_city_hot_2
    int select_city_hot_3 -> select_city_hot_3
    int select_city_hot_4 -> select_city_hot_4
    int select_country_return_btn -> select_country_return_btn
    int share_qq_friend -> share_qq_friend
    int share_qzone -> share_qzone
    int share_sina -> share_sina
    int share_sms -> share_sms
    int share_weixin_area -> share_weixin_area
    int share_weixin_friend -> share_weixin_friend
    int shortcut -> shortcut
    int showCustom -> showCustom
    int showHome -> showHome
    int showTitle -> showTitle
    int sidebar -> sidebar
    int sidrbar -> sidrbar
    int signature -> signature
    int split_action_bar -> split_action_bar
    int submit_area -> submit_area
    int support_img -> support_img
    int support_topic_img -> support_topic_img
    int surfaceview -> surfaceview
    int swing_card -> swing_card
    int tabMode -> tabMode
    int tab_group -> tab_group
    int textView -> textView
    int textview -> textview
    int textview1 -> textview1
    int textview2 -> textview2
    int time -> time
    int timestamp -> timestamp
    int title -> title
    int title_img_id -> title_img_id
    int title_text_select -> title_text_select
    int title_type_text -> title_type_text
    int to_person_head_img -> to_person_head_img
    int to_person_home -> to_person_home
    int to_person_nick -> to_person_nick
    int to_person_return_btn -> to_person_return_btn
    int to_person_sign_text -> to_person_sign_text
    int topLayout -> topLayout
    int top_action_bar -> top_action_bar
    int top_bar -> top_bar
    int tv_ack -> tv_ack
    int tv_admin -> tv_admin
    int tv_call_state -> tv_call_state
    int tv_calling_duration -> tv_calling_duration
    int tv_chatcontent -> tv_chatcontent
    int tv_connect_errormsg -> tv_connect_errormsg
    int tv_contact_details -> tv_contact_details
    int tv_delivered -> tv_delivered
    int tv_file_name -> tv_file_name
    int tv_file_size -> tv_file_size
    int tv_file_state -> tv_file_state
    int tv_groupName -> tv_groupName
    int tv_introduction -> tv_introduction
    int tv_length -> tv_length
    int tv_loaing -> tv_loaing
    int tv_location -> tv_location
    int tv_nick -> tv_nick
    int tv_text -> tv_text
    int tv_userid -> tv_userid
    int tv_version -> tv_version
    int type_hint -> type_hint
    int unread_address_number -> unread_address_number
    int unread_msg_number -> unread_msg_number
    int up -> up
    int useLogo -> useLogo
    int user_info_add_friend_btn -> user_info_add_friend_btn
    int user_state -> user_state
    int user_to_person_listview -> user_to_person_listview
    int username -> username
    int vPager -> vPager
    int video_data_area -> video_data_area
    int video_icon -> video_icon
    int welcome_img -> welcome_img
    int withText -> withText
    int wordnumtext -> wordnumtext
    int xlistview_footer_content -> xlistview_footer_content
    int xlistview_footer_hint_textview -> xlistview_footer_hint_textview
    int xlistview_footer_progressbar -> xlistview_footer_progressbar
    int xlistview_header_arrow -> xlistview_header_arrow
    int xlistview_header_content -> xlistview_header_content
    int xlistview_header_hint_textview -> xlistview_header_hint_textview
    int xlistview_header_progressbar -> xlistview_header_progressbar
    int xlistview_header_text -> xlistview_header_text
    int xlistview_header_time -> xlistview_header_time
com.feytuo.laoxianghao.R$integer -> com.feytuo.laoxianghao.R$integer:
    int abc_max_action_buttons -> abc_max_action_buttons
com.feytuo.laoxianghao.R$layout -> com.feytuo.laoxianghao.R$layout:
    int abc_action_bar_decor -> abc_action_bar_decor
    int abc_action_bar_decor_include -> abc_action_bar_decor_include
    int abc_action_bar_decor_overlay -> abc_action_bar_decor_overlay
    int abc_action_bar_home -> abc_action_bar_home
    int abc_action_bar_tab -> abc_action_bar_tab
    int abc_action_bar_tabbar -> abc_action_bar_tabbar
    int abc_action_bar_title_item -> abc_action_bar_title_item
    int abc_action_bar_view_list_nav_layout -> abc_action_bar_view_list_nav_layout
    int abc_action_menu_item_layout -> abc_action_menu_item_layout
    int abc_action_menu_layout -> abc_action_menu_layout
    int abc_action_mode_bar -> abc_action_mode_bar
    int abc_action_mode_close_item -> abc_action_mode_close_item
    int abc_activity_chooser_view -> abc_activity_chooser_view
    int abc_activity_chooser_view_include -> abc_activity_chooser_view_include
    int abc_activity_chooser_view_list_item -> abc_activity_chooser_view_list_item
    int abc_expanded_menu_layout -> abc_expanded_menu_layout
    int abc_list_menu_item_checkbox -> abc_list_menu_item_checkbox
    int abc_list_menu_item_icon -> abc_list_menu_item_icon
    int abc_list_menu_item_layout -> abc_list_menu_item_layout
    int abc_list_menu_item_radio -> abc_list_menu_item_radio
    int abc_popup_menu_item_layout -> abc_popup_menu_item_layout
    int abc_search_dropdown_item_icons_2line -> abc_search_dropdown_item_icons_2line
    int abc_search_view -> abc_search_view
    int abc_simple_decor -> abc_simple_decor
    int activity_about_us -> activity_about_us
    int activity_about_us_privacy_policy -> activity_about_us_privacy_policy
    int activity_add_contact -> activity_add_contact
    int activity_baidumap -> activity_baidumap
    int activity_black_list -> activity_black_list
    int activity_chat -> activity_chat
    int activity_choosevideoactivity -> activity_choosevideoactivity
    int activity_diagnose -> activity_diagnose
    int activity_group_details -> activity_group_details
    int activity_group_pick_contacts -> activity_group_pick_contacts
    int activity_group_simle_details -> activity_group_simle_details
    int activity_login -> activity_login
    int activity_main -> activity_main
    int activity_new_friends_msg -> activity_new_friends_msg
    int activity_new_group -> activity_new_group
    int activity_person_invitation -> activity_person_invitation
    int activity_pick_contact_no_checkbox -> activity_pick_contact_no_checkbox
    int activity_public_groups -> activity_public_groups
    int activity_register -> activity_register
    int activity_show_big_image -> activity_show_big_image
    int activity_show_file -> activity_show_file
    int activity_voice_call -> activity_voice_call
    int activity_welcome -> activity_welcome
    int add_contact_list_item -> add_contact_list_item
    int alert_dialog -> alert_dialog
    int chat_neterror_item -> chat_neterror_item
    int choose_griditem -> choose_griditem
    int city_item -> city_item
    int comment -> comment
    int comment_item_copy -> comment_item_copy
    int commom_back_btn -> commom_back_btn
    int context_menu_for_image -> context_menu_for_image
    int context_menu_for_location -> context_menu_for_location
    int context_menu_for_text -> context_menu_for_text
    int context_menu_for_video -> context_menu_for_video
    int context_menu_for_voice -> context_menu_for_voice
    int dialog -> dialog
    int expression_gridview -> expression_gridview
    int feedback -> feedback
    int find_activity -> find_activity
    int find_details_activity -> find_details_activity
    int fragment1 -> fragment1
    int fragment_contact_list -> fragment_contact_list
    int fragment_contact_viewpager -> fragment_contact_viewpager
    int fragment_conversation_history -> fragment_conversation_history
    int fragment_conversation_settings -> fragment_conversation_settings
    int fragment_groups -> fragment_groups
    int fragment_main -> fragment_main
    int grid -> grid
    int image_grid_fragment -> image_grid_fragment
    int index_listview -> index_listview
    int index_topic_listview -> index_topic_listview
    int login_dialog -> login_dialog
    int logout_actionsheet -> logout_actionsheet
    int main_botton_tab -> main_botton_tab
    int mymessage_listview -> mymessage_listview
    int onload_dialog -> onload_dialog
    int part_hot_country -> part_hot_country
    int person_activity -> person_activity
    int position_choose_dialog -> position_choose_dialog
    int position_choose_list_item -> position_choose_list_item
    int publish -> publish
    int pull_down -> pull_down
    int recorder_activity -> recorder_activity
    int row_add_group -> row_add_group
    int row_chat_history -> row_chat_history
    int row_contact -> row_contact
    int row_contact_with_checkbox -> row_contact_with_checkbox
    int row_expression -> row_expression
    int row_group -> row_group
    int row_invite_msg -> row_invite_msg
    int row_received_file -> row_received_file
    int row_received_location -> row_received_location
    int row_received_message -> row_received_message
    int row_received_picture -> row_received_picture
    int row_received_video -> row_received_video
    int row_received_voice -> row_received_voice
    int row_received_voice_call -> row_received_voice_call
    int row_sent_file -> row_sent_file
    int row_sent_location -> row_sent_location
    int row_sent_message -> row_sent_message
    int row_sent_picture -> row_sent_picture
    int row_sent_video -> row_sent_video
    int row_sent_voice -> row_sent_voice
    int row_sent_voice_call -> row_sent_voice_call
    int search_bar -> search_bar
    int search_bar_with_padding -> search_bar_with_padding
    int selected_country -> selected_country
    int selected_hotcountry -> selected_hotcountry
    int showvideo_activity -> showvideo_activity
    int simple_selected_country -> simple_selected_country
    int support_simple_spinner_dropdown_item -> support_simple_spinner_dropdown_item
    int update_person_info_activity -> update_person_info_activity
    int user_to_person_activity -> user_to_person_activity
    int viewintimg -> viewintimg
    int viewone3dhight -> viewone3dhight
    int viewonehight -> viewonehight
    int viewtenhight -> viewtenhight
    int xlistview_footer -> xlistview_footer
    int xlistview_header -> xlistview_header
com.feytuo.laoxianghao.R$menu -> com.feytuo.laoxianghao.R$menu:
    int context_contact_list -> context_contact_list
    int delete_contact -> delete_contact
    int delete_message -> delete_message
    int main -> main
    int remove_from_blacklist -> remove_from_blacklist
com.feytuo.laoxianghao.R$raw -> com.feytuo.laoxianghao.R$raw:
    int app -> app
    int outgoing -> outgoing
com.feytuo.laoxianghao.R$string -> com.feytuo.laoxianghao.R$string:
    int abc_action_bar_home_description -> abc_action_bar_home_description
    int abc_action_bar_up_description -> abc_action_bar_up_description
    int abc_action_menu_overflow_description -> abc_action_menu_overflow_description
    int abc_action_mode_done -> abc_action_mode_done
    int abc_activity_chooser_view_see_all -> abc_activity_chooser_view_see_all
    int abc_activitychooserview_choose_application -> abc_activitychooserview_choose_application
    int abc_searchview_description_clear -> abc_searchview_description_clear
    int abc_searchview_description_query -> abc_searchview_description_query
    int abc_searchview_description_search -> abc_searchview_description_search
    int abc_searchview_description_submit -> abc_searchview_description_submit
    int abc_searchview_description_voice -> abc_searchview_description_voice
    int abc_shareactionprovider_share_with -> abc_shareactionprovider_share_with
    int abc_shareactionprovider_share_with_application -> abc_shareactionprovider_share_with_application
    int about_xiangxiang -> about_xiangxiang
    int action_settings -> action_settings
    int add_friends -> add_friends
    int all -> all
    int allcity -> allcity
    int allright -> allright
    int app_name -> app_name
    int attach_file -> attach_file
    int attach_location -> attach_location
    int attach_picture -> attach_picture
    int attach_smile -> attach_smile
    int attach_take_pic -> attach_take_pic
    int attach_voice_call -> attach_voice_call
    int back -> back
    int beijing -> beijing
    int blacklist -> blacklist
    int button_add -> button_add
    int button_cancel -> button_cancel
    int button_logout -> button_logout
    int button_pushtotalk -> button_pushtotalk
    int button_save -> button_save
    int button_search -> button_search
    int button_send -> button_send
    int button_uploadlog -> button_uploadlog
    int cancel -> cancel
    int changsha -> changsha
    int chengdu -> chengdu
    int cilck_record -> cilck_record
    int cilckstoprecord -> cilckstoprecord
    int clear_all_records -> clear_all_records
    int clear_cache -> clear_cache
    int clear_records -> clear_records
    int com_sina_weibo_sdk_login -> com_sina_weibo_sdk_login
    int com_sina_weibo_sdk_login_with_weibo_account -> com_sina_weibo_sdk_login_with_weibo_account
    int com_sina_weibo_sdk_logout -> com_sina_weibo_sdk_logout
    int comment -> comment
    int confirm_forward_to -> confirm_forward_to
    int confirm_resend -> confirm_resend
    int connect_conflict -> connect_conflict
    int connect_failuer_toast -> connect_failuer_toast
    int copy -> copy
    int copy_message -> copy_message
    int copy_right -> copy_right
    int copyright -> copyright
    int copyright2014 -> copyright2014
    int country -> country
    int delete -> delete
    int delete_message -> delete_message
    int delete_video -> delete_video
    int delete_voice -> delete_voice
    int describedrecord -> describedrecord
    int dissolution_group_hint -> dissolution_group_hint
    int duanzi -> duanzi
    int exit_group -> exit_group
    int exit_group_hint -> exit_group_hint
    int feedback -> feedback
    int feedback_hint -> feedback_hint
    int file -> file
    int find -> find
    int forward -> forward
    int goodstudy -> goodstudy
    int guangzhou -> guangzhou
    int help_and_feeback -> help_and_feeback
    int home -> home
    int hometown -> hometown
    int hot_city -> hot_city
    int hot_topic -> hot_topic
    int inputkey -> inputkey
    int ktv -> ktv
    int location_message -> location_message
    int location_prefix -> location_prefix
    int location_recv -> location_recv
    int logout -> logout
    int logout_hint -> logout_hint
    int maxmun -> maxmun
    int move_up_to_cancel -> move_up_to_cancel
    int my_fanyan -> my_fanyan
    int my_position -> my_position
    int my_tiezi -> my_tiezi
    int mychangsha -> mychangsha
    int mycollect -> mycollect
    int mymessage -> mymessage
    int myshare_to -> myshare_to
    int network_isnot_available -> network_isnot_available
    int network_unavailable -> network_unavailable
    int nick -> nick
    int ok -> ok
    int pealseselectlogin -> pealseselectlogin
    int picture -> picture
    int pleaseinputnick -> pleaseinputnick
    int position_choose_dialog -> position_choose_dialog
    int press_record -> press_record
    int pressskeak -> pressskeak
    int privacy -> privacy
    int prompt -> prompt
    int publish_fangyang -> publish_fangyang
    int publish_hint -> publish_hint
    int publish_text -> publish_text
    int recoding_fail -> recoding_fail
    int recording_video -> recording_video
    int release_to_cancel -> release_to_cancel
    int rerecord -> rerecord
    int resend -> resend
    int return_text -> return_text
    int save -> save
    int search_header -> search_header
    int select_contacts -> select_contacts
    int send_fail -> send_fail
    int setting -> setting
    int share -> share
    int show -> show
    int stoprecord -> stoprecord
    int text_ack_msg -> text_ack_msg
    int text_delivered_msg -> text_delivered_msg
    int to_friends -> to_friends
    int user_card -> user_card
    int video -> video
    int visa -> visa
    int voice -> voice
    int voice_call -> voice_call
    int wait -> wait
    int weibosdk_demo_access_token_is_empty -> weibosdk_demo_access_token_is_empty
    int weibosdk_demo_cancel_download_weibo -> weibosdk_demo_cancel_download_weibo
    int weibosdk_demo_not_support_api_hint -> weibosdk_demo_not_support_api_hint
    int weibosdk_demo_toast_auth_canceled -> weibosdk_demo_toast_auth_canceled
    int weibosdk_demo_toast_auth_failed -> weibosdk_demo_toast_auth_failed
    int weibosdk_demo_toast_auth_success -> weibosdk_demo_toast_auth_success
    int weibosdk_demo_toast_share_canceled -> weibosdk_demo_toast_share_canceled
    int weibosdk_demo_toast_share_failed -> weibosdk_demo_toast_share_failed
    int weibosdk_demo_toast_share_success -> weibosdk_demo_toast_share_success
    int zan -> zan
com.feytuo.laoxianghao.R$style -> com.feytuo.laoxianghao.R$style:
    int AnimBottom -> AnimBottom
    int AnimFade -> AnimFade
    int AnimFade2 -> AnimFade2
    int AnimHead -> AnimHead
    int AnimTop -> AnimTop
    int AnimTop2 -> AnimTop2
    int Anim_style -> Anim_style
    int Anim_style2 -> Anim_style2
    int AppBaseTheme -> AppBaseTheme
    int AppTheme -> AppTheme
    int HeadScale -> HeadScale
    int LoadDialog -> LoadDialog
    int MyAlertDialog -> MyAlertDialog
    int MyDialog -> MyDialog
    int MyDialogStyle -> MyDialogStyle
    int MyDialogStyleBottom -> MyDialogStyleBottom
    int MyDialogStyleTop -> MyDialogStyleTop
    int TextAppearance_AppCompat_Base_CompactMenu_Dialog -> TextAppearance_AppCompat_Base_CompactMenu_Dialog
    int TextAppearance_AppCompat_Base_SearchResult -> TextAppearance_AppCompat_Base_SearchResult
    int TextAppearance_AppCompat_Base_SearchResult_Subtitle -> TextAppearance_AppCompat_Base_SearchResult_Subtitle
    int TextAppearance_AppCompat_Base_SearchResult_Title -> TextAppearance_AppCompat_Base_SearchResult_Title
    int TextAppearance_AppCompat_Base_Widget_PopupMenu_Large -> TextAppearance_AppCompat_Base_Widget_PopupMenu_Large
    int TextAppearance_AppCompat_Base_Widget_PopupMenu_Small -> TextAppearance_AppCompat_Base_Widget_PopupMenu_Small
    int TextAppearance_AppCompat_Light_Base_SearchResult -> TextAppearance_AppCompat_Light_Base_SearchResult
    int TextAppearance_AppCompat_Light_Base_SearchResult_Subtitle -> TextAppearance_AppCompat_Light_Base_SearchResult_Subtitle
    int TextAppearance_AppCompat_Light_Base_SearchResult_Title -> TextAppearance_AppCompat_Light_Base_SearchResult_Title
    int TextAppearance_AppCompat_Light_Base_Widget_PopupMenu_Large -> TextAppearance_AppCompat_Light_Base_Widget_PopupMenu_Large
    int TextAppearance_AppCompat_Light_Base_Widget_PopupMenu_Small -> TextAppearance_AppCompat_Light_Base_Widget_PopupMenu_Small
    int TextAppearance_AppCompat_Light_SearchResult_Subtitle -> TextAppearance_AppCompat_Light_SearchResult_Subtitle
    int TextAppearance_AppCompat_Light_SearchResult_Title -> TextAppearance_AppCompat_Light_SearchResult_Title
    int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large -> TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
    int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small -> TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
    int TextAppearance_AppCompat_SearchResult_Subtitle -> TextAppearance_AppCompat_SearchResult_Subtitle
    int TextAppearance_AppCompat_SearchResult_Title -> TextAppearance_AppCompat_SearchResult_Title
    int TextAppearance_AppCompat_Widget_ActionBar_Menu -> TextAppearance_AppCompat_Widget_ActionBar_Menu
    int TextAppearance_AppCompat_Widget_ActionBar_Subtitle -> TextAppearance_AppCompat_Widget_ActionBar_Subtitle
    int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse -> TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
    int TextAppearance_AppCompat_Widget_ActionBar_Title -> TextAppearance_AppCompat_Widget_ActionBar_Title
    int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse -> TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
    int TextAppearance_AppCompat_Widget_ActionMode_Subtitle -> TextAppearance_AppCompat_Widget_ActionMode_Subtitle
    int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse -> TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse
    int TextAppearance_AppCompat_Widget_ActionMode_Title -> TextAppearance_AppCompat_Widget_ActionMode_Title
    int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse -> TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse
    int TextAppearance_AppCompat_Widget_Base_ActionBar_Menu -> TextAppearance_AppCompat_Widget_Base_ActionBar_Menu
    int TextAppearance_AppCompat_Widget_Base_ActionBar_Subtitle -> TextAppearance_AppCompat_Widget_Base_ActionBar_Subtitle
    int TextAppearance_AppCompat_Widget_Base_ActionBar_Subtitle_Inverse -> TextAppearance_AppCompat_Widget_Base_ActionBar_Subtitle_Inverse
    int TextAppearance_AppCompat_Widget_Base_ActionBar_Title -> TextAppearance_AppCompat_Widget_Base_ActionBar_Title
    int TextAppearance_AppCompat_Widget_Base_ActionBar_Title_Inverse -> TextAppearance_AppCompat_Widget_Base_ActionBar_Title_Inverse
    int TextAppearance_AppCompat_Widget_Base_ActionMode_Subtitle -> TextAppearance_AppCompat_Widget_Base_ActionMode_Subtitle
    int TextAppearance_AppCompat_Widget_Base_ActionMode_Subtitle_Inverse -> TextAppearance_AppCompat_Widget_Base_ActionMode_Subtitle_Inverse
    int TextAppearance_AppCompat_Widget_Base_ActionMode_Title -> TextAppearance_AppCompat_Widget_Base_ActionMode_Title
    int TextAppearance_AppCompat_Widget_Base_ActionMode_Title_Inverse -> TextAppearance_AppCompat_Widget_Base_ActionMode_Title_Inverse
    int TextAppearance_AppCompat_Widget_Base_DropDownItem -> TextAppearance_AppCompat_Widget_Base_DropDownItem
    int TextAppearance_AppCompat_Widget_DropDownItem -> TextAppearance_AppCompat_Widget_DropDownItem
    int TextAppearance_AppCompat_Widget_PopupMenu_Large -> TextAppearance_AppCompat_Widget_PopupMenu_Large
    int TextAppearance_AppCompat_Widget_PopupMenu_Small -> TextAppearance_AppCompat_Widget_PopupMenu_Small
    int TextAppearance_Widget_AppCompat_Base_ExpandedMenu_Item -> TextAppearance_Widget_AppCompat_Base_ExpandedMenu_Item
    int TextAppearance_Widget_AppCompat_ExpandedMenu_Item -> TextAppearance_Widget_AppCompat_ExpandedMenu_Item
    int Theme_AppCompat -> Theme_AppCompat
    int Theme_AppCompat_Base_CompactMenu -> Theme_AppCompat_Base_CompactMenu
    int Theme_AppCompat_Base_CompactMenu_Dialog -> Theme_AppCompat_Base_CompactMenu_Dialog
    int Theme_AppCompat_CompactMenu -> Theme_AppCompat_CompactMenu
    int Theme_AppCompat_CompactMenu_Dialog -> Theme_AppCompat_CompactMenu_Dialog
    int Theme_AppCompat_DialogWhenLarge -> Theme_AppCompat_DialogWhenLarge
    int Theme_AppCompat_Light -> Theme_AppCompat_Light
    int Theme_AppCompat_Light_DarkActionBar -> Theme_AppCompat_Light_DarkActionBar
    int Theme_AppCompat_Light_DialogWhenLarge -> Theme_AppCompat_Light_DialogWhenLarge
    int Theme_Base -> Theme_Base
    int Theme_Base_AppCompat -> Theme_Base_AppCompat
    int Theme_Base_AppCompat_Dialog_FixedSize -> Theme_Base_AppCompat_Dialog_FixedSize
    int Theme_Base_AppCompat_Dialog_Light_FixedSize -> Theme_Base_AppCompat_Dialog_Light_FixedSize
    int Theme_Base_AppCompat_DialogWhenLarge -> Theme_Base_AppCompat_DialogWhenLarge
    int Theme_Base_AppCompat_DialogWhenLarge_Base -> Theme_Base_AppCompat_DialogWhenLarge_Base
    int Theme_Base_AppCompat_Light -> Theme_Base_AppCompat_Light
    int Theme_Base_AppCompat_Light_DarkActionBar -> Theme_Base_AppCompat_Light_DarkActionBar
    int Theme_Base_AppCompat_Light_DialogWhenLarge -> Theme_Base_AppCompat_Light_DialogWhenLarge
    int Theme_Base_AppCompat_Light_DialogWhenLarge_Base -> Theme_Base_AppCompat_Light_DialogWhenLarge_Base
    int Theme_Base_Light -> Theme_Base_Light
    int Widget_AppCompat_ActionBar -> Widget_AppCompat_ActionBar
    int Widget_AppCompat_ActionBar_Solid -> Widget_AppCompat_ActionBar_Solid
    int Widget_AppCompat_ActionBar_TabBar -> Widget_AppCompat_ActionBar_TabBar
    int Widget_AppCompat_ActionBar_TabText -> Widget_AppCompat_ActionBar_TabText
    int Widget_AppCompat_ActionBar_TabView -> Widget_AppCompat_ActionBar_TabView
    int Widget_AppCompat_ActionButton -> Widget_AppCompat_ActionButton
    int Widget_AppCompat_ActionButton_CloseMode -> Widget_AppCompat_ActionButton_CloseMode
    int Widget_AppCompat_ActionButton_Overflow -> Widget_AppCompat_ActionButton_Overflow
    int Widget_AppCompat_ActionMode -> Widget_AppCompat_ActionMode
    int Widget_AppCompat_ActivityChooserView -> Widget_AppCompat_ActivityChooserView
    int Widget_AppCompat_AutoCompleteTextView -> Widget_AppCompat_AutoCompleteTextView
    int Widget_AppCompat_Base_ActionBar -> Widget_AppCompat_Base_ActionBar
    int Widget_AppCompat_Base_ActionBar_Solid -> Widget_AppCompat_Base_ActionBar_Solid
    int Widget_AppCompat_Base_ActionBar_TabBar -> Widget_AppCompat_Base_ActionBar_TabBar
    int Widget_AppCompat_Base_ActionBar_TabText -> Widget_AppCompat_Base_ActionBar_TabText
    int Widget_AppCompat_Base_ActionBar_TabView -> Widget_AppCompat_Base_ActionBar_TabView
    int Widget_AppCompat_Base_ActionButton -> Widget_AppCompat_Base_ActionButton
    int Widget_AppCompat_Base_ActionButton_CloseMode -> Widget_AppCompat_Base_ActionButton_CloseMode
    int Widget_AppCompat_Base_ActionButton_Overflow -> Widget_AppCompat_Base_ActionButton_Overflow
    int Widget_AppCompat_Base_ActionMode -> Widget_AppCompat_Base_ActionMode
    int Widget_AppCompat_Base_ActivityChooserView -> Widget_AppCompat_Base_ActivityChooserView
    int Widget_AppCompat_Base_AutoCompleteTextView -> Widget_AppCompat_Base_AutoCompleteTextView
    int Widget_AppCompat_Base_DropDownItem_Spinner -> Widget_AppCompat_Base_DropDownItem_Spinner
    int Widget_AppCompat_Base_ListPopupWindow -> Widget_AppCompat_Base_ListPopupWindow
    int Widget_AppCompat_Base_ListView_DropDown -> Widget_AppCompat_Base_ListView_DropDown
    int Widget_AppCompat_Base_ListView_Menu -> Widget_AppCompat_Base_ListView_Menu
    int Widget_AppCompat_Base_PopupMenu -> Widget_AppCompat_Base_PopupMenu
    int Widget_AppCompat_Base_ProgressBar -> Widget_AppCompat_Base_ProgressBar
    int Widget_AppCompat_Base_ProgressBar_Horizontal -> Widget_AppCompat_Base_ProgressBar_Horizontal
    int Widget_AppCompat_Base_Spinner -> Widget_AppCompat_Base_Spinner
    int Widget_AppCompat_DropDownItem_Spinner -> Widget_AppCompat_DropDownItem_Spinner
    int Widget_AppCompat_Light_ActionBar -> Widget_AppCompat_Light_ActionBar
    int Widget_AppCompat_Light_ActionBar_Solid -> Widget_AppCompat_Light_ActionBar_Solid
    int Widget_AppCompat_Light_ActionBar_Solid_Inverse -> Widget_AppCompat_Light_ActionBar_Solid_Inverse
    int Widget_AppCompat_Light_ActionBar_TabBar -> Widget_AppCompat_Light_ActionBar_TabBar
    int Widget_AppCompat_Light_ActionBar_TabBar_Inverse -> Widget_AppCompat_Light_ActionBar_TabBar_Inverse
    int Widget_AppCompat_Light_ActionBar_TabText -> Widget_AppCompat_Light_ActionBar_TabText
    int Widget_AppCompat_Light_ActionBar_TabText_Inverse -> Widget_AppCompat_Light_ActionBar_TabText_Inverse
    int Widget_AppCompat_Light_ActionBar_TabView -> Widget_AppCompat_Light_ActionBar_TabView
    int Widget_AppCompat_Light_ActionBar_TabView_Inverse -> Widget_AppCompat_Light_ActionBar_TabView_Inverse
    int Widget_AppCompat_Light_ActionButton -> Widget_AppCompat_Light_ActionButton
    int Widget_AppCompat_Light_ActionButton_CloseMode -> Widget_AppCompat_Light_ActionButton_CloseMode
    int Widget_AppCompat_Light_ActionButton_Overflow -> Widget_AppCompat_Light_ActionButton_Overflow
    int Widget_AppCompat_Light_ActionMode_Inverse -> Widget_AppCompat_Light_ActionMode_Inverse
    int Widget_AppCompat_Light_ActivityChooserView -> Widget_AppCompat_Light_ActivityChooserView
    int Widget_AppCompat_Light_AutoCompleteTextView -> Widget_AppCompat_Light_AutoCompleteTextView
    int Widget_AppCompat_Light_Base_ActionBar -> Widget_AppCompat_Light_Base_ActionBar
    int Widget_AppCompat_Light_Base_ActionBar_Solid -> Widget_AppCompat_Light_Base_ActionBar_Solid
    int Widget_AppCompat_Light_Base_ActionBar_Solid_Inverse -> Widget_AppCompat_Light_Base_ActionBar_Solid_Inverse
    int Widget_AppCompat_Light_Base_ActionBar_TabBar -> Widget_AppCompat_Light_Base_ActionBar_TabBar
    int Widget_AppCompat_Light_Base_ActionBar_TabBar_Inverse -> Widget_AppCompat_Light_Base_ActionBar_TabBar_Inverse
    int Widget_AppCompat_Light_Base_ActionBar_TabText -> Widget_AppCompat_Light_Base_ActionBar_TabText
    int Widget_AppCompat_Light_Base_ActionBar_TabText_Inverse -> Widget_AppCompat_Light_Base_ActionBar_TabText_Inverse
    int Widget_AppCompat_Light_Base_ActionBar_TabView -> Widget_AppCompat_Light_Base_ActionBar_TabView
    int Widget_AppCompat_Light_Base_ActionBar_TabView_Inverse -> Widget_AppCompat_Light_Base_ActionBar_TabView_Inverse
    int Widget_AppCompat_Light_Base_ActionButton -> Widget_AppCompat_Light_Base_ActionButton
    int Widget_AppCompat_Light_Base_ActionButton_CloseMode -> Widget_AppCompat_Light_Base_ActionButton_CloseMode
    int Widget_AppCompat_Light_Base_ActionButton_Overflow -> Widget_AppCompat_Light_Base_ActionButton_Overflow
    int Widget_AppCompat_Light_Base_ActionMode_Inverse -> Widget_AppCompat_Light_Base_ActionMode_Inverse
    int Widget_AppCompat_Light_Base_ActivityChooserView -> Widget_AppCompat_Light_Base_ActivityChooserView
    int Widget_AppCompat_Light_Base_AutoCompleteTextView -> Widget_AppCompat_Light_Base_AutoCompleteTextView
    int Widget_AppCompat_Light_Base_DropDownItem_Spinner -> Widget_AppCompat_Light_Base_DropDownItem_Spinner
    int Widget_AppCompat_Light_Base_ListPopupWindow -> Widget_AppCompat_Light_Base_ListPopupWindow
    int Widget_AppCompat_Light_Base_ListView_DropDown -> Widget_AppCompat_Light_Base_ListView_DropDown
    int Widget_AppCompat_Light_Base_PopupMenu -> Widget_AppCompat_Light_Base_PopupMenu
    int Widget_AppCompat_Light_Base_Spinner -> Widget_AppCompat_Light_Base_Spinner
    int Widget_AppCompat_Light_DropDownItem_Spinner -> Widget_AppCompat_Light_DropDownItem_Spinner
    int Widget_AppCompat_Light_ListPopupWindow -> Widget_AppCompat_Light_ListPopupWindow
    int Widget_AppCompat_Light_ListView_DropDown -> Widget_AppCompat_Light_ListView_DropDown
    int Widget_AppCompat_Light_PopupMenu -> Widget_AppCompat_Light_PopupMenu
    int Widget_AppCompat_Light_Spinner_DropDown_ActionBar -> Widget_AppCompat_Light_Spinner_DropDown_ActionBar
    int Widget_AppCompat_ListPopupWindow -> Widget_AppCompat_ListPopupWindow
    int Widget_AppCompat_ListView_DropDown -> Widget_AppCompat_ListView_DropDown
    int Widget_AppCompat_ListView_Menu -> Widget_AppCompat_ListView_Menu
    int Widget_AppCompat_PopupMenu -> Widget_AppCompat_PopupMenu
    int Widget_AppCompat_ProgressBar -> Widget_AppCompat_ProgressBar
    int Widget_AppCompat_ProgressBar_Horizontal -> Widget_AppCompat_ProgressBar_Horizontal
    int Widget_AppCompat_Spinner_DropDown_ActionBar -> Widget_AppCompat_Spinner_DropDown_ActionBar
    int bottom_line_edit_text_style -> bottom_line_edit_text_style
    int chat_content_date_style -> chat_content_date_style
    int chat_text_date_style -> chat_text_date_style
    int chat_text_name_style -> chat_text_name_style
    int com_sina_weibo_sdk_loginview_default_style -> com_sina_weibo_sdk_loginview_default_style
    int com_sina_weibo_sdk_loginview_silver_style -> com_sina_weibo_sdk_loginview_silver_style
    int devide_line_eee -> devide_line_eee
    int horizontal_slide -> horizontal_slide
    int nornal_style -> nornal_style
com.feytuo.laoxianghao.R$styleable -> com.feytuo.laoxianghao.R$styleable:
    int[] ActionBar -> ActionBar
    int ActionBar_background -> ActionBar_background
    int ActionBar_backgroundSplit -> ActionBar_backgroundSplit
    int ActionBar_backgroundStacked -> ActionBar_backgroundStacked
    int ActionBar_customNavigationLayout -> ActionBar_customNavigationLayout
    int ActionBar_displayOptions -> ActionBar_displayOptions
    int ActionBar_divider -> ActionBar_divider
    int ActionBar_height -> ActionBar_height
    int ActionBar_homeLayout -> ActionBar_homeLayout
    int ActionBar_icon -> ActionBar_icon
    int ActionBar_indeterminateProgressStyle -> ActionBar_indeterminateProgressStyle
    int ActionBar_itemPadding -> ActionBar_itemPadding
    int ActionBar_logo -> ActionBar_logo
    int ActionBar_navigationMode -> ActionBar_navigationMode
    int ActionBar_progressBarPadding -> ActionBar_progressBarPadding
    int ActionBar_progressBarStyle -> ActionBar_progressBarStyle
    int ActionBar_subtitle -> ActionBar_subtitle
    int ActionBar_subtitleTextStyle -> ActionBar_subtitleTextStyle
    int ActionBar_title -> ActionBar_title
    int ActionBar_titleTextStyle -> ActionBar_titleTextStyle
    int[] ActionBarLayout -> ActionBarLayout
    int ActionBarLayout_android_layout_gravity -> ActionBarLayout_android_layout_gravity
    int[] ActionBarWindow -> ActionBarWindow
    int ActionBarWindow_windowActionBar -> ActionBarWindow_windowActionBar
    int ActionBarWindow_windowActionBarOverlay -> ActionBarWindow_windowActionBarOverlay
    int ActionBarWindow_windowFixedHeightMajor -> ActionBarWindow_windowFixedHeightMajor
    int ActionBarWindow_windowFixedHeightMinor -> ActionBarWindow_windowFixedHeightMinor
    int ActionBarWindow_windowFixedWidthMajor -> ActionBarWindow_windowFixedWidthMajor
    int ActionBarWindow_windowFixedWidthMinor -> ActionBarWindow_windowFixedWidthMinor
    int ActionBarWindow_windowSplitActionBar -> ActionBarWindow_windowSplitActionBar
    int[] ActionMenuItemView -> ActionMenuItemView
    int ActionMenuItemView_android_minWidth -> ActionMenuItemView_android_minWidth
    int[] ActionMenuView -> ActionMenuView
    int[] ActionMode -> ActionMode
    int ActionMode_background -> ActionMode_background
    int ActionMode_backgroundSplit -> ActionMode_backgroundSplit
    int ActionMode_height -> ActionMode_height
    int ActionMode_subtitleTextStyle -> ActionMode_subtitleTextStyle
    int ActionMode_titleTextStyle -> ActionMode_titleTextStyle
    int[] ActivityChooserView -> ActivityChooserView
    int ActivityChooserView_expandActivityOverflowButtonDrawable -> ActivityChooserView_expandActivityOverflowButtonDrawable
    int ActivityChooserView_initialActivityCount -> ActivityChooserView_initialActivityCount
    int[] CompatTextView -> CompatTextView
    int CompatTextView_textAllCaps -> CompatTextView_textAllCaps
    int[] LinearLayoutICS -> LinearLayoutICS
    int LinearLayoutICS_divider -> LinearLayoutICS_divider
    int LinearLayoutICS_dividerPadding -> LinearLayoutICS_dividerPadding
    int LinearLayoutICS_showDividers -> LinearLayoutICS_showDividers
    int[] ListView -> ListView
    int ListView_android_divider -> ListView_android_divider
    int ListView_android_dividerHeight -> ListView_android_dividerHeight
    int ListView_android_entries -> ListView_android_entries
    int ListView_android_footerDividersEnabled -> ListView_android_footerDividersEnabled
    int ListView_android_headerDividersEnabled -> ListView_android_headerDividersEnabled
    int ListView_android_overScrollFooter -> ListView_android_overScrollFooter
    int ListView_android_overScrollHeader -> ListView_android_overScrollHeader
    int[] MenuGroup -> MenuGroup
    int MenuGroup_android_checkableBehavior -> MenuGroup_android_checkableBehavior
    int MenuGroup_android_enabled -> MenuGroup_android_enabled
    int MenuGroup_android_id -> MenuGroup_android_id
    int MenuGroup_android_menuCategory -> MenuGroup_android_menuCategory
    int MenuGroup_android_orderInCategory -> MenuGroup_android_orderInCategory
    int MenuGroup_android_visible -> MenuGroup_android_visible
    int[] MenuItem -> MenuItem
    int MenuItem_actionLayout -> MenuItem_actionLayout
    int MenuItem_actionProviderClass -> MenuItem_actionProviderClass
    int MenuItem_actionViewClass -> MenuItem_actionViewClass
    int MenuItem_android_alphabeticShortcut -> MenuItem_android_alphabeticShortcut
    int MenuItem_android_checkable -> MenuItem_android_checkable
    int MenuItem_android_checked -> MenuItem_android_checked
    int MenuItem_android_enabled -> MenuItem_android_enabled
    int MenuItem_android_icon -> MenuItem_android_icon
    int MenuItem_android_id -> MenuItem_android_id
    int MenuItem_android_menuCategory -> MenuItem_android_menuCategory
    int MenuItem_android_numericShortcut -> MenuItem_android_numericShortcut
    int MenuItem_android_onClick -> MenuItem_android_onClick
    int MenuItem_android_orderInCategory -> MenuItem_android_orderInCategory
    int MenuItem_android_title -> MenuItem_android_title
    int MenuItem_android_titleCondensed -> MenuItem_android_titleCondensed
    int MenuItem_android_visible -> MenuItem_android_visible
    int MenuItem_showAsAction -> MenuItem_showAsAction
    int[] MenuView -> MenuView
    int MenuView_android_headerBackground -> MenuView_android_headerBackground
    int MenuView_android_horizontalDivider -> MenuView_android_horizontalDivider
    int MenuView_android_itemBackground -> MenuView_android_itemBackground
    int MenuView_android_itemIconDisabledAlpha -> MenuView_android_itemIconDisabledAlpha
    int MenuView_android_itemTextAppearance -> MenuView_android_itemTextAppearance
    int MenuView_android_preserveIconSpacing -> MenuView_android_preserveIconSpacing
    int MenuView_android_verticalDivider -> MenuView_android_verticalDivider
    int MenuView_android_windowAnimationStyle -> MenuView_android_windowAnimationStyle
    int[] SearchView -> SearchView
    int SearchView_android_imeOptions -> SearchView_android_imeOptions
    int SearchView_android_inputType -> SearchView_android_inputType
    int SearchView_android_maxWidth -> SearchView_android_maxWidth
    int SearchView_iconifiedByDefault -> SearchView_iconifiedByDefault
    int SearchView_queryHint -> SearchView_queryHint
    int[] Spinner -> Spinner
    int Spinner_android_dropDownHorizontalOffset -> Spinner_android_dropDownHorizontalOffset
    int Spinner_android_dropDownSelector -> Spinner_android_dropDownSelector
    int Spinner_android_dropDownVerticalOffset -> Spinner_android_dropDownVerticalOffset
    int Spinner_android_dropDownWidth -> Spinner_android_dropDownWidth
    int Spinner_android_gravity -> Spinner_android_gravity
    int Spinner_android_popupBackground -> Spinner_android_popupBackground
    int Spinner_disableChildrenWhenDisabled -> Spinner_disableChildrenWhenDisabled
    int Spinner_popupPromptView -> Spinner_popupPromptView
    int Spinner_prompt -> Spinner_prompt
    int Spinner_spinnerMode -> Spinner_spinnerMode
    int[] Theme -> Theme
    int Theme_actionDropDownStyle -> Theme_actionDropDownStyle
    int Theme_dropdownListPreferredItemHeight -> Theme_dropdownListPreferredItemHeight
    int Theme_listChoiceBackgroundIndicator -> Theme_listChoiceBackgroundIndicator
    int Theme_panelMenuListTheme -> Theme_panelMenuListTheme
    int Theme_panelMenuListWidth -> Theme_panelMenuListWidth
    int Theme_popupMenuStyle -> Theme_popupMenuStyle
    int[] View -> View
    int View_android_focusable -> View_android_focusable
    int View_paddingEnd -> View_paddingEnd
    int View_paddingStart -> View_paddingStart
    int[] ZrcAbsListView -> ZrcAbsListView
    int ZrcAbsListView_android_cacheColorHint -> ZrcAbsListView_android_cacheColorHint
    int ZrcAbsListView_android_choiceMode -> ZrcAbsListView_android_choiceMode
    int ZrcAbsListView_android_drawSelectorOnTop -> ZrcAbsListView_android_drawSelectorOnTop
    int ZrcAbsListView_android_listSelector -> ZrcAbsListView_android_listSelector
    int ZrcAbsListView_android_scrollingCache -> ZrcAbsListView_android_scrollingCache
    int ZrcAbsListView_android_smoothScrollbar -> ZrcAbsListView_android_smoothScrollbar
    int ZrcAbsListView_android_stackFromBottom -> ZrcAbsListView_android_stackFromBottom
    int ZrcAbsListView_android_transcriptMode -> ZrcAbsListView_android_transcriptMode
com.feytuo.laoxianghao.SelsectedCountry -> com.feytuo.laoxianghao.SelsectedCountry:
    android.widget.ListView sortListView -> a
    com.feytuo.laoxianghao.sortlistview.SideBar sideBar -> b
    android.widget.TextView dialog -> c
    android.widget.TextView titleTextSelect -> d
    com.feytuo.laoxianghao.sortlistview.SortAdapter adapter -> e
    com.feytuo.laoxianghao.sortlistview.ClearEditText mClearEditText -> f
    android.widget.Button selectCountryReturnBtn -> g
    android.widget.Button selectCityHot1 -> h
    android.widget.Button selectCityHot2 -> i
    android.widget.Button selectCityHot3 -> j
    android.widget.Button selectCityHot4 -> k
    android.widget.Button selectCityHot0 -> l
    com.feytuo.laoxianghao.sortlistview.CharacterParser characterParser -> m
    java.util.List SourceDateList -> n
    java.util.List cityNameList -> o
    android.widget.LinearLayout hotCityLinear -> p
    com.feytuo.laoxianghao.sortlistview.PinyinComparator pinyinComparator -> q
    int path -> r
    com.feytuo.laoxianghao.view.OnloadDialog pd -> s
    void onCreate(android.os.Bundle) -> onCreate
    void initCity() -> a
    void initViews() -> b
    void turnToMain(java.lang.String) -> b
    void setUmenData(java.lang.String) -> c
    void saveCurrentHome(java.lang.String) -> a
    void updateCurrentUserHome(java.lang.String) -> d
    java.util.List filledData(java.util.List) -> a
    void filterData(java.lang.String) -> e
    void selectcityret(android.view.View) -> selectcityret
    void onResume() -> onResume
    void onPause() -> onPause
    com.feytuo.laoxianghao.sortlistview.SortAdapter access$0(com.feytuo.laoxianghao.SelsectedCountry) -> a
    android.widget.ListView access$1(com.feytuo.laoxianghao.SelsectedCountry) -> b
    void access$2(com.feytuo.laoxianghao.SelsectedCountry,java.lang.String) -> a
    com.feytuo.laoxianghao.view.OnloadDialog access$3(com.feytuo.laoxianghao.SelsectedCountry) -> c
    void access$4(com.feytuo.laoxianghao.SelsectedCountry,java.lang.String) -> b
com.feytuo.laoxianghao.SelsectedCountry$1 -> com.feytuo.laoxianghao.ap:
    com.feytuo.laoxianghao.SelsectedCountry this$0 -> a
    void onTouchingLetterChanged(java.lang.String) -> a
com.feytuo.laoxianghao.SelsectedCountry$2 -> com.feytuo.laoxianghao.aq:
    com.feytuo.laoxianghao.SelsectedCountry this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.feytuo.laoxianghao.SelsectedCountry$3 -> com.feytuo.laoxianghao.ar:
    com.feytuo.laoxianghao.SelsectedCountry this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.feytuo.laoxianghao.SelsectedCountry$4 -> com.feytuo.laoxianghao.as:
    com.feytuo.laoxianghao.SelsectedCountry this$0 -> a
    java.lang.String val$home -> b
    void onSuccess() -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.feytuo.laoxianghao.SelsectedCountry$Listener -> com.feytuo.laoxianghao.at:
    com.feytuo.laoxianghao.SelsectedCountry this$0 -> a
    void onClick(android.view.View) -> onClick
com.feytuo.laoxianghao.SetActivity -> com.feytuo.laoxianghao.SetActivity:
    android.widget.RelativeLayout rl_switch_notification -> a
    android.widget.RelativeLayout rl_switch_sound -> b
    android.widget.RelativeLayout rl_switch_vibrate -> c
    android.widget.RelativeLayout rl_switch_speaker -> d
    android.widget.ImageView iv_switch_open_notification -> e
    android.widget.ImageView iv_switch_close_notification -> f
    android.widget.ImageView iv_switch_open_sound -> g
    android.widget.ImageView iv_switch_close_sound -> h
    android.widget.ImageView iv_switch_open_vibrate -> i
    android.widget.ImageView iv_switch_close_vibrate -> j
    android.widget.ImageView iv_switch_open_speaker -> k
    android.widget.ImageView iv_switch_close_speaker -> l
    android.widget.TextView textview1 -> m
    android.widget.TextView textview2 -> n
    android.widget.LinearLayout blacklistContainer -> o
    android.widget.Button logoutBtn -> p
    com.easemob.chat.EMChatOptions chatOptions -> q
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    void setRetImg(android.view.View) -> setRetImg
    void onResume() -> onResume
    void onPause() -> onPause
com.feytuo.laoxianghao.SimpleSelsectedCountry -> com.feytuo.laoxianghao.SimpleSelsectedCountry:
    void onCreate(android.os.Bundle) -> onCreate
    void appLogin(android.view.View) -> appLogin
    void onResume() -> onResume
    void onPause() -> onPause
com.feytuo.laoxianghao.UserToPersonActivity -> com.feytuo.laoxianghao.UserToPersonActivity:
    com.feytuo.laoxianghao.adapter.FindListViewAdapter adapter -> a
    android.widget.ListView userToPersonListView -> b
    java.util.List listItems -> c
    android.widget.TextView toPersonHome -> d
    android.widget.ImageView toPersonHeadImg -> e
    android.widget.TextView toPersonNick -> f
    android.widget.TextView toPersonSignText -> g
    android.widget.Button addFriendBtn -> h
    com.feytuo.laoxianghao.domain.LXHUser mUser -> i
    java.lang.String userId -> j
    com.feytuo.laoxianghao.view.OnloadDialog pd -> k
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void toPersonReturnBtn(android.view.View) -> toPersonReturnBtn
    void toPersonChat(android.view.View) -> toPersonChat
    void initlistview() -> b
    void getUserInfo() -> c
    void setUserInfo(com.feytuo.laoxianghao.domain.LXHUser) -> a
    void getListData() -> d
    void addFriend(android.view.View) -> addFriend
    void addContact() -> addContact
    void addToLocalDB(java.lang.String,java.lang.String,java.lang.String) -> a
    void setUserHead(com.feytuo.chat.domain.User) -> a
    void onResume() -> onResume
    void onPause() -> onPause
    void access$0(com.feytuo.laoxianghao.UserToPersonActivity,com.feytuo.laoxianghao.domain.LXHUser) -> a
    void access$1(com.feytuo.laoxianghao.UserToPersonActivity,com.feytuo.laoxianghao.domain.LXHUser) -> b
    java.util.List access$2(com.feytuo.laoxianghao.UserToPersonActivity) -> a
    com.feytuo.laoxianghao.adapter.FindListViewAdapter access$3(com.feytuo.laoxianghao.UserToPersonActivity) -> b
    com.feytuo.laoxianghao.domain.LXHUser access$4(com.feytuo.laoxianghao.UserToPersonActivity) -> c
    void access$5(com.feytuo.laoxianghao.UserToPersonActivity,java.lang.String,java.lang.String,java.lang.String) -> a
    com.feytuo.laoxianghao.view.OnloadDialog access$6(com.feytuo.laoxianghao.UserToPersonActivity) -> d
com.feytuo.laoxianghao.UserToPersonActivity$1 -> com.feytuo.laoxianghao.au:
    com.feytuo.laoxianghao.UserToPersonActivity this$0 -> a
    void onSuccess(com.feytuo.laoxianghao.domain.LXHUser) -> a
    void onFailure(int,java.lang.String) -> onFailure
    void onSuccess(java.lang.Object) -> onSuccess
com.feytuo.laoxianghao.UserToPersonActivity$2 -> com.feytuo.laoxianghao.av:
    com.feytuo.laoxianghao.UserToPersonActivity this$0 -> a
    void onSuccess(java.util.List) -> onSuccess
    void onError(int,java.lang.String) -> onError
com.feytuo.laoxianghao.UserToPersonActivity$3 -> com.feytuo.laoxianghao.aw:
    com.feytuo.laoxianghao.UserToPersonActivity this$0 -> a
    void run() -> run
    com.feytuo.laoxianghao.UserToPersonActivity access$0(com.feytuo.laoxianghao.UserToPersonActivity$3) -> a
com.feytuo.laoxianghao.UserToPersonActivity$3$1 -> com.feytuo.laoxianghao.ax:
    com.feytuo.laoxianghao.UserToPersonActivity$3 this$1 -> a
    void run() -> run
com.feytuo.laoxianghao.UserToPersonActivity$3$2 -> com.feytuo.laoxianghao.ay:
    com.feytuo.laoxianghao.UserToPersonActivity$3 this$1 -> a
    java.lang.Exception val$e -> b
    void run() -> run
com.feytuo.laoxianghao.WelcomeActivity -> com.feytuo.laoxianghao.WelcomeActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> b
    void initBmob() -> c
    void copyDbFile() -> d
    void enterApp() -> a
    boolean isFistLogin() -> e
    void onResume() -> onResume
    void onPause() -> onPause
    void access$0(com.feytuo.laoxianghao.WelcomeActivity) -> a
    void access$1(com.feytuo.laoxianghao.WelcomeActivity) -> b
com.feytuo.laoxianghao.WelcomeActivity$1 -> com.feytuo.laoxianghao.az:
    com.feytuo.laoxianghao.WelcomeActivity this$0 -> a
    void run() -> run
com.feytuo.laoxianghao.WelcomeActivity$2 -> com.feytuo.laoxianghao.ba:
    com.feytuo.laoxianghao.WelcomeActivity this$0 -> a
    void run() -> run
com.feytuo.laoxianghao.adapter.CommentListViewAdapter -> com.feytuo.laoxianghao.a.a:
    java.lang.String TAG -> d
    android.content.Context context -> e
    android.view.LayoutInflater m_Inflater -> f
    java.util.List data -> g
    com.feytuo.laoxianghao.domain.Invitation inv -> h
    int VIEW_TYPE -> a
    int TYPE_1 -> b
    int TYPE_2 -> c
    android.media.MediaPlayer mp -> i
    android.util.SparseArray isAudioPlayArray -> j
    boolean isPraised -> k
    com.feytuo.laoxianghao.dao.LXHUserDao userDao -> l
    com.feytuo.laoxianghao.dao.CityDao cityDao -> m
    com.feytuo.laoxianghao.util.ImageLoader mImageLoader -> n
    int lastPosition -> o
    boolean isPlay -> p
    com.feytuo.laoxianghao.adapter.CommentListViewAdapter$viewHolder2 lastView -> q
    boolean isInvitationPlay -> r
    int voiceDuration -> s
    com.feytuo.laoxianghao.adapter.CommentListViewAdapter$MyCount mCountDownTimer -> t
    android.media.MediaPlayer mMeidaPlayer -> u
    com.feytuo.laoxianghao.adapter.CommentListViewAdapter$viewHolder1 mHolder1 -> v
    android.graphics.drawable.AnimationDrawable animationDrawable -> w
    android.os.Handler mHandler -> x
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setCommentContent(com.feytuo.laoxianghao.adapter.CommentListViewAdapter$viewHolder2,int) -> a
    void setUserInfo(java.lang.String,android.widget.TextView,android.widget.ImageView) -> a
    void setUserInfoFromBmob(java.lang.String,android.widget.TextView,android.widget.ImageView,int) -> a
    void setAudioPlayBtn(com.feytuo.laoxianghao.adapter.CommentListViewAdapter$viewHolder2,int) -> b
    void setcontent(com.feytuo.laoxianghao.adapter.CommentListViewAdapter$viewHolder1,com.feytuo.laoxianghao.domain.Invitation) -> a
    void setUserInfo(java.lang.String,android.widget.TextView,android.widget.ImageButton) -> a
    void setSubBtn(com.feytuo.laoxianghao.adapter.CommentListViewAdapter$viewHolder1,com.feytuo.laoxianghao.domain.Invitation) -> b
    boolean isPraised(java.lang.String,java.lang.String) -> a
    void playAudio(com.feytuo.laoxianghao.adapter.CommentListViewAdapter$viewHolder2,int) -> c
    void stopAudio() -> a
    void stopAudio(com.feytuo.laoxianghao.adapter.CommentListViewAdapter$viewHolder2,int) -> d
    void dealSupportBtn(com.feytuo.laoxianghao.adapter.CommentListViewAdapter$viewHolder1) -> a
    void addPraise() -> c
    void deletePraise() -> d
    void playInvitationAudio(com.feytuo.laoxianghao.adapter.CommentListViewAdapter$viewHolder1) -> b
    void stopInvitationAudio() -> b
    void stopInvitationAudio(com.feytuo.laoxianghao.adapter.CommentListViewAdapter$viewHolder1) -> c
    com.feytuo.laoxianghao.adapter.CommentListViewAdapter$viewHolder1 access$0(com.feytuo.laoxianghao.adapter.CommentListViewAdapter) -> a
    int access$1(com.feytuo.laoxianghao.adapter.CommentListViewAdapter) -> b
    android.graphics.drawable.AnimationDrawable access$2(com.feytuo.laoxianghao.adapter.CommentListViewAdapter) -> c
    void access$3(com.feytuo.laoxianghao.adapter.CommentListViewAdapter,boolean) -> a
    android.content.Context access$4(com.feytuo.laoxianghao.adapter.CommentListViewAdapter) -> d
    int access$5(com.feytuo.laoxianghao.adapter.CommentListViewAdapter) -> e
    boolean access$6(com.feytuo.laoxianghao.adapter.CommentListViewAdapter) -> f
    void access$7(com.feytuo.laoxianghao.adapter.CommentListViewAdapter,com.feytuo.laoxianghao.adapter.CommentListViewAdapter$viewHolder2,int) -> a
    void access$8(com.feytuo.laoxianghao.adapter.CommentListViewAdapter,com.feytuo.laoxianghao.adapter.CommentListViewAdapter$viewHolder2,int) -> b
    com.feytuo.laoxianghao.domain.Invitation access$9(com.feytuo.laoxianghao.adapter.CommentListViewAdapter) -> g
    boolean access$10(com.feytuo.laoxianghao.adapter.CommentListViewAdapter) -> h
    void access$11(com.feytuo.laoxianghao.adapter.CommentListViewAdapter,com.feytuo.laoxianghao.adapter.CommentListViewAdapter$viewHolder1) -> a
    void access$12(com.feytuo.laoxianghao.adapter.CommentListViewAdapter,com.feytuo.laoxianghao.adapter.CommentListViewAdapter$viewHolder1) -> b
    android.os.Handler access$13(com.feytuo.laoxianghao.adapter.CommentListViewAdapter) -> i
    com.feytuo.laoxianghao.util.ImageLoader access$14(com.feytuo.laoxianghao.adapter.CommentListViewAdapter) -> j
    com.feytuo.laoxianghao.dao.LXHUserDao access$15(com.feytuo.laoxianghao.adapter.CommentListViewAdapter) -> k
    void access$16(com.feytuo.laoxianghao.adapter.CommentListViewAdapter,com.feytuo.laoxianghao.adapter.CommentListViewAdapter$MyCount) -> a
    com.feytuo.laoxianghao.adapter.CommentListViewAdapter$MyCount access$17(com.feytuo.laoxianghao.adapter.CommentListViewAdapter) -> l
com.feytuo.laoxianghao.adapter.CommentListViewAdapter$1 -> com.feytuo.laoxianghao.a.b:
    com.feytuo.laoxianghao.adapter.CommentListViewAdapter this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.feytuo.laoxianghao.adapter.CommentListViewAdapter$2 -> com.feytuo.laoxianghao.a.c:
    com.feytuo.laoxianghao.adapter.CommentListViewAdapter this$0 -> a
    android.widget.TextView val$nameTV -> b
    android.widget.ImageView val$personHeadImg -> c
    int val$type -> d
    void onSuccess(java.util.List) -> onSuccess
    void onError(int,java.lang.String) -> onError
com.feytuo.laoxianghao.adapter.CommentListViewAdapter$3 -> com.feytuo.laoxianghao.a.d:
    com.feytuo.laoxianghao.adapter.CommentListViewAdapter this$0 -> a
    void onPrepared(android.media.MediaPlayer) -> onPrepared
com.feytuo.laoxianghao.adapter.CommentListViewAdapter$4 -> com.feytuo.laoxianghao.a.e:
    com.feytuo.laoxianghao.adapter.CommentListViewAdapter this$0 -> a
    com.feytuo.laoxianghao.adapter.CommentListViewAdapter$viewHolder2 val$holder -> b
    int val$position -> c
    void onCompletion(android.media.MediaPlayer) -> onCompletion
com.feytuo.laoxianghao.adapter.CommentListViewAdapter$5 -> com.feytuo.laoxianghao.a.f:
    com.feytuo.laoxianghao.adapter.CommentListViewAdapter this$0 -> a
    void onSuccess() -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.feytuo.laoxianghao.adapter.CommentListViewAdapter$6 -> com.feytuo.laoxianghao.a.g:
    com.feytuo.laoxianghao.adapter.CommentListViewAdapter this$0 -> a
    void onSuccess() -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.feytuo.laoxianghao.adapter.CommentListViewAdapter$7 -> com.feytuo.laoxianghao.a.h:
    com.feytuo.laoxianghao.adapter.CommentListViewAdapter this$0 -> a
    void onPrepared(android.media.MediaPlayer) -> onPrepared
com.feytuo.laoxianghao.adapter.CommentListViewAdapter$AudioListener -> com.feytuo.laoxianghao.a.i:
    int position -> b
    com.feytuo.laoxianghao.adapter.CommentListViewAdapter$viewHolder2 holder -> c
    com.feytuo.laoxianghao.adapter.CommentListViewAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.feytuo.laoxianghao.adapter.CommentListViewAdapter$Listener -> com.feytuo.laoxianghao.a.j:
    com.feytuo.laoxianghao.adapter.CommentListViewAdapter$viewHolder1 holder -> b
    com.feytuo.laoxianghao.adapter.CommentListViewAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.feytuo.laoxianghao.adapter.CommentListViewAdapter$MyCount -> com.feytuo.laoxianghao.a.k:
    com.feytuo.laoxianghao.adapter.CommentListViewAdapter this$0 -> a
    void onFinish() -> onFinish
    void onTick(long) -> onTick
    com.feytuo.laoxianghao.adapter.CommentListViewAdapter access$0(com.feytuo.laoxianghao.adapter.CommentListViewAdapter$MyCount) -> a
com.feytuo.laoxianghao.adapter.CommentListViewAdapter$MyCount$1 -> com.feytuo.laoxianghao.a.l:
    com.feytuo.laoxianghao.adapter.CommentListViewAdapter$MyCount this$1 -> a
    void run() -> run
com.feytuo.laoxianghao.adapter.CommentListViewAdapter$viewHolder1 -> com.feytuo.laoxianghao.a.m:
    android.widget.LinearLayout indexSupportLinerlayout -> b
    android.widget.LinearLayout indexShareLinerlayout -> c
    android.widget.ImageView titleImage -> d
    android.widget.ImageView supportImg -> e
    android.widget.ImageButton personHeadImg -> f
    android.widget.TextView personUserNick -> g
    android.widget.TextView home -> h
    android.widget.TextView indexSupportNum -> i
    android.widget.TextView indexCommentNum -> j
    android.widget.ImageView commentImg -> k
    android.widget.RelativeLayout indexProgressbarLayout -> l
    android.widget.ImageView indexProgressbarTopImg -> m
    android.widget.ImageButton indexProgressbarBtn -> n
    android.widget.TextView indexProgressbarTime -> o
    android.widget.TextView indexTextDescribe -> p
    android.widget.TextView indexLocalsCountry -> q
    android.widget.TextView indexLocalsTime -> r
    com.feytuo.laoxianghao.adapter.CommentListViewAdapter this$0 -> a
    android.widget.TextView access$0(com.feytuo.laoxianghao.adapter.CommentListViewAdapter$viewHolder1) -> a
    android.widget.ImageButton access$1(com.feytuo.laoxianghao.adapter.CommentListViewAdapter$viewHolder1) -> b
    void access$2(com.feytuo.laoxianghao.adapter.CommentListViewAdapter$viewHolder1,android.widget.LinearLayout) -> a
    void access$3(com.feytuo.laoxianghao.adapter.CommentListViewAdapter$viewHolder1,android.widget.LinearLayout) -> b
    void access$4(com.feytuo.laoxianghao.adapter.CommentListViewAdapter$viewHolder1,android.widget.ImageButton) -> a
    void access$5(com.feytuo.laoxianghao.adapter.CommentListViewAdapter$viewHolder1,android.widget.ImageView) -> a
    void access$6(com.feytuo.laoxianghao.adapter.CommentListViewAdapter$viewHolder1,android.widget.RelativeLayout) -> a
    void access$7(com.feytuo.laoxianghao.adapter.CommentListViewAdapter$viewHolder1,android.widget.ImageView) -> b
    void access$8(com.feytuo.laoxianghao.adapter.CommentListViewAdapter$viewHolder1,android.widget.ImageView) -> c
    void access$9(com.feytuo.laoxianghao.adapter.CommentListViewAdapter$viewHolder1,android.widget.ImageView) -> d
    void access$10(com.feytuo.laoxianghao.adapter.CommentListViewAdapter$viewHolder1,android.widget.ImageButton) -> b
    void access$11(com.feytuo.laoxianghao.adapter.CommentListViewAdapter$viewHolder1,android.widget.TextView) -> a
    void access$12(com.feytuo.laoxianghao.adapter.CommentListViewAdapter$viewHolder1,android.widget.TextView) -> b
    void access$13(com.feytuo.laoxianghao.adapter.CommentListViewAdapter$viewHolder1,android.widget.TextView) -> c
    void access$14(com.feytuo.laoxianghao.adapter.CommentListViewAdapter$viewHolder1,android.widget.TextView) -> d
    void access$15(com.feytuo.laoxianghao.adapter.CommentListViewAdapter$viewHolder1,android.widget.TextView) -> e
    void access$16(com.feytuo.laoxianghao.adapter.CommentListViewAdapter$viewHolder1,android.widget.TextView) -> f
    void access$17(com.feytuo.laoxianghao.adapter.CommentListViewAdapter$viewHolder1,android.widget.TextView) -> g
    void access$18(com.feytuo.laoxianghao.adapter.CommentListViewAdapter$viewHolder1,android.widget.TextView) -> h
    android.widget.LinearLayout access$19(com.feytuo.laoxianghao.adapter.CommentListViewAdapter$viewHolder1) -> c
    android.widget.LinearLayout access$20(com.feytuo.laoxianghao.adapter.CommentListViewAdapter$viewHolder1) -> d
    android.widget.RelativeLayout access$21(com.feytuo.laoxianghao.adapter.CommentListViewAdapter$viewHolder1) -> e
    android.widget.ImageView access$22(com.feytuo.laoxianghao.adapter.CommentListViewAdapter$viewHolder1) -> f
    android.widget.TextView access$23(com.feytuo.laoxianghao.adapter.CommentListViewAdapter$viewHolder1) -> g
    android.widget.TextView access$24(com.feytuo.laoxianghao.adapter.CommentListViewAdapter$viewHolder1) -> h
    android.widget.TextView access$25(com.feytuo.laoxianghao.adapter.CommentListViewAdapter$viewHolder1) -> i
    android.widget.TextView access$26(com.feytuo.laoxianghao.adapter.CommentListViewAdapter$viewHolder1) -> j
    android.widget.ImageView access$27(com.feytuo.laoxianghao.adapter.CommentListViewAdapter$viewHolder1) -> k
    android.widget.TextView access$28(com.feytuo.laoxianghao.adapter.CommentListViewAdapter$viewHolder1) -> l
    android.widget.ImageButton access$29(com.feytuo.laoxianghao.adapter.CommentListViewAdapter$viewHolder1) -> m
    android.widget.TextView access$30(com.feytuo.laoxianghao.adapter.CommentListViewAdapter$viewHolder1) -> n
    android.widget.TextView access$31(com.feytuo.laoxianghao.adapter.CommentListViewAdapter$viewHolder1) -> o
    android.widget.ImageView access$32(com.feytuo.laoxianghao.adapter.CommentListViewAdapter$viewHolder1) -> p
    android.widget.ImageView access$33(com.feytuo.laoxianghao.adapter.CommentListViewAdapter$viewHolder1) -> q
com.feytuo.laoxianghao.adapter.CommentListViewAdapter$viewHolder2 -> com.feytuo.laoxianghao.a.n:
    android.widget.ImageView commentUserHead -> a
    android.widget.TextView commentNickName -> b
    android.widget.TextView commentTime -> c
    android.widget.TextView commentTextContext -> d
    android.widget.Button commentPlayId -> e
    android.widget.RelativeLayout commentMusicBottomBg -> f
    android.widget.ImageView commentMusicTopBg -> g
    com.feytuo.laoxianghao.adapter.CommentListViewAdapter this$0 -> h
com.feytuo.laoxianghao.adapter.FindListViewAdapter -> com.feytuo.laoxianghao.a.o:
    java.lang.String TAG -> a
    android.content.Context context -> b
    android.view.LayoutInflater m_Inflater -> c
    int resource -> d
    java.util.List list -> e
    android.util.SparseArray praiseMap -> f
    android.util.SparseArray collectionMap -> g
    android.util.SparseArray isAudioPlayArray -> h
    boolean isCurrentItemAudioPlay -> i
    android.graphics.drawable.AnimationDrawable animationDrawable -> j
    com.feytuo.laoxianghao.dao.LXHUserDao userDao -> k
    com.feytuo.laoxianghao.dao.CityDao cityDao -> l
    com.feytuo.laoxianghao.util.ImageLoader mImageLoader -> m
    com.feytuo.laoxianghao.adapter.FindListViewAdapter$MyCount mCountDownTimer -> n
    android.media.MediaPlayer mp -> o
    int voiceDuration -> p
    boolean isPlay -> q
    com.feytuo.laoxianghao.adapter.FindListViewAdapter$ViewHolder mHolder -> r
    int lastPosition -> s
    android.os.Handler mHandler -> t
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setAudioState(com.feytuo.laoxianghao.adapter.FindListViewAdapter$ViewHolder,int) -> d
    void setcontent(com.feytuo.laoxianghao.adapter.FindListViewAdapter$ViewHolder,int) -> e
    void setSubBtn(com.feytuo.laoxianghao.adapter.FindListViewAdapter$ViewHolder,int) -> f
    boolean isPraised(java.lang.String,java.lang.String) -> a
    void setUserInfo(java.lang.String,android.widget.TextView,android.widget.ImageButton) -> a
    void setUserInfoFromBmob(java.lang.String,android.widget.TextView,android.widget.ImageButton,int) -> a
    void turnToComment(com.feytuo.laoxianghao.adapter.FindListViewAdapter$ViewHolder,int) -> g
    void dealSupportBtn(com.feytuo.laoxianghao.adapter.FindListViewAdapter$ViewHolder,int) -> a
    void addPraise(int) -> a
    void deletePraise(int) -> b
    void playAudio(com.feytuo.laoxianghao.adapter.FindListViewAdapter$ViewHolder,int) -> b
    void stopAudio() -> a
    void stopAudio(com.feytuo.laoxianghao.adapter.FindListViewAdapter$ViewHolder,int) -> c
    boolean access$0(com.feytuo.laoxianghao.adapter.FindListViewAdapter) -> a
    com.feytuo.laoxianghao.adapter.FindListViewAdapter$ViewHolder access$1(com.feytuo.laoxianghao.adapter.FindListViewAdapter) -> b
    int access$2(com.feytuo.laoxianghao.adapter.FindListViewAdapter) -> c
    android.graphics.drawable.AnimationDrawable access$3(com.feytuo.laoxianghao.adapter.FindListViewAdapter) -> d
    android.util.SparseArray access$4(com.feytuo.laoxianghao.adapter.FindListViewAdapter) -> e
    int access$5(com.feytuo.laoxianghao.adapter.FindListViewAdapter) -> f
    void access$6(com.feytuo.laoxianghao.adapter.FindListViewAdapter,boolean) -> a
    android.content.Context access$7(com.feytuo.laoxianghao.adapter.FindListViewAdapter) -> g
    java.util.List access$8(com.feytuo.laoxianghao.adapter.FindListViewAdapter) -> h
    void access$9(com.feytuo.laoxianghao.adapter.FindListViewAdapter,com.feytuo.laoxianghao.adapter.FindListViewAdapter$ViewHolder,int) -> a
    boolean access$10(com.feytuo.laoxianghao.adapter.FindListViewAdapter) -> i
    android.os.Handler access$11(com.feytuo.laoxianghao.adapter.FindListViewAdapter) -> j
    com.feytuo.laoxianghao.util.ImageLoader access$12(com.feytuo.laoxianghao.adapter.FindListViewAdapter) -> k
    com.feytuo.laoxianghao.dao.LXHUserDao access$13(com.feytuo.laoxianghao.adapter.FindListViewAdapter) -> l
    void access$14(com.feytuo.laoxianghao.adapter.FindListViewAdapter,com.feytuo.laoxianghao.adapter.FindListViewAdapter$MyCount) -> a
    com.feytuo.laoxianghao.adapter.FindListViewAdapter$MyCount access$15(com.feytuo.laoxianghao.adapter.FindListViewAdapter) -> m
com.feytuo.laoxianghao.adapter.FindListViewAdapter$1 -> com.feytuo.laoxianghao.a.p:
    com.feytuo.laoxianghao.adapter.FindListViewAdapter this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.feytuo.laoxianghao.adapter.FindListViewAdapter$2 -> com.feytuo.laoxianghao.a.q:
    com.feytuo.laoxianghao.adapter.FindListViewAdapter this$0 -> a
    android.widget.TextView val$nameTV -> b
    android.widget.ImageButton val$personHeadImg -> c
    int val$type -> d
    void onSuccess(java.util.List) -> onSuccess
    void onError(int,java.lang.String) -> onError
com.feytuo.laoxianghao.adapter.FindListViewAdapter$3 -> com.feytuo.laoxianghao.a.r:
    com.feytuo.laoxianghao.adapter.FindListViewAdapter this$0 -> a
    int val$position -> b
    void onSuccess() -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.feytuo.laoxianghao.adapter.FindListViewAdapter$4 -> com.feytuo.laoxianghao.a.s:
    com.feytuo.laoxianghao.adapter.FindListViewAdapter this$0 -> a
    int val$position -> b
    void onSuccess() -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.feytuo.laoxianghao.adapter.FindListViewAdapter$5 -> com.feytuo.laoxianghao.a.t:
    com.feytuo.laoxianghao.adapter.FindListViewAdapter this$0 -> a
    void onPrepared(android.media.MediaPlayer) -> onPrepared
com.feytuo.laoxianghao.adapter.FindListViewAdapter$Listener -> com.feytuo.laoxianghao.a.u:
    int position -> b
    com.feytuo.laoxianghao.adapter.FindListViewAdapter$ViewHolder holder -> c
    com.feytuo.laoxianghao.adapter.FindListViewAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.feytuo.laoxianghao.adapter.FindListViewAdapter$MyCount -> com.feytuo.laoxianghao.a.v:
    com.feytuo.laoxianghao.adapter.FindListViewAdapter this$0 -> a
    void onFinish() -> onFinish
    void onTick(long) -> onTick
    com.feytuo.laoxianghao.adapter.FindListViewAdapter access$0(com.feytuo.laoxianghao.adapter.FindListViewAdapter$MyCount) -> a
com.feytuo.laoxianghao.adapter.FindListViewAdapter$MyCount$1 -> com.feytuo.laoxianghao.a.w:
    com.feytuo.laoxianghao.adapter.FindListViewAdapter$MyCount this$1 -> a
    void run() -> run
com.feytuo.laoxianghao.adapter.FindListViewAdapter$ViewHolder -> com.feytuo.laoxianghao.a.x:
    android.widget.LinearLayout indexSupportLinerlayout -> b
    android.widget.LinearLayout indexCommentLinerlayout -> c
    android.widget.LinearLayout indexShareLinerlayout -> d
    android.widget.RelativeLayout indexProgressbarLayout -> e
    android.widget.ImageView indexProgressbarTopImg -> f
    android.widget.ImageView titleImage -> g
    android.widget.ImageView supportImg -> h
    android.widget.ImageButton personHeadImg -> i
    android.widget.TextView personUserNick -> j
    android.widget.TextView home -> k
    android.widget.TextView indexSupportNum -> l
    android.widget.TextView indexCommentNum -> m
    android.widget.ImageButton indexProgressbarBtn -> n
    android.widget.TextView indexProgressbarTime -> o
    android.widget.TextView indexTextDescribe -> p
    android.widget.TextView indexLocalsCountry -> q
    android.widget.TextView indexLocalsTime -> r
    com.feytuo.laoxianghao.adapter.FindListViewAdapter this$0 -> a
    android.widget.TextView access$0(com.feytuo.laoxianghao.adapter.FindListViewAdapter$ViewHolder) -> a
    android.widget.ImageButton access$1(com.feytuo.laoxianghao.adapter.FindListViewAdapter$ViewHolder) -> b
    void access$2(com.feytuo.laoxianghao.adapter.FindListViewAdapter$ViewHolder,android.widget.LinearLayout) -> a
    void access$3(com.feytuo.laoxianghao.adapter.FindListViewAdapter$ViewHolder,android.widget.LinearLayout) -> b
    void access$4(com.feytuo.laoxianghao.adapter.FindListViewAdapter$ViewHolder,android.widget.LinearLayout) -> c
    void access$5(com.feytuo.laoxianghao.adapter.FindListViewAdapter$ViewHolder,android.widget.RelativeLayout) -> a
    void access$6(com.feytuo.laoxianghao.adapter.FindListViewAdapter$ViewHolder,android.widget.ImageView) -> a
    void access$7(com.feytuo.laoxianghao.adapter.FindListViewAdapter$ViewHolder,android.widget.ImageButton) -> a
    void access$8(com.feytuo.laoxianghao.adapter.FindListViewAdapter$ViewHolder,android.widget.ImageView) -> b
    void access$9(com.feytuo.laoxianghao.adapter.FindListViewAdapter$ViewHolder,android.widget.ImageView) -> c
    void access$10(com.feytuo.laoxianghao.adapter.FindListViewAdapter$ViewHolder,android.widget.ImageButton) -> b
    void access$11(com.feytuo.laoxianghao.adapter.FindListViewAdapter$ViewHolder,android.widget.TextView) -> a
    void access$12(com.feytuo.laoxianghao.adapter.FindListViewAdapter$ViewHolder,android.widget.TextView) -> b
    void access$13(com.feytuo.laoxianghao.adapter.FindListViewAdapter$ViewHolder,android.widget.TextView) -> c
    void access$14(com.feytuo.laoxianghao.adapter.FindListViewAdapter$ViewHolder,android.widget.TextView) -> d
    void access$15(com.feytuo.laoxianghao.adapter.FindListViewAdapter$ViewHolder,android.widget.TextView) -> e
    void access$16(com.feytuo.laoxianghao.adapter.FindListViewAdapter$ViewHolder,android.widget.TextView) -> f
    void access$17(com.feytuo.laoxianghao.adapter.FindListViewAdapter$ViewHolder,android.widget.TextView) -> g
    void access$18(com.feytuo.laoxianghao.adapter.FindListViewAdapter$ViewHolder,android.widget.TextView) -> h
    android.widget.LinearLayout access$19(com.feytuo.laoxianghao.adapter.FindListViewAdapter$ViewHolder) -> c
    android.widget.LinearLayout access$20(com.feytuo.laoxianghao.adapter.FindListViewAdapter$ViewHolder) -> d
    android.widget.LinearLayout access$21(com.feytuo.laoxianghao.adapter.FindListViewAdapter$ViewHolder) -> e
    android.widget.RelativeLayout access$22(com.feytuo.laoxianghao.adapter.FindListViewAdapter$ViewHolder) -> f
    android.widget.ImageView access$23(com.feytuo.laoxianghao.adapter.FindListViewAdapter$ViewHolder) -> g
    android.widget.TextView access$24(com.feytuo.laoxianghao.adapter.FindListViewAdapter$ViewHolder) -> h
    android.widget.TextView access$25(com.feytuo.laoxianghao.adapter.FindListViewAdapter$ViewHolder) -> i
    android.widget.TextView access$26(com.feytuo.laoxianghao.adapter.FindListViewAdapter$ViewHolder) -> j
    android.widget.ImageView access$27(com.feytuo.laoxianghao.adapter.FindListViewAdapter$ViewHolder) -> k
    android.widget.TextView access$28(com.feytuo.laoxianghao.adapter.FindListViewAdapter$ViewHolder) -> l
    android.widget.ImageButton access$29(com.feytuo.laoxianghao.adapter.FindListViewAdapter$ViewHolder) -> m
    android.widget.TextView access$30(com.feytuo.laoxianghao.adapter.FindListViewAdapter$ViewHolder) -> n
    android.widget.TextView access$31(com.feytuo.laoxianghao.adapter.FindListViewAdapter$ViewHolder) -> o
    android.widget.TextView access$32(com.feytuo.laoxianghao.adapter.FindListViewAdapter$ViewHolder) -> p
    android.widget.ImageView access$33(com.feytuo.laoxianghao.adapter.FindListViewAdapter$ViewHolder) -> q
com.feytuo.laoxianghao.adapter.ListViewAdapter -> com.feytuo.laoxianghao.a.y:
    java.lang.String TAG -> a
    int TYPE_1 -> b
    int TYPE_2 -> c
    android.content.Context context -> d
    android.view.LayoutInflater m_Inflater -> e
    java.util.List list -> f
    com.feytuo.laoxianghao.domain.Invitation topicInv -> g
    android.util.SparseArray praiseMap -> h
    android.util.SparseArray collectionMap -> i
    android.util.SparseArray isAudioPlayArray -> j
    boolean isCurrentItemAudioPlay -> k
    com.feytuo.laoxianghao.dao.LXHUserDao userDao -> l
    com.feytuo.laoxianghao.dao.CityDao cityDao -> m
    com.feytuo.laoxianghao.util.ImageLoader mImageLoader -> n
    com.feytuo.laoxianghao.adapter.ListViewAdapter$MyCount mCountDownTimer -> o
    android.media.MediaPlayer mp -> p
    int voiceDuration -> q
    boolean isPlay -> r
    com.feytuo.laoxianghao.adapter.ListViewAdapter$ViewHolder mHolder -> s
    int lastPosition -> t
    android.graphics.drawable.AnimationDrawable animationDrawable -> u
    android.os.Handler mHandler -> v
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setAudioState(com.feytuo.laoxianghao.adapter.ListViewAdapter$ViewHolder,int,int) -> c
    void setcontent(com.feytuo.laoxianghao.adapter.ListViewAdapter$ViewHolder,int,int) -> d
    void setSubBtn(com.feytuo.laoxianghao.adapter.ListViewAdapter$ViewHolder,int,int) -> e
    boolean isPraised(java.lang.String,java.lang.String) -> a
    void setUserInfo(java.lang.String,android.widget.TextView,android.widget.ImageButton) -> a
    void setUserInfoFromBmob(java.lang.String,android.widget.TextView,android.widget.ImageButton,int) -> a
    void turnToComment(com.feytuo.laoxianghao.adapter.ListViewAdapter$ViewHolder,int,int) -> f
    void dealSupportBtn(com.feytuo.laoxianghao.adapter.ListViewAdapter$ViewHolder,int,int) -> a
    void addPraise(int,int) -> a
    void deletePraise(int,int) -> b
    void playAudio(com.feytuo.laoxianghao.adapter.ListViewAdapter$ViewHolder,int,int) -> b
    void stopAudio() -> a
    void stopAudio(com.feytuo.laoxianghao.adapter.ListViewAdapter$ViewHolder,int) -> a
    boolean access$0(com.feytuo.laoxianghao.adapter.ListViewAdapter) -> a
    com.feytuo.laoxianghao.adapter.ListViewAdapter$ViewHolder access$1(com.feytuo.laoxianghao.adapter.ListViewAdapter) -> b
    int access$2(com.feytuo.laoxianghao.adapter.ListViewAdapter) -> c
    android.graphics.drawable.AnimationDrawable access$3(com.feytuo.laoxianghao.adapter.ListViewAdapter) -> d
    android.util.SparseArray access$4(com.feytuo.laoxianghao.adapter.ListViewAdapter) -> e
    int access$5(com.feytuo.laoxianghao.adapter.ListViewAdapter) -> f
    void access$6(com.feytuo.laoxianghao.adapter.ListViewAdapter,boolean) -> a
    java.util.List access$7(com.feytuo.laoxianghao.adapter.ListViewAdapter) -> g
    android.content.Context access$8(com.feytuo.laoxianghao.adapter.ListViewAdapter) -> h
    com.feytuo.laoxianghao.domain.Invitation access$9(com.feytuo.laoxianghao.adapter.ListViewAdapter) -> i
    void access$10(com.feytuo.laoxianghao.adapter.ListViewAdapter,com.feytuo.laoxianghao.adapter.ListViewAdapter$ViewHolder,int,int) -> a
    boolean access$11(com.feytuo.laoxianghao.adapter.ListViewAdapter) -> j
    android.os.Handler access$12(com.feytuo.laoxianghao.adapter.ListViewAdapter) -> k
    com.feytuo.laoxianghao.util.ImageLoader access$13(com.feytuo.laoxianghao.adapter.ListViewAdapter) -> l
    com.feytuo.laoxianghao.dao.LXHUserDao access$14(com.feytuo.laoxianghao.adapter.ListViewAdapter) -> m
    void access$15(com.feytuo.laoxianghao.adapter.ListViewAdapter,com.feytuo.laoxianghao.adapter.ListViewAdapter$MyCount) -> a
    com.feytuo.laoxianghao.adapter.ListViewAdapter$MyCount access$16(com.feytuo.laoxianghao.adapter.ListViewAdapter) -> n
com.feytuo.laoxianghao.adapter.ListViewAdapter$1 -> com.feytuo.laoxianghao.a.z:
    com.feytuo.laoxianghao.adapter.ListViewAdapter this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.feytuo.laoxianghao.adapter.ListViewAdapter$2 -> com.feytuo.laoxianghao.a.aa:
    com.feytuo.laoxianghao.adapter.ListViewAdapter this$0 -> a
    android.widget.TextView val$nameTV -> b
    android.widget.ImageButton val$personHeadImg -> c
    int val$type -> d
    void onSuccess(java.util.List) -> onSuccess
    void onError(int,java.lang.String) -> onError
com.feytuo.laoxianghao.adapter.ListViewAdapter$3 -> com.feytuo.laoxianghao.a.ab:
    com.feytuo.laoxianghao.adapter.ListViewAdapter this$0 -> a
    void onSuccess() -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.feytuo.laoxianghao.adapter.ListViewAdapter$4 -> com.feytuo.laoxianghao.a.ac:
    com.feytuo.laoxianghao.adapter.ListViewAdapter this$0 -> a
    void onSuccess() -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.feytuo.laoxianghao.adapter.ListViewAdapter$5 -> com.feytuo.laoxianghao.a.ad:
    com.feytuo.laoxianghao.adapter.ListViewAdapter this$0 -> a
    void onPrepared(android.media.MediaPlayer) -> onPrepared
com.feytuo.laoxianghao.adapter.ListViewAdapter$Listener -> com.feytuo.laoxianghao.a.ae:
    int position -> b
    int listIndex -> c
    com.feytuo.laoxianghao.adapter.ListViewAdapter$ViewHolder holder -> d
    com.feytuo.laoxianghao.adapter.ListViewAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.feytuo.laoxianghao.adapter.ListViewAdapter$MyCount -> com.feytuo.laoxianghao.a.af:
    com.feytuo.laoxianghao.adapter.ListViewAdapter this$0 -> a
    void onFinish() -> onFinish
    void onTick(long) -> onTick
    com.feytuo.laoxianghao.adapter.ListViewAdapter access$0(com.feytuo.laoxianghao.adapter.ListViewAdapter$MyCount) -> a
com.feytuo.laoxianghao.adapter.ListViewAdapter$MyCount$1 -> com.feytuo.laoxianghao.a.ag:
    com.feytuo.laoxianghao.adapter.ListViewAdapter$MyCount this$1 -> a
    void run() -> run
com.feytuo.laoxianghao.adapter.ListViewAdapter$ViewHolder -> com.feytuo.laoxianghao.a.ah:
    android.widget.RelativeLayout indexTopicTopLayout -> b
    android.widget.LinearLayout indexSupportLinerlayout -> c
    android.widget.LinearLayout indexCommentLinerlayout -> d
    android.widget.LinearLayout indexShareLinerlayout -> e
    android.widget.RelativeLayout indexProgressbarLayout -> f
    android.widget.ImageView indexProgressbarTopImg -> g
    android.widget.ImageView supportImg -> h
    android.widget.ImageButton personHeadImg -> i
    android.widget.TextView personUserNick -> j
    android.widget.TextView home -> k
    android.widget.TextView indexSupportNum -> l
    android.widget.TextView indexCommentNum -> m
    android.widget.ImageButton indexProgressbarBtn -> n
    android.widget.TextView indexProgressbarTime -> o
    android.widget.TextView indexTextDescribe -> p
    android.widget.TextView indexLocalsCountry -> q
    android.widget.TextView indexLocalsTime -> r
    com.feytuo.laoxianghao.adapter.ListViewAdapter this$0 -> a
    android.widget.TextView access$0(com.feytuo.laoxianghao.adapter.ListViewAdapter$ViewHolder) -> a
    android.widget.ImageButton access$1(com.feytuo.laoxianghao.adapter.ListViewAdapter$ViewHolder) -> b
    void access$2(com.feytuo.laoxianghao.adapter.ListViewAdapter$ViewHolder,android.widget.LinearLayout) -> a
    void access$3(com.feytuo.laoxianghao.adapter.ListViewAdapter$ViewHolder,android.widget.LinearLayout) -> b
    void access$4(com.feytuo.laoxianghao.adapter.ListViewAdapter$ViewHolder,android.widget.LinearLayout) -> c
    void access$5(com.feytuo.laoxianghao.adapter.ListViewAdapter$ViewHolder,android.widget.RelativeLayout) -> a
    void access$6(com.feytuo.laoxianghao.adapter.ListViewAdapter$ViewHolder,android.widget.ImageView) -> a
    void access$7(com.feytuo.laoxianghao.adapter.ListViewAdapter$ViewHolder,android.widget.ImageButton) -> a
    void access$8(com.feytuo.laoxianghao.adapter.ListViewAdapter$ViewHolder,android.widget.ImageView) -> b
    void access$9(com.feytuo.laoxianghao.adapter.ListViewAdapter$ViewHolder,android.widget.ImageButton) -> b
    void access$10(com.feytuo.laoxianghao.adapter.ListViewAdapter$ViewHolder,android.widget.TextView) -> a
    void access$11(com.feytuo.laoxianghao.adapter.ListViewAdapter$ViewHolder,android.widget.TextView) -> b
    void access$12(com.feytuo.laoxianghao.adapter.ListViewAdapter$ViewHolder,android.widget.TextView) -> c
    void access$13(com.feytuo.laoxianghao.adapter.ListViewAdapter$ViewHolder,android.widget.TextView) -> d
    void access$14(com.feytuo.laoxianghao.adapter.ListViewAdapter$ViewHolder,android.widget.TextView) -> e
    void access$15(com.feytuo.laoxianghao.adapter.ListViewAdapter$ViewHolder,android.widget.TextView) -> f
    void access$16(com.feytuo.laoxianghao.adapter.ListViewAdapter$ViewHolder,android.widget.TextView) -> g
    void access$17(com.feytuo.laoxianghao.adapter.ListViewAdapter$ViewHolder,android.widget.TextView) -> h
    android.widget.ImageButton access$18(com.feytuo.laoxianghao.adapter.ListViewAdapter$ViewHolder) -> c
    android.widget.LinearLayout access$19(com.feytuo.laoxianghao.adapter.ListViewAdapter$ViewHolder) -> d
    android.widget.LinearLayout access$20(com.feytuo.laoxianghao.adapter.ListViewAdapter$ViewHolder) -> e
    android.widget.LinearLayout access$21(com.feytuo.laoxianghao.adapter.ListViewAdapter$ViewHolder) -> f
    android.widget.RelativeLayout access$22(com.feytuo.laoxianghao.adapter.ListViewAdapter$ViewHolder) -> g
    void access$23(com.feytuo.laoxianghao.adapter.ListViewAdapter$ViewHolder,android.widget.RelativeLayout) -> b
    android.widget.RelativeLayout access$24(com.feytuo.laoxianghao.adapter.ListViewAdapter$ViewHolder) -> h
    android.widget.ImageView access$25(com.feytuo.laoxianghao.adapter.ListViewAdapter$ViewHolder) -> i
    android.widget.TextView access$26(com.feytuo.laoxianghao.adapter.ListViewAdapter$ViewHolder) -> j
    android.widget.TextView access$27(com.feytuo.laoxianghao.adapter.ListViewAdapter$ViewHolder) -> k
    android.widget.TextView access$28(com.feytuo.laoxianghao.adapter.ListViewAdapter$ViewHolder) -> l
    android.widget.TextView access$29(com.feytuo.laoxianghao.adapter.ListViewAdapter$ViewHolder) -> m
    android.widget.TextView access$30(com.feytuo.laoxianghao.adapter.ListViewAdapter$ViewHolder) -> n
    android.widget.TextView access$31(com.feytuo.laoxianghao.adapter.ListViewAdapter$ViewHolder) -> o
    android.widget.TextView access$32(com.feytuo.laoxianghao.adapter.ListViewAdapter$ViewHolder) -> p
    android.widget.ImageView access$33(com.feytuo.laoxianghao.adapter.ListViewAdapter$ViewHolder) -> q
com.feytuo.laoxianghao.adapter.NoticeListViewAdapter -> com.feytuo.laoxianghao.a.ai:
    java.lang.String TAG -> a
    android.content.Context context -> b
    android.view.LayoutInflater m_Inflater -> c
    int resource -> d
    java.util.List list -> e
    android.util.SparseArray praiseMap -> f
    android.util.SparseArray isAudioPlayArray -> g
    android.util.SparseArray commentArray -> h
    boolean isCurrentItemAudioPlay -> i
    com.feytuo.laoxianghao.dao.LXHUserDao userDao -> j
    com.feytuo.laoxianghao.dao.CityDao cityDao -> k
    com.feytuo.laoxianghao.util.ImageLoader mImageLoader -> l
    com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$MyCount mCountDownTimer -> m
    android.media.MediaPlayer mp -> n
    int voiceDuration -> o
    boolean isPlay -> p
    com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$ViewHolder mHolder -> q
    int lastPosition -> r
    android.graphics.drawable.AnimationDrawable animationDrawable -> s
    android.os.Handler mHandler -> t
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void showDeleteEnsureDialog(int) -> a
    void removeInvitationFromUser(int) -> b
    void removeRelatedComment(com.feytuo.laoxianghao.domain.Invitation) -> a
    void deleteComment(java.util.List) -> a
    void removeLocalData(com.feytuo.laoxianghao.domain.Invitation) -> b
    void setcontent(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$ViewHolder,int) -> d
    void setUserInfo(java.lang.String,android.widget.TextView,android.widget.ImageButton) -> a
    void setUserInfoFromBmob(java.lang.String,android.widget.TextView,android.widget.ImageButton) -> b
    void setSubBtn(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$ViewHolder,int) -> e
    boolean isPraised(java.lang.String,java.lang.String) -> a
    void setAudioState(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$ViewHolder,int) -> f
    void setCommentNotice(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$ViewHolder,int) -> g
    void turnToComment(int) -> c
    void dealSupportBtn(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$ViewHolder,int) -> a
    void addPraise(int) -> d
    void deletePraise(int) -> e
    void playAudio(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$ViewHolder,int) -> b
    void stopAudio() -> a
    void stopAudio(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$ViewHolder,int) -> c
    boolean access$0(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter) -> a
    com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$ViewHolder access$1(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter) -> b
    int access$2(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter) -> c
    android.graphics.drawable.AnimationDrawable access$3(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter) -> d
    android.util.SparseArray access$4(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter) -> e
    int access$5(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter) -> f
    void access$6(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter,boolean) -> a
    android.content.Context access$7(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter) -> g
    java.util.List access$8(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter) -> h
    void access$9(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter,int) -> a
    boolean access$10(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter) -> i
    android.os.Handler access$11(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter) -> j
    void access$12(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter,java.util.List) -> a
    com.feytuo.laoxianghao.util.ImageLoader access$13(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter) -> k
    com.feytuo.laoxianghao.dao.LXHUserDao access$14(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter) -> l
    void access$15(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter,com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$MyCount) -> a
    com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$MyCount access$16(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter) -> m
com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$1 -> com.feytuo.laoxianghao.a.aj:
    com.feytuo.laoxianghao.adapter.NoticeListViewAdapter this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$10 -> com.feytuo.laoxianghao.a.ak:
    com.feytuo.laoxianghao.adapter.NoticeListViewAdapter this$0 -> a
    int val$position -> b
    void onSuccess() -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$11 -> com.feytuo.laoxianghao.a.al:
    com.feytuo.laoxianghao.adapter.NoticeListViewAdapter this$0 -> a
    void onPrepared(android.media.MediaPlayer) -> onPrepared
com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$2 -> com.feytuo.laoxianghao.a.am:
    com.feytuo.laoxianghao.adapter.NoticeListViewAdapter this$0 -> a
    int val$position -> b
    boolean onLongClick(android.view.View) -> onLongClick
com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$3 -> com.feytuo.laoxianghao.a.an:
    com.feytuo.laoxianghao.adapter.NoticeListViewAdapter this$0 -> a
    int val$position -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$4 -> com.feytuo.laoxianghao.a.ao:
    com.feytuo.laoxianghao.adapter.NoticeListViewAdapter this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$5 -> com.feytuo.laoxianghao.a.ap:
    com.feytuo.laoxianghao.adapter.NoticeListViewAdapter this$0 -> a
    com.feytuo.laoxianghao.domain.Invitation val$inv -> b
    int val$position -> c
    void onSuccess() -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$6 -> com.feytuo.laoxianghao.a.aq:
    com.feytuo.laoxianghao.adapter.NoticeListViewAdapter this$0 -> a
    void onSuccess(java.util.List) -> onSuccess
    void onError(int,java.lang.String) -> onError
com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$7 -> com.feytuo.laoxianghao.a.ar:
    com.feytuo.laoxianghao.adapter.NoticeListViewAdapter this$0 -> a
    void onSuccess() -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$8 -> com.feytuo.laoxianghao.a.as:
    com.feytuo.laoxianghao.adapter.NoticeListViewAdapter this$0 -> a
    android.widget.TextView val$nameTV -> b
    android.widget.ImageButton val$personHeadImg -> c
    void onSuccess(java.util.List) -> onSuccess
    void onError(int,java.lang.String) -> onError
com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$9 -> com.feytuo.laoxianghao.a.at:
    com.feytuo.laoxianghao.adapter.NoticeListViewAdapter this$0 -> a
    int val$position -> b
    void onSuccess() -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$Listener -> com.feytuo.laoxianghao.a.au:
    int position -> b
    com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$ViewHolder holder -> c
    com.feytuo.laoxianghao.adapter.NoticeListViewAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$MyCount -> com.feytuo.laoxianghao.a.av:
    com.feytuo.laoxianghao.adapter.NoticeListViewAdapter this$0 -> a
    void onFinish() -> onFinish
    void onTick(long) -> onTick
    com.feytuo.laoxianghao.adapter.NoticeListViewAdapter access$0(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$MyCount) -> a
com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$MyCount$1 -> com.feytuo.laoxianghao.a.aw:
    com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$MyCount this$1 -> a
    void run() -> run
com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$ViewHolder -> com.feytuo.laoxianghao.a.ax:
    android.widget.LinearLayout indexBottomLinearlayout -> b
    android.widget.LinearLayout indexSupportLinerlayout -> c
    android.widget.LinearLayout indexCommentLinerlayout -> d
    android.widget.LinearLayout indexShareLinerlayout -> e
    android.widget.RelativeLayout indexProgressbarLayout -> f
    android.widget.ImageView indexProgressbarTopImg -> g
    android.widget.ImageView titleImage -> h
    android.widget.ImageView supportImg -> i
    android.widget.ImageButton personHeadImg -> j
    android.widget.TextView personUserNick -> k
    android.widget.TextView home -> l
    android.widget.TextView indexSupportNum -> m
    android.widget.TextView indexCommentNum -> n
    android.widget.ImageView commentImg -> o
    android.widget.ImageButton indexProgressbarBtn -> p
    android.widget.TextView indexProgressbarTime -> q
    android.widget.TextView indexTextDescribe -> r
    android.widget.TextView indexLocalsCountry -> s
    android.widget.TextView indexLocalsTime -> t
    com.feytuo.laoxianghao.adapter.NoticeListViewAdapter this$0 -> a
    android.widget.TextView access$0(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$ViewHolder) -> a
    android.widget.ImageButton access$1(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$ViewHolder) -> b
    void access$2(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$ViewHolder,android.widget.LinearLayout) -> a
    void access$3(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$ViewHolder,android.widget.LinearLayout) -> b
    void access$4(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$ViewHolder,android.widget.LinearLayout) -> c
    void access$5(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$ViewHolder,android.widget.LinearLayout) -> d
    void access$6(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$ViewHolder,android.widget.RelativeLayout) -> a
    void access$7(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$ViewHolder,android.widget.ImageView) -> a
    void access$8(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$ViewHolder,android.widget.ImageView) -> b
    void access$9(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$ViewHolder,android.widget.ImageButton) -> a
    void access$10(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$ViewHolder,android.widget.ImageView) -> c
    void access$11(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$ViewHolder,android.widget.ImageView) -> d
    void access$12(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$ViewHolder,android.widget.ImageButton) -> b
    void access$13(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$ViewHolder,android.widget.TextView) -> a
    void access$14(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$ViewHolder,android.widget.TextView) -> b
    void access$15(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$ViewHolder,android.widget.TextView) -> c
    void access$16(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$ViewHolder,android.widget.TextView) -> d
    void access$17(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$ViewHolder,android.widget.TextView) -> e
    void access$18(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$ViewHolder,android.widget.TextView) -> f
    void access$19(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$ViewHolder,android.widget.TextView) -> g
    void access$20(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$ViewHolder,android.widget.TextView) -> h
    android.widget.LinearLayout access$21(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$ViewHolder) -> c
    android.widget.LinearLayout access$22(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$ViewHolder) -> d
    android.widget.LinearLayout access$23(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$ViewHolder) -> e
    android.widget.RelativeLayout access$24(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$ViewHolder) -> f
    android.widget.ImageView access$25(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$ViewHolder) -> g
    android.widget.TextView access$26(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$ViewHolder) -> h
    android.widget.TextView access$27(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$ViewHolder) -> i
    android.widget.ImageButton access$28(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$ViewHolder) -> j
    android.widget.ImageView access$29(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$ViewHolder) -> k
    android.widget.TextView access$30(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$ViewHolder) -> l
    android.widget.TextView access$31(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$ViewHolder) -> m
    android.widget.TextView access$32(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$ViewHolder) -> n
    android.widget.TextView access$33(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$ViewHolder) -> o
    android.widget.ImageView access$34(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$ViewHolder) -> p
    android.widget.TextView access$35(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$ViewHolder) -> q
    android.widget.ImageView access$36(com.feytuo.laoxianghao.adapter.NoticeListViewAdapter$ViewHolder) -> r
com.feytuo.laoxianghao.dao.CityDao -> com.feytuo.laoxianghao.b.a:
    android.database.sqlite.SQLiteDatabase db -> a
    java.util.List getAllCityName() -> a
    int getCityIdByName(java.lang.String) -> a
    java.lang.String getCityNameById(int) -> a
com.feytuo.laoxianghao.dao.CommentDao -> com.feytuo.laoxianghao.b.b:
    android.database.sqlite.SQLiteDatabase db -> a
    java.util.List getAllComment(java.lang.String) -> a
    void insert2Comment(java.util.List) -> a
    void deleteAllComment(java.lang.String) -> b
com.feytuo.laoxianghao.dao.InvitationDao -> com.feytuo.laoxianghao.b.c:
    android.database.sqlite.SQLiteDatabase db -> a
    void insert2Invitation(java.util.List,boolean) -> a
    void getInvitationById(com.feytuo.laoxianghao.domain.Invitation,java.lang.String) -> a
    java.util.List getAllInfo(int) -> a
    java.util.List getAllInfoFromMy() -> a
    void getInvitationFromMyById(com.feytuo.laoxianghao.domain.Invitation,java.lang.String) -> b
    void insert2Invitation(com.feytuo.laoxianghao.domain.Invitation) -> a
    void deleteAllDataInMy() -> b
    void getAllCommentNum(java.util.List,java.util.List) -> a
    void deleteInInvitationMy(java.lang.String) -> a
    java.util.List getInvitationFromClass(int) -> b
    void setTypeInvitationFromClass(com.feytuo.laoxianghao.domain.Invitation,int) -> a
    void getTypeInvitationFromClass(com.feytuo.laoxianghao.domain.Invitation,java.lang.String) -> c
    void insert2InvitationClass(java.util.List,int,boolean) -> a
com.feytuo.laoxianghao.dao.LXHUserDao -> com.feytuo.laoxianghao.b.d:
    android.database.sqlite.SQLiteDatabase db -> a
    com.feytuo.laoxianghao.db.DatabaseHelper dbHelper -> b
    com.feytuo.laoxianghao.domain.LXHUser getNickAndHeadByUid(java.lang.String) -> a
    void insertUser(com.feytuo.laoxianghao.domain.LXHUser) -> a
    void deleteAllUserInfo() -> a
    void insertCurrentUser(com.feytuo.laoxianghao.domain.LXHUser) -> b
    void updateUserHome(java.lang.String,java.lang.String) -> a
    void updateUserHeadUrl(java.lang.String,java.lang.String) -> b
    void updateUserNickName(java.lang.String,java.lang.String) -> c
    void updateUserPersonSign(java.lang.String,java.lang.String) -> d
    com.feytuo.laoxianghao.domain.LXHUser getCurrentUserInfo(java.lang.String) -> b
    com.feytuo.laoxianghao.domain.LXHUser getNickAndHeadByUidFromUser(java.lang.String) -> c
    java.lang.String getHeadByUidFromUser(java.lang.String) -> d
com.feytuo.laoxianghao.dao.PraiseDao -> com.feytuo.laoxianghao.b.e:
    android.database.sqlite.SQLiteDatabase db -> a
    void insertPraise(java.lang.String,java.lang.String) -> a
    boolean selectPraiseInvitation(java.lang.String,java.lang.String) -> b
    void deletePraise(java.lang.String,java.lang.String) -> c
com.feytuo.laoxianghao.db.DBFileManager -> com.feytuo.laoxianghao.c.a:
    int BUFFER_SIZE -> a
    java.lang.String packageName -> b
    java.lang.String dbPath -> c
    android.content.Context context -> d
    boolean copyDBFile() -> a
    boolean openDatabase(java.lang.String) -> a
com.feytuo.laoxianghao.db.DatabaseHelper -> com.feytuo.laoxianghao.c.b:
    com.feytuo.laoxianghao.db.DatabaseHelper mInstance -> a
    com.feytuo.laoxianghao.db.DatabaseHelper getInstance(android.content.Context) -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void closeDB() -> a
com.feytuo.laoxianghao.domain.City -> com.feytuo.laoxianghao.domain.City:
    java.lang.Integer cityId -> cityId
    java.lang.String cityName -> cityName
    java.lang.Integer getCityId() -> getCityId
    void setCityId(java.lang.Integer) -> setCityId
    java.lang.String getCityName() -> getCityName
    void setCityName(java.lang.String) -> setCityName
com.feytuo.laoxianghao.domain.Comment -> com.feytuo.laoxianghao.domain.Comment:
    long serialVersionUID -> serialVersionUID
    java.lang.String uId -> uId
    java.lang.String invId -> invId
    java.lang.String comWords -> comWords
    java.lang.String comVoice -> comVoice
    java.lang.String comTime -> comTime
    java.lang.String comPosition -> comPosition
    com.feytuo.laoxianghao.domain.Invitation invitation -> invitation
    com.feytuo.laoxianghao.domain.Invitation getInvitation() -> getInvitation
    void setInvitation(com.feytuo.laoxianghao.domain.Invitation) -> setInvitation
    java.lang.String getuId() -> getuId
    void setuId(java.lang.String) -> setuId
    java.lang.String getInvId() -> getInvId
    void setInvId(java.lang.String) -> setInvId
    java.lang.String getComWords() -> getComWords
    void setComWords(java.lang.String) -> setComWords
    java.lang.String getComVoice() -> getComVoice
    void setComVoice(java.lang.String) -> setComVoice
    java.lang.String getComTime() -> getComTime
    void setComTime(java.lang.String) -> setComTime
    java.lang.String getComPosition() -> getComPosition
    void setComPosition(java.lang.String) -> setComPosition
com.feytuo.laoxianghao.domain.FeedBack -> com.feytuo.laoxianghao.domain.FeedBack:
    long serialVersionUID -> serialVersionUID
    java.lang.String content -> content
    java.lang.String version -> version
    com.feytuo.laoxianghao.domain.LXHUser user -> user
    com.feytuo.laoxianghao.domain.LXHUser getUser() -> getUser
    void setUser(com.feytuo.laoxianghao.domain.LXHUser) -> setUser
    java.lang.String getContent() -> getContent
    void setContent(java.lang.String) -> setContent
    java.lang.String getVersion() -> getVersion
    void setVersion(java.lang.String) -> setVersion
com.feytuo.laoxianghao.domain.Invitation -> com.feytuo.laoxianghao.domain.Invitation:
    long serialVersionUID -> serialVersionUID
    java.lang.String uId -> uId
    java.lang.Integer home -> home
    java.lang.String position -> position
    java.lang.String words -> words
    java.lang.String voice -> voice
    java.lang.Integer voiceDuration -> voiceDuration
    java.lang.String time -> time
    java.lang.Integer isHot -> isHot
    java.lang.Integer praiseNum -> praiseNum
    java.lang.Integer shareNum -> shareNum
    java.lang.Integer commentNum -> commentNum
    java.lang.Integer headId -> headId
    com.feytuo.laoxianghao.domain.LXHUser user -> user
    cn.bmob.v3.datatype.BmobRelation comment -> comment
    cn.bmob.v3.datatype.BmobRelation getComment() -> getComment
    void setComment(cn.bmob.v3.datatype.BmobRelation) -> setComment
    com.feytuo.laoxianghao.domain.LXHUser getUser() -> getUser
    void setUser(com.feytuo.laoxianghao.domain.LXHUser) -> setUser
    java.lang.String getuId() -> getuId
    void setuId(java.lang.String) -> setuId
    java.lang.Integer getHome() -> getHome
    void setHome(java.lang.Integer) -> setHome
    java.lang.String getPosition() -> getPosition
    void setPosition(java.lang.String) -> setPosition
    java.lang.String getWords() -> getWords
    void setWords(java.lang.String) -> setWords
    java.lang.String getVoice() -> getVoice
    void setVoice(java.lang.String) -> setVoice
    java.lang.String getTime() -> getTime
    void setTime(java.lang.String) -> setTime
    java.lang.Integer getIsHot() -> getIsHot
    void setIsHot(java.lang.Integer) -> setIsHot
    java.lang.Integer getPraiseNum() -> getPraiseNum
    void setPraiseNum(java.lang.Integer) -> setPraiseNum
    java.lang.Integer getShareNum() -> getShareNum
    void setShareNum(java.lang.Integer) -> setShareNum
    java.lang.Integer getCommentNum() -> getCommentNum
    void setCommentNum(java.lang.Integer) -> setCommentNum
    java.lang.Integer getVoiceDuration() -> getVoiceDuration
    void setVoiceDuration(java.lang.Integer) -> setVoiceDuration
    java.lang.Integer getHeadId() -> getHeadId
    void setHeadId(java.lang.Integer) -> setHeadId
com.feytuo.laoxianghao.domain.LXHUser -> com.feytuo.laoxianghao.domain.LXHUser:
    long serialVersionUID -> serialVersionUID
    java.lang.String uName -> uName
    java.lang.String uKey -> uKey
    cn.bmob.v3.datatype.BmobRelation myInvitation -> myInvitation
    cn.bmob.v3.datatype.BmobRelation myFeedBack -> myFeedBack
    java.lang.String nickName -> nickName
    java.lang.String headUrl -> headUrl
    java.lang.String personSign -> personSign
    java.lang.String home -> home
    cn.bmob.v3.datatype.BmobRelation getMyFeedBack() -> getMyFeedBack
    void setMyFeedBack(cn.bmob.v3.datatype.BmobRelation) -> setMyFeedBack
    cn.bmob.v3.datatype.BmobRelation getMyInvitation() -> getMyInvitation
    void setMyInvitation(cn.bmob.v3.datatype.BmobRelation) -> setMyInvitation
    java.lang.String getuName() -> getuName
    void setuName(java.lang.String) -> setuName
    java.lang.String getuKey() -> getuKey
    void setuKey(java.lang.String) -> setuKey
    java.lang.String getNickName() -> getNickName
    void setNickName(java.lang.String) -> setNickName
    java.lang.String getHeadUrl() -> getHeadUrl
    void setHeadUrl(java.lang.String) -> setHeadUrl
    java.lang.String getPersonSign() -> getPersonSign
    void setPersonSign(java.lang.String) -> setPersonSign
    java.lang.String getHome() -> getHome
    void setHome(java.lang.String) -> setHome
com.feytuo.laoxianghao.domain.Praise -> com.feytuo.laoxianghao.domain.Praise:
    long serialVersionUID -> serialVersionUID
    java.lang.String uId -> uId
    java.lang.String invId -> invId
    java.lang.String getInvId() -> getInvId
    void setInvId(java.lang.String) -> setInvId
    java.lang.String getuId() -> getuId
    void setuId(java.lang.String) -> setuId
com.feytuo.laoxianghao.fragment.FindFragment -> com.feytuo.laoxianghao.fragment.FindFragment:
    android.widget.RelativeLayout findTopicRelac -> a
    android.widget.RelativeLayout findDuanziRelac -> b
    android.widget.RelativeLayout findktvRelac -> c
    android.widget.RelativeLayout findtShowRelac -> d
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void initview() -> a
    void onResume() -> onResume
    void onPause() -> onPause
com.feytuo.laoxianghao.fragment.FindFragment$listener -> com.feytuo.laoxianghao.fragment.a:
    com.feytuo.laoxianghao.fragment.FindFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.feytuo.laoxianghao.fragment.Fragment1 -> com.feytuo.laoxianghao.fragment.Fragment1:
    android.widget.ListView mymessageListview -> b
    com.feytuo.laoxianghao.adapter.NoticeListViewAdapter adapter -> c
    java.util.List listItems -> d
    java.util.List tempListItems -> e
    java.util.List listData -> f
    android.view.View rootView -> a
    android.util.SparseArray commentMap -> g
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void initView() -> a
    void getListDataFromLocal() -> c
    void getMyCommentNotice() -> d
    void getListDataFromNet() -> e
    android.util.SparseArray getCommentMap() -> b
    void onResume() -> onResume
    void onPause() -> onPause
    java.util.List access$0(com.feytuo.laoxianghao.fragment.Fragment1) -> a
    android.util.SparseArray access$1(com.feytuo.laoxianghao.fragment.Fragment1) -> b
    java.util.List access$2(com.feytuo.laoxianghao.fragment.Fragment1) -> c
    com.feytuo.laoxianghao.adapter.NoticeListViewAdapter access$3(com.feytuo.laoxianghao.fragment.Fragment1) -> d
com.feytuo.laoxianghao.fragment.Fragment1$1 -> com.feytuo.laoxianghao.fragment.b:
    com.feytuo.laoxianghao.fragment.Fragment1 this$0 -> a
    java.util.List val$netCommentNum -> b
    java.util.List val$localCommentNum -> c
    void onSuccess(java.util.List) -> onSuccess
    void onError(int,java.lang.String) -> onError
com.feytuo.laoxianghao.fragment.Fragment1$2 -> com.feytuo.laoxianghao.fragment.c:
    com.feytuo.laoxianghao.fragment.Fragment1 this$0 -> a
    void onSuccess(java.util.List) -> onSuccess
    void onError(int,java.lang.String) -> onError
com.feytuo.laoxianghao.fragment.MainFragment -> com.feytuo.laoxianghao.fragment.MainFragment:
    java.lang.String TAG -> a
    com.feytuo.laoxianghao.adapter.ListViewAdapter adapter -> b
    com.feytuo.listviewonload.ZrcListView indexListView -> c
    android.widget.ImageView noInvitationImageView -> d
    android.os.Handler handler -> e
    android.widget.Button indexSelectCity -> f
    java.util.List listItems -> g
    java.util.List listData -> h
    com.feytuo.laoxianghao.domain.Invitation topicInvitation -> i
    int STATE_REFRESH -> j
    int STATE_MORE -> k
    int REQUEST_CODE -> l
    int LIMIT -> m
    int curPage -> n
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void getListDataFromLocal() -> c
    void initview() -> a
    void setNoInvitationBackGround() -> d
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void initlistview() -> b
    android.view.animation.LayoutAnimationController getListAnim() -> e
    void refresh() -> f
    void loadMore() -> g
    void getTopicInvitation() -> h
    void getListData(int,int) -> a
    void onResume() -> onResume
    void onPause() -> onPause
    void access$0(com.feytuo.laoxianghao.fragment.MainFragment) -> a
    void access$1(com.feytuo.laoxianghao.fragment.MainFragment) -> b
    com.feytuo.laoxianghao.adapter.ListViewAdapter access$2(com.feytuo.laoxianghao.fragment.MainFragment) -> c
    void access$3(com.feytuo.laoxianghao.fragment.MainFragment) -> d
    void access$4(com.feytuo.laoxianghao.fragment.MainFragment,int,int) -> a
    int access$5(com.feytuo.laoxianghao.fragment.MainFragment) -> e
    com.feytuo.laoxianghao.domain.Invitation access$6(com.feytuo.laoxianghao.fragment.MainFragment) -> f
    void access$7(com.feytuo.laoxianghao.fragment.MainFragment) -> g
    com.feytuo.listviewonload.ZrcListView access$8(com.feytuo.laoxianghao.fragment.MainFragment) -> h
    void access$9(com.feytuo.laoxianghao.fragment.MainFragment,int) -> a
    java.util.List access$10(com.feytuo.laoxianghao.fragment.MainFragment) -> i
com.feytuo.laoxianghao.fragment.MainFragment$1 -> com.feytuo.laoxianghao.fragment.d:
    com.feytuo.laoxianghao.fragment.MainFragment this$0 -> a
    void onStart() -> a
com.feytuo.laoxianghao.fragment.MainFragment$2 -> com.feytuo.laoxianghao.fragment.e:
    com.feytuo.laoxianghao.fragment.MainFragment this$0 -> a
    void onStart() -> a
com.feytuo.laoxianghao.fragment.MainFragment$3 -> com.feytuo.laoxianghao.fragment.f:
    com.feytuo.laoxianghao.fragment.MainFragment this$0 -> a
    void run() -> run
com.feytuo.laoxianghao.fragment.MainFragment$4 -> com.feytuo.laoxianghao.fragment.g:
    com.feytuo.laoxianghao.fragment.MainFragment this$0 -> a
    void run() -> run
com.feytuo.laoxianghao.fragment.MainFragment$5 -> com.feytuo.laoxianghao.fragment.h:
    com.feytuo.laoxianghao.fragment.MainFragment this$0 -> a
    void onSuccess(java.util.List) -> onSuccess
    void onError(int,java.lang.String) -> onError
com.feytuo.laoxianghao.fragment.MainFragment$6 -> com.feytuo.laoxianghao.fragment.i:
    com.feytuo.laoxianghao.fragment.MainFragment this$0 -> a
    int val$actionType -> b
    void onSuccess(java.util.List) -> onSuccess
    void onError(int,java.lang.String) -> onError
com.feytuo.laoxianghao.fragment.MainFragment$listener -> com.feytuo.laoxianghao.fragment.j:
    com.feytuo.laoxianghao.fragment.MainFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.feytuo.laoxianghao.global.UserLogin -> com.feytuo.laoxianghao.d.a:
    com.feytuo.laoxianghao.domain.LXHUser gUser -> a
    com.feytuo.laoxianghao.view.OnloadDialog pd -> b
    boolean progressShow -> c
    com.feytuo.laoxianghao.dao.LXHUserDao userDao -> d
    com.feytuo.laoxianghao.domain.LXHUser getCurrentUser() -> a
    void Login(android.content.Context,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap) -> a
    void uploadHeadFile(android.content.Context,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap) -> b
    void judgeUserExist(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void updataAndLogin(android.content.Context,com.feytuo.laoxianghao.domain.LXHUser,java.lang.String,java.lang.String) -> a
    void saveAndLogin(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> b
    void registerHX(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
    void loginHX(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> b
    void getUserInfoFromBmob(android.content.Context,java.util.List,java.lang.String,java.lang.String) -> a
    java.io.File saveBitmap2File(android.content.Context,android.graphics.Bitmap) -> a
    void setUserHearder(java.lang.String,com.feytuo.chat.domain.User) -> a
    void access$0(com.feytuo.laoxianghao.global.UserLogin,com.feytuo.laoxianghao.view.OnloadDialog) -> a
    com.feytuo.laoxianghao.view.OnloadDialog access$1(com.feytuo.laoxianghao.global.UserLogin) -> a
    void access$2(com.feytuo.laoxianghao.global.UserLogin,boolean) -> a
    void access$3(com.feytuo.laoxianghao.global.UserLogin,android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void access$4(com.feytuo.laoxianghao.global.UserLogin,android.content.Context,com.feytuo.laoxianghao.domain.LXHUser,java.lang.String,java.lang.String) -> a
    void access$5(com.feytuo.laoxianghao.global.UserLogin,android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> b
    com.feytuo.laoxianghao.dao.LXHUserDao access$6(com.feytuo.laoxianghao.global.UserLogin) -> b
    void access$7(com.feytuo.laoxianghao.global.UserLogin,android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
    void access$8(com.feytuo.laoxianghao.domain.LXHUser) -> a
    boolean access$9(com.feytuo.laoxianghao.global.UserLogin) -> c
com.feytuo.laoxianghao.global.UserLogin$1 -> com.feytuo.laoxianghao.d.b:
    com.feytuo.laoxianghao.global.UserLogin this$0 -> a
    android.content.Context val$context -> b
    void run() -> run
    com.feytuo.laoxianghao.global.UserLogin access$0(com.feytuo.laoxianghao.global.UserLogin$1) -> a
com.feytuo.laoxianghao.global.UserLogin$1$1 -> com.feytuo.laoxianghao.d.c:
    com.feytuo.laoxianghao.global.UserLogin$1 this$1 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.feytuo.laoxianghao.global.UserLogin$10 -> com.feytuo.laoxianghao.d.d:
    com.feytuo.laoxianghao.global.UserLogin this$0 -> a
    void run() -> run
com.feytuo.laoxianghao.global.UserLogin$11 -> com.feytuo.laoxianghao.d.e:
    com.feytuo.laoxianghao.global.UserLogin this$0 -> a
    java.lang.String val$username -> b
    java.lang.String val$pwd -> c
    android.content.Context val$context -> d
    java.lang.String val$nickName -> e
    void onSuccess() -> onSuccess
    void onProgress(int,java.lang.String) -> onProgress
    void onError(int,java.lang.String) -> onError
    com.feytuo.laoxianghao.global.UserLogin access$0(com.feytuo.laoxianghao.global.UserLogin$11) -> a
com.feytuo.laoxianghao.global.UserLogin$11$1 -> com.feytuo.laoxianghao.d.f:
    com.feytuo.laoxianghao.global.UserLogin$11 this$1 -> a
    void run() -> run
com.feytuo.laoxianghao.global.UserLogin$11$2 -> com.feytuo.laoxianghao.d.g:
    com.feytuo.laoxianghao.global.UserLogin$11 this$1 -> a
    int val$code -> b
    java.lang.String val$message -> c
    android.content.Context val$context -> d
    java.lang.String val$username -> e
    java.lang.String val$pwd -> f
    java.lang.String val$nickName -> g
    void run() -> run
com.feytuo.laoxianghao.global.UserLogin$12 -> com.feytuo.laoxianghao.d.h:
    com.feytuo.laoxianghao.global.UserLogin this$0 -> a
    java.util.List val$usernames -> b
    android.content.Context val$context -> c
    java.lang.String val$nickName -> d
    java.lang.String val$username -> e
    void onSuccess(java.util.List) -> onSuccess
    void onError(int,java.lang.String) -> onError
    com.feytuo.laoxianghao.global.UserLogin access$0(com.feytuo.laoxianghao.global.UserLogin$12) -> a
com.feytuo.laoxianghao.global.UserLogin$12$1 -> com.feytuo.laoxianghao.d.i:
    com.feytuo.laoxianghao.global.UserLogin$12 this$1 -> a
    android.content.Context val$context -> b
    void run() -> run
com.feytuo.laoxianghao.global.UserLogin$2 -> com.feytuo.laoxianghao.d.j:
    com.feytuo.laoxianghao.global.UserLogin this$0 -> a
    android.content.Context val$context -> b
    java.lang.String val$uName -> c
    java.lang.String val$uKey -> d
    java.lang.String val$nickName -> e
    cn.bmob.v3.datatype.BmobFile val$bmobFile -> f
    void onSuccess() -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.feytuo.laoxianghao.global.UserLogin$3 -> com.feytuo.laoxianghao.d.k:
    com.feytuo.laoxianghao.global.UserLogin this$0 -> a
    android.content.Context val$context -> b
    java.lang.String val$nickName -> c
    java.lang.String val$headUrl -> d
    java.lang.String val$uName -> e
    java.lang.String val$uKey -> f
    void onSuccess(java.util.List) -> onSuccess
    void onError(int,java.lang.String) -> onError
com.feytuo.laoxianghao.global.UserLogin$4 -> com.feytuo.laoxianghao.d.l:
    com.feytuo.laoxianghao.global.UserLogin this$0 -> a
    void run() -> run
com.feytuo.laoxianghao.global.UserLogin$5 -> com.feytuo.laoxianghao.d.m:
    com.feytuo.laoxianghao.global.UserLogin this$0 -> a
    com.feytuo.laoxianghao.domain.LXHUser val$user -> b
    com.feytuo.laoxianghao.domain.LXHUser val$lxhUser -> c
    android.content.Context val$context -> d
    java.lang.String val$nickName -> e
    void onSuccess() -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.feytuo.laoxianghao.global.UserLogin$6 -> com.feytuo.laoxianghao.d.n:
    com.feytuo.laoxianghao.global.UserLogin this$0 -> a
    void run() -> run
com.feytuo.laoxianghao.global.UserLogin$7 -> com.feytuo.laoxianghao.d.o:
    com.feytuo.laoxianghao.global.UserLogin this$0 -> a
    com.feytuo.laoxianghao.domain.LXHUser val$user -> b
    android.content.Context val$context -> c
    java.lang.String val$uName -> d
    java.lang.String val$nickName -> e
    java.lang.String val$uKey -> f
    void onSuccess() -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.feytuo.laoxianghao.global.UserLogin$8 -> com.feytuo.laoxianghao.d.p:
    com.feytuo.laoxianghao.global.UserLogin this$0 -> a
    void run() -> run
com.feytuo.laoxianghao.global.UserLogin$9 -> com.feytuo.laoxianghao.d.q:
    com.feytuo.laoxianghao.global.UserLogin this$0 -> a
    java.lang.String val$username -> b
    java.lang.String val$pwd -> c
    android.content.Context val$context -> d
    java.lang.String val$nickName -> e
    void run() -> run
com.feytuo.laoxianghao.global.UserLogin$9$1 -> com.feytuo.laoxianghao.d.r:
    com.feytuo.laoxianghao.global.UserLogin$9 this$1 -> a
    java.lang.Exception val$e -> b
    android.content.Context val$context -> c
    void run() -> run
com.feytuo.laoxianghao.share_qq.Share_QQ -> com.feytuo.laoxianghao.e.a:
    com.tencent.tauth.Tencent mTencent -> a
    android.graphics.Bitmap headBitmap -> b
    void qqLogin(android.app.Activity) -> a
    void shareToQQOrQzone(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int) -> a
    void doShareToQQ(android.content.Context,android.os.Bundle) -> a
    void initOpenidAndToken(org.json.JSONObject,boolean,android.content.Context) -> a
    void getUserQQInfo(java.lang.String,android.content.Context) -> a
    void access$0(com.feytuo.laoxianghao.share_qq.Share_QQ,org.json.JSONObject,boolean,android.content.Context) -> a
    com.tencent.tauth.Tencent access$1(com.feytuo.laoxianghao.share_qq.Share_QQ) -> a
    void access$2(com.feytuo.laoxianghao.share_qq.Share_QQ,android.graphics.Bitmap) -> a
    android.graphics.Bitmap access$3(com.feytuo.laoxianghao.share_qq.Share_QQ) -> b
com.feytuo.laoxianghao.share_qq.Share_QQ$1 -> com.feytuo.laoxianghao.e.b:
    com.feytuo.laoxianghao.share_qq.Share_QQ this$0 -> a
    android.app.Activity val$activity -> b
    android.os.Bundle val$params -> c
    void run() -> run
com.feytuo.laoxianghao.share_qq.Share_QQ$2 -> com.feytuo.laoxianghao.e.c:
    com.feytuo.laoxianghao.share_qq.Share_QQ this$0 -> a
    android.content.Context val$context -> b
    java.lang.String val$openId -> c
    void onError(com.tencent.tauth.UiError) -> onError
    void onComplete(java.lang.Object) -> onComplete
    void onCancel() -> onCancel
    com.feytuo.laoxianghao.share_qq.Share_QQ access$0(com.feytuo.laoxianghao.share_qq.Share_QQ$2) -> a
com.feytuo.laoxianghao.share_qq.Share_QQ$2$1 -> com.feytuo.laoxianghao.e.d:
    com.feytuo.laoxianghao.share_qq.Share_QQ$2 this$1 -> a
    java.lang.Object val$response -> b
    android.content.Context val$context -> c
    java.lang.String val$openId -> d
    void run() -> run
com.feytuo.laoxianghao.share_qq.Share_QQ$MyIUiListener -> com.feytuo.laoxianghao.e.e:
    boolean isLogin -> b
    android.content.Context context -> c
    com.feytuo.laoxianghao.share_qq.Share_QQ this$0 -> a
    void onCancel() -> onCancel
    void onError(com.tencent.tauth.UiError) -> onError
    void onComplete(java.lang.Object) -> onComplete
com.feytuo.laoxianghao.share_qq.Util -> com.feytuo.laoxianghao.e.f:
    java.lang.String hexString -> a
    android.graphics.Bitmap getbitmap(java.lang.String) -> a
com.feytuo.laoxianghao.share_sina.AbsOpenAPI -> com.feytuo.laoxianghao.f.a:
    java.lang.String TAG -> b
    com.sina.weibo.sdk.auth.Oauth2AccessToken mAccessToken -> a
    void requestAsync(java.lang.String,com.sina.weibo.sdk.net.WeiboParameters,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> a
com.feytuo.laoxianghao.share_sina.AccessTokenKeeper -> com.feytuo.laoxianghao.f.b:
    void writeAccessToken(android.content.Context,com.sina.weibo.sdk.auth.Oauth2AccessToken) -> a
    com.sina.weibo.sdk.auth.Oauth2AccessToken readAccessToken(android.content.Context) -> a
com.feytuo.laoxianghao.share_sina.AuthListener -> com.feytuo.laoxianghao.f.c:
    com.sina.weibo.sdk.auth.Oauth2AccessToken mAccessToken -> a
    android.content.Context context -> b
    boolean isLogin -> c
    java.lang.String words -> d
    int resource -> e
    long uid -> f
    com.sina.weibo.sdk.net.RequestListener getUserInfoListener -> g
    void onComplete(android.os.Bundle) -> onComplete
    void onCancel() -> onCancel
    void onWeiboException(com.sina.weibo.sdk.exception.WeiboException) -> onWeiboException
    void getUserInfo() -> a
    android.content.Context access$0(com.feytuo.laoxianghao.share_sina.AuthListener) -> a
    long access$1(com.feytuo.laoxianghao.share_sina.AuthListener) -> b
com.feytuo.laoxianghao.share_sina.AuthListener$1 -> com.feytuo.laoxianghao.f.d:
    com.feytuo.laoxianghao.share_sina.AuthListener this$0 -> a
    void onComplete(java.lang.String) -> onComplete
    void onWeiboException(com.sina.weibo.sdk.exception.WeiboException) -> onWeiboException
    com.feytuo.laoxianghao.share_sina.AuthListener access$0(com.feytuo.laoxianghao.share_sina.AuthListener$1) -> a
com.feytuo.laoxianghao.share_sina.AuthListener$1$1 -> com.feytuo.laoxianghao.f.e:
    com.feytuo.laoxianghao.share_sina.AuthListener$1 this$1 -> a
    com.feytuo.laoxianghao.share_sina.User val$user -> b
    void run() -> run
com.feytuo.laoxianghao.share_sina.ErrorInfo -> com.feytuo.laoxianghao.f.f:
    java.lang.String error -> a
    java.lang.String error_code -> b
    java.lang.String request -> c
    com.feytuo.laoxianghao.share_sina.ErrorInfo parse(java.lang.String) -> a
    java.lang.String toString() -> toString
com.feytuo.laoxianghao.share_sina.Geo -> com.feytuo.laoxianghao.f.g:
    java.lang.String longitude -> a
    java.lang.String latitude -> b
    java.lang.String city -> c
    java.lang.String province -> d
    java.lang.String city_name -> e
    java.lang.String province_name -> f
    java.lang.String address -> g
    java.lang.String pinyin -> h
    java.lang.String more -> i
    com.feytuo.laoxianghao.share_sina.Geo parse(org.json.JSONObject) -> a
com.feytuo.laoxianghao.share_sina.Share_Weibo -> com.feytuo.laoxianghao.f.h:
    com.sina.weibo.sdk.api.share.IWeiboShareAPI mWeiboShareAPI -> a
    com.sina.weibo.sdk.auth.sso.SsoHandler mSsoHandler -> b
    android.content.Context context -> c
    com.sina.weibo.sdk.net.RequestListener mListener -> d
    void sendMessage(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int) -> a
    void sendMultiMessage(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int) -> b
    void sendSingleMessage(java.lang.String,java.lang.String) -> a
    com.sina.weibo.sdk.api.TextObject getTextObj(java.lang.String,java.lang.String) -> b
    java.lang.String getSharedText(java.lang.String,java.lang.String) -> c
    com.sina.weibo.sdk.api.ImageObject getImageObj(int) -> a
    com.sina.weibo.sdk.api.VoiceObject getVoiceObj(java.lang.String,java.lang.String,java.lang.String,int) -> a
    void sendMessage(android.app.Activity,java.lang.String,int) -> a
    void sendMessageByOpenAPI(java.lang.String,int) -> a
    void SSOAuthorize(android.content.Context,boolean,java.lang.String,int) -> a
    com.sina.weibo.sdk.api.share.IWeiboShareAPI getmWeiboShareAPI() -> a
    com.sina.weibo.sdk.auth.sso.SsoHandler getmSsoHandler() -> b
    android.content.Context access$0(com.feytuo.laoxianghao.share_sina.Share_Weibo) -> a
com.feytuo.laoxianghao.share_sina.Share_Weibo$1 -> com.feytuo.laoxianghao.f.i:
    com.feytuo.laoxianghao.share_sina.Share_Weibo this$0 -> a
    void onComplete(java.lang.String) -> onComplete
    void onWeiboException(com.sina.weibo.sdk.exception.WeiboException) -> onWeiboException
com.feytuo.laoxianghao.share_sina.Status -> com.feytuo.laoxianghao.f.j:
    java.lang.String created_at -> a
    java.lang.String id -> b
    java.lang.String mid -> c
    java.lang.String idstr -> d
    java.lang.String text -> e
    java.lang.String source -> f
    boolean favorited -> g
    boolean truncated -> h
    java.lang.String in_reply_to_status_id -> i
    java.lang.String in_reply_to_user_id -> j
    java.lang.String in_reply_to_screen_name -> k
    java.lang.String thumbnail_pic -> l
    java.lang.String bmiddle_pic -> m
    java.lang.String original_pic -> n
    com.feytuo.laoxianghao.share_sina.Geo geo -> o
    com.feytuo.laoxianghao.share_sina.User user -> p
    com.feytuo.laoxianghao.share_sina.Status retweeted_status -> q
    int reposts_count -> r
    int comments_count -> s
    int attitudes_count -> t
    int mlevel -> u
    com.feytuo.laoxianghao.share_sina.Visible visible -> v
    java.util.ArrayList pic_urls -> w
    com.feytuo.laoxianghao.share_sina.Status parse(org.json.JSONObject) -> a
com.feytuo.laoxianghao.share_sina.StatusList -> com.feytuo.laoxianghao.f.k:
    java.util.ArrayList statusList -> a
    boolean hasvisible -> b
    java.lang.String previous_cursor -> c
    java.lang.String next_cursor -> d
    int total_number -> e
    com.feytuo.laoxianghao.share_sina.StatusList parse(java.lang.String) -> a
com.feytuo.laoxianghao.share_sina.StatusesAPI -> com.feytuo.laoxianghao.f.l:
    android.util.SparseArray sAPIList -> b
    void upload(java.lang.String,android.graphics.Bitmap,java.lang.String,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> a
    com.sina.weibo.sdk.net.WeiboParameters buildUpdateParams(java.lang.String,java.lang.String,java.lang.String) -> a
com.feytuo.laoxianghao.share_sina.User -> com.feytuo.laoxianghao.f.m:
    java.lang.String id -> a
    java.lang.String idstr -> b
    java.lang.String screen_name -> c
    java.lang.String name -> d
    int province -> e
    int city -> f
    java.lang.String location -> g
    java.lang.String description -> h
    java.lang.String url -> i
    java.lang.String profile_image_url -> j
    java.lang.String profile_url -> k
    java.lang.String domain -> l
    java.lang.String weihao -> m
    java.lang.String gender -> n
    int followers_count -> o
    int friends_count -> p
    int statuses_count -> q
    int favourites_count -> r
    java.lang.String created_at -> s
    boolean following -> t
    boolean allow_all_act_msg -> u
    boolean geo_enabled -> v
    boolean verified -> w
    int verified_type -> x
    java.lang.String remark -> y
    boolean allow_all_comment -> z
    java.lang.String avatar_large -> A
    java.lang.String avatar_hd -> B
    java.lang.String verified_reason -> C
    boolean follow_me -> D
    int online_status -> E
    int bi_followers_count -> F
    java.lang.String lang -> G
    java.lang.String star -> H
    java.lang.String mbtype -> I
    java.lang.String mbrank -> J
    java.lang.String block_word -> K
    com.feytuo.laoxianghao.share_sina.User parse(java.lang.String) -> a
    com.feytuo.laoxianghao.share_sina.User parse(org.json.JSONObject) -> a
com.feytuo.laoxianghao.share_sina.Visible -> com.feytuo.laoxianghao.f.n:
    int type -> a
    int list_id -> b
    com.feytuo.laoxianghao.share_sina.Visible parse(org.json.JSONObject) -> a
com.feytuo.laoxianghao.sortlistview.CharacterParser -> com.feytuo.laoxianghao.sortlistview.a:
    int[] pyvalue -> b
    java.lang.String[] pystr -> a
    java.lang.StringBuilder buffer -> c
    com.feytuo.laoxianghao.sortlistview.CharacterParser characterParser -> d
    com.feytuo.laoxianghao.sortlistview.CharacterParser getInstance() -> a
    int getChsAscii(java.lang.String) -> c
    java.lang.String convert(java.lang.String) -> a
    java.lang.String getSelling(java.lang.String) -> b
com.feytuo.laoxianghao.sortlistview.ClearEditText -> com.feytuo.laoxianghao.sortlistview.ClearEditText:
    android.graphics.drawable.Drawable mClearDrawable -> a
    void init() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onFocusChange(android.view.View,boolean) -> onFocusChange
    void setClearIconVisible(boolean) -> setClearIconVisible
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.feytuo.laoxianghao.sortlistview.PinyinComparator -> com.feytuo.laoxianghao.sortlistview.b:
    int compare(com.feytuo.laoxianghao.sortlistview.SortModel,com.feytuo.laoxianghao.sortlistview.SortModel) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.feytuo.laoxianghao.sortlistview.SideBar -> com.feytuo.laoxianghao.sortlistview.SideBar:
    com.feytuo.laoxianghao.sortlistview.SideBar$OnTouchingLetterChangedListener onTouchingLetterChangedListener -> b
    java.lang.String[] b -> a
    int choose -> c
    android.graphics.Paint paint -> d
    android.widget.TextView mTextDialog -> e
    void setTextView(android.widget.TextView) -> setTextView
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    void setOnTouchingLetterChangedListener(com.feytuo.laoxianghao.sortlistview.SideBar$OnTouchingLetterChangedListener) -> setOnTouchingLetterChangedListener
com.feytuo.laoxianghao.sortlistview.SideBar$OnTouchingLetterChangedListener -> com.feytuo.laoxianghao.sortlistview.c:
    void onTouchingLetterChanged(java.lang.String) -> a
com.feytuo.laoxianghao.sortlistview.SortAdapter -> com.feytuo.laoxianghao.sortlistview.d:
    java.util.List list -> a
    android.content.Context mContext -> b
    void updateListView(java.util.List) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int getSectionForPosition(int) -> getSectionForPosition
    int getPositionForSection(int) -> getPositionForSection
    java.lang.Object[] getSections() -> getSections
com.feytuo.laoxianghao.sortlistview.SortAdapter$ViewHolder -> com.feytuo.laoxianghao.sortlistview.e:
    android.widget.TextView tvLetter -> a
    android.widget.TextView tvTitle -> b
com.feytuo.laoxianghao.sortlistview.SortModel -> com.feytuo.laoxianghao.sortlistview.f:
    java.lang.String name -> a
    java.lang.String sortLetters -> b
    java.lang.String getName() -> a
    void setName(java.lang.String) -> a
    java.lang.String getSortLetters() -> b
    void setSortLetters(java.lang.String) -> b
com.feytuo.laoxianghao.util.AppInfoUtil -> com.feytuo.laoxianghao.g.a:
    java.lang.String getAppPackageName(android.content.Context) -> a
    java.lang.String getAppVersionName(android.content.Context) -> b
com.feytuo.laoxianghao.util.CommonUtils -> com.feytuo.laoxianghao.g.b:
    void corner(android.content.Context,int,android.widget.ImageView) -> a
    void corner(android.content.Context,android.graphics.Bitmap,android.widget.ImageView) -> a
    void cornersmall(android.content.Context,android.graphics.Bitmap,android.widget.ImageView) -> b
    android.graphics.Bitmap toRoundCorner(android.graphics.Bitmap,int) -> a
com.feytuo.laoxianghao.util.DataCleanManager -> com.feytuo.laoxianghao.g.c:
    void cleanInternalCache(android.content.Context) -> a
    void cleanExternalCache(android.content.Context) -> b
    void cleanCustomCache(java.lang.String) -> a
    void deleteFilesByDirectory(java.io.File) -> a
com.feytuo.laoxianghao.util.GetSystemDateTime -> com.feytuo.laoxianghao.g.d:
    java.lang.String now() -> a
com.feytuo.laoxianghao.util.ImageFileCache -> com.feytuo.laoxianghao.g.e:
    android.graphics.Bitmap getImage(java.lang.String) -> a
    void saveBitmap(android.graphics.Bitmap,java.lang.String) -> a
    boolean removeCache(java.lang.String) -> c
    void updateFileTime(java.lang.String) -> b
    int freeSpaceOnSd() -> a
    java.lang.String convertUrlToFileName(java.lang.String) -> d
    java.lang.String getDirectory() -> b
    java.lang.String getSDPath() -> c
com.feytuo.laoxianghao.util.ImageFileCache$FileLastModifSort -> com.feytuo.laoxianghao.g.f:
    com.feytuo.laoxianghao.util.ImageFileCache this$0 -> a
    int compare(java.io.File,java.io.File) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.feytuo.laoxianghao.util.ImageLoader -> com.feytuo.laoxianghao.g.g:
    com.feytuo.laoxianghao.util.ImageFileCache fileCache -> a
    android.content.Context context -> b
    java.util.Map imageViews -> c
    java.util.HashMap mFirstLevelCache -> d
    java.util.concurrent.ConcurrentHashMap mSecondLevelCache -> e
    java.lang.Runnable mClearCache -> f
    android.os.Handler mPurgeHandler -> g
    void resetPurgeTimer() -> a
    void clear() -> b
    android.graphics.Bitmap getBitmapFromCache(java.lang.String) -> a
    android.graphics.Bitmap getFromSecondLevelCache(java.lang.String) -> c
    android.graphics.Bitmap getFromFirstLevelCache(java.lang.String) -> d
    void loadImage(java.lang.String,android.widget.BaseAdapter,android.widget.ImageView) -> a
    void loadCornerImage(java.lang.String,android.widget.BaseAdapter,android.widget.ImageView) -> b
    void loadNoImage(java.lang.String,android.widget.BaseAdapter,android.widget.ImageView) -> c
    void addImage2Cache(java.lang.String,android.graphics.Bitmap) -> a
    boolean imageviewReused(android.widget.ImageView,java.lang.String) -> a
    android.graphics.Bitmap loadImageFromInternet(java.lang.String) -> b
    java.util.concurrent.ConcurrentHashMap access$0(com.feytuo.laoxianghao.util.ImageLoader) -> a
    void access$1(com.feytuo.laoxianghao.util.ImageLoader) -> b
    boolean access$2(com.feytuo.laoxianghao.util.ImageLoader,android.widget.ImageView,java.lang.String) -> a
    com.feytuo.laoxianghao.util.ImageFileCache access$3(com.feytuo.laoxianghao.util.ImageLoader) -> c
    android.content.Context access$4(com.feytuo.laoxianghao.util.ImageLoader) -> d
com.feytuo.laoxianghao.util.ImageLoader$1 -> com.feytuo.laoxianghao.g.h:
    com.feytuo.laoxianghao.util.ImageLoader this$0 -> a
    boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
com.feytuo.laoxianghao.util.ImageLoader$2 -> com.feytuo.laoxianghao.g.i:
    com.feytuo.laoxianghao.util.ImageLoader this$0 -> a
    void run() -> run
com.feytuo.laoxianghao.util.ImageLoader$ImageLoadTask -> com.feytuo.laoxianghao.g.j:
    java.lang.String url -> a
    android.widget.BaseAdapter adapter -> b
    android.widget.ImageView iv -> c
    int type -> d
    com.feytuo.laoxianghao.util.ImageLoader this$0 -> e
    android.graphics.Bitmap doInBackground(java.lang.Object[]) -> a
    void onPostExecute(android.graphics.Bitmap) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.feytuo.laoxianghao.util.Location_Baidu -> com.feytuo.laoxianghao.g.k:
    com.baidu.location.LocationClient mLocationClient -> a
    java.lang.String mProvince -> b
    java.lang.String mCity -> c
    java.lang.String mPosition -> d
    android.widget.TextView mLocationTV -> e
    void InitLocation() -> d
    java.lang.String formatPosition(java.lang.String,java.lang.String) -> a
    java.lang.String getmPosition() -> a
    void setmPosition(java.lang.String) -> a
    void start() -> b
    void stop() -> c
    void access$0(com.feytuo.laoxianghao.util.Location_Baidu,java.lang.String) -> a
    void access$1(com.feytuo.laoxianghao.util.Location_Baidu,java.lang.String) -> b
    java.lang.String access$2(com.feytuo.laoxianghao.util.Location_Baidu) -> a
    java.lang.String access$3(com.feytuo.laoxianghao.util.Location_Baidu) -> b
    android.widget.TextView access$4(com.feytuo.laoxianghao.util.Location_Baidu) -> c
    java.lang.String access$5(com.feytuo.laoxianghao.util.Location_Baidu,java.lang.String,java.lang.String) -> a
com.feytuo.laoxianghao.util.Location_Baidu$MyLocationListener -> com.feytuo.laoxianghao.g.l:
    com.feytuo.laoxianghao.util.Location_Baidu this$0 -> a
    void onReceiveLocation(com.baidu.location.BDLocation) -> onReceiveLocation
com.feytuo.laoxianghao.util.Location_Baidu$SmallLocationListener -> com.feytuo.laoxianghao.g.m:
    com.feytuo.laoxianghao.util.Location_Baidu this$0 -> a
    void onReceiveLocation(com.baidu.location.BDLocation) -> onReceiveLocation
com.feytuo.laoxianghao.util.NetUtil -> com.feytuo.laoxianghao.g.n:
    boolean isNetConnect(android.content.Context) -> a
com.feytuo.laoxianghao.util.SDcardTools -> com.feytuo.laoxianghao.g.o:
    boolean isHaveSDcard() -> a
    java.lang.String getSDPath() -> b
com.feytuo.laoxianghao.util.ScreenUtils -> com.feytuo.laoxianghao.g.p:
    android.view.animation.LayoutAnimationController getListAnim() -> a
com.feytuo.laoxianghao.util.StringTools -> com.feytuo.laoxianghao.g.q:
    java.lang.String getRandomString(int) -> a
    java.lang.String getTimeFormatText(java.util.Date) -> a
com.feytuo.laoxianghao.view.ListViewForScrollView -> com.feytuo.laoxianghao.view.ListViewForScrollView:
    void onMeasure(int,int) -> onMeasure
com.feytuo.laoxianghao.view.MyDialog -> com.feytuo.laoxianghao.view.a:
    android.content.Context context -> a
    java.lang.String targetUrl -> b
    int imageResource -> c
    java.lang.String imageUrl -> d
    java.lang.String voiceTitle -> e
    java.lang.String voiceDes -> f
    java.lang.String words -> g
    java.lang.String audioUrl -> h
    android.widget.ImageView shareWeixinArea -> i
    android.widget.ImageView shareSina -> j
    android.widget.ImageView shareWeixinFriend -> k
    android.widget.ImageView shareQQFriend -> l
    android.widget.ImageView shareQzone -> m
    android.widget.ImageView shareSms -> n
    android.view.View$OnClickListener loginListener -> o
    void onCreate(android.os.Bundle) -> onCreate
    void shareSina() -> a
    void shareQzone() -> b
    void shareQFriend() -> c
    void toWeixinFriend() -> d
    void toFriendGroup() -> e
    void shareSms() -> f
    void access$0(com.feytuo.laoxianghao.view.MyDialog) -> a
    void access$1(com.feytuo.laoxianghao.view.MyDialog) -> b
    void access$2(com.feytuo.laoxianghao.view.MyDialog) -> c
    void access$3(com.feytuo.laoxianghao.view.MyDialog) -> d
    void access$4(com.feytuo.laoxianghao.view.MyDialog) -> e
    void access$5(com.feytuo.laoxianghao.view.MyDialog) -> f
com.feytuo.laoxianghao.view.MyDialog$1 -> com.feytuo.laoxianghao.view.b:
    com.feytuo.laoxianghao.view.MyDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.feytuo.laoxianghao.view.OnloadDialog -> com.feytuo.laoxianghao.view.c:
    android.content.Context context -> a
    android.widget.TextView messageTextView -> b
    void onCreate(android.os.Bundle) -> onCreate
    void setMessage(java.lang.String) -> a
    void progressFinish(java.lang.String) -> b
com.feytuo.laoxianghao.view.PositionChooseDialog -> com.feytuo.laoxianghao.view.d:
    android.content.Context context -> a
    android.widget.ListView mListView -> b
    android.widget.SimpleAdapter adapter -> c
    java.util.List data -> d
    java.lang.String location -> e
    void onCreate(android.os.Bundle) -> onCreate
    void initData() -> a
    void initListView() -> b
    java.util.List access$0(com.feytuo.laoxianghao.view.PositionChooseDialog) -> a
    void access$1(com.feytuo.laoxianghao.view.PositionChooseDialog,java.lang.String) -> a
    java.lang.String access$2(com.feytuo.laoxianghao.view.PositionChooseDialog) -> b
com.feytuo.laoxianghao.view.PositionChooseDialog$1 -> com.feytuo.laoxianghao.view.e:
    com.feytuo.laoxianghao.view.PositionChooseDialog this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.feytuo.laoxianghao.wxapi.Share_Weixin -> com.feytuo.laoxianghao.wxapi.Share_Weixin:
    com.tencent.mm.sdk.openapi.IWXAPI wxApi -> wxApi
    android.content.Context context -> context
    void wechatShare(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int) -> wechatShare
com.feytuo.laoxianghao.wxapi.WXEntryActivity -> com.feytuo.laoxianghao.wxapi.WXEntryActivity:
    com.tencent.mm.sdk.openapi.IWXAPI api -> api
    void onCreate(android.os.Bundle) -> onCreate
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onReq(com.tencent.mm.sdk.modelbase.BaseReq) -> onReq
    void onResp(com.tencent.mm.sdk.modelbase.BaseResp) -> onResp
com.feytuo.listviewonload.APIUtil -> com.feytuo.listviewonload.a:
    boolean isSupport(int) -> a
com.feytuo.listviewonload.Footable -> com.feytuo.listviewonload.b:
    boolean draw(android.graphics.Canvas,int,int,int,int) -> a
    int getHeight() -> a
com.feytuo.listviewonload.Headable -> com.feytuo.listviewonload.c:
    void stateChange(int,java.lang.String) -> a
    int getState() -> a
    boolean draw(android.graphics.Canvas,int,int,int,int) -> a
    void toastResultInOtherWay(android.content.Context,int) -> a
    int getHeight() -> b
com.feytuo.listviewonload.HeaderViewListAdapter -> com.feytuo.listviewonload.d:
    android.widget.ListAdapter mAdapter -> e
    java.util.ArrayList mHeaderViewInfos -> a
    java.util.ArrayList mFooterViewInfos -> b
    java.util.ArrayList EMPTY_INFO_LIST -> c
    boolean mAreAllFixedViewsSelectable -> d
    int getHeadersCount() -> a
    int getFootersCount() -> b
    boolean isEmpty() -> isEmpty
    boolean areAllListInfosSelectable(java.util.ArrayList) -> a
    int getCount() -> getCount
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean isEnabled(int) -> isEnabled
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    android.widget.ListAdapter getWrappedAdapter() -> getWrappedAdapter
com.feytuo.listviewonload.SimpleFooter -> com.feytuo.listviewonload.e:
    float PI -> a
    int mPice -> b
    android.graphics.Paint mPaint -> c
    int mTime -> d
    int mCircleColor -> e
    int mHeight -> f
    void setCircleColor(int) -> a
    boolean draw(android.graphics.Canvas,int,int,int,int) -> a
    int getHeight() -> a
com.feytuo.listviewonload.SimpleHeader -> com.feytuo.listviewonload.f:
    float PI -> a
    int mState -> b
    int mPice -> c
    android.graphics.Paint mPaint -> d
    int mHeight -> e
    int mTime -> f
    int mTextColor -> g
    int mPointColor -> h
    float mPointRadius -> i
    float mCircleRadius -> j
    float mFontOffset -> k
    java.lang.String mMsg -> l
    boolean isClipCanvas -> m
    void setTextColor(int) -> a
    void setCircleColor(int) -> b
    void stateChange(int,java.lang.String) -> a
    int getState() -> a
    boolean draw(android.graphics.Canvas,int,int,int,int) -> a
    void toastResultInOtherWay(android.content.Context,int) -> a
    int getHeight() -> b
com.feytuo.listviewonload.XListView -> com.feytuo.listviewonload.XListView:
    float mLastY -> a
    android.widget.Scroller mScroller -> b
    android.widget.AbsListView$OnScrollListener mScrollListener -> c
    com.feytuo.listviewonload.XListView$IXListViewListener mListViewListener -> d
    com.feytuo.listviewonload.XListViewHeader mHeaderView -> e
    android.widget.RelativeLayout mHeaderViewContent -> f
    android.widget.TextView mHeaderTimeView -> g
    int mHeaderViewHeight -> h
    boolean mEnablePullRefresh -> i
    boolean mPullRefreshing -> j
    com.feytuo.listviewonload.XListViewFooter mFooterView -> k
    boolean mEnablePullLoad -> l
    boolean mPullLoading -> m
    boolean mIsFooterReady -> n
    int mTotalItemCount -> o
    int mScrollBack -> p
    void initWithContext(android.content.Context) -> a
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void setPullRefreshEnable(boolean) -> setPullRefreshEnable
    void setPullLoadEnable(boolean) -> setPullLoadEnable
    void stopRefresh() -> a
    void stopLoadMore() -> b
    void setRefreshTime(java.lang.String) -> setRefreshTime
    void invokeOnScrolling() -> c
    void updateHeaderHeight(float) -> a
    void resetHeaderHeight() -> d
    void updateFooterHeight(float) -> b
    void resetFooterHeight() -> e
    void startLoadMore() -> f
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void computeScroll() -> computeScroll
    void setOnScrollListener(android.widget.AbsListView$OnScrollListener) -> setOnScrollListener
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void setXListViewListener(com.feytuo.listviewonload.XListView$IXListViewListener) -> setXListViewListener
    android.widget.RelativeLayout access$0(com.feytuo.listviewonload.XListView) -> a
    void access$1(com.feytuo.listviewonload.XListView,int) -> a
    void access$2(com.feytuo.listviewonload.XListView) -> b
com.feytuo.listviewonload.XListView$1 -> com.feytuo.listviewonload.g:
    com.feytuo.listviewonload.XListView this$0 -> a
    void onGlobalLayout() -> onGlobalLayout
com.feytuo.listviewonload.XListView$2 -> com.feytuo.listviewonload.h:
    com.feytuo.listviewonload.XListView this$0 -> a
    void onClick(android.view.View) -> onClick
com.feytuo.listviewonload.XListView$IXListViewListener -> com.feytuo.listviewonload.i:
    void onRefresh() -> a
    void onLoadMore() -> b
com.feytuo.listviewonload.XListView$OnXScrollListener -> com.feytuo.listviewonload.j:
    void onXScrolling(android.view.View) -> a
com.feytuo.listviewonload.XListViewFooter -> com.feytuo.listviewonload.XListViewFooter:
    android.content.Context mContext -> a
    android.view.View mContentView -> b
    android.view.View mProgressBar -> c
    android.widget.TextView mHintView -> d
    void setState(int) -> setState
    void setBottomMargin(int) -> setBottomMargin
    int getBottomMargin() -> getBottomMargin
    void hide() -> a
    void show() -> b
    void initView(android.content.Context) -> a
com.feytuo.listviewonload.XListViewHeader -> com.feytuo.listviewonload.XListViewHeader:
    android.widget.LinearLayout mContainer -> a
    android.widget.ImageView mArrowImageView -> b
    android.widget.ProgressBar mProgressBar -> c
    android.widget.TextView mHintTextView -> d
    int mState -> e
    android.view.animation.Animation mRotateUpAnim -> f
    android.view.animation.Animation mRotateDownAnim -> g
    int ROTATE_ANIM_DURATION -> h
    void initView(android.content.Context) -> a
    void setState(int) -> setState
    void setVisiableHeight(int) -> setVisiableHeight
    int getVisiableHeight() -> getVisiableHeight
com.feytuo.listviewonload.ZrcAbsListView -> com.feytuo.listviewonload.ZrcAbsListView:
    int mLayoutMode -> a
    com.feytuo.listviewonload.ZrcAbsListView$AdapterDataSetObserver mDataSetObserver -> b
    android.widget.ListAdapter mAdapter -> c
    boolean mAdapterHasStableIds -> d
    boolean mDrawSelectorOnTop -> e
    android.graphics.drawable.Drawable mSelector -> f
    int mSelectorPosition -> g
    android.graphics.Rect mSelectorRect -> h
    com.feytuo.listviewonload.ZrcAbsListView$RecycleBin mRecycler -> i
    android.graphics.Rect mListPadding -> j
    int mWidthMeasureSpec -> k
    android.view.View mScrollUp -> l
    android.view.View mScrollDown -> m
    boolean mCachingStarted -> n
    boolean mCachingActive -> o
    int mMotionPosition -> p
    int mMotionX -> q
    int mMotionY -> r
    int mTouchMode -> s
    int mLastY -> t
    int mMotionCorrection -> u
    android.view.VelocityTracker mVelocityTracker -> P
    com.feytuo.listviewonload.ZrcAbsListView$FlingRunnable mFlingRunnable -> Q
    boolean mScrollingCacheEnabled -> v
    com.feytuo.listviewonload.ZrcListView$OnScrollListener mOnScrollListener -> R
    boolean mSmoothScrollbarEnabled -> S
    android.graphics.Rect mTouchFrame -> T
    int mLastTouchMode -> U
    com.feytuo.listviewonload.ZrcAbsListView$PerformClick mPerformClick -> V
    java.lang.Runnable mPendingCheckForTap -> W
    java.lang.Runnable mTouchModeReset -> Z
    int mTranscriptMode -> aa
    int mCacheColorHint -> ab
    boolean mIsChildViewEnabled -> ac
    int mLastScrollState -> ad
    int mTouchSlop -> ae
    java.lang.Runnable mClearScrollingCache -> af
    java.lang.Runnable mPositionScrollAfterLayout -> w
    int mMinimumVelocity -> ag
    int mMaximumVelocity -> ah
    float mVelocityScale -> ai
    boolean[] mIsScrap -> x
    int mActivePointerId -> aj
    boolean mIsAttached -> y
    com.feytuo.listviewonload.Headable mZrcHeader -> ak
    com.feytuo.listviewonload.Footable mZrcFooter -> al
    com.feytuo.listviewonload.ZrcListView$OnStartListener onRefreshStart -> am
    com.feytuo.listviewonload.ZrcListView$OnStartListener onLoadMoreStart -> an
    com.feytuo.listviewonload.ZrcListView$OnScrollStateListener onScrollStateListener -> ao
    int mScrollState -> ap
    boolean showHeader -> z
    boolean isLoadingMore -> aq
    boolean isLoadMoreOn -> ar
    boolean isRefreshing -> as
    int mFirstTopOffset -> A
    int mLastBottomOffset -> B
    float mDensity -> C
    java.lang.Runnable mResetRunnable -> at
    int[] NOTHING -> D
    float mVerticalScrollFactor -> au
    void initAbsListView() -> p
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    boolean performItemClick(android.view.View,int,long) -> a
    void setSmoothScrollbarEnabled(boolean) -> setSmoothScrollbarEnabled
    void setOnScrollListener(com.feytuo.listviewonload.ZrcListView$OnScrollListener) -> setOnScrollListener
    void invokeOnItemScrollListener() -> a
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    void getFocusedRect(android.graphics.Rect) -> getFocusedRect
    void useDefaultSelector() -> q
    void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    void requestLayout() -> requestLayout
    void resetList() -> b
    int computeVerticalScrollExtent() -> computeVerticalScrollExtent
    int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    int computeVerticalScrollRange() -> computeVerticalScrollRange
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void layoutChildren() -> c
    void updateScrollIndicators() -> d
    int getListPaddingTop() -> getListPaddingTop
    int getListPaddingBottom() -> getListPaddingBottom
    int getListPaddingLeft() -> getListPaddingLeft
    int getListPaddingRight() -> getListPaddingRight
    android.view.View obtainView(int,boolean[]) -> a
    void positionSelector(int,android.view.View) -> a
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    int getLeftPaddingOffset() -> getLeftPaddingOffset
    int getTopPaddingOffset() -> getTopPaddingOffset
    int getRightPaddingOffset() -> getRightPaddingOffset
    int getBottomPaddingOffset() -> getBottomPaddingOffset
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    boolean touchModeDrawsInPressedState() -> e
    boolean shouldShowSelector() -> f
    void drawSelector(android.graphics.Canvas) -> a
    void setDrawSelectorOnTop(boolean) -> setDrawSelectorOnTop
    void setSelector(int) -> setSelector
    void setSelector(android.graphics.drawable.Drawable) -> setSelector
    android.graphics.drawable.Drawable getSelector() -> getSelector
    void updateSelectorState() -> g
    void drawableStateChanged() -> drawableStateChanged
    int[] onCreateDrawableState(int) -> onCreateDrawableState
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onCancelPendingInputEvents() -> onCancelPendingInputEvents
    void dispatchSetPressed(boolean) -> dispatchSetPressed
    int pointToPosition(int,int) -> a
    boolean startScrollIfNeeded(int,int) -> c
    void scrollIfNeeded(int,int) -> d
    void onTouchModeChanged(boolean) -> onTouchModeChanged
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onTouchDown(android.view.MotionEvent) -> a
    void onTouchMove(android.view.MotionEvent) -> b
    void onTouchUp(android.view.MotionEvent) -> c
    void onTouchCancel() -> r
    boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    float getVerticalScrollFactor() -> getVerticalScrollFactor
    void setScrollY(int) -> setScrollY
    void initOrResetVelocityTracker() -> s
    void initVelocityTrackerIfNotExists() -> t
    void recycleVelocityTracker() -> u
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void onSecondaryPointerUp(android.view.MotionEvent) -> d
    void addTouchables(java.util.ArrayList) -> addTouchables
    void reportScrollStateChange(int) -> a
    void scrollToAdjustViewsUpOrDown() -> h
    void setFriction(float) -> setFriction
    void setVelocityScale(float) -> setVelocityScale
    void createScrollingCache() -> v
    void clearScrollingCache() -> w
    boolean trackMotionScroll(int,int) -> b
    void offsetChildrenTopAndBottom(int) -> b
    int getHeaderViewsCount() -> getHeaderViewsCount
    int getFooterViewsCount() -> getFooterViewsCount
    void fillGap(boolean) -> a
    int findMotionRow(int) -> c
    void handleDataChanged() -> i
    int getDistance(android.graphics.Rect,android.graphics.Rect,int) -> a
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    com.feytuo.listviewonload.ZrcAbsListView$LayoutParams generateLayoutParams(android.util.AttributeSet) -> a
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    void setTranscriptMode(int) -> setTranscriptMode
    int getTranscriptMode() -> getTranscriptMode
    int getSolidColor() -> getSolidColor
    void setCacheColorHint(int) -> setCacheColorHint
    int getCacheColorHint() -> getCacheColorHint
    void startLoadMore() -> j
    void setLoadMoreSuccess() -> k
    void stopLoadMore() -> l
    void refresh() -> m
    void setRecyclerListener(com.feytuo.listviewonload.ZrcAbsListView$RecyclerListener) -> setRecyclerListener
    void setOnRefreshStartListener(com.feytuo.listviewonload.ZrcListView$OnStartListener) -> setOnRefreshStartListener
    void setOnLoadMoreStartListener(com.feytuo.listviewonload.ZrcListView$OnStartListener) -> setOnLoadMoreStartListener
    void setOnScrollStateListener(com.feytuo.listviewonload.ZrcListView$OnScrollStateListener) -> setOnScrollStateListener
    void setRefreshSuccess(java.lang.String) -> setRefreshSuccess
    void setRefreshFail(java.lang.String) -> setRefreshFail
    void setRefreshDone(java.lang.String,int) -> a
    void setHeadable(com.feytuo.listviewonload.Headable) -> setHeadable
    void setFootable(com.feytuo.listviewonload.Footable) -> setFootable
    com.feytuo.listviewonload.Headable getHeadable() -> getHeadable
    com.feytuo.listviewonload.Footable getFootable() -> getFootable
    void setFirstTopOffset(int) -> setFirstTopOffset
    void setLastBottomOffset(int) -> setLastBottomOffset
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.view.View retrieveFromScrap(java.util.ArrayList,int) -> a
    void setAdapter(android.widget.Adapter) -> setAdapter
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    com.feytuo.listviewonload.Headable access$2(com.feytuo.listviewonload.ZrcAbsListView) -> a
    int access$3(com.feytuo.listviewonload.ZrcAbsListView) -> b
    void access$4(com.feytuo.listviewonload.ZrcAbsListView) -> c
    boolean access$5(com.feytuo.listviewonload.ZrcAbsListView) -> d
    boolean access$6(com.feytuo.listviewonload.ZrcAbsListView) -> e
    boolean access$7(com.feytuo.listviewonload.ZrcAbsListView) -> f
    com.feytuo.listviewonload.ZrcListView$OnStartListener access$8(com.feytuo.listviewonload.ZrcAbsListView) -> g
    void access$9(com.feytuo.listviewonload.ZrcAbsListView,boolean) -> a
    com.feytuo.listviewonload.Footable access$10(com.feytuo.listviewonload.ZrcAbsListView) -> h
    com.feytuo.listviewonload.ZrcListView$OnStartListener access$11(com.feytuo.listviewonload.ZrcAbsListView) -> i
    void access$12(com.feytuo.listviewonload.ZrcAbsListView,boolean) -> b
    void access$13(com.feytuo.listviewonload.ZrcAbsListView,android.view.View,boolean) -> a
    void access$14(com.feytuo.listviewonload.ZrcAbsListView,java.lang.Runnable) -> a
    void access$15(com.feytuo.listviewonload.ZrcAbsListView,boolean) -> c
    void access$16(com.feytuo.listviewonload.ZrcAbsListView,boolean) -> d
    com.feytuo.listviewonload.ZrcAbsListView$FlingRunnable access$17(com.feytuo.listviewonload.ZrcAbsListView) -> j
    void access$18(com.feytuo.listviewonload.ZrcAbsListView,com.feytuo.listviewonload.ZrcAbsListView$FlingRunnable) -> a
    java.lang.Runnable access$19(com.feytuo.listviewonload.ZrcAbsListView) -> k
com.feytuo.listviewonload.ZrcAbsListView$1 -> com.feytuo.listviewonload.k:
    com.feytuo.listviewonload.ZrcAbsListView this$0 -> a
    void run() -> run
com.feytuo.listviewonload.ZrcAbsListView$2 -> com.feytuo.listviewonload.l:
    com.feytuo.listviewonload.ZrcAbsListView this$0 -> a
    android.view.View val$child -> b
    com.feytuo.listviewonload.ZrcAbsListView$PerformClick val$performClick -> c
    void run() -> run
com.feytuo.listviewonload.ZrcAbsListView$3 -> com.feytuo.listviewonload.m:
    com.feytuo.listviewonload.ZrcAbsListView this$0 -> a
    void run() -> run
com.feytuo.listviewonload.ZrcAbsListView$4 -> com.feytuo.listviewonload.n:
    com.feytuo.listviewonload.ZrcAbsListView this$0 -> a
    void run() -> run
com.feytuo.listviewonload.ZrcAbsListView$5 -> com.feytuo.listviewonload.o:
    com.feytuo.listviewonload.ZrcAbsListView this$0 -> a
    com.feytuo.listviewonload.Headable val$zrcHeader -> b
    void run() -> run
com.feytuo.listviewonload.ZrcAbsListView$AdapterDataSetObserver -> com.feytuo.listviewonload.p:
    com.feytuo.listviewonload.ZrcAbsListView this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.feytuo.listviewonload.ZrcAbsListView$CheckForTap -> com.feytuo.listviewonload.q:
    com.feytuo.listviewonload.ZrcAbsListView this$0 -> a
    void run() -> run
com.feytuo.listviewonload.ZrcAbsListView$FlingRunnable -> com.feytuo.listviewonload.r:
    android.widget.Scroller mScroller -> b
    int mLastFlingY -> c
    com.feytuo.listviewonload.ZrcAbsListView this$0 -> a
    void start(int) -> a
    void startScroll(int,int,boolean) -> a
    void endFling() -> a
    boolean scrollToAdjustViewsUpOrDown() -> b
    void run() -> run
    android.widget.Scroller access$0(com.feytuo.listviewonload.ZrcAbsListView$FlingRunnable) -> a
com.feytuo.listviewonload.ZrcAbsListView$FlingRunnable$1 -> com.feytuo.listviewonload.s:
    com.feytuo.listviewonload.ZrcAbsListView$FlingRunnable this$1 -> a
    float getInterpolation(float) -> getInterpolation
com.feytuo.listviewonload.ZrcAbsListView$LayoutParams -> com.feytuo.listviewonload.ZrcAbsListView$LayoutParams:
    int viewType -> a
    boolean recycledHeaderFooter -> b
    boolean forceAdd -> c
    int scrappedFromPosition -> d
    long itemId -> e
com.feytuo.listviewonload.ZrcAbsListView$PerformClick -> com.feytuo.listviewonload.t:
    int mClickMotionPosition -> a
    com.feytuo.listviewonload.ZrcAbsListView this$0 -> b
    void run() -> run
com.feytuo.listviewonload.ZrcAbsListView$RecycleBin -> com.feytuo.listviewonload.u:
    com.feytuo.listviewonload.ZrcAbsListView$RecyclerListener mRecyclerListener -> b
    int mFirstActivePosition -> c
    android.view.View[] mActiveViews -> d
    java.util.ArrayList[] mScrapViews -> e
    int mViewTypeCount -> f
    java.util.ArrayList mCurrentScrap -> g
    java.util.ArrayList mSkippedScrap -> h
    android.support.v4.util.SparseArrayCompat mTransientStateViews -> i
    android.support.v4.util.LongSparseArray mTransientStateViewsById -> j
    com.feytuo.listviewonload.ZrcAbsListView this$0 -> a
    void setViewTypeCount(int) -> a
    void markChildrenDirty() -> a
    boolean shouldRecycleViewType(int) -> b
    void clear() -> b
    void fillActiveViews(int,int) -> a
    android.view.View getActiveView(int) -> c
    android.view.View getTransientStateView(int) -> d
    void clearTransientStateViews() -> c
    android.view.View getScrapView(int) -> e
    void addScrapView(android.view.View,int) -> a
    void removeSkippedScrap() -> d
    void scrapActiveViews() -> e
    void pruneScrapViews() -> f
    void setCacheColorHint(int) -> f
    void access$1(com.feytuo.listviewonload.ZrcAbsListView$RecycleBin,com.feytuo.listviewonload.ZrcAbsListView$RecyclerListener) -> a
com.feytuo.listviewonload.ZrcAbsListView$RecyclerListener -> com.feytuo.listviewonload.v:
    void onMovedToScrapHeap(android.view.View) -> a
com.feytuo.listviewonload.ZrcAbsListView$SavedState -> com.feytuo.listviewonload.ZrcAbsListView$SavedState:
    int mFirstPosition -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
    void access$1(com.feytuo.listviewonload.ZrcAbsListView$SavedState,int) -> a
    int access$2(com.feytuo.listviewonload.ZrcAbsListView$SavedState) -> a
com.feytuo.listviewonload.ZrcAbsListView$SavedState$1 -> com.feytuo.listviewonload.w:
    com.feytuo.listviewonload.ZrcAbsListView$SavedState createFromParcel(android.os.Parcel) -> a
    com.feytuo.listviewonload.ZrcAbsListView$SavedState[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.feytuo.listviewonload.ZrcAbsListView$WindowRunnnable -> com.feytuo.listviewonload.x:
    int mOriginalAttachCount -> a
    com.feytuo.listviewonload.ZrcAbsListView this$0 -> c
    void rememberWindowAttachCount() -> a
    boolean sameWindow() -> b
com.feytuo.listviewonload.ZrcAdapterView -> com.feytuo.listviewonload.ZrcAdapterView:
    int mFirstPosition -> E
    int mFirstTop -> F
    boolean mInLayout -> G
    com.feytuo.listviewonload.ZrcListView$OnItemClickListener mOnItemClickListener -> H
    com.feytuo.listviewonload.ZrcListView$OnItemLongClickListener mOnItemLongClickListener -> I
    boolean mDataChanged -> J
    android.view.View mEmptyView -> a
    int mItemCount -> K
    int mOldItemCount -> L
    boolean mDesiredFocusableState -> M
    boolean mDesiredFocusableInTouchModeState -> N
    boolean mBlockLayoutRequests -> O
    void setOnItemClickListener(com.feytuo.listviewonload.ZrcListView$OnItemClickListener) -> setOnItemClickListener
    com.feytuo.listviewonload.ZrcListView$OnItemClickListener getOnItemClickListener() -> getOnItemClickListener
    boolean performItemClick(android.view.View,int,long) -> a
    void setOnItemLongClickListener(com.feytuo.listviewonload.ZrcListView$OnItemLongClickListener) -> setOnItemLongClickListener
    com.feytuo.listviewonload.ZrcListView$OnItemLongClickListener getOnItemLongClickListener() -> getOnItemLongClickListener
    android.widget.Adapter getAdapter() -> getAdapter
    void setAdapter(android.widget.Adapter) -> setAdapter
    void addView(android.view.View) -> addView
    void addView(android.view.View,int) -> addView
    void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    void removeViewAt(int) -> removeViewAt
    void removeAllViews() -> removeAllViews
    int getCount() -> getCount
    int getFirstVisiblePosition() -> getFirstVisiblePosition
    int getLastVisiblePosition() -> getLastVisiblePosition
    void setEmptyView(android.view.View) -> setEmptyView
    android.view.View getEmptyView() -> getEmptyView
    void setFocusable(boolean) -> setFocusable
    void setFocusableInTouchMode(boolean) -> setFocusableInTouchMode
    void checkFocus() -> n
    void updateEmptyStatus(boolean) -> a
    void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean canAnimate() -> canAnimate
    boolean isSupportHardwareAccelerated() -> o
com.feytuo.listviewonload.ZrcAdapterView$AdapterDataSetObserver -> com.feytuo.listviewonload.y:
    com.feytuo.listviewonload.ZrcAdapterView this$0 -> b
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.feytuo.listviewonload.ZrcListView -> com.feytuo.listviewonload.ZrcListView:
    java.util.ArrayList mHeaderViewInfos -> R
    java.util.ArrayList mFooterViewInfos -> S
    android.graphics.drawable.Drawable mDivider -> P
    int mDividerHeight -> Q
    boolean mIsCacheColorOpaque -> T
    boolean mDividerIsOpaque -> U
    boolean mHeaderDividersEnabled -> V
    boolean mFooterDividersEnabled -> W
    boolean mAreAllItemsSelectable -> Z
    boolean mItemsCanFocus -> aa
    android.graphics.Rect mTempRect -> ab
    android.graphics.Paint mDividerPaint -> ac
    int mItemAnimForTopIn -> ad
    int mItemAnimForBottomIn -> ae
    int getMaxScrollAmount() -> getMaxScrollAmount
    void adjustViewsUp() -> q
    void addHeaderView(android.view.View,java.lang.Object,boolean) -> a
    void addHeaderView(android.view.View) -> a
    int getHeaderViewsCount() -> getHeaderViewsCount
    int getFooterViewsCount() -> getFooterViewsCount
    android.widget.ListAdapter getAdapter() -> getAdapter
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void resetList() -> b
    void clearRecycledState(java.util.ArrayList) -> a
    boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    void fillGap(boolean) -> a
    void fillDown(int,int,boolean) -> a
    void fillUp(int,int,boolean) -> b
    void fillFromTop(int) -> d
    void onMeasure(int,int) -> onMeasure
    void measureScrapChild(android.view.View,int,int) -> a
    boolean recycleOnMeasure() -> p
    int measureHeightOfChildren(int,int,int,int,int) -> a
    int findMotionRow(int) -> c
    void layoutChildren() -> c
    android.view.View makeAndAddView(int,int,boolean,int,boolean) -> a
    void setupChild(android.view.View,int,int,boolean,int,boolean,boolean) -> a
    boolean canAnimate() -> canAnimate
    void scrollListItemsBy(int) -> e
    android.view.View addViewAbove(android.view.View,int) -> a
    android.view.View addViewBelow(android.view.View,int) -> b
    void setItemsCanFocus(boolean) -> setItemsCanFocus
    boolean getItemsCanFocus() -> getItemsCanFocus
    boolean isOpaque() -> isOpaque
    void setCacheColorHint(int) -> setCacheColorHint
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void drawDivider(android.graphics.Canvas,android.graphics.Rect,int) -> a
    android.graphics.drawable.Drawable getDivider() -> getDivider
    void setDivider(android.graphics.drawable.Drawable) -> setDivider
    int getDividerHeight() -> getDividerHeight
    void setDividerHeight(int) -> setDividerHeight
    void setHeaderDividersEnabled(boolean) -> setHeaderDividersEnabled
    void setFooterDividersEnabled(boolean) -> setFooterDividersEnabled
    void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    void onFinishInflate() -> onFinishInflate
    void setItemAnimForTopIn(int) -> setItemAnimForTopIn
    void setItemAnimForBottomIn(int) -> setItemAnimForBottomIn
    void setSelection(int) -> setSelection
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void setRefreshFail(java.lang.String) -> setRefreshFail
    void removeAllViews() -> removeAllViews
    void stopLoadMore() -> l
    void onTouchModeChanged(boolean) -> onTouchModeChanged
    void setLoadMoreSuccess() -> k
    void setOnItemLongClickListener(com.feytuo.listviewonload.ZrcListView$OnItemLongClickListener) -> setOnItemLongClickListener
    void setFocusableInTouchMode(boolean) -> setFocusableInTouchMode
    void setOnItemClickListener(com.feytuo.listviewonload.ZrcListView$OnItemClickListener) -> setOnItemClickListener
    android.view.View getEmptyView() -> getEmptyView
    void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    void setHeadable(com.feytuo.listviewonload.Headable) -> setHeadable
    void setScrollY(int) -> setScrollY
    void setSelector(android.graphics.drawable.Drawable) -> setSelector
    void setSelector(int) -> setSelector
    boolean performItemClick(android.view.View,int,long) -> a
    void removeViewAt(int) -> removeViewAt
    int getTranscriptMode() -> getTranscriptMode
    int getFirstVisiblePosition() -> getFirstVisiblePosition
    int getLastVisiblePosition() -> getLastVisiblePosition
    int getListPaddingBottom() -> getListPaddingBottom
    int getListPaddingRight() -> getListPaddingRight
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void addTouchables(java.util.ArrayList) -> addTouchables
    int pointToPosition(int,int) -> a
    void setSmoothScrollbarEnabled(boolean) -> setSmoothScrollbarEnabled
    void setOnScrollListener(com.feytuo.listviewonload.ZrcListView$OnScrollListener) -> setOnScrollListener
    com.feytuo.listviewonload.Headable getHeadable() -> getHeadable
    void removeView(android.view.View) -> removeView
    void getFocusedRect(android.graphics.Rect) -> getFocusedRect
    android.graphics.drawable.Drawable getSelector() -> getSelector
    void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    int getListPaddingTop() -> getListPaddingTop
    boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    int getCount() -> getCount
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void onCancelPendingInputEvents() -> onCancelPendingInputEvents
    void offsetChildrenTopAndBottom(int) -> b
    void setDrawSelectorOnTop(boolean) -> setDrawSelectorOnTop
    void setFootable(com.feytuo.listviewonload.Footable) -> setFootable
    void setFirstTopOffset(int) -> setFirstTopOffset
    void setFriction(float) -> setFriction
    void setVelocityScale(float) -> setVelocityScale
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setEmptyView(android.view.View) -> setEmptyView
    void requestLayout() -> requestLayout
    void refresh() -> m
    void setOnScrollStateListener(com.feytuo.listviewonload.ZrcListView$OnScrollStateListener) -> setOnScrollStateListener
    void setFocusable(boolean) -> setFocusable
    void setTranscriptMode(int) -> setTranscriptMode
    void setRefreshSuccess(java.lang.String) -> setRefreshSuccess
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    void setOnRefreshStartListener(com.feytuo.listviewonload.ZrcListView$OnStartListener) -> setOnRefreshStartListener
    void setOnLoadMoreStartListener(com.feytuo.listviewonload.ZrcListView$OnStartListener) -> setOnLoadMoreStartListener
    int getListPaddingLeft() -> getListPaddingLeft
    android.widget.Adapter getAdapter() -> getAdapter
    com.feytuo.listviewonload.Footable getFootable() -> getFootable
    void setLastBottomOffset(int) -> setLastBottomOffset
    int getSolidColor() -> getSolidColor
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    void addView(android.view.View,int) -> addView
    void addView(android.view.View) -> addView
    int getCacheColorHint() -> getCacheColorHint
    void startLoadMore() -> j
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    com.feytuo.listviewonload.ZrcAbsListView$LayoutParams generateLayoutParams(android.util.AttributeSet) -> a
com.feytuo.listviewonload.ZrcListView$FixedViewInfo -> com.feytuo.listviewonload.z:
    android.view.View view -> a
    java.lang.Object data -> b
    boolean isSelectable -> c
    com.feytuo.listviewonload.ZrcListView this$0 -> d
com.feytuo.listviewonload.ZrcListView$OnItemClickListener -> com.feytuo.listviewonload.aa:
    void onItemClick(com.feytuo.listviewonload.ZrcListView,android.view.View,int,long) -> a
com.feytuo.listviewonload.ZrcListView$OnItemLongClickListener -> com.feytuo.listviewonload.ab:
com.feytuo.listviewonload.ZrcListView$OnScrollListener -> com.feytuo.listviewonload.ac:
    void onScrollStateChanged(com.feytuo.listviewonload.ZrcAbsListView,int) -> a
    void onScroll(com.feytuo.listviewonload.ZrcAbsListView,int,int,int) -> a
com.feytuo.listviewonload.ZrcListView$OnScrollStateListener -> com.feytuo.listviewonload.ad:
    void onChange(int) -> a
com.feytuo.listviewonload.ZrcListView$OnStartListener -> com.feytuo.listviewonload.ae:
    void onStart() -> a
com.novell.sasl.client.DigestChallenge -> com.a.a.a.a:
    java.util.ArrayList m_realms -> a
    java.lang.String m_nonce -> b
    int m_qop -> c
    boolean m_staleFlag -> d
    int m_maxBuf -> e
    java.lang.String m_characterSet -> f
    java.lang.String m_algorithm -> g
    int m_cipherOptions -> h
    void checkSemantics(com.novell.sasl.client.DirectiveList) -> a
    void handleNonce(com.novell.sasl.client.ParsedDirective) -> a
    void handleRealm(com.novell.sasl.client.ParsedDirective) -> b
    void handleQop(com.novell.sasl.client.ParsedDirective) -> c
    void handleMaxbuf(com.novell.sasl.client.ParsedDirective) -> d
    void handleCharset(com.novell.sasl.client.ParsedDirective) -> e
    void handleAlgorithm(com.novell.sasl.client.ParsedDirective) -> f
    void handleCipher(com.novell.sasl.client.ParsedDirective) -> g
    void handleStale(com.novell.sasl.client.ParsedDirective) -> h
    java.util.ArrayList getRealms() -> a
    java.lang.String getNonce() -> b
    int getQop() -> c
    java.lang.String getAlgorithm() -> d
com.novell.sasl.client.DigestMD5SaslClient -> com.a.a.a.b:
    java.lang.String m_authorizationId -> a
    java.lang.String m_protocol -> b
    java.lang.String m_serverName -> c
    java.util.Map m_props -> d
    org.apache.harmony.javax.security.auth.callback.CallbackHandler m_cbh -> e
    int m_state -> f
    java.lang.String m_qopValue -> g
    char[] m_HA1 -> h
    java.lang.String m_digestURI -> i
    com.novell.sasl.client.DigestChallenge m_dc -> j
    java.lang.String m_clientNonce -> k
    java.lang.String m_realm -> l
    java.lang.String m_name -> m
    org.apache.harmony.javax.security.sasl.SaslClient getClient(java.lang.String,java.lang.String,java.lang.String,java.util.Map,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> a
    boolean hasInitialResponse() -> hasInitialResponse
    boolean isComplete() -> isComplete
    byte[] unwrap(byte[],int,int) -> unwrap
    byte[] wrap(byte[],int,int) -> wrap
    java.lang.Object getNegotiatedProperty(java.lang.String) -> getNegotiatedProperty
    void dispose() -> dispose
    byte[] evaluateChallenge(byte[]) -> evaluateChallenge
    char[] convertToHex(byte[]) -> a
    char[] DigestCalcHA1(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    char[] DigestCalcResponse(char[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean) -> a
    java.lang.String createDigestResponse(byte[]) -> c
    boolean checkServerResponseAuth(byte[]) -> b
    char getHexChar(byte) -> a
    java.lang.String getClientNonce() -> a
    java.lang.String getMechanismName() -> getMechanismName
com.novell.sasl.client.DirectiveList -> com.a.a.a.c:
    int m_curPos -> a
    int m_errorPos -> b
    java.lang.String m_directives -> c
    int m_state -> d
    java.util.ArrayList m_directiveList -> e
    int m_scanStart -> f
    void parseDirectives() -> a
    boolean isValidTokenChar(char) -> a
    boolean isWhiteSpace(char) -> b
    void addDirective(java.lang.String,boolean) -> a
    java.util.Iterator getIterator() -> b
com.novell.sasl.client.ExternalSaslClient -> com.a.a.a.d:
    java.lang.String m_authorizationId -> a
    java.lang.String m_protocol -> b
    java.lang.String m_serverName -> c
    java.util.Map m_props -> d
    org.apache.harmony.javax.security.auth.callback.CallbackHandler m_cbh -> e
    int m_state -> f
    org.apache.harmony.javax.security.sasl.SaslClient getClient(java.lang.String,java.lang.String,java.lang.String,java.util.Map,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> a
    boolean hasInitialResponse() -> hasInitialResponse
    boolean isComplete() -> isComplete
    byte[] unwrap(byte[],int,int) -> unwrap
    byte[] wrap(byte[],int,int) -> wrap
    java.lang.Object getNegotiatedProperty(java.lang.String) -> getNegotiatedProperty
    void dispose() -> dispose
    byte[] evaluateChallenge(byte[]) -> evaluateChallenge
    java.lang.String getMechanismName() -> getMechanismName
com.novell.sasl.client.ParsedDirective -> com.a.a.a.e:
    int m_valueType -> a
    java.lang.String m_name -> b
    java.lang.String m_value -> c
    java.lang.String getValue() -> a
    java.lang.String getName() -> b
com.novell.sasl.client.ResponseAuth -> com.a.a.a.f:
    java.lang.String m_responseValue -> a
    void checkSemantics(com.novell.sasl.client.DirectiveList) -> a
    java.lang.String getResponseValue() -> a
com.novell.sasl.client.TokenParser -> com.a.a.a.g:
    int m_curPos -> a
    int m_scanStart -> b
    int m_state -> c
    java.lang.String m_tokens -> d
    java.lang.String parseToken() -> a
    boolean isValidTokenChar(char) -> a
    boolean isWhiteSpace(char) -> b
com.sina.sso.RemoteSSO -> com.sina.sso.RemoteSSO:
    java.lang.String getPackageName() -> getPackageName
    java.lang.String getActivityName() -> getActivityName
    java.lang.String getLoginUserName() -> getLoginUserName
com.sina.sso.RemoteSSO$Stub -> com.sina.sso.RemoteSSO$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_getPackageName -> TRANSACTION_getPackageName
    int TRANSACTION_getActivityName -> TRANSACTION_getActivityName
    int TRANSACTION_getLoginUserName -> TRANSACTION_getLoginUserName
    com.sina.sso.RemoteSSO asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.sina.sso.RemoteSSO$Stub$Proxy -> com.sina.sso.RemoteSSO$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    java.lang.String getPackageName() -> getPackageName
    java.lang.String getActivityName() -> getActivityName
    java.lang.String getLoginUserName() -> getLoginUserName
com.sina.weibo.sdk.BuildConfig -> com.sina.weibo.sdk.BuildConfig:
    boolean DEBUG -> DEBUG
com.sina.weibo.sdk.R -> com.sina.weibo.sdk.R:
com.sina.weibo.sdk.R$color -> com.sina.weibo.sdk.R$color:
    int com_sina_weibo_sdk_blue -> com_sina_weibo_sdk_blue
    int com_sina_weibo_sdk_loginview_text_color -> com_sina_weibo_sdk_loginview_text_color
com.sina.weibo.sdk.R$dimen -> com.sina.weibo.sdk.R$dimen:
    int activity_horizontal_margin -> activity_horizontal_margin
    int activity_vertical_margin -> activity_vertical_margin
    int com_sina_weibo_sdk_loginview_compound_drawable_padding -> com_sina_weibo_sdk_loginview_compound_drawable_padding
    int com_sina_weibo_sdk_loginview_padding -> com_sina_weibo_sdk_loginview_padding
    int com_sina_weibo_sdk_loginview_padding_bottom -> com_sina_weibo_sdk_loginview_padding_bottom
    int com_sina_weibo_sdk_loginview_padding_left -> com_sina_weibo_sdk_loginview_padding_left
    int com_sina_weibo_sdk_loginview_padding_right -> com_sina_weibo_sdk_loginview_padding_right
    int com_sina_weibo_sdk_loginview_padding_top -> com_sina_weibo_sdk_loginview_padding_top
    int com_sina_weibo_sdk_loginview_text_size -> com_sina_weibo_sdk_loginview_text_size
com.sina.weibo.sdk.R$drawable -> com.sina.weibo.sdk.R$drawable:
    int com_sina_weibo_sdk_button_blue -> com_sina_weibo_sdk_button_blue
    int com_sina_weibo_sdk_button_grey -> com_sina_weibo_sdk_button_grey
    int com_sina_weibo_sdk_login_button_with_account_text -> com_sina_weibo_sdk_login_button_with_account_text
    int com_sina_weibo_sdk_login_button_with_frame_logo -> com_sina_weibo_sdk_login_button_with_frame_logo
    int com_sina_weibo_sdk_login_button_with_original_logo -> com_sina_weibo_sdk_login_button_with_original_logo
    int ic_com_sina_weibo_sdk_button_blue_focused -> ic_com_sina_weibo_sdk_button_blue_focused
    int ic_com_sina_weibo_sdk_button_blue_normal -> ic_com_sina_weibo_sdk_button_blue_normal
    int ic_com_sina_weibo_sdk_button_blue_pressed -> ic_com_sina_weibo_sdk_button_blue_pressed
    int ic_com_sina_weibo_sdk_button_grey_focused -> ic_com_sina_weibo_sdk_button_grey_focused
    int ic_com_sina_weibo_sdk_button_grey_normal -> ic_com_sina_weibo_sdk_button_grey_normal
    int ic_com_sina_weibo_sdk_button_grey_pressed -> ic_com_sina_weibo_sdk_button_grey_pressed
    int ic_com_sina_weibo_sdk_login_button_with_frame_logo_focused -> ic_com_sina_weibo_sdk_login_button_with_frame_logo_focused
    int ic_com_sina_weibo_sdk_login_button_with_frame_logo_normal -> ic_com_sina_weibo_sdk_login_button_with_frame_logo_normal
    int ic_com_sina_weibo_sdk_login_button_with_frame_logo_pressed -> ic_com_sina_weibo_sdk_login_button_with_frame_logo_pressed
    int ic_com_sina_weibo_sdk_login_with_account_text_focused -> ic_com_sina_weibo_sdk_login_with_account_text_focused
    int ic_com_sina_weibo_sdk_login_with_account_text_normal -> ic_com_sina_weibo_sdk_login_with_account_text_normal
    int ic_com_sina_weibo_sdk_login_with_account_text_pressed -> ic_com_sina_weibo_sdk_login_with_account_text_pressed
    int ic_com_sina_weibo_sdk_login_with_text -> ic_com_sina_weibo_sdk_login_with_text
    int ic_com_sina_weibo_sdk_logo -> ic_com_sina_weibo_sdk_logo
com.sina.weibo.sdk.R$string -> com.sina.weibo.sdk.R$string:
    int com_sina_weibo_sdk_login -> com_sina_weibo_sdk_login
    int com_sina_weibo_sdk_login_with_weibo_account -> com_sina_weibo_sdk_login_with_weibo_account
    int com_sina_weibo_sdk_logout -> com_sina_weibo_sdk_logout
com.sina.weibo.sdk.R$style -> com.sina.weibo.sdk.R$style:
    int AppBaseTheme -> AppBaseTheme
    int AppTheme -> AppTheme
    int com_sina_weibo_sdk_loginview_default_style -> com_sina_weibo_sdk_loginview_default_style
    int com_sina_weibo_sdk_loginview_silver_style -> com_sina_weibo_sdk_loginview_silver_style
com.sina.weibo.sdk.api.BaseMediaObject -> com.sina.weibo.sdk.api.BaseMediaObject:
    int MEDIA_TYPE_TEXT -> MEDIA_TYPE_TEXT
    int MEDIA_TYPE_IMAGE -> MEDIA_TYPE_IMAGE
    int MEDIA_TYPE_MUSIC -> MEDIA_TYPE_MUSIC
    int MEDIA_TYPE_VIDEO -> MEDIA_TYPE_VIDEO
    int MEDIA_TYPE_WEBPAGE -> MEDIA_TYPE_WEBPAGE
    int MEDIA_TYPE_VOICE -> MEDIA_TYPE_VOICE
    int MEDIA_TYPE_CMD -> MEDIA_TYPE_CMD
    java.lang.String actionUrl -> actionUrl
    java.lang.String schema -> schema
    java.lang.String identify -> identify
    java.lang.String title -> title
    java.lang.String description -> description
    byte[] thumbData -> thumbData
    void setThumbImage(android.graphics.Bitmap) -> setThumbImage
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int getObjType() -> getObjType
    boolean checkArgs() -> checkArgs
    com.sina.weibo.sdk.api.BaseMediaObject toExtraMediaObject(java.lang.String) -> toExtraMediaObject
    java.lang.String toExtraMediaString() -> toExtraMediaString
com.sina.weibo.sdk.api.CmdObject -> com.sina.weibo.sdk.api.CmdObject:
    java.lang.String cmd -> cmd
    java.lang.String CMD_HOME -> CMD_HOME
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean checkArgs() -> checkArgs
    int getObjType() -> getObjType
    com.sina.weibo.sdk.api.BaseMediaObject toExtraMediaObject(java.lang.String) -> toExtraMediaObject
    java.lang.String toExtraMediaString() -> toExtraMediaString
com.sina.weibo.sdk.api.CmdObject$1 -> com.sina.weibo.sdk.api.CmdObject$1:
    com.sina.weibo.sdk.api.CmdObject createFromParcel(android.os.Parcel) -> createFromParcel
    com.sina.weibo.sdk.api.CmdObject[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.sina.weibo.sdk.api.ImageObject -> com.sina.weibo.sdk.api.ImageObject:
    int DATA_SIZE -> DATA_SIZE
    byte[] imageData -> imageData
    java.lang.String imagePath -> imagePath
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void setImageObject(android.graphics.Bitmap) -> setImageObject
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean checkArgs() -> checkArgs
    int getObjType() -> getObjType
    com.sina.weibo.sdk.api.BaseMediaObject toExtraMediaObject(java.lang.String) -> toExtraMediaObject
    java.lang.String toExtraMediaString() -> toExtraMediaString
com.sina.weibo.sdk.api.ImageObject$1 -> com.sina.weibo.sdk.api.ImageObject$1:
    com.sina.weibo.sdk.api.ImageObject createFromParcel(android.os.Parcel) -> createFromParcel
    com.sina.weibo.sdk.api.ImageObject[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.sina.weibo.sdk.api.MusicObject -> com.sina.weibo.sdk.api.MusicObject:
    java.lang.String EXTRA_KEY_DEFAULTTEXT -> EXTRA_KEY_DEFAULTTEXT
    java.lang.String defaultText -> defaultText
    java.lang.String h5Url -> h5Url
    java.lang.String dataUrl -> dataUrl
    java.lang.String dataHdUrl -> dataHdUrl
    int duration -> duration
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean checkArgs() -> checkArgs
    int getObjType() -> getObjType
    com.sina.weibo.sdk.api.BaseMediaObject toExtraMediaObject(java.lang.String) -> toExtraMediaObject
    java.lang.String toExtraMediaString() -> toExtraMediaString
com.sina.weibo.sdk.api.MusicObject$1 -> com.sina.weibo.sdk.api.MusicObject$1:
    com.sina.weibo.sdk.api.MusicObject createFromParcel(android.os.Parcel) -> createFromParcel
    com.sina.weibo.sdk.api.MusicObject[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.sina.weibo.sdk.api.TextObject -> com.sina.weibo.sdk.api.TextObject:
    java.lang.String text -> text
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean checkArgs() -> checkArgs
    int getObjType() -> getObjType
    com.sina.weibo.sdk.api.BaseMediaObject toExtraMediaObject(java.lang.String) -> toExtraMediaObject
    java.lang.String toExtraMediaString() -> toExtraMediaString
com.sina.weibo.sdk.api.TextObject$1 -> com.sina.weibo.sdk.api.TextObject$1:
    com.sina.weibo.sdk.api.TextObject createFromParcel(android.os.Parcel) -> createFromParcel
    com.sina.weibo.sdk.api.TextObject[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.sina.weibo.sdk.api.VideoObject -> com.sina.weibo.sdk.api.VideoObject:
    java.lang.String EXTRA_KEY_DEFAULTTEXT -> EXTRA_KEY_DEFAULTTEXT
    java.lang.String defaultText -> defaultText
    java.lang.String h5Url -> h5Url
    java.lang.String dataUrl -> dataUrl
    java.lang.String dataHdUrl -> dataHdUrl
    int duration -> duration
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean checkArgs() -> checkArgs
    int getObjType() -> getObjType
    com.sina.weibo.sdk.api.BaseMediaObject toExtraMediaObject(java.lang.String) -> toExtraMediaObject
    java.lang.String toExtraMediaString() -> toExtraMediaString
com.sina.weibo.sdk.api.VideoObject$1 -> com.sina.weibo.sdk.api.VideoObject$1:
    com.sina.weibo.sdk.api.VideoObject createFromParcel(android.os.Parcel) -> createFromParcel
    com.sina.weibo.sdk.api.VideoObject[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.sina.weibo.sdk.api.VoiceObject -> com.sina.weibo.sdk.api.VoiceObject:
    java.lang.String EXTRA_KEY_DEFAULTTEXT -> EXTRA_KEY_DEFAULTTEXT
    java.lang.String defaultText -> defaultText
    java.lang.String h5Url -> h5Url
    java.lang.String dataUrl -> dataUrl
    java.lang.String dataHdUrl -> dataHdUrl
    int duration -> duration
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean checkArgs() -> checkArgs
    int getObjType() -> getObjType
    com.sina.weibo.sdk.api.BaseMediaObject toExtraMediaObject(java.lang.String) -> toExtraMediaObject
    java.lang.String toExtraMediaString() -> toExtraMediaString
com.sina.weibo.sdk.api.VoiceObject$1 -> com.sina.weibo.sdk.api.VoiceObject$1:
    com.sina.weibo.sdk.api.VoiceObject createFromParcel(android.os.Parcel) -> createFromParcel
    com.sina.weibo.sdk.api.VoiceObject[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.sina.weibo.sdk.api.WebpageObject -> com.sina.weibo.sdk.api.WebpageObject:
    java.lang.String EXTRA_KEY_DEFAULTTEXT -> EXTRA_KEY_DEFAULTTEXT
    java.lang.String defaultText -> defaultText
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean checkArgs() -> checkArgs
    int getObjType() -> getObjType
    com.sina.weibo.sdk.api.BaseMediaObject toExtraMediaObject(java.lang.String) -> toExtraMediaObject
    java.lang.String toExtraMediaString() -> toExtraMediaString
com.sina.weibo.sdk.api.WebpageObject$1 -> com.sina.weibo.sdk.api.WebpageObject$1:
    com.sina.weibo.sdk.api.WebpageObject createFromParcel(android.os.Parcel) -> createFromParcel
    com.sina.weibo.sdk.api.WebpageObject[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.sina.weibo.sdk.api.WeiboMessage -> com.sina.weibo.sdk.api.WeiboMessage:
    com.sina.weibo.sdk.api.BaseMediaObject mediaObject -> mediaObject
    android.os.Bundle toBundle(android.os.Bundle) -> toBundle
    com.sina.weibo.sdk.api.WeiboMessage toObject(android.os.Bundle) -> toObject
    boolean checkArgs() -> checkArgs
com.sina.weibo.sdk.api.WeiboMultiMessage -> com.sina.weibo.sdk.api.WeiboMultiMessage:
    java.lang.String TAG -> TAG
    com.sina.weibo.sdk.api.TextObject textObject -> textObject
    com.sina.weibo.sdk.api.ImageObject imageObject -> imageObject
    com.sina.weibo.sdk.api.BaseMediaObject mediaObject -> mediaObject
    android.os.Bundle toBundle(android.os.Bundle) -> toBundle
    com.sina.weibo.sdk.api.WeiboMultiMessage toObject(android.os.Bundle) -> toObject
    boolean checkArgs() -> checkArgs
com.sina.weibo.sdk.api.share.ApiUtils -> com.sina.weibo.sdk.api.share.ApiUtils:
    java.lang.String TAG -> TAG
    int BUILD_INT -> BUILD_INT
    int BUILD_INT_VER_2_2 -> BUILD_INT_VER_2_2
    int BUILD_INT_VER_2_3 -> BUILD_INT_VER_2_3
    int BUILD_INT_VER_2_5 -> BUILD_INT_VER_2_5
    java.lang.String WEIBO_IDENTITY_ACTION -> WEIBO_IDENTITY_ACTION
    android.net.Uri WEIBO_NAME_URI -> WEIBO_NAME_URI
    java.lang.String WEIBO_SIGN -> WEIBO_SIGN
    boolean isWeiboAppSupportAPI(int) -> isWeiboAppSupportAPI
    com.sina.weibo.sdk.api.share.ApiUtils$WeiboInfo queryWeiboInfoByPackage(android.content.Context,java.lang.String) -> queryWeiboInfoByPackage
    com.sina.weibo.sdk.api.share.ApiUtils$WeiboInfo queryWeiboInfo(android.content.Context) -> queryWeiboInfo
    boolean validateWeiboSign(android.content.Context,java.lang.String) -> validateWeiboSign
    boolean containSign(android.content.pm.Signature[],java.lang.String) -> containSign
    com.sina.weibo.sdk.api.share.ApiUtils$WeiboInfo queryWeiboInfoByProvider(android.content.Context) -> queryWeiboInfoByProvider
    com.sina.weibo.sdk.api.share.ApiUtils$WeiboInfo queryWeiboInfoByFile(android.content.Context) -> queryWeiboInfoByFile
    com.sina.weibo.sdk.api.share.ApiUtils$WeiboInfo queryWeiboInfoByAsset(android.content.Context,java.lang.String) -> queryWeiboInfoByAsset
com.sina.weibo.sdk.api.share.ApiUtils$WeiboInfo -> com.sina.weibo.sdk.api.share.ApiUtils$WeiboInfo:
    java.lang.String packageName -> packageName
    int supportApi -> supportApi
    java.lang.String toString() -> toString
com.sina.weibo.sdk.api.share.Base -> com.sina.weibo.sdk.api.share.Base:
    java.lang.String transaction -> transaction
    void toBundle(android.os.Bundle) -> toBundle
    void fromBundle(android.os.Bundle) -> fromBundle
    int getType() -> getType
    boolean check(android.content.Context,com.sina.weibo.sdk.api.share.VersionCheckHandler) -> check
com.sina.weibo.sdk.api.share.BaseRequest -> com.sina.weibo.sdk.api.share.BaseRequest:
    java.lang.String packageName -> packageName
    void toBundle(android.os.Bundle) -> toBundle
    void fromBundle(android.os.Bundle) -> fromBundle
com.sina.weibo.sdk.api.share.BaseResponse -> com.sina.weibo.sdk.api.share.BaseResponse:
    int errCode -> errCode
    java.lang.String errMsg -> errMsg
    java.lang.String reqPackageName -> reqPackageName
    void toBundle(android.os.Bundle) -> toBundle
    void fromBundle(android.os.Bundle) -> fromBundle
com.sina.weibo.sdk.api.share.IVersionCheckHandler -> com.sina.weibo.sdk.api.share.IVersionCheckHandler:
    boolean check(android.content.Context,com.sina.weibo.sdk.api.WeiboMessage) -> check
    boolean check(android.content.Context,com.sina.weibo.sdk.api.WeiboMultiMessage) -> check
com.sina.weibo.sdk.api.share.IWeiboDownloadListener -> com.sina.weibo.sdk.api.share.IWeiboDownloadListener:
    void onCancel() -> onCancel
com.sina.weibo.sdk.api.share.IWeiboHandler -> com.sina.weibo.sdk.api.share.IWeiboHandler:
com.sina.weibo.sdk.api.share.IWeiboHandler$Request -> com.sina.weibo.sdk.api.share.IWeiboHandler$Request:
    void onRequest(com.sina.weibo.sdk.api.share.BaseRequest) -> onRequest
com.sina.weibo.sdk.api.share.IWeiboHandler$Response -> com.sina.weibo.sdk.api.share.IWeiboHandler$Response:
    void onResponse(com.sina.weibo.sdk.api.share.BaseResponse) -> onResponse
com.sina.weibo.sdk.api.share.IWeiboShareAPI -> com.sina.weibo.sdk.api.share.IWeiboShareAPI:
    boolean isWeiboAppInstalled() -> isWeiboAppInstalled
    boolean isWeiboAppSupportAPI() -> isWeiboAppSupportAPI
    int getWeiboAppSupportAPI() -> getWeiboAppSupportAPI
    boolean registerApp() -> registerApp
    boolean handleWeiboResponse(android.content.Intent,com.sina.weibo.sdk.api.share.IWeiboHandler$Response) -> handleWeiboResponse
    boolean handleWeiboRequest(android.content.Intent,com.sina.weibo.sdk.api.share.IWeiboHandler$Request) -> handleWeiboRequest
    boolean launchWeibo() -> launchWeibo
    boolean sendRequest(com.sina.weibo.sdk.api.share.BaseRequest) -> sendRequest
    boolean sendResponse(com.sina.weibo.sdk.api.share.BaseResponse) -> sendResponse
    void registerWeiboDownloadListener(com.sina.weibo.sdk.api.share.IWeiboDownloadListener) -> registerWeiboDownloadListener
    boolean checkEnvironment(boolean) -> checkEnvironment
com.sina.weibo.sdk.api.share.ProvideMessageForWeiboRequest -> com.sina.weibo.sdk.api.share.ProvideMessageForWeiboRequest:
    int getType() -> getType
    boolean check(android.content.Context,com.sina.weibo.sdk.api.share.VersionCheckHandler) -> check
com.sina.weibo.sdk.api.share.ProvideMessageForWeiboResponse -> com.sina.weibo.sdk.api.share.ProvideMessageForWeiboResponse:
    com.sina.weibo.sdk.api.WeiboMessage message -> message
    int getType() -> getType
    void fromBundle(android.os.Bundle) -> fromBundle
    void toBundle(android.os.Bundle) -> toBundle
    boolean check(android.content.Context,com.sina.weibo.sdk.api.share.VersionCheckHandler) -> check
com.sina.weibo.sdk.api.share.ProvideMultiMessageForWeiboResponse -> com.sina.weibo.sdk.api.share.ProvideMultiMessageForWeiboResponse:
    com.sina.weibo.sdk.api.WeiboMultiMessage multiMessage -> multiMessage
    int getType() -> getType
    void fromBundle(android.os.Bundle) -> fromBundle
    void toBundle(android.os.Bundle) -> toBundle
    boolean check(android.content.Context,com.sina.weibo.sdk.api.share.VersionCheckHandler) -> check
com.sina.weibo.sdk.api.share.SendMessageToWeiboRequest -> com.sina.weibo.sdk.api.share.SendMessageToWeiboRequest:
    com.sina.weibo.sdk.api.WeiboMessage message -> message
    int getType() -> getType
    void fromBundle(android.os.Bundle) -> fromBundle
    void toBundle(android.os.Bundle) -> toBundle
    boolean check(android.content.Context,com.sina.weibo.sdk.api.share.VersionCheckHandler) -> check
com.sina.weibo.sdk.api.share.SendMessageToWeiboResponse -> com.sina.weibo.sdk.api.share.SendMessageToWeiboResponse:
    int getType() -> getType
    boolean check(android.content.Context,com.sina.weibo.sdk.api.share.VersionCheckHandler) -> check
com.sina.weibo.sdk.api.share.SendMultiMessageToWeiboRequest -> com.sina.weibo.sdk.api.share.SendMultiMessageToWeiboRequest:
    com.sina.weibo.sdk.api.WeiboMultiMessage multiMessage -> multiMessage
    int getType() -> getType
    void fromBundle(android.os.Bundle) -> fromBundle
    void toBundle(android.os.Bundle) -> toBundle
    boolean check(android.content.Context,com.sina.weibo.sdk.api.share.VersionCheckHandler) -> check
com.sina.weibo.sdk.api.share.VersionCheckHandler -> com.sina.weibo.sdk.api.share.VersionCheckHandler:
    java.lang.String TAG -> TAG
    java.lang.String mPackageName -> mPackageName
    void setPackageName(java.lang.String) -> setPackageName
    boolean check(android.content.Context,com.sina.weibo.sdk.api.WeiboMessage) -> check
    boolean check(android.content.Context,com.sina.weibo.sdk.api.WeiboMultiMessage) -> check
com.sina.weibo.sdk.api.share.WeiboDownloader -> com.sina.weibo.sdk.api.share.WeiboDownloader:
    java.lang.String TITLE_CHINESS -> TITLE_CHINESS
    java.lang.String PROMPT_CHINESS -> PROMPT_CHINESS
    java.lang.String OK_CHINESS -> OK_CHINESS
    java.lang.String CANCEL_CHINESS -> CANCEL_CHINESS
    java.lang.String TITLE_ENGLISH -> TITLE_ENGLISH
    java.lang.String PROMPT_ENGLISH -> PROMPT_ENGLISH
    java.lang.String OK_ENGLISH -> OK_ENGLISH
    java.lang.String CANCEL_ENGLISH -> CANCEL_ENGLISH
    android.app.Dialog createDownloadConfirmDialog(android.content.Context,com.sina.weibo.sdk.api.share.IWeiboDownloadListener) -> createDownloadConfirmDialog
    void downloadWeibo(android.content.Context) -> downloadWeibo
    void access$0(android.content.Context) -> access$0
com.sina.weibo.sdk.api.share.WeiboDownloader$1 -> com.sina.weibo.sdk.api.share.WeiboDownloader$1:
    android.content.Context val$context -> val$context
    void onClick(android.content.DialogInterface,int) -> onClick
com.sina.weibo.sdk.api.share.WeiboDownloader$2 -> com.sina.weibo.sdk.api.share.WeiboDownloader$2:
    com.sina.weibo.sdk.api.share.IWeiboDownloadListener val$listener -> val$listener
    void onClick(android.content.DialogInterface,int) -> onClick
com.sina.weibo.sdk.api.share.WeiboShareAPIImpl -> com.sina.weibo.sdk.api.share.WeiboShareAPIImpl:
    java.lang.String TAG -> TAG
    android.content.Context mContext -> mContext
    java.lang.String mAppKey -> mAppKey
    com.sina.weibo.sdk.api.share.ApiUtils$WeiboInfo mWeiboInfo -> mWeiboInfo
    boolean mNeedDownloadWeibo -> mNeedDownloadWeibo
    com.sina.weibo.sdk.api.share.IWeiboDownloadListener mDownloadListener -> mDownloadListener
    android.app.Dialog mDownloadConfirmDialog -> mDownloadConfirmDialog
    boolean isWeiboAppInstalled() -> isWeiboAppInstalled
    boolean isWeiboAppSupportAPI() -> isWeiboAppSupportAPI
    int getWeiboAppSupportAPI() -> getWeiboAppSupportAPI
    boolean registerApp() -> registerApp
    boolean handleWeiboResponse(android.content.Intent,com.sina.weibo.sdk.api.share.IWeiboHandler$Response) -> handleWeiboResponse
    boolean handleWeiboRequest(android.content.Intent,com.sina.weibo.sdk.api.share.IWeiboHandler$Request) -> handleWeiboRequest
    boolean launchWeibo() -> launchWeibo
    boolean sendRequest(com.sina.weibo.sdk.api.share.BaseRequest) -> sendRequest
    boolean sendResponse(com.sina.weibo.sdk.api.share.BaseResponse) -> sendResponse
    void registerWeiboDownloadListener(com.sina.weibo.sdk.api.share.IWeiboDownloadListener) -> registerWeiboDownloadListener
    boolean checkEnvironment(boolean) -> checkEnvironment
    boolean launchWeiboActivity(android.app.Activity,java.lang.String,java.lang.String,java.lang.String,android.os.Bundle) -> launchWeiboActivity
    void sendBroadcast(android.content.Context,java.lang.String,java.lang.String,java.lang.String,android.os.Bundle) -> sendBroadcast
com.sina.weibo.sdk.api.share.WeiboShareSDK -> com.sina.weibo.sdk.api.share.WeiboShareSDK:
    com.sina.weibo.sdk.api.share.IWeiboShareAPI createWeiboAPI(android.content.Context,java.lang.String,boolean) -> createWeiboAPI
    com.sina.weibo.sdk.api.share.IWeiboShareAPI createWeiboAPI(android.content.Context,java.lang.String) -> createWeiboAPI
com.sina.weibo.sdk.auth.Oauth2AccessToken -> com.sina.weibo.sdk.auth.Oauth2AccessToken:
    java.lang.String KEY_UID -> KEY_UID
    java.lang.String KEY_ACCESS_TOKEN -> KEY_ACCESS_TOKEN
    java.lang.String KEY_EXPIRES_IN -> KEY_EXPIRES_IN
    java.lang.String KEY_REFRESH_TOKEN -> KEY_REFRESH_TOKEN
    java.lang.String mUid -> mUid
    java.lang.String mAccessToken -> mAccessToken
    java.lang.String mRefreshToken -> mRefreshToken
    long mExpiresTime -> mExpiresTime
    com.sina.weibo.sdk.auth.Oauth2AccessToken parseAccessToken(java.lang.String) -> parseAccessToken
    com.sina.weibo.sdk.auth.Oauth2AccessToken parseAccessToken(android.os.Bundle) -> parseAccessToken
    boolean isSessionValid() -> isSessionValid
    android.os.Bundle toBundle() -> toBundle
    java.lang.String toString() -> toString
    java.lang.String getUid() -> getUid
    void setUid(java.lang.String) -> setUid
    java.lang.String getToken() -> getToken
    void setToken(java.lang.String) -> setToken
    java.lang.String getRefreshToken() -> getRefreshToken
    void setRefreshToken(java.lang.String) -> setRefreshToken
    long getExpiresTime() -> getExpiresTime
    void setExpiresTime(long) -> setExpiresTime
    void setExpiresIn(java.lang.String) -> setExpiresIn
    java.lang.String getString(android.os.Bundle,java.lang.String,java.lang.String) -> getString
com.sina.weibo.sdk.auth.WeiboAuth -> com.sina.weibo.sdk.auth.WeiboAuth:
    java.lang.String TAG -> TAG
    java.lang.String OAUTH2_BASE_URL -> OAUTH2_BASE_URL
    int OBTAIN_AUTH_CODE -> OBTAIN_AUTH_CODE
    int OBTAIN_AUTH_TOKEN -> OBTAIN_AUTH_TOKEN
    android.content.Context mContext -> mContext
    com.sina.weibo.sdk.auth.WeiboAuth$AuthInfo mAuthInfo -> mAuthInfo
    com.sina.weibo.sdk.auth.WeiboAuth$AuthInfo getAuthInfo() -> getAuthInfo
    void setAuthInfo(com.sina.weibo.sdk.auth.WeiboAuth$AuthInfo) -> setAuthInfo
    void anthorize(com.sina.weibo.sdk.auth.WeiboAuthListener) -> anthorize
    void authorize(com.sina.weibo.sdk.auth.WeiboAuthListener,int) -> authorize
    void startDialog(com.sina.weibo.sdk.auth.WeiboAuthListener,int) -> startDialog
com.sina.weibo.sdk.auth.WeiboAuth$AuthInfo -> com.sina.weibo.sdk.auth.WeiboAuth$AuthInfo:
    java.lang.String mAppKey -> mAppKey
    java.lang.String mRedirectUrl -> mRedirectUrl
    java.lang.String mScope -> mScope
    java.lang.String mPackageName -> mPackageName
    java.lang.String mKeyHash -> mKeyHash
    android.os.Bundle mBundle -> mBundle
    java.lang.String getAppKey() -> getAppKey
    java.lang.String getRedirectUrl() -> getRedirectUrl
    java.lang.String getScope() -> getScope
    java.lang.String getPackageName() -> getPackageName
    java.lang.String getKeyHash() -> getKeyHash
    android.os.Bundle getAuthBundle() -> getAuthBundle
    void initAuthBundle() -> initAuthBundle
    java.lang.String access$0(com.sina.weibo.sdk.auth.WeiboAuth$AuthInfo) -> access$0
    java.lang.String access$1(com.sina.weibo.sdk.auth.WeiboAuth$AuthInfo) -> access$1
    java.lang.String access$2(com.sina.weibo.sdk.auth.WeiboAuth$AuthInfo) -> access$2
    java.lang.String access$3(com.sina.weibo.sdk.auth.WeiboAuth$AuthInfo) -> access$3
    java.lang.String access$4(com.sina.weibo.sdk.auth.WeiboAuth$AuthInfo) -> access$4
com.sina.weibo.sdk.auth.WeiboAuthListener -> com.sina.weibo.sdk.auth.WeiboAuthListener:
    void onComplete(android.os.Bundle) -> onComplete
    void onWeiboException(com.sina.weibo.sdk.exception.WeiboException) -> onWeiboException
    void onCancel() -> onCancel
com.sina.weibo.sdk.auth.WeiboDialog -> com.sina.weibo.sdk.auth.WeiboDialog:
    java.lang.String TAG -> TAG
    int WEBVIEW_CONTAINER_MARGIN_TOP -> WEBVIEW_CONTAINER_MARGIN_TOP
    int WEBVIEW_MARGIN -> WEBVIEW_MARGIN
    android.content.Context mContext -> mContext
    android.widget.RelativeLayout mRootContainer -> mRootContainer
    android.widget.RelativeLayout mWebViewContainer -> mWebViewContainer
    android.app.ProgressDialog mLoadingDlg -> mLoadingDlg
    android.webkit.WebView mWebView -> mWebView
    boolean mIsDetached -> mIsDetached
    java.lang.String mAuthUrl -> mAuthUrl
    com.sina.weibo.sdk.auth.WeiboAuthListener mListener -> mListener
    com.sina.weibo.sdk.auth.WeiboAuth mWeibo -> mWeibo
    int theme -> theme
    void onBackPressed() -> onBackPressed
    void dismiss() -> dismiss
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onCreate(android.os.Bundle) -> onCreate
    void initWindow() -> initWindow
    void initLoadingDlg() -> initLoadingDlg
    void initWebView() -> initWebView
    void initCloseButton() -> initCloseButton
    void handleRedirectUrl(java.lang.String) -> handleRedirectUrl
    com.sina.weibo.sdk.auth.WeiboAuthListener access$0(com.sina.weibo.sdk.auth.WeiboDialog) -> access$0
    com.sina.weibo.sdk.auth.WeiboAuth access$1(com.sina.weibo.sdk.auth.WeiboDialog) -> access$1
    void access$2(com.sina.weibo.sdk.auth.WeiboDialog,java.lang.String) -> access$2
    boolean access$3(com.sina.weibo.sdk.auth.WeiboDialog) -> access$3
    android.app.ProgressDialog access$4(com.sina.weibo.sdk.auth.WeiboDialog) -> access$4
    android.webkit.WebView access$5(com.sina.weibo.sdk.auth.WeiboDialog) -> access$5
com.sina.weibo.sdk.auth.WeiboDialog$1 -> com.sina.weibo.sdk.auth.WeiboDialog$1:
    com.sina.weibo.sdk.auth.WeiboDialog this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.sina.weibo.sdk.auth.WeiboDialog$WeiboWebViewClient -> com.sina.weibo.sdk.auth.WeiboDialog$WeiboWebViewClient:
    boolean isCallBacked -> isCallBacked
    com.sina.weibo.sdk.auth.WeiboDialog this$0 -> this$0
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.sina.weibo.sdk.auth.sso.SsoHandler -> com.sina.weibo.sdk.auth.sso.SsoHandler:
    java.lang.String TAG -> TAG
    java.lang.String DEFAULT_SINA_WEIBO_PACKAGE_NAME -> DEFAULT_SINA_WEIBO_PACKAGE_NAME
    java.lang.String DEFAULT_WEIBO_REMOTE_SSO_SERVICE_NAME -> DEFAULT_WEIBO_REMOTE_SSO_SERVICE_NAME
    int REQUEST_CODE_SSO_AUTH -> REQUEST_CODE_SSO_AUTH
    com.sina.weibo.sdk.auth.WeiboAuth mWeiboAuth -> mWeiboAuth
    com.sina.weibo.sdk.auth.WeiboAuthListener mAuthListener -> mAuthListener
    android.app.Activity mAuthActivity -> mAuthActivity
    int mSSOAuthRequestCode -> mSSOAuthRequestCode
    android.content.ServiceConnection mConnection -> mConnection
    void authorize(com.sina.weibo.sdk.auth.WeiboAuthListener) -> authorize
    void authorize(com.sina.weibo.sdk.auth.WeiboAuthListener,java.lang.String) -> authorize
    void authorize(int,com.sina.weibo.sdk.auth.WeiboAuthListener,java.lang.String) -> authorize
    void authorizeCallBack(int,int,android.content.Intent) -> authorizeCallBack
    android.content.ComponentName isServiceExisted(android.content.Context,java.lang.String) -> isServiceExisted
    boolean bindRemoteSSOService(android.content.Context,java.lang.String) -> bindRemoteSSOService
    boolean startSingleSignOn(java.lang.String,java.lang.String) -> startSingleSignOn
    com.sina.weibo.sdk.auth.WeiboAuth access$0(com.sina.weibo.sdk.auth.sso.SsoHandler) -> access$0
    com.sina.weibo.sdk.auth.WeiboAuthListener access$1(com.sina.weibo.sdk.auth.sso.SsoHandler) -> access$1
    android.app.Activity access$2(com.sina.weibo.sdk.auth.sso.SsoHandler) -> access$2
    android.content.ServiceConnection access$3(com.sina.weibo.sdk.auth.sso.SsoHandler) -> access$3
    boolean access$4(com.sina.weibo.sdk.auth.sso.SsoHandler,java.lang.String,java.lang.String) -> access$4
com.sina.weibo.sdk.auth.sso.SsoHandler$1 -> com.sina.weibo.sdk.auth.sso.SsoHandler$1:
    com.sina.weibo.sdk.auth.sso.SsoHandler this$0 -> this$0
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
com.sina.weibo.sdk.codestyle.CodingRuler -> com.sina.weibo.sdk.codestyle.CodingRuler:
    java.lang.String ACTION_MAIN -> ACTION_MAIN
    int MSG_AUTH_NONE -> MSG_AUTH_NONE
    int MSG_AUTH_SUCCESS -> MSG_AUTH_SUCCESS
    int MSG_AUTH_FAILED -> MSG_AUTH_FAILED
    java.lang.Object mObject0 -> mObject0
    java.lang.Object mObject1 -> mObject1
    java.lang.Object mObject2 -> mObject2
    java.lang.Object mObject3 -> mObject3
    java.lang.Object mObject4 -> mObject4
    void doSomething(int,float,java.lang.String) -> doSomething
    void doSomething() -> doSomething
    void doSomethingInternal(int,float) -> doSomethingInternal
    void conditionFun() -> conditionFun
    void switchFun() -> switchFun
    void circulationFun() -> circulationFun
    void exceptionFun() -> exceptionFun
    void otherFun() -> otherFun
com.sina.weibo.sdk.codestyle.SampleCode -> com.sina.weibo.sdk.codestyle.SampleCode:
    java.lang.String ACTION_MAIN -> ACTION_MAIN
    int MSG_AUTH_NONE -> MSG_AUTH_NONE
    int MSG_AUTH_SUCCESS -> MSG_AUTH_SUCCESS
    int MSG_AUTH_FAILED -> MSG_AUTH_FAILED
    java.lang.Object mObject0 -> mObject0
    java.lang.Object mObject1 -> mObject1
    java.lang.Object mObject2 -> mObject2
    java.lang.Object mObject3 -> mObject3
    java.lang.Object mObject4 -> mObject4
    void doSomething(int,float,java.lang.String) -> doSomething
    void doSomething() -> doSomething
    void doSomethingInternal(int,float) -> doSomethingInternal
com.sina.weibo.sdk.constant.WBAuthErrorCode -> com.sina.weibo.sdk.constant.WBAuthErrorCode:
    int redirect_uri_mismatch -> redirect_uri_mismatch
    int invalid_request -> invalid_request
    int invalid_client -> invalid_client
    int invalid_grant -> invalid_grant
    int unauthorized_client -> unauthorized_client
    int expired_token -> expired_token
    int unsupported_grant_type -> unsupported_grant_type
    int unsupported_response_type -> unsupported_response_type
    int access_denied -> access_denied
    int temporarily_unavailable -> temporarily_unavailable
    int appkey_permission_denied -> appkey_permission_denied
com.sina.weibo.sdk.constant.WBConstants -> com.sina.weibo.sdk.constant.WBConstants:
    java.lang.String AUTH_PARAMS_CLIENT_ID -> AUTH_PARAMS_CLIENT_ID
    java.lang.String AUTH_PARAMS_RESPONSE_TYPE -> AUTH_PARAMS_RESPONSE_TYPE
    java.lang.String AUTH_PARAMS_REDIRECT_URL -> AUTH_PARAMS_REDIRECT_URL
    java.lang.String AUTH_PARAMS_DISPLAY -> AUTH_PARAMS_DISPLAY
    java.lang.String AUTH_PARAMS_SCOPE -> AUTH_PARAMS_SCOPE
    java.lang.String AUTH_PARAMS_PACKAGE_NAME -> AUTH_PARAMS_PACKAGE_NAME
    java.lang.String AUTH_PARAMS_KEY_HASH -> AUTH_PARAMS_KEY_HASH
    java.lang.String AUTH_PARAMS_CLIENT_SECRET -> AUTH_PARAMS_CLIENT_SECRET
    java.lang.String AUTH_PARAMS_GRANT_TYPE -> AUTH_PARAMS_GRANT_TYPE
    java.lang.String AUTH_PARAMS_CODE -> AUTH_PARAMS_CODE
    java.lang.String AUTH_ACCESS_TOKEN -> AUTH_ACCESS_TOKEN
    java.lang.String SSO_APP_KEY -> SSO_APP_KEY
    java.lang.String SSO_REDIRECT_URL -> SSO_REDIRECT_URL
    java.lang.String SSO_USER_SCOPE -> SSO_USER_SCOPE
    java.lang.String SSO_PACKAGE_NAME -> SSO_PACKAGE_NAME
    java.lang.String SSO_KEY_HASH -> SSO_KEY_HASH
    int WEIBO_SDK_VERSION -> WEIBO_SDK_VERSION
    java.lang.String WEIBO_SDK_VERSION_NAME -> WEIBO_SDK_VERSION_NAME
    java.lang.String ACTION_WEIBO_REGISTER -> ACTION_WEIBO_REGISTER
    java.lang.String ACTION_WEIBO_RESPONSE -> ACTION_WEIBO_RESPONSE
    java.lang.String ACTION_WEIBO_SDK_PERMISSION -> ACTION_WEIBO_SDK_PERMISSION
    java.lang.String ACTIVITY_WEIBO -> ACTIVITY_WEIBO
    java.lang.String ACTIVITY_REQ_SDK -> ACTIVITY_REQ_SDK
    java.lang.String ACTIVITY_RESP_SDK -> ACTIVITY_RESP_SDK
    java.lang.String ACTIVITY_WEIBO_PAY -> ACTIVITY_WEIBO_PAY
    java.lang.String ACTIVITY_WEIBO_PAY_REQ -> ACTIVITY_WEIBO_PAY_REQ
    int SDK_ACTIVITY_FOR_RESULT_CODE -> SDK_ACTIVITY_FOR_RESULT_CODE
    java.lang.String WEIBO_DOWNLOAD_URL -> WEIBO_DOWNLOAD_URL
    int COMMAND_TO_WEIBO -> COMMAND_TO_WEIBO
    int COMMAND_FROM_WEIBO -> COMMAND_FROM_WEIBO
    int COMMAND_SSO -> COMMAND_SSO
    int COMMAND_PAY -> COMMAND_PAY
    java.lang.String COMMAND_TYPE_KEY -> COMMAND_TYPE_KEY
    java.lang.String TRAN -> TRAN
    java.lang.String SIGN -> SIGN
    int WEIBO_FLAG_SDK -> WEIBO_FLAG_SDK
com.sina.weibo.sdk.constant.WBConstants$Base -> com.sina.weibo.sdk.constant.WBConstants$Base:
    java.lang.String SDK_VER -> SDK_VER
    java.lang.String APP_PKG -> APP_PKG
    java.lang.String APP_KEY -> APP_KEY
com.sina.weibo.sdk.constant.WBConstants$ErrorCode -> com.sina.weibo.sdk.constant.WBConstants$ErrorCode:
    int ERR_OK -> ERR_OK
    int ERR_CANCEL -> ERR_CANCEL
    int ERR_FAIL -> ERR_FAIL
com.sina.weibo.sdk.constant.WBConstants$Media -> com.sina.weibo.sdk.constant.WBConstants$Media:
    java.lang.String SDK_VER -> SDK_VER
    java.lang.String TITLE -> TITLE
    java.lang.String DESC -> DESC
    java.lang.String THUMB_DATA -> THUMB_DATA
    java.lang.String URL -> URL
com.sina.weibo.sdk.constant.WBConstants$Msg -> com.sina.weibo.sdk.constant.WBConstants$Msg:
    java.lang.String TEXT -> TEXT
    java.lang.String IMAGE -> IMAGE
    java.lang.String MEDIA -> MEDIA
    java.lang.String TEXT_EXTRA -> TEXT_EXTRA
    java.lang.String IMAGE_EXTRA -> IMAGE_EXTRA
    java.lang.String MEDIA_EXTRA -> MEDIA_EXTRA
    java.lang.String IDENTIFY -> IDENTIFY
com.sina.weibo.sdk.constant.WBConstants$Response -> com.sina.weibo.sdk.constant.WBConstants$Response:
    java.lang.String ERRCODE -> ERRCODE
    java.lang.String ERRMSG -> ERRMSG
com.sina.weibo.sdk.constant.WBConstants$SDK -> com.sina.weibo.sdk.constant.WBConstants$SDK:
    java.lang.String FLAG -> FLAG
com.sina.weibo.sdk.exception.WeiboAuthException -> com.sina.weibo.sdk.exception.WeiboAuthException:
    long serialVersionUID -> serialVersionUID
    java.lang.String DEFAULT_AUTH_ERROR_CODE -> DEFAULT_AUTH_ERROR_CODE
    java.lang.String DEFAULT_AUTH_ERROR_DESC -> DEFAULT_AUTH_ERROR_DESC
    java.lang.String DEFAULT_AUTH_ERROR_TYPE -> DEFAULT_AUTH_ERROR_TYPE
    java.lang.String mErrorType -> mErrorType
    java.lang.String mErrorCode -> mErrorCode
    java.lang.String getErrorType() -> getErrorType
    java.lang.String getErrorCode() -> getErrorCode
com.sina.weibo.sdk.exception.WeiboDialogException -> com.sina.weibo.sdk.exception.WeiboDialogException:
    long serialVersionUID -> serialVersionUID
    int mErrorCode -> mErrorCode
    java.lang.String mFailingUrl -> mFailingUrl
    int getErrorCode() -> getErrorCode
    java.lang.String getFailingUrl() -> getFailingUrl
com.sina.weibo.sdk.exception.WeiboException -> com.sina.weibo.sdk.exception.WeiboException:
    long serialVersionUID -> serialVersionUID
com.sina.weibo.sdk.exception.WeiboHttpException -> com.sina.weibo.sdk.exception.WeiboHttpException:
    long serialVersionUID -> serialVersionUID
    int mStatusCode -> mStatusCode
    int getStatusCode() -> getStatusCode
com.sina.weibo.sdk.exception.WeiboShareException -> com.sina.weibo.sdk.exception.WeiboShareException:
    long serialVersionUID -> serialVersionUID
com.sina.weibo.sdk.net.AsyncWeiboRunner -> com.sina.weibo.sdk.net.AsyncWeiboRunner:
    void requestByThread(java.lang.String,com.sina.weibo.sdk.net.WeiboParameters,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> requestByThread
    java.lang.String request(java.lang.String,com.sina.weibo.sdk.net.WeiboParameters,java.lang.String) -> request
    void requestAsync(java.lang.String,com.sina.weibo.sdk.net.WeiboParameters,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> requestAsync
com.sina.weibo.sdk.net.AsyncWeiboRunner$1 -> com.sina.weibo.sdk.net.AsyncWeiboRunner$1:
    java.lang.String val$url -> val$url
    java.lang.String val$httpMethod -> val$httpMethod
    com.sina.weibo.sdk.net.WeiboParameters val$params -> val$params
    com.sina.weibo.sdk.net.RequestListener val$listener -> val$listener
    void run() -> run
com.sina.weibo.sdk.net.AsyncWeiboRunner$AsyncTaskResult -> com.sina.weibo.sdk.net.AsyncWeiboRunner$AsyncTaskResult:
    java.lang.Object result -> result
    com.sina.weibo.sdk.exception.WeiboException error -> error
    java.lang.Object getResult() -> getResult
    com.sina.weibo.sdk.exception.WeiboException getError() -> getError
com.sina.weibo.sdk.net.AsyncWeiboRunner$RequestRunner -> com.sina.weibo.sdk.net.AsyncWeiboRunner$RequestRunner:
    java.lang.String mUrl -> mUrl
    com.sina.weibo.sdk.net.WeiboParameters mParams -> mParams
    java.lang.String mHttpMethod -> mHttpMethod
    com.sina.weibo.sdk.net.RequestListener mListener -> mListener
    com.sina.weibo.sdk.net.AsyncWeiboRunner$AsyncTaskResult doInBackground(java.lang.Void[]) -> doInBackground
    void onPreExecute() -> onPreExecute
    void onPostExecute(com.sina.weibo.sdk.net.AsyncWeiboRunner$AsyncTaskResult) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.sina.weibo.sdk.net.HttpManager -> com.sina.weibo.sdk.net.HttpManager:
    java.lang.String BOUNDARY -> BOUNDARY
    java.lang.String MP_BOUNDARY -> MP_BOUNDARY
    java.lang.String END_MP_BOUNDARY -> END_MP_BOUNDARY
    java.lang.String MULTIPART_FORM_DATA -> MULTIPART_FORM_DATA
    java.lang.String HTTP_METHOD_POST -> HTTP_METHOD_POST
    java.lang.String HTTP_METHOD_GET -> HTTP_METHOD_GET
    int CONNECTION_TIMEOUT -> CONNECTION_TIMEOUT
    int SOCKET_TIMEOUT -> SOCKET_TIMEOUT
    int BUFFER_SIZE -> BUFFER_SIZE
    org.apache.http.conn.ssl.SSLSocketFactory sSSLSocketFactory -> sSSLSocketFactory
    java.lang.String openUrl(java.lang.String,java.lang.String,com.sina.weibo.sdk.net.WeiboParameters) -> openUrl
    org.apache.http.HttpResponse requestHttpExecute(java.lang.String,java.lang.String,com.sina.weibo.sdk.net.WeiboParameters) -> requestHttpExecute
    org.apache.http.client.HttpClient getNewHttpClient() -> getNewHttpClient
    void buildParams(java.io.OutputStream,com.sina.weibo.sdk.net.WeiboParameters) -> buildParams
    java.lang.String readRsponse(org.apache.http.HttpResponse) -> readRsponse
    java.lang.String getBoundry() -> getBoundry
    org.apache.http.conn.ssl.SSLSocketFactory getSSLSocketFactory() -> getSSLSocketFactory
com.sina.weibo.sdk.net.HttpManager$MySSLSocketFactory -> com.sina.weibo.sdk.net.HttpManager$MySSLSocketFactory:
    javax.net.ssl.SSLContext sslContext -> sslContext
    javax.net.ssl.TrustManager[] createTrustManagers(java.security.KeyStore) -> createTrustManagers
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
com.sina.weibo.sdk.net.NetStateManager -> com.sina.weibo.sdk.net.NetStateManager:
    android.content.Context mContext -> mContext
    com.sina.weibo.sdk.net.NetStateManager$NetState CUR_NETSTATE -> CUR_NETSTATE
    org.apache.http.HttpHost getAPN() -> getAPN
    void access$0(android.content.Context) -> access$0
com.sina.weibo.sdk.net.NetStateManager$NetState -> com.sina.weibo.sdk.net.NetStateManager$NetState:
    com.sina.weibo.sdk.net.NetStateManager$NetState Mobile -> Mobile
    com.sina.weibo.sdk.net.NetStateManager$NetState WIFI -> WIFI
    com.sina.weibo.sdk.net.NetStateManager$NetState NOWAY -> NOWAY
    com.sina.weibo.sdk.net.NetStateManager$NetState[] ENUM$VALUES -> ENUM$VALUES
    com.sina.weibo.sdk.net.NetStateManager$NetState[] values() -> values
    com.sina.weibo.sdk.net.NetStateManager$NetState valueOf(java.lang.String) -> valueOf
com.sina.weibo.sdk.net.NetStateManager$NetStateReceive -> com.sina.weibo.sdk.net.NetStateManager$NetStateReceive:
    com.sina.weibo.sdk.net.NetStateManager this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.sina.weibo.sdk.net.RequestListener -> com.sina.weibo.sdk.net.RequestListener:
    void onComplete(java.lang.String) -> onComplete
    void onWeiboException(com.sina.weibo.sdk.exception.WeiboException) -> onWeiboException
com.sina.weibo.sdk.net.WeiboParameters -> com.sina.weibo.sdk.net.WeiboParameters:
    java.lang.String DEFAULT_CHARSET -> DEFAULT_CHARSET
    java.util.LinkedHashMap mParams -> mParams
    java.util.LinkedHashMap getParams() -> getParams
    void setParams(java.util.LinkedHashMap) -> setParams
    void add(java.lang.String,java.lang.String) -> add
    void add(java.lang.String,int) -> add
    void add(java.lang.String,long) -> add
    void add(java.lang.String,java.lang.Object) -> add
    void put(java.lang.String,java.lang.String) -> put
    void put(java.lang.String,int) -> put
    void put(java.lang.String,long) -> put
    void put(java.lang.String,android.graphics.Bitmap) -> put
    void put(java.lang.String,java.lang.Object) -> put
    java.lang.Object get(java.lang.String) -> get
    void remove(java.lang.String) -> remove
    java.util.Set keySet() -> keySet
    boolean containsKey(java.lang.String) -> containsKey
    boolean containsValue(java.lang.String) -> containsValue
    int size() -> size
    java.lang.String encodeUrl() -> encodeUrl
    boolean hasBinaryData() -> hasBinaryData
com.sina.weibo.sdk.openapi.AbsOpenAPI -> com.sina.weibo.sdk.openapi.AbsOpenAPI:
    java.lang.String TAG -> TAG
    java.lang.String API_SERVER -> API_SERVER
    java.lang.String HTTPMETHOD_POST -> HTTPMETHOD_POST
    java.lang.String HTTPMETHOD_GET -> HTTPMETHOD_GET
    java.lang.String KEY_ACCESS_TOKEN -> KEY_ACCESS_TOKEN
    com.sina.weibo.sdk.auth.Oauth2AccessToken mAccessToken -> mAccessToken
    void requestAsync(java.lang.String,com.sina.weibo.sdk.net.WeiboParameters,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> requestAsync
    java.lang.String requestSync(java.lang.String,com.sina.weibo.sdk.net.WeiboParameters,java.lang.String) -> requestSync
com.sina.weibo.sdk.openapi.CommentsAPI -> com.sina.weibo.sdk.openapi.CommentsAPI:
    int AUTHOR_FILTER_ALL -> AUTHOR_FILTER_ALL
    int AUTHOR_FILTER_ATTENTIONS -> AUTHOR_FILTER_ATTENTIONS
    int AUTHOR_FILTER_STRANGER -> AUTHOR_FILTER_STRANGER
    int SRC_FILTER_ALL -> SRC_FILTER_ALL
    int SRC_FILTER_WEIBO -> SRC_FILTER_WEIBO
    int SRC_FILTER_WEIQUN -> SRC_FILTER_WEIQUN
    int READ_API_TO_ME -> READ_API_TO_ME
    int READ_API_BY_ME -> READ_API_BY_ME
    int READ_API_SHOW -> READ_API_SHOW
    int READ_API_TIMELINE -> READ_API_TIMELINE
    int READ_API_MENTIONS -> READ_API_MENTIONS
    int READ_API_SHOW_BATCH -> READ_API_SHOW_BATCH
    int WRITE_API_CREATE -> WRITE_API_CREATE
    int WRITE_API_DESTROY -> WRITE_API_DESTROY
    int WRITE_API_SDESTROY_BATCH -> WRITE_API_SDESTROY_BATCH
    int WRITE_API_REPLY -> WRITE_API_REPLY
    java.lang.String API_BASE_URL -> API_BASE_URL
    android.util.SparseArray sAPIList -> sAPIList
    void show(long,long,long,int,int,int,com.sina.weibo.sdk.net.RequestListener) -> show
    void byME(long,long,int,int,int,com.sina.weibo.sdk.net.RequestListener) -> byME
    void toME(long,long,int,int,int,int,com.sina.weibo.sdk.net.RequestListener) -> toME
    void timeline(long,long,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> timeline
    void mentions(long,long,int,int,int,int,com.sina.weibo.sdk.net.RequestListener) -> mentions
    void showBatch(long[],com.sina.weibo.sdk.net.RequestListener) -> showBatch
    void create(java.lang.String,long,boolean,com.sina.weibo.sdk.net.RequestListener) -> create
    void destroy(long,com.sina.weibo.sdk.net.RequestListener) -> destroy
    void destroyBatch(long[],com.sina.weibo.sdk.net.RequestListener) -> destroyBatch
    void reply(long,long,java.lang.String,boolean,boolean,com.sina.weibo.sdk.net.RequestListener) -> reply
    java.lang.String showSync(long,long,long,int,int,int) -> showSync
    java.lang.String byMESync(long,long,int,int,int) -> byMESync
    java.lang.String toMESync(long,long,int,int,int,int) -> toMESync
    java.lang.String timelineSync(long,long,int,int,boolean) -> timelineSync
    java.lang.String mentionsSync(long,long,int,int,int,int) -> mentionsSync
    java.lang.String showBatchSync(long[]) -> showBatchSync
    java.lang.String createSync(java.lang.String,long,boolean) -> createSync
    java.lang.String destroySync(long) -> destroySync
    java.lang.String destroyBatchSync(long[]) -> destroyBatchSync
    java.lang.String replySync(long,long,java.lang.String,boolean,boolean) -> replySync
    com.sina.weibo.sdk.net.WeiboParameters buildTimeLineParamsBase(long,long,int,int) -> buildTimeLineParamsBase
    com.sina.weibo.sdk.net.WeiboParameters buildShowOrDestoryBatchParams(long[]) -> buildShowOrDestoryBatchParams
    com.sina.weibo.sdk.net.WeiboParameters buildCreateParams(java.lang.String,long,boolean) -> buildCreateParams
    com.sina.weibo.sdk.net.WeiboParameters buildReplyParams(long,long,java.lang.String,boolean,boolean) -> buildReplyParams
com.sina.weibo.sdk.openapi.InviteAPI -> com.sina.weibo.sdk.openapi.InviteAPI:
    java.lang.String TAG -> TAG
    java.lang.String INVITE_URL -> INVITE_URL
    java.lang.String KEY_TEXT -> KEY_TEXT
    java.lang.String KEY_URL -> KEY_URL
    java.lang.String KEY_INVITE_LOGO -> KEY_INVITE_LOGO
    void sendInvite(java.lang.String,org.json.JSONObject,com.sina.weibo.sdk.net.RequestListener) -> sendInvite
com.sina.weibo.sdk.openapi.LogoutAPI -> com.sina.weibo.sdk.openapi.LogoutAPI:
    java.lang.String REVOKE_OAUTH_URL -> REVOKE_OAUTH_URL
    void logout(com.sina.weibo.sdk.net.RequestListener) -> logout
com.sina.weibo.sdk.openapi.StatusesAPI -> com.sina.weibo.sdk.openapi.StatusesAPI:
    int FEATURE_ALL -> FEATURE_ALL
    int FEATURE_ORIGINAL -> FEATURE_ORIGINAL
    int FEATURE_PICTURE -> FEATURE_PICTURE
    int FEATURE_VIDEO -> FEATURE_VIDEO
    int FEATURE_MUSICE -> FEATURE_MUSICE
    int AUTHOR_FILTER_ALL -> AUTHOR_FILTER_ALL
    int AUTHOR_FILTER_ATTENTIONS -> AUTHOR_FILTER_ATTENTIONS
    int AUTHOR_FILTER_STRANGER -> AUTHOR_FILTER_STRANGER
    int SRC_FILTER_ALL -> SRC_FILTER_ALL
    int SRC_FILTER_WEIBO -> SRC_FILTER_WEIBO
    int SRC_FILTER_WEIQUN -> SRC_FILTER_WEIQUN
    int TYPE_FILTER_ALL -> TYPE_FILTER_ALL
    int TYPE_FILTER_ORIGAL -> TYPE_FILTER_ORIGAL
    java.lang.String API_BASE_URL -> API_BASE_URL
    int READ_API_FRIENDS_TIMELINE -> READ_API_FRIENDS_TIMELINE
    int READ_API_MENTIONS -> READ_API_MENTIONS
    int WRITE_API_UPDATE -> WRITE_API_UPDATE
    int WRITE_API_REPOST -> WRITE_API_REPOST
    int WRITE_API_UPLOAD -> WRITE_API_UPLOAD
    int WRITE_API_UPLOAD_URL_TEXT -> WRITE_API_UPLOAD_URL_TEXT
    android.util.SparseArray sAPIList -> sAPIList
    void friendsTimeline(long,long,int,int,boolean,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> friendsTimeline
    void mentions(long,long,int,int,int,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> mentions
    void update(java.lang.String,java.lang.String,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> update
    void upload(java.lang.String,android.graphics.Bitmap,java.lang.String,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> upload
    void uploadUrlText(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> uploadUrlText
    java.lang.String friendsTimelineSync(long,long,int,int,boolean,int,boolean) -> friendsTimelineSync
    java.lang.String mentionsSync(long,long,int,int,int,int,int,boolean) -> mentionsSync
    java.lang.String updateSync(java.lang.String,java.lang.String,java.lang.String) -> updateSync
    java.lang.String uploadSync(java.lang.String,android.graphics.Bitmap,java.lang.String,java.lang.String) -> uploadSync
    java.lang.String uploadUrlTextSync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> uploadUrlTextSync
    com.sina.weibo.sdk.net.WeiboParameters buildTimeLineParamsBase(long,long,int,int,boolean,boolean,int) -> buildTimeLineParamsBase
    com.sina.weibo.sdk.net.WeiboParameters buildUpdateParams(java.lang.String,java.lang.String,java.lang.String) -> buildUpdateParams
    com.sina.weibo.sdk.net.WeiboParameters buildMentionsParams(long,long,int,int,int,int,int,boolean) -> buildMentionsParams
com.sina.weibo.sdk.openapi.UsersAPI -> com.sina.weibo.sdk.openapi.UsersAPI:
    int READ_USER -> READ_USER
    int READ_USER_BY_DOMAIN -> READ_USER_BY_DOMAIN
    int READ_USER_COUNT -> READ_USER_COUNT
    java.lang.String API_BASE_URL -> API_BASE_URL
    android.util.SparseArray sAPIList -> sAPIList
    void show(long,com.sina.weibo.sdk.net.RequestListener) -> show
    void show(java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> show
    void domainShow(java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> domainShow
    void counts(long[],com.sina.weibo.sdk.net.RequestListener) -> counts
    java.lang.String showSync(long) -> showSync
    java.lang.String showSync(java.lang.String) -> showSync
    java.lang.String domainShowSync(java.lang.String) -> domainShowSync
    java.lang.String countsSync(long[]) -> countsSync
    com.sina.weibo.sdk.net.WeiboParameters buildCountsParams(long[]) -> buildCountsParams
com.sina.weibo.sdk.openapi.legacy.AccountAPI -> com.sina.weibo.sdk.openapi.legacy.AccountAPI:
    int SCHOOL_TYPE_COLLEGE -> SCHOOL_TYPE_COLLEGE
    int SCHOOL_TYPE_SENIOR -> SCHOOL_TYPE_SENIOR
    int SCHOOL_TYPE_TECHNICAL -> SCHOOL_TYPE_TECHNICAL
    int SCHOOL_TYPE_JUNIOR -> SCHOOL_TYPE_JUNIOR
    int SCHOOL_TYPE_PRIMARY -> SCHOOL_TYPE_PRIMARY
    java.lang.String SERVER_URL_PRIX -> SERVER_URL_PRIX
    void getPrivacy(com.sina.weibo.sdk.net.RequestListener) -> getPrivacy
    void schoolList(int,int,int,int,com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL,java.lang.String,int,com.sina.weibo.sdk.net.RequestListener) -> schoolList
    void rateLimitStatus(com.sina.weibo.sdk.net.RequestListener) -> rateLimitStatus
    void getUid(com.sina.weibo.sdk.net.RequestListener) -> getUid
    void endSession(com.sina.weibo.sdk.net.RequestListener) -> endSession
com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL -> com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL:
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL A -> A
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL B -> B
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL C -> C
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL D -> D
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL E -> E
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL F -> F
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL G -> G
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL H -> H
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL I -> I
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL J -> J
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL K -> K
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL L -> L
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL M -> M
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL N -> N
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL O -> O
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL P -> P
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL Q -> Q
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL R -> R
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL S -> S
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL T -> T
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL U -> U
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL V -> V
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL W -> W
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL X -> X
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL Y -> Y
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL Z -> Z
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL[] ENUM$VALUES -> ENUM$VALUES
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL[] values() -> values
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL valueOf(java.lang.String) -> valueOf
com.sina.weibo.sdk.openapi.legacy.ActivityInvokeAPI -> com.sina.weibo.sdk.openapi.legacy.ActivityInvokeAPI:
    void openSendWeibo(android.app.Activity,java.lang.String) -> openSendWeibo
    void openSendWeibo(android.app.Activity,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> openSendWeibo
    void openNearbyPeople(android.app.Activity) -> openNearbyPeople
    void openNearbyWeibo(android.app.Activity) -> openNearbyWeibo
    void openUserInfoByNickName(android.app.Activity,java.lang.String) -> openUserInfoByNickName
    void openUserInfoByUid(android.app.Activity,java.lang.String) -> openUserInfoByUid
    void openWeiboBrowser(android.app.Activity,java.lang.String) -> openWeiboBrowser
    void openWeibo(android.app.Activity) -> openWeibo
    void openShake(android.app.Activity) -> openShake
    void openContact(android.app.Activity) -> openContact
    void openUserTrends(android.app.Activity,java.lang.String) -> openUserTrends
    void openMessageListByUid(android.app.Activity,java.lang.String) -> openMessageListByUid
    void openMessageListByNickName(android.app.Activity,java.lang.String) -> openMessageListByNickName
    void openDetail(android.app.Activity,java.lang.String) -> openDetail
com.sina.weibo.sdk.openapi.legacy.CommonAPI -> com.sina.weibo.sdk.openapi.legacy.CommonAPI:
    java.lang.String LANGUAGE_ZH_CN -> LANGUAGE_ZH_CN
    java.lang.String LANGUAGE_ZH_TW -> LANGUAGE_ZH_TW
    java.lang.String LANGUAGE_EN -> LANGUAGE_EN
    java.lang.String SERVER_URL_PRIX -> SERVER_URL_PRIX
    void getCity(java.lang.String,java.lang.String,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> getCity
    void getCountry(com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> getCountry
    void getTimezone(java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> getTimezone
com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL -> com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL:
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL a -> a
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL b -> b
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL c -> c
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL d -> d
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL e -> e
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL f -> f
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL g -> g
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL h -> h
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL i -> i
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL j -> j
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL k -> k
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL l -> l
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL m -> m
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL n -> n
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL o -> o
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL p -> p
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL q -> q
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL r -> r
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL s -> s
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL t -> t
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL u -> u
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL v -> v
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL w -> w
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL x -> x
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL y -> y
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL z -> z
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL[] ENUM$VALUES -> ENUM$VALUES
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL[] values() -> values
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL valueOf(java.lang.String) -> valueOf
com.sina.weibo.sdk.openapi.legacy.FavoritesAPI -> com.sina.weibo.sdk.openapi.legacy.FavoritesAPI:
    java.lang.String SERVER_URL_PRIX -> SERVER_URL_PRIX
    void favorites(int,int,com.sina.weibo.sdk.net.RequestListener) -> favorites
    void ids(int,int,com.sina.weibo.sdk.net.RequestListener) -> ids
    void show(long,com.sina.weibo.sdk.net.RequestListener) -> show
    void byTags(long,int,int,com.sina.weibo.sdk.net.RequestListener) -> byTags
    void tags(int,int,com.sina.weibo.sdk.net.RequestListener) -> tags
    void byTagsIds(long,int,int,com.sina.weibo.sdk.net.RequestListener) -> byTagsIds
    void create(long,com.sina.weibo.sdk.net.RequestListener) -> create
    void destroy(long,com.sina.weibo.sdk.net.RequestListener) -> destroy
    void destroyBatch(long[],com.sina.weibo.sdk.net.RequestListener) -> destroyBatch
    void tagsUpdate(long,java.lang.String[],com.sina.weibo.sdk.net.RequestListener) -> tagsUpdate
    void tagsUpdateBatch(long,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> tagsUpdateBatch
    void tagsDestroyBatch(long,com.sina.weibo.sdk.net.RequestListener) -> tagsDestroyBatch
    com.sina.weibo.sdk.net.WeiboParameters buildCountPage(int,int) -> buildCountPage
com.sina.weibo.sdk.openapi.legacy.FriendshipsAPI -> com.sina.weibo.sdk.openapi.legacy.FriendshipsAPI:
    java.lang.String SERVER_URL_PRIX -> SERVER_URL_PRIX
    void friends(long,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> friends
    void friends(java.lang.String,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> friends
    void inCommon(long,long,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> inCommon
    void bilateral(long,int,int,com.sina.weibo.sdk.net.RequestListener) -> bilateral
    void bilateralIds(long,int,int,com.sina.weibo.sdk.net.RequestListener) -> bilateralIds
    void friendsIds(long,int,int,com.sina.weibo.sdk.net.RequestListener) -> friendsIds
    void friendsIds(java.lang.String,int,int,com.sina.weibo.sdk.net.RequestListener) -> friendsIds
    void followers(long,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> followers
    void followers(java.lang.String,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> followers
    void followersIds(long,int,int,com.sina.weibo.sdk.net.RequestListener) -> followersIds
    void followersIds(java.lang.String,int,int,com.sina.weibo.sdk.net.RequestListener) -> followersIds
    void followersActive(long,int,com.sina.weibo.sdk.net.RequestListener) -> followersActive
    void chainFollowers(long,int,int,com.sina.weibo.sdk.net.RequestListener) -> chainFollowers
    void show(long,long,com.sina.weibo.sdk.net.RequestListener) -> show
    void show(long,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> show
    void show(java.lang.String,long,com.sina.weibo.sdk.net.RequestListener) -> show
    void show(java.lang.String,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> show
    void create(long,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> create
    void create(java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> create
    void destroy(long,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> destroy
    void destroy(java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> destroy
    com.sina.weibo.sdk.net.WeiboParameters buildFriendsParam(int,int,boolean) -> buildFriendsParam
    com.sina.weibo.sdk.net.WeiboParameters buildFriendIDParam(long,int) -> buildFriendIDParam
com.sina.weibo.sdk.openapi.legacy.GroupAPI -> com.sina.weibo.sdk.openapi.legacy.GroupAPI:
    int FEATURE_ALL -> FEATURE_ALL
    int FEATURE_ORIGINAL -> FEATURE_ORIGINAL
    int FEATURE_PICTURE -> FEATURE_PICTURE
    int FEATURE_VIDEO -> FEATURE_VIDEO
    int FEATURE_MUSICE -> FEATURE_MUSICE
    java.lang.String SERVER_URL_PRIX -> SERVER_URL_PRIX
    void groups(com.sina.weibo.sdk.net.RequestListener) -> groups
    void timeline(long,long,long,int,int,boolean,int,com.sina.weibo.sdk.net.RequestListener) -> timeline
    void timelineIds() -> timelineIds
    void members(long,int,int,com.sina.weibo.sdk.net.RequestListener) -> members
    void membersIds() -> membersIds
    void memberDescriptionPatch() -> memberDescriptionPatch
    void isMember(long,long,com.sina.weibo.sdk.net.RequestListener) -> isMember
    void listed() -> listed
    void showGroup(long,com.sina.weibo.sdk.net.RequestListener) -> showGroup
    void showGroupBatch(java.lang.String,long,com.sina.weibo.sdk.net.RequestListener) -> showGroupBatch
    void create(java.lang.String,java.lang.String,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> create
    void update(long,java.lang.String,java.lang.String,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> update
    void deleteGroup(long,com.sina.weibo.sdk.net.RequestListener) -> deleteGroup
    void addMember(long,long,com.sina.weibo.sdk.net.RequestListener) -> addMember
    void addMemberBatch(long,java.lang.String,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> addMemberBatch
    void updateMembers(long,long,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> updateMembers
    void deleteMembers(long,long,com.sina.weibo.sdk.net.RequestListener) -> deleteMembers
    void order(java.lang.String,int,com.sina.weibo.sdk.net.RequestListener) -> order
    com.sina.weibo.sdk.net.WeiboParameters buildeMembersParams(long,long) -> buildeMembersParams
com.sina.weibo.sdk.openapi.legacy.LocationAPI -> com.sina.weibo.sdk.openapi.legacy.LocationAPI:
    java.lang.String API_BASE_URL -> API_BASE_URL
    int READ_API_GPS_TO_OFFSET -> READ_API_GPS_TO_OFFSET
    int READ_API_SEARCH_POIS_BY_GEO -> READ_API_SEARCH_POIS_BY_GEO
    int READ_API_GET_TO_ADDRESS -> READ_API_GET_TO_ADDRESS
    android.util.SparseArray sAPIList -> sAPIList
    void gps2Offset(java.lang.Double,java.lang.Double,com.sina.weibo.sdk.net.RequestListener) -> gps2Offset
    void searchPoisByGeo(java.lang.Double,java.lang.Double,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> searchPoisByGeo
    void geo2Address(java.lang.Double,java.lang.Double,com.sina.weibo.sdk.net.RequestListener) -> geo2Address
    java.lang.String gps2OffsetSync(java.lang.Double,java.lang.Double) -> gps2OffsetSync
    java.lang.String searchPoisByGeoSync(java.lang.Double,java.lang.Double,java.lang.String) -> searchPoisByGeoSync
    java.lang.String geo2AddressSync(java.lang.Double,java.lang.Double) -> geo2AddressSync
    com.sina.weibo.sdk.net.WeiboParameters buildGPS2OffsetParams(java.lang.Double,java.lang.Double) -> buildGPS2OffsetParams
    com.sina.weibo.sdk.net.WeiboParameters buildSerarPoiByGeoParmas(java.lang.Double,java.lang.Double,java.lang.String) -> buildSerarPoiByGeoParmas
    com.sina.weibo.sdk.net.WeiboParameters buildGeo2AddressParam(java.lang.Double,java.lang.Double) -> buildGeo2AddressParam
com.sina.weibo.sdk.openapi.legacy.PlaceAPI -> com.sina.weibo.sdk.openapi.legacy.PlaceAPI:
    int SORT_BY_TIME -> SORT_BY_TIME
    int SORT_BY_DISTENCE -> SORT_BY_DISTENCE
    int NEARBY_POIS_SORT_BY_WEIGHT -> NEARBY_POIS_SORT_BY_WEIGHT
    int NEARBY_POIS_SORT_BY_DISTENCE -> NEARBY_POIS_SORT_BY_DISTENCE
    int NEARBY_POIS_SORT_BY_CHECKIN_NUMBER -> NEARBY_POIS_SORT_BY_CHECKIN_NUMBER
    int POIS_SORT_BY_TIME -> POIS_SORT_BY_TIME
    int POIS_SORT_BY_HOT -> POIS_SORT_BY_HOT
    int RELATIONSHIP_FILTER_ALL -> RELATIONSHIP_FILTER_ALL
    int RELATIONSHIP_FILTER_STRANGER -> RELATIONSHIP_FILTER_STRANGER
    int RELATIONSHIP_FILTER_FOLLOW -> RELATIONSHIP_FILTER_FOLLOW
    int GENDER_ALL -> GENDER_ALL
    int GENDER_MAN -> GENDER_MAN
    int GENDER_WOMAM -> GENDER_WOMAM
    int USER_LEVEL_ALL -> USER_LEVEL_ALL
    int USER_LEVEL_NORMAL -> USER_LEVEL_NORMAL
    int USER_LEVEL_VIP -> USER_LEVEL_VIP
    int USER_LEVEL_STAR -> USER_LEVEL_STAR
    int NEARBY_USER_SORT_BY_TIME -> NEARBY_USER_SORT_BY_TIME
    int NEARBY_USER_SORT_BY_DISTANCE -> NEARBY_USER_SORT_BY_DISTANCE
    int NEARBY_USER_SORT_BY_SOCIAL_SHIP -> NEARBY_USER_SORT_BY_SOCIAL_SHIP
    java.lang.String SERVER_URL_PRIX -> SERVER_URL_PRIX
    void pulicTimeline(long,boolean,com.sina.weibo.sdk.net.RequestListener) -> pulicTimeline
    void friendsTimeline(long,long,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> friendsTimeline
    void userTimeline(long,long,long,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> userTimeline
    void poiTimeline(java.lang.String,long,long,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> poiTimeline
    void nearbyTimeline(java.lang.String,java.lang.String,int,long,long,int,int,int,boolean,boolean,com.sina.weibo.sdk.net.RequestListener) -> nearbyTimeline
    void statusesShow(long,com.sina.weibo.sdk.net.RequestListener) -> statusesShow
    void usersShow(long,boolean,com.sina.weibo.sdk.net.RequestListener) -> usersShow
    void usersCheckins(long,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> usersCheckins
    void usersPhotos(long,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> usersPhotos
    void usersTips(long,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> usersTips
    void usersTodo(long,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> usersTodo
    void poisShow(java.lang.String,boolean,com.sina.weibo.sdk.net.RequestListener) -> poisShow
    void poisUsers(java.lang.String,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> poisUsers
    void poisPhotos(java.lang.String,int,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> poisPhotos
    void poisTips(java.lang.String,int,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> poisTips
    void poisSearch(java.lang.String,java.lang.String,java.lang.String,int,int,com.sina.weibo.sdk.net.RequestListener) -> poisSearch
    void poisCategory(int,boolean,com.sina.weibo.sdk.net.RequestListener) -> poisCategory
    void nearbyPois(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,int,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> nearbyPois
    void nearbyUsers(java.lang.String,java.lang.String,int,long,long,int,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> nearbyUsers
    void nearbyPhotos(java.lang.String,java.lang.String,int,long,long,int,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> nearbyPhotos
    void nearbyUserList(java.lang.String,java.lang.String,int,int,int,int,int,int,int,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> nearbyUserList
    void poisCreate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> poisCreate
    void poisAddCheckin(java.lang.String,java.lang.String,java.lang.String,boolean,com.sina.weibo.sdk.net.RequestListener) -> poisAddCheckin
    void poisAddPhoto(java.lang.String,java.lang.String,java.lang.String,boolean,com.sina.weibo.sdk.net.RequestListener) -> poisAddPhoto
    void poisAddTip(java.lang.String,java.lang.String,boolean,com.sina.weibo.sdk.net.RequestListener) -> poisAddTip
    void poisAddTodo(java.lang.String,java.lang.String,boolean,com.sina.weibo.sdk.net.RequestListener) -> poisAddTodo
    void nearbyUsersCreate(java.lang.String,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> nearbyUsersCreate
    void nearbyUsersDestroy(com.sina.weibo.sdk.net.RequestListener) -> nearbyUsersDestroy
    com.sina.weibo.sdk.net.WeiboParameters buildTimeLineParamsBase(long,long,int,int) -> buildTimeLineParamsBase
    com.sina.weibo.sdk.net.WeiboParameters buildUserParams(long,int,int,boolean) -> buildUserParams
    com.sina.weibo.sdk.net.WeiboParameters buildNearbyParams(java.lang.String,java.lang.String,int,int,int,int,boolean) -> buildNearbyParams
    com.sina.weibo.sdk.net.WeiboParameters buildPoiis(java.lang.String,java.lang.String,boolean) -> buildPoiis
    com.sina.weibo.sdk.net.WeiboParameters buildPoisParams(java.lang.String,int,int,boolean) -> buildPoisParams
com.sina.weibo.sdk.openapi.legacy.RegisterAPI -> com.sina.weibo.sdk.openapi.legacy.RegisterAPI:
    java.lang.String SERVER_URL_PRIX -> SERVER_URL_PRIX
    void suggestions(java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> suggestions
com.sina.weibo.sdk.openapi.legacy.SearchAPI -> com.sina.weibo.sdk.openapi.legacy.SearchAPI:
    int SCHOOL_TYPE_COLLEGE -> SCHOOL_TYPE_COLLEGE
    int SCHOOL_TYPE_SENIOR -> SCHOOL_TYPE_SENIOR
    int SCHOOL_TYPE_TECHNICAL -> SCHOOL_TYPE_TECHNICAL
    int SCHOOL_TYPE_JUNIOR -> SCHOOL_TYPE_JUNIOR
    int SCHOOL_TYPE_PRIMARY -> SCHOOL_TYPE_PRIMARY
    int FRIEND_TYPE_ATTENTIONS -> FRIEND_TYPE_ATTENTIONS
    int FRIEND_TYPE_FELLOWS -> FRIEND_TYPE_FELLOWS
    int RANGE_ATTENTIONS -> RANGE_ATTENTIONS
    int RANGE_ATTENTION_TAGS -> RANGE_ATTENTION_TAGS
    int RANGE_ALL -> RANGE_ALL
    java.lang.String SERVER_URL_PRIX -> SERVER_URL_PRIX
    void users(java.lang.String,int,com.sina.weibo.sdk.net.RequestListener) -> users
    void statuses(java.lang.String,int,com.sina.weibo.sdk.net.RequestListener) -> statuses
    void schools(java.lang.String,int,int,com.sina.weibo.sdk.net.RequestListener) -> schools
    void companies(java.lang.String,int,com.sina.weibo.sdk.net.RequestListener) -> companies
    void apps(java.lang.String,int,com.sina.weibo.sdk.net.RequestListener) -> apps
    void atUsers(java.lang.String,int,int,int,com.sina.weibo.sdk.net.RequestListener) -> atUsers
    com.sina.weibo.sdk.net.WeiboParameters buildBaseParams(java.lang.String,int) -> buildBaseParams
com.sina.weibo.sdk.openapi.legacy.ShortUrlAPI -> com.sina.weibo.sdk.openapi.legacy.ShortUrlAPI:
    java.lang.String SERVER_URL_PRIX -> SERVER_URL_PRIX
    void shorten(java.lang.String[],com.sina.weibo.sdk.net.RequestListener) -> shorten
    void expand(java.lang.String[],com.sina.weibo.sdk.net.RequestListener) -> expand
    java.lang.String expandSync(java.lang.String[]) -> expandSync
    void clicks(java.lang.String[],com.sina.weibo.sdk.net.RequestListener) -> clicks
    void referers(java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> referers
    void locations(java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> locations
    void shareCounts(java.lang.String[],com.sina.weibo.sdk.net.RequestListener) -> shareCounts
    void shareStatuses(java.lang.String,long,long,int,int,com.sina.weibo.sdk.net.RequestListener) -> shareStatuses
    void commentCounts(java.lang.String[],com.sina.weibo.sdk.net.RequestListener) -> commentCounts
    void comments(java.lang.String,long,long,int,int,com.sina.weibo.sdk.net.RequestListener) -> comments
    com.sina.weibo.sdk.net.WeiboParameters buildRequestParams(java.lang.String,long,long,int,int) -> buildRequestParams
    com.sina.weibo.sdk.net.WeiboParameters buildURLRequest(java.lang.String[],java.lang.String) -> buildURLRequest
com.sina.weibo.sdk.openapi.legacy.StatusesAPI -> com.sina.weibo.sdk.openapi.legacy.StatusesAPI:
    int FEATURE_ALL -> FEATURE_ALL
    int FEATURE_ORIGINAL -> FEATURE_ORIGINAL
    int FEATURE_PICTURE -> FEATURE_PICTURE
    int FEATURE_VIDEO -> FEATURE_VIDEO
    int FEATURE_MUSICE -> FEATURE_MUSICE
    int AUTHOR_FILTER_ALL -> AUTHOR_FILTER_ALL
    int AUTHOR_FILTER_ATTENTIONS -> AUTHOR_FILTER_ATTENTIONS
    int AUTHOR_FILTER_STRANGER -> AUTHOR_FILTER_STRANGER
    int SRC_FILTER_ALL -> SRC_FILTER_ALL
    int SRC_FILTER_WEIBO -> SRC_FILTER_WEIBO
    int SRC_FILTER_WEIQUN -> SRC_FILTER_WEIQUN
    int TYPE_FILTER_ALL -> TYPE_FILTER_ALL
    int TYPE_FILTER_ORIGAL -> TYPE_FILTER_ORIGAL
    int TYPE_STATUSES -> TYPE_STATUSES
    int TYPE_COMMENTS -> TYPE_COMMENTS
    int TYPE_MESSAGE -> TYPE_MESSAGE
    int COMMENTS_NONE -> COMMENTS_NONE
    int COMMENTS_CUR_STATUSES -> COMMENTS_CUR_STATUSES
    int COMMENTS_RIGAL_STATUSES -> COMMENTS_RIGAL_STATUSES
    int COMMENTS_BOTH -> COMMENTS_BOTH
    java.lang.String EMOTION_TYPE_FACE -> EMOTION_TYPE_FACE
    java.lang.String EMOTION_TYPE_ANI -> EMOTION_TYPE_ANI
    java.lang.String EMOTION_TYPE_CARTOON -> EMOTION_TYPE_CARTOON
    java.lang.String LANGUAGE_CNNAME -> LANGUAGE_CNNAME
    java.lang.String LANGUAGE_TWNAME -> LANGUAGE_TWNAME
    java.lang.String SERVER_URL_PRIX -> SERVER_URL_PRIX
    void publicTimeline(int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> publicTimeline
    void friendsTimeline(long,long,int,int,boolean,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> friendsTimeline
    void friendsTimelineIds(long,long,int,int,boolean,int,com.sina.weibo.sdk.net.RequestListener) -> friendsTimelineIds
    void homeTimeline(long,long,int,int,boolean,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> homeTimeline
    void userTimeline(long,long,long,int,int,boolean,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> userTimeline
    void userTimeline(java.lang.String,long,long,int,int,boolean,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> userTimeline
    void userTimeline(long,long,int,int,boolean,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> userTimeline
    void userTimelineIds(long,long,long,int,int,boolean,int,com.sina.weibo.sdk.net.RequestListener) -> userTimelineIds
    void userTimelineIds(java.lang.String,long,long,int,int,boolean,int,com.sina.weibo.sdk.net.RequestListener) -> userTimelineIds
    void repostTimeline(long,long,long,int,int,int,com.sina.weibo.sdk.net.RequestListener) -> repostTimeline
    void repostTimelineIds(long,long,long,int,int,int,com.sina.weibo.sdk.net.RequestListener) -> repostTimelineIds
    void repostByMe(long,long,int,int,com.sina.weibo.sdk.net.RequestListener) -> repostByMe
    void mentions(long,long,int,int,int,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> mentions
    void mentionsIds(long,long,int,int,int,int,int,com.sina.weibo.sdk.net.RequestListener) -> mentionsIds
    void bilateralTimeline(long,long,int,int,boolean,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> bilateralTimeline
    void show(long,com.sina.weibo.sdk.net.RequestListener) -> show
    void queryMID(long[],int,com.sina.weibo.sdk.net.RequestListener) -> queryMID
    void queryID(java.lang.String[],int,boolean,boolean,com.sina.weibo.sdk.net.RequestListener) -> queryID
    void hotRepostDaily(int,boolean,com.sina.weibo.sdk.net.RequestListener) -> hotRepostDaily
    void hotRepostWeekly(int,boolean,com.sina.weibo.sdk.net.RequestListener) -> hotRepostWeekly
    void hotCommentsDaily(int,boolean,com.sina.weibo.sdk.net.RequestListener) -> hotCommentsDaily
    void hotCommentsWeekly(int,boolean,com.sina.weibo.sdk.net.RequestListener) -> hotCommentsWeekly
    void count(java.lang.String[],com.sina.weibo.sdk.net.RequestListener) -> count
    void repost(long,java.lang.String,int,com.sina.weibo.sdk.net.RequestListener) -> repost
    void destroy(long,com.sina.weibo.sdk.net.RequestListener) -> destroy
    void update(java.lang.String,java.lang.String,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> update
    void upload(java.lang.String,android.graphics.Bitmap,java.lang.String,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> upload
    void uploadUrlText(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> uploadUrlText
    void emotions(java.lang.String,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> emotions
    com.sina.weibo.sdk.net.WeiboParameters buildTimeLineBase(long,long,int,int) -> buildTimeLineBase
    com.sina.weibo.sdk.net.WeiboParameters buildTimeLineWithApp(long,long,int,int,boolean,int) -> buildTimeLineWithApp
    com.sina.weibo.sdk.net.WeiboParameters buildTimeLineWithAppTrim(long,long,int,int,boolean,boolean,int) -> buildTimeLineWithAppTrim
    com.sina.weibo.sdk.net.WeiboParameters buildHotParams(int,boolean) -> buildHotParams
    com.sina.weibo.sdk.net.WeiboParameters buildUpdateParams(java.lang.String,java.lang.String,java.lang.String) -> buildUpdateParams
com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI -> com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI:
    java.lang.String SERVER_URL_PRIX -> SERVER_URL_PRIX
    void usersHot(com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$USER_CATEGORY,com.sina.weibo.sdk.net.RequestListener) -> usersHot
    void mayInterested(int,int,com.sina.weibo.sdk.net.RequestListener) -> mayInterested
    void byStatus(java.lang.String,int,com.sina.weibo.sdk.net.RequestListener) -> byStatus
    void statusesHot(com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$STATUSES_TYPE,boolean,int,int,com.sina.weibo.sdk.net.RequestListener) -> statusesHot
    void favoritesHot(int,int,com.sina.weibo.sdk.net.RequestListener) -> favoritesHot
    void notInterested(long,com.sina.weibo.sdk.net.RequestListener) -> notInterested
    com.sina.weibo.sdk.net.WeiboParameters builderCountPage(int,int) -> builderCountPage
com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$STATUSES_TYPE -> com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$STATUSES_TYPE:
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$STATUSES_TYPE ENTERTAINMENT -> ENTERTAINMENT
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$STATUSES_TYPE FUNNY -> FUNNY
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$STATUSES_TYPE BEAUTY -> BEAUTY
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$STATUSES_TYPE VIDEO -> VIDEO
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$STATUSES_TYPE CONSTELLATION -> CONSTELLATION
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$STATUSES_TYPE LOVELY -> LOVELY
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$STATUSES_TYPE FASHION -> FASHION
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$STATUSES_TYPE CARS -> CARS
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$STATUSES_TYPE CATE -> CATE
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$STATUSES_TYPE MUSIC -> MUSIC
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$STATUSES_TYPE[] ENUM$VALUES -> ENUM$VALUES
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$STATUSES_TYPE[] values() -> values
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$STATUSES_TYPE valueOf(java.lang.String) -> valueOf
com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$USER_CATEGORY -> com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$USER_CATEGORY:
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$USER_CATEGORY DEFAULT -> DEFAULT
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$USER_CATEGORY ent -> ent
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$USER_CATEGORY hk_famous -> hk_famous
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$USER_CATEGORY model -> model
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$USER_CATEGORY cooking -> cooking
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$USER_CATEGORY sports -> sports
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$USER_CATEGORY finance -> finance
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$USER_CATEGORY tech -> tech
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$USER_CATEGORY singer -> singer
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$USER_CATEGORY writer -> writer
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$USER_CATEGORY moderator -> moderator
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$USER_CATEGORY medium -> medium
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$USER_CATEGORY stockplayer -> stockplayer
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$USER_CATEGORY[] ENUM$VALUES -> ENUM$VALUES
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$USER_CATEGORY[] values() -> values
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$USER_CATEGORY valueOf(java.lang.String) -> valueOf
com.sina.weibo.sdk.openapi.legacy.TagsAPI -> com.sina.weibo.sdk.openapi.legacy.TagsAPI:
    java.lang.String SERVER_URL_PRIX -> SERVER_URL_PRIX
    void tags(long,int,int,com.sina.weibo.sdk.net.RequestListener) -> tags
    void tagsBatch(java.lang.String[],com.sina.weibo.sdk.net.RequestListener) -> tagsBatch
    void suggestions(int,com.sina.weibo.sdk.net.RequestListener) -> suggestions
    void create(java.lang.String[],com.sina.weibo.sdk.net.RequestListener) -> create
    void destroy(long,com.sina.weibo.sdk.net.RequestListener) -> destroy
    void destroyBatch(java.lang.String[],com.sina.weibo.sdk.net.RequestListener) -> destroyBatch
com.sina.weibo.sdk.openapi.legacy.TrendsAPI -> com.sina.weibo.sdk.openapi.legacy.TrendsAPI:
    java.lang.String SERVER_URL_PRIX -> SERVER_URL_PRIX
    void trends(long,int,int,com.sina.weibo.sdk.net.RequestListener) -> trends
    void isFollow(java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> isFollow
    void hourly(boolean,com.sina.weibo.sdk.net.RequestListener) -> hourly
    void daily(boolean,com.sina.weibo.sdk.net.RequestListener) -> daily
    void weekly(boolean,com.sina.weibo.sdk.net.RequestListener) -> weekly
    void follow(java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> follow
    void destroy(long,com.sina.weibo.sdk.net.RequestListener) -> destroy
com.sina.weibo.sdk.openapi.models.AbsDataObject -> com.sina.weibo.sdk.openapi.models.AbsDataObject:
    java.lang.Object parse(java.lang.String) -> parse
    java.lang.Object parse(org.json.JSONObject) -> parse
com.sina.weibo.sdk.openapi.models.Comment -> com.sina.weibo.sdk.openapi.models.Comment:
    java.lang.String created_at -> created_at
    java.lang.String id -> id
    java.lang.String text -> text
    java.lang.String source -> source
    com.sina.weibo.sdk.openapi.models.User user -> user
    java.lang.String mid -> mid
    java.lang.String idstr -> idstr
    com.sina.weibo.sdk.openapi.models.Status status -> status
    com.sina.weibo.sdk.openapi.models.Comment reply_comment -> reply_comment
    com.sina.weibo.sdk.openapi.models.Comment parse(org.json.JSONObject) -> parse
com.sina.weibo.sdk.openapi.models.CommentList -> com.sina.weibo.sdk.openapi.models.CommentList:
    java.util.ArrayList commentList -> commentList
    java.lang.String previous_cursor -> previous_cursor
    java.lang.String next_cursor -> next_cursor
    int total_number -> total_number
    com.sina.weibo.sdk.openapi.models.CommentList parse(java.lang.String) -> parse
com.sina.weibo.sdk.openapi.models.Coordinate -> com.sina.weibo.sdk.openapi.models.Coordinate:
    java.lang.Double Longtitude -> Longtitude
    java.lang.Double Latitude -> Latitude
    com.sina.weibo.sdk.openapi.models.Coordinate parse(org.json.JSONObject) -> parse
com.sina.weibo.sdk.openapi.models.ErrorInfo -> com.sina.weibo.sdk.openapi.models.ErrorInfo:
    java.lang.String error -> error
    java.lang.String error_code -> error_code
    java.lang.String request -> request
    com.sina.weibo.sdk.openapi.models.ErrorInfo parse(java.lang.String) -> parse
    java.lang.String toString() -> toString
com.sina.weibo.sdk.openapi.models.Favorite -> com.sina.weibo.sdk.openapi.models.Favorite:
    com.sina.weibo.sdk.openapi.models.Status status -> status
    java.util.ArrayList tags -> tags
    java.lang.String favorited_time -> favorited_time
    com.sina.weibo.sdk.openapi.models.Favorite parse(java.lang.String) -> parse
    com.sina.weibo.sdk.openapi.models.Favorite parse(org.json.JSONObject) -> parse
com.sina.weibo.sdk.openapi.models.FavoriteList -> com.sina.weibo.sdk.openapi.models.FavoriteList:
    java.util.ArrayList favoriteList -> favoriteList
    int total_number -> total_number
    com.sina.weibo.sdk.openapi.models.FavoriteList parse(java.lang.String) -> parse
com.sina.weibo.sdk.openapi.models.Geo -> com.sina.weibo.sdk.openapi.models.Geo:
    java.lang.String longitude -> longitude
    java.lang.String latitude -> latitude
    java.lang.String city -> city
    java.lang.String province -> province
    java.lang.String city_name -> city_name
    java.lang.String province_name -> province_name
    java.lang.String address -> address
    java.lang.String pinyin -> pinyin
    java.lang.String more -> more
    com.sina.weibo.sdk.openapi.models.Geo parse(java.lang.String) -> parse
    com.sina.weibo.sdk.openapi.models.Geo parse(org.json.JSONObject) -> parse
com.sina.weibo.sdk.openapi.models.GeoList -> com.sina.weibo.sdk.openapi.models.GeoList:
    java.util.ArrayList Geos -> Geos
    com.sina.weibo.sdk.openapi.models.GeoList parse(java.lang.String) -> parse
com.sina.weibo.sdk.openapi.models.Group -> com.sina.weibo.sdk.openapi.models.Group:
    java.lang.String GROUP_ID_ALL -> GROUP_ID_ALL
    java.lang.String id -> id
    java.lang.String idStr -> idStr
    java.lang.String name -> name
    java.lang.String mode -> mode
    int visible -> visible
    int like_count -> like_count
    int member_count -> member_count
    java.lang.String description -> description
    java.util.ArrayList tags -> tags
    java.lang.String profile_image_url -> profile_image_url
    com.sina.weibo.sdk.openapi.models.User user -> user
    java.lang.String createAtTime -> createAtTime
    com.sina.weibo.sdk.openapi.models.Group parse(org.json.JSONObject) -> parse
com.sina.weibo.sdk.openapi.models.GroupList -> com.sina.weibo.sdk.openapi.models.GroupList:
    java.util.ArrayList groupList -> groupList
    int total_number -> total_number
    com.sina.weibo.sdk.openapi.models.GroupList parse(java.lang.String) -> parse
com.sina.weibo.sdk.openapi.models.GroupTag -> com.sina.weibo.sdk.openapi.models.GroupTag:
    java.lang.String tag -> tag
    com.sina.weibo.sdk.openapi.models.GroupTag parse(org.json.JSONObject) -> parse
com.sina.weibo.sdk.openapi.models.IParseable -> com.sina.weibo.sdk.openapi.models.IParseable:
    java.lang.Object parse(java.lang.String) -> parse
    java.lang.Object parse(org.json.JSONObject) -> parse
com.sina.weibo.sdk.openapi.models.MusicInfo -> com.sina.weibo.sdk.openapi.models.MusicInfo:
    java.lang.String author -> author
    java.lang.String title -> title
    java.lang.String album -> album
    java.lang.String playUrl -> playUrl
    com.sina.weibo.sdk.openapi.models.MusicInfo parser(java.lang.String) -> parser
    com.sina.weibo.sdk.openapi.models.MusicInfo parse(org.json.JSONObject) -> parse
com.sina.weibo.sdk.openapi.models.OffsetGeo -> com.sina.weibo.sdk.openapi.models.OffsetGeo:
    java.util.ArrayList Geos -> Geos
    com.sina.weibo.sdk.openapi.models.OffsetGeo parse(java.lang.String) -> parse
com.sina.weibo.sdk.openapi.models.Poi -> com.sina.weibo.sdk.openapi.models.Poi:
    java.lang.String poiid -> poiid
    java.lang.String title -> title
    java.lang.String address -> address
    java.lang.String lon -> lon
    java.lang.String lat -> lat
    java.lang.String category -> category
    java.lang.String city -> city
    java.lang.String province -> province
    java.lang.String country -> country
    java.lang.String url -> url
    java.lang.String phone -> phone
    java.lang.String postcode -> postcode
    java.lang.String weibo_id -> weibo_id
    java.lang.String categorys -> categorys
    java.lang.String category_name -> category_name
    java.lang.String icon -> icon
    java.lang.String checkin_num -> checkin_num
    java.lang.String checkin_user_num -> checkin_user_num
    java.lang.String tip_num -> tip_num
    java.lang.String photo_num -> photo_num
    java.lang.String todo_num -> todo_num
    java.lang.String distance -> distance
    com.sina.weibo.sdk.openapi.models.Poi parse(java.lang.String) -> parse
    com.sina.weibo.sdk.openapi.models.Poi parse(org.json.JSONObject) -> parse
com.sina.weibo.sdk.openapi.models.PoiList -> com.sina.weibo.sdk.openapi.models.PoiList:
    java.util.ArrayList pois -> pois
    java.lang.String totalNumber -> totalNumber
    com.sina.weibo.sdk.openapi.models.PoiList parse(java.lang.String) -> parse
com.sina.weibo.sdk.openapi.models.Privacy -> com.sina.weibo.sdk.openapi.models.Privacy:
com.sina.weibo.sdk.openapi.models.Remind -> com.sina.weibo.sdk.openapi.models.Remind:
com.sina.weibo.sdk.openapi.models.Status -> com.sina.weibo.sdk.openapi.models.Status:
    java.lang.String created_at -> created_at
    java.lang.String id -> id
    java.lang.String mid -> mid
    java.lang.String idstr -> idstr
    java.lang.String text -> text
    java.lang.String source -> source
    boolean favorited -> favorited
    boolean truncated -> truncated
    java.lang.String in_reply_to_status_id -> in_reply_to_status_id
    java.lang.String in_reply_to_user_id -> in_reply_to_user_id
    java.lang.String in_reply_to_screen_name -> in_reply_to_screen_name
    java.lang.String thumbnail_pic -> thumbnail_pic
    java.lang.String bmiddle_pic -> bmiddle_pic
    java.lang.String original_pic -> original_pic
    com.sina.weibo.sdk.openapi.models.Geo geo -> geo
    com.sina.weibo.sdk.openapi.models.User user -> user
    com.sina.weibo.sdk.openapi.models.Status retweeted_status -> retweeted_status
    int reposts_count -> reposts_count
    int comments_count -> comments_count
    int attitudes_count -> attitudes_count
    int mlevel -> mlevel
    com.sina.weibo.sdk.openapi.models.Visible visible -> visible
    java.util.ArrayList pic_urls -> pic_urls
    com.sina.weibo.sdk.openapi.models.Status parse(java.lang.String) -> parse
    com.sina.weibo.sdk.openapi.models.Status parse(org.json.JSONObject) -> parse
com.sina.weibo.sdk.openapi.models.StatusList -> com.sina.weibo.sdk.openapi.models.StatusList:
    java.util.ArrayList statusList -> statusList
    com.sina.weibo.sdk.openapi.models.Status statuses -> statuses
    boolean hasvisible -> hasvisible
    java.lang.String previous_cursor -> previous_cursor
    java.lang.String next_cursor -> next_cursor
    int total_number -> total_number
    java.lang.Object[] advertises -> advertises
    com.sina.weibo.sdk.openapi.models.StatusList parse(java.lang.String) -> parse
com.sina.weibo.sdk.openapi.models.Tag -> com.sina.weibo.sdk.openapi.models.Tag:
    int id -> id
    java.lang.String tag -> tag
    com.sina.weibo.sdk.openapi.models.Tag parse(org.json.JSONObject) -> parse
com.sina.weibo.sdk.openapi.models.User -> com.sina.weibo.sdk.openapi.models.User:
    java.lang.String id -> id
    java.lang.String idstr -> idstr
    java.lang.String screen_name -> screen_name
    java.lang.String name -> name
    int province -> province
    int city -> city
    java.lang.String location -> location
    java.lang.String description -> description
    java.lang.String url -> url
    java.lang.String profile_image_url -> profile_image_url
    java.lang.String profile_url -> profile_url
    java.lang.String domain -> domain
    java.lang.String weihao -> weihao
    java.lang.String gender -> gender
    int followers_count -> followers_count
    int friends_count -> friends_count
    int statuses_count -> statuses_count
    int favourites_count -> favourites_count
    java.lang.String created_at -> created_at
    boolean following -> following
    boolean allow_all_act_msg -> allow_all_act_msg
    boolean geo_enabled -> geo_enabled
    boolean verified -> verified
    int verified_type -> verified_type
    java.lang.String remark -> remark
    com.sina.weibo.sdk.openapi.models.Status status -> status
    boolean allow_all_comment -> allow_all_comment
    java.lang.String avatar_large -> avatar_large
    java.lang.String avatar_hd -> avatar_hd
    java.lang.String verified_reason -> verified_reason
    boolean follow_me -> follow_me
    int online_status -> online_status
    int bi_followers_count -> bi_followers_count
    java.lang.String lang -> lang
    java.lang.String star -> star
    java.lang.String mbtype -> mbtype
    java.lang.String mbrank -> mbrank
    java.lang.String block_word -> block_word
    com.sina.weibo.sdk.openapi.models.User parse(java.lang.String) -> parse
    com.sina.weibo.sdk.openapi.models.User parse(org.json.JSONObject) -> parse
com.sina.weibo.sdk.openapi.models.Visible -> com.sina.weibo.sdk.openapi.models.Visible:
    int VISIBLE_NORMAL -> VISIBLE_NORMAL
    int VISIBLE_PRIVACY -> VISIBLE_PRIVACY
    int VISIBLE_GROUPED -> VISIBLE_GROUPED
    int VISIBLE_FRIEND -> VISIBLE_FRIEND
    int type -> type
    int list_id -> list_id
    com.sina.weibo.sdk.openapi.models.Visible parse(org.json.JSONObject) -> parse
com.sina.weibo.sdk.utils.BitmapHelper -> com.sina.weibo.sdk.utils.BitmapHelper:
    boolean makesureSizeNotTooLarge(android.graphics.Rect) -> makesureSizeNotTooLarge
    int getSampleSizeOfNotTooLarge(android.graphics.Rect) -> getSampleSizeOfNotTooLarge
    int getSampleSizeAutoFitToScreen(int,int,int,int) -> getSampleSizeAutoFitToScreen
    boolean verifyBitmap(byte[]) -> verifyBitmap
    boolean verifyBitmap(java.io.InputStream) -> verifyBitmap
    boolean verifyBitmap(java.lang.String) -> verifyBitmap
com.sina.weibo.sdk.utils.ImageUtils -> com.sina.weibo.sdk.utils.ImageUtils:
    void revitionImageSizeHD(java.lang.String,int,int) -> revitionImageSizeHD
    void revitionImageSize(java.lang.String,int,int) -> revitionImageSize
    boolean revitionPostImageSize(android.content.Context,java.lang.String) -> revitionPostImageSize
    android.graphics.Bitmap safeDecodeBimtapFile(java.lang.String,android.graphics.BitmapFactory$Options) -> safeDecodeBimtapFile
    void delete(java.io.File) -> delete
    boolean deleteDependon(java.lang.String) -> deleteDependon
    boolean isFileExisted(java.lang.String) -> isFileExisted
    boolean isParentExist(java.io.File) -> isParentExist
    void makesureFileExist(java.lang.String) -> makesureFileExist
    boolean isWifi(android.content.Context) -> isWifi
com.sina.weibo.sdk.utils.LogUtil -> com.sina.weibo.sdk.utils.LogUtil:
    boolean sIsLogEnable -> sIsLogEnable
    void enableLog() -> enableLog
    void disableLog() -> disableLog
    void d(java.lang.String,java.lang.String) -> d
    void i(java.lang.String,java.lang.String) -> i
    void e(java.lang.String,java.lang.String) -> e
    void w(java.lang.String,java.lang.String) -> w
    void v(java.lang.String,java.lang.String) -> v
    java.lang.String getStackTraceMsg() -> getStackTraceMsg
com.sina.weibo.sdk.utils.MD5 -> com.sina.weibo.sdk.utils.MD5:
    char[] hexDigits -> hexDigits
    java.lang.String hexdigest(java.lang.String) -> hexdigest
    java.lang.String hexdigest(byte[]) -> hexdigest
    void main(java.lang.String[]) -> main
com.sina.weibo.sdk.utils.NetworkHelper -> com.sina.weibo.sdk.utils.NetworkHelper:
    boolean hasInternetPermission(android.content.Context) -> hasInternetPermission
    boolean isNetworkAvailable(android.content.Context) -> isNetworkAvailable
    boolean isWifiValid(android.content.Context) -> isWifiValid
    boolean isMobileNetwork(android.content.Context) -> isMobileNetwork
    android.net.NetworkInfo getActiveNetworkInfo(android.content.Context) -> getActiveNetworkInfo
    android.net.NetworkInfo getNetworkInfo(android.content.Context,int) -> getNetworkInfo
    int getNetworkType(android.content.Context) -> getNetworkType
    int getWifiState(android.content.Context) -> getWifiState
    android.net.NetworkInfo$DetailedState getWifiConnectivityState(android.content.Context) -> getWifiConnectivityState
    boolean wifiConnection(android.content.Context,java.lang.String,java.lang.String) -> wifiConnection
    void clearCookies(android.content.Context,java.lang.String) -> clearCookies
com.sina.weibo.sdk.utils.ResourceManager -> com.sina.weibo.sdk.utils.ResourceManager:
    java.lang.String TAG -> TAG
    int dimen_dialog_left_margin -> dimen_dialog_left_margin
    int dimen_dialog_top_margin -> dimen_dialog_top_margin
    int dimen_dialog_right_margin -> dimen_dialog_right_margin
    int dimen_dialog_bottom_margin -> dimen_dialog_bottom_margin
    int DIALOG_LEFT_MARGIN -> DIALOG_LEFT_MARGIN
    int DIALOG_TOP_MARGIN -> DIALOG_TOP_MARGIN
    int DIALOG_RIGHT_MARGIN -> DIALOG_RIGHT_MARGIN
    int DIALOG_BOTTOM_MARGIN -> DIALOG_BOTTOM_MARGIN
    android.util.SparseIntArray sLayoutMap -> sLayoutMap
    int drawable_dialog_background -> drawable_dialog_background
    int drawable_dialog_close_button -> drawable_dialog_close_button
    java.lang.String DIALOG_BACKGROUND_IMAGE_NAME -> DIALOG_BACKGROUND_IMAGE_NAME
    java.lang.String DIALOG_CLOSE_BUTTON_IMAGE_NAME -> DIALOG_CLOSE_BUTTON_IMAGE_NAME
    java.lang.String DRAWABLE -> DRAWABLE
    java.lang.String DRAWABLE_LDPI -> DRAWABLE_LDPI
    java.lang.String DRAWABLE_MDPI -> DRAWABLE_MDPI
    java.lang.String DRAWABLE_HDPI -> DRAWABLE_HDPI
    java.lang.String DRAWABLE_XHDPI -> DRAWABLE_XHDPI
    java.lang.String DRAWABLE_XXHDPI -> DRAWABLE_XXHDPI
    java.lang.String[] PRE_INSTALL_DRAWBLE_PATHS -> PRE_INSTALL_DRAWBLE_PATHS
    android.util.SparseArray sDrawableMap -> sDrawableMap
    int string_loading -> string_loading
    int string_network_not_available -> string_network_not_available
    java.lang.String LOADING_EN -> LOADING_EN
    java.lang.String LOADING_ZH_CN -> LOADING_ZH_CN
    java.lang.String LOADING_ZH_TW -> LOADING_ZH_TW
    java.lang.String NETWORK_NOT_AVAILABLE_EN -> NETWORK_NOT_AVAILABLE_EN
    java.lang.String NETWORK_NOT_AVAILABLE_ZH_CN -> NETWORK_NOT_AVAILABLE_ZH_CN
    java.lang.String NETWORK_NOT_AVAILABLE_ZH_TW -> NETWORK_NOT_AVAILABLE_ZH_TW
    java.util.HashMap sLanguageMap -> sLanguageMap
    java.lang.String getString(android.content.Context,int) -> getString
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    android.graphics.drawable.Drawable getNinePatchDrawable(android.content.Context,int) -> getNinePatchDrawable
    int getDimensionPixelSize(int) -> getDimensionPixelSize
    java.util.Locale getLanguage() -> getLanguage
    java.lang.String getAppropriatePathOfDrawable(android.content.Context,java.lang.String) -> getAppropriatePathOfDrawable
    android.graphics.drawable.Drawable getDrawableFromAssert(android.content.Context,java.lang.String,boolean) -> getDrawableFromAssert
    boolean isFileExisted(android.content.Context,java.lang.String) -> isFileExisted
    java.lang.String getCurrentDpiFolder(android.content.Context) -> getCurrentDpiFolder
    android.view.View extractView(android.content.Context,java.lang.String,android.view.ViewGroup) -> extractView
    android.graphics.drawable.Drawable extractDrawable(android.content.Context,java.lang.String) -> extractDrawable
com.sina.weibo.sdk.utils.SecurityHelper -> com.sina.weibo.sdk.utils.SecurityHelper:
    java.lang.String WEIBO_MD5_SIGNATURE -> WEIBO_MD5_SIGNATURE
    boolean validateAppSignatureForIntent(android.content.Context,android.content.Intent) -> validateAppSignatureForIntent
    boolean checkResponseAppLegal(android.content.Context,android.content.Intent) -> checkResponseAppLegal
    boolean containSign(android.content.pm.Signature[],java.lang.String) -> containSign
com.sina.weibo.sdk.utils.UIUtils -> com.sina.weibo.sdk.utils.UIUtils:
    void showAlert(android.content.Context,java.lang.String,java.lang.String) -> showAlert
    void showAlert(android.content.Context,int,int) -> showAlert
    void showToast(android.content.Context,int,int) -> showToast
    void showToast(android.content.Context,java.lang.CharSequence,int) -> showToast
    void showToastInCenter(android.content.Context,int,int) -> showToastInCenter
com.sina.weibo.sdk.utils.Utility -> com.sina.weibo.sdk.utils.Utility:
    java.lang.String DEFAULT_CHARSET -> DEFAULT_CHARSET
    android.os.Bundle parseUrl(java.lang.String) -> parseUrl
    android.os.Bundle decodeUrl(java.lang.String) -> decodeUrl
    boolean isChineseLocale(android.content.Context) -> isChineseLocale
    java.lang.String generateGUID() -> generateGUID
    java.lang.String getSign(android.content.Context,java.lang.String) -> getSign
    java.lang.String safeString(java.lang.String) -> safeString
com.sina.weibo.sdk.widget.LoginButton -> com.sina.weibo.sdk.widget.LoginButton:
    java.lang.String TAG -> TAG
    int LOGIN_INCON_STYLE_1 -> LOGIN_INCON_STYLE_1
    int LOGIN_INCON_STYLE_2 -> LOGIN_INCON_STYLE_2
    int LOGIN_INCON_STYLE_3 -> LOGIN_INCON_STYLE_3
    android.content.Context mContext -> mContext
    com.sina.weibo.sdk.auth.WeiboAuth$AuthInfo mAuthInfo -> mAuthInfo
    com.sina.weibo.sdk.auth.sso.SsoHandler mSsoHandler -> mSsoHandler
    com.sina.weibo.sdk.auth.WeiboAuthListener mAuthListener -> mAuthListener
    android.view.View$OnClickListener mExternalOnClickListener -> mExternalOnClickListener
    void setWeiboAuthInfo(com.sina.weibo.sdk.auth.WeiboAuth$AuthInfo,com.sina.weibo.sdk.auth.WeiboAuthListener) -> setWeiboAuthInfo
    void setWeiboAuthInfo(java.lang.String,java.lang.String,java.lang.String,com.sina.weibo.sdk.auth.WeiboAuthListener) -> setWeiboAuthInfo
    void setStyle(int) -> setStyle
    void setExternalOnClickListener(android.view.View$OnClickListener) -> setExternalOnClickListener
    void onClick(android.view.View) -> onClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void initialize(android.content.Context) -> initialize
com.sina.weibo.sdk.widget.LoginoutButton -> com.sina.weibo.sdk.widget.LoginoutButton:
    java.lang.String TAG -> TAG
    android.content.Context mContext -> mContext
    com.sina.weibo.sdk.auth.WeiboAuth$AuthInfo mAuthInfo -> mAuthInfo
    com.sina.weibo.sdk.auth.sso.SsoHandler mSsoHandler -> mSsoHandler
    com.sina.weibo.sdk.auth.WeiboAuthListener mAuthListener -> mAuthListener
    com.sina.weibo.sdk.auth.Oauth2AccessToken mAccessToken -> mAccessToken
    com.sina.weibo.sdk.net.RequestListener mLogoutListener -> mLogoutListener
    android.view.View$OnClickListener mExternalOnClickListener -> mExternalOnClickListener
    void setWeiboAuthInfo(com.sina.weibo.sdk.auth.WeiboAuth$AuthInfo,com.sina.weibo.sdk.auth.WeiboAuthListener) -> setWeiboAuthInfo
    void setWeiboAuthInfo(java.lang.String,java.lang.String,java.lang.String,com.sina.weibo.sdk.auth.WeiboAuthListener) -> setWeiboAuthInfo
    void setLogoutInfo(com.sina.weibo.sdk.auth.Oauth2AccessToken,com.sina.weibo.sdk.net.RequestListener) -> setLogoutInfo
    void setLogoutListener(com.sina.weibo.sdk.net.RequestListener) -> setLogoutListener
    void setExternalOnClickListener(android.view.View$OnClickListener) -> setExternalOnClickListener
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onClick(android.view.View) -> onClick
    void initialize(android.content.Context,android.util.AttributeSet) -> initialize
    void loadDefaultStyle(android.util.AttributeSet) -> loadDefaultStyle
    void login() -> login
    void logout() -> logout
    void access$0(com.sina.weibo.sdk.widget.LoginoutButton,com.sina.weibo.sdk.auth.Oauth2AccessToken) -> access$0
    com.sina.weibo.sdk.auth.Oauth2AccessToken access$1(com.sina.weibo.sdk.widget.LoginoutButton) -> access$1
    com.sina.weibo.sdk.auth.WeiboAuthListener access$2(com.sina.weibo.sdk.widget.LoginoutButton) -> access$2
    com.sina.weibo.sdk.net.RequestListener access$3(com.sina.weibo.sdk.widget.LoginoutButton) -> access$3
com.sina.weibo.sdk.widget.LoginoutButton$1 -> com.sina.weibo.sdk.widget.LoginoutButton$1:
    com.sina.weibo.sdk.widget.LoginoutButton this$0 -> this$0
    void onComplete(android.os.Bundle) -> onComplete
    void onCancel() -> onCancel
    void onWeiboException(com.sina.weibo.sdk.exception.WeiboException) -> onWeiboException
com.sina.weibo.sdk.widget.LoginoutButton$2 -> com.sina.weibo.sdk.widget.LoginoutButton$2:
    com.sina.weibo.sdk.widget.LoginoutButton this$0 -> this$0
    void onComplete(java.lang.String) -> onComplete
    void onWeiboException(com.sina.weibo.sdk.exception.WeiboException) -> onWeiboException
com.tencent.a.a.a -> com.tencent.a.a.a:
    com.tencent.a.a.h a -> a
    java.io.FileWriter b -> b
    java.io.File c -> c
    char[] d -> d
    com.tencent.a.a.e e -> e
    com.tencent.a.a.e f -> f
    com.tencent.a.a.e g -> g
    com.tencent.a.a.e h -> h
    boolean i -> i
    android.os.HandlerThread j -> j
    android.os.Handler k -> k
    void a() -> a
    void b() -> b
    void a(int,java.lang.Thread,long,java.lang.String,java.lang.String,java.lang.Throwable) -> a
    void a(java.lang.String) -> a
    boolean handleMessage(android.os.Message) -> handleMessage
    void f() -> f
    void g() -> g
    java.io.Writer h() -> h
    void i() -> i
    void j() -> j
    com.tencent.a.a.h c() -> c
    void a(com.tencent.a.a.h) -> a
com.tencent.a.a.b -> com.tencent.a.a.b:
    com.tencent.a.a.b a -> a
    java.lang.String a(int) -> a
    java.lang.String a(int,java.lang.Thread,long,java.lang.String,java.lang.String,java.lang.Throwable) -> a
com.tencent.a.a.c -> com.tencent.a.a.c:
    com.tencent.a.a.h a -> a
    com.tencent.a.a.h b -> b
    com.tencent.a.a.a c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    java.io.File a() -> a
    void b() -> b
    void a(int,java.lang.String,java.lang.String,java.lang.Throwable) -> a
    boolean c() -> c
    boolean d() -> d
    boolean e() -> e
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
com.tencent.a.a.d -> com.tencent.a.a.d:
    com.tencent.a.a.d d -> d
    com.tencent.a.a.d f() -> f
    void a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String,java.lang.String) -> b
    void d(java.lang.String,java.lang.String) -> c
    void a(java.lang.String,java.lang.String,java.lang.Throwable) -> a
    void b() -> b
com.tencent.a.a.e -> com.tencent.a.a.e:
    java.util.concurrent.ConcurrentLinkedQueue a -> a
    java.util.concurrent.atomic.AtomicInteger b -> b
    int a(java.lang.String) -> a
    void a(java.io.Writer,char[]) -> a
    int a() -> a
    void b() -> b
    java.util.Iterator iterator() -> iterator
com.tencent.a.a.f -> com.tencent.a.a.f:
    com.tencent.a.a.f a -> a
    void a(int,java.lang.Thread,long,java.lang.String,java.lang.String,java.lang.Throwable) -> a
com.tencent.a.a.g -> com.tencent.a.a.g:
    int a -> a
    boolean b -> b
    com.tencent.a.a.b c -> c
    void b(int,java.lang.Thread,long,java.lang.String,java.lang.String,java.lang.Throwable) -> b
    void a(int,java.lang.Thread,long,java.lang.String,java.lang.String,java.lang.Throwable) -> a
    void a(int) -> a
    boolean d() -> d
    void a(boolean) -> a
    com.tencent.a.a.b e() -> e
    void a(com.tencent.a.a.b) -> a
com.tencent.a.a.h -> com.tencent.a.a.h:
    java.text.SimpleDateFormat a -> a
    java.io.FileFilter b -> b
    java.lang.String c -> c
    int d -> d
    int e -> e
    int f -> f
    long g -> g
    java.io.File h -> h
    int i -> i
    java.lang.String j -> j
    long k -> k
    java.io.FileFilter l -> l
    java.util.Comparator m -> m
    long a(java.io.File) -> a
    java.io.File a() -> a
    java.io.File d(long) -> d
    java.io.File a(long) -> a
    java.io.File e(java.io.File) -> e
    java.io.File[] b(java.io.File) -> b
    void b() -> b
    java.io.File[] a(java.io.File[]) -> a
    int f(java.io.File) -> f
    java.lang.String c() -> c
    void a(java.lang.String) -> a
    int d() -> d
    void a(int) -> a
    int e() -> e
    void b(int) -> b
    int f() -> f
    void c(int) -> c
    long g() -> g
    void b(long) -> b
    java.io.File h() -> h
    void c(java.io.File) -> c
    int i() -> i
    void d(int) -> d
    java.lang.String j() -> j
    void b(java.lang.String) -> b
    long k() -> k
    void c(long) -> c
    int d(java.io.File) -> d
com.tencent.a.a.i -> com.tencent.a.a.i:
    boolean accept(java.io.File) -> accept
com.tencent.a.a.j -> com.tencent.a.a.j:
    com.tencent.a.a.h a -> a
    boolean accept(java.io.File) -> accept
com.tencent.a.a.k -> com.tencent.a.a.k:
    com.tencent.a.a.h a -> a
    int a(java.io.File,java.io.File) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.tencent.a.b.a -> com.tencent.a.b.a:
    android.content.Context a -> a
    android.content.Context a() -> a
    void a(android.content.Context) -> a
    java.lang.String b() -> b
    java.io.File c() -> c
com.tencent.a.b.b -> com.tencent.a.b.b:
com.tencent.a.b.b$a -> com.tencent.a.b.c:
    java.lang.String a -> a
com.tencent.a.b.c -> com.tencent.a.b.d:
    boolean a() -> a
    com.tencent.a.b.d b() -> b
com.tencent.a.b.d -> com.tencent.a.b.e:
    java.io.File a -> a
    long b -> b
    long c -> c
    java.io.File a() -> a
    void a(java.io.File) -> a
    long b() -> b
    void a(long) -> a
    long c() -> c
    void b(long) -> b
    com.tencent.a.b.d b(java.io.File) -> b
    java.lang.String toString() -> toString
com.tencent.a.c.a -> com.tencent.a.c.a:
    boolean a(java.io.File) -> a
com.tencent.a.c.b -> com.tencent.a.c.b:
    java.text.SimpleDateFormat a(java.lang.String) -> a
com.tencent.a.c.c -> com.tencent.a.c.c:
com.tencent.a.c.c$a -> com.tencent.a.c.d:
    boolean a(int,int) -> a
com.tencent.connect.UserInfo -> com.tencent.connect.a:
    void getUserInfo(com.tencent.tauth.IUiListener) -> a
com.tencent.connect.a.a -> com.tencent.connect.a.a:
    boolean a(android.content.Context,com.tencent.connect.auth.QQToken) -> a
    void b(android.content.Context,com.tencent.connect.auth.QQToken) -> b
    void c(android.content.Context,com.tencent.connect.auth.QQToken) -> c
    void d(android.content.Context,com.tencent.connect.auth.QQToken) -> d
    void a(android.content.Context,com.tencent.connect.auth.QQToken,java.lang.String,java.lang.String[]) -> a
com.tencent.connect.auth.AuthAgent -> com.tencent.connect.b.a:
    com.tencent.tauth.IUiListener a -> a
    java.lang.String b -> l
    android.app.Activity c -> m
    com.tencent.tauth.IUiListener d -> n
    android.os.Handler e -> o
    int doLogin(android.app.Activity,java.lang.String,com.tencent.tauth.IUiListener) -> a
    int doLogin(android.app.Activity,java.lang.String,com.tencent.tauth.IUiListener,boolean) -> a
    int doLogin(android.app.Activity,java.lang.String,com.tencent.tauth.IUiListener,boolean,boolean,android.support.v4.app.Fragment) -> a
    void releaseResource() -> a
    int a(boolean,com.tencent.tauth.IUiListener) -> a
    boolean a(android.app.Activity,android.support.v4.app.Fragment,boolean) -> a
    void a() -> f
    void a(java.lang.String) -> b
    void writeEncryToken(android.content.Context) -> a
    void onActivityResult(android.app.Activity,int,int,android.content.Intent) -> a
    void b(java.lang.String) -> c
    com.tencent.connect.auth.QQToken a(com.tencent.connect.auth.AuthAgent) -> a
    com.tencent.connect.auth.QQToken b(com.tencent.connect.auth.AuthAgent) -> b
    com.tencent.connect.auth.QQToken c(com.tencent.connect.auth.AuthAgent) -> c
    com.tencent.connect.auth.QQToken d(com.tencent.connect.auth.AuthAgent) -> d
    void e(com.tencent.connect.auth.AuthAgent) -> e
    void a(com.tencent.connect.auth.AuthAgent,java.lang.String) -> a
    android.app.Activity f(com.tencent.connect.auth.AuthAgent) -> f
    com.tencent.tauth.IUiListener g(com.tencent.connect.auth.AuthAgent) -> g
    android.os.Handler h(com.tencent.connect.auth.AuthAgent) -> h
    android.os.Bundle i(com.tencent.connect.auth.AuthAgent) -> i
    com.tencent.connect.auth.QQToken j(com.tencent.connect.auth.AuthAgent) -> j
com.tencent.connect.auth.AuthAgent$1 -> com.tencent.connect.b.b:
    com.tencent.connect.auth.AuthAgent a -> a
    void onError(com.tencent.tauth.UiError) -> onError
    void onComplete(java.lang.Object) -> onComplete
    void onCancel() -> onCancel
com.tencent.connect.auth.AuthAgent$2 -> com.tencent.connect.b.c:
    com.tencent.connect.auth.AuthAgent a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.tencent.connect.auth.AuthAgent$FeedConfirmListener -> com.tencent.connect.b.d:
    com.tencent.tauth.IUiListener a -> a
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    com.tencent.connect.auth.AuthAgent b -> b
    void onComplete(java.lang.Object) -> onComplete
    void a(java.lang.String,com.tencent.tauth.IUiListener,java.lang.Object) -> a
    android.graphics.drawable.Drawable a(java.lang.String,android.content.Context) -> a
    android.view.View a(android.content.Context,android.graphics.drawable.Drawable,java.lang.String,android.view.View$OnClickListener,android.view.View$OnClickListener) -> a
    void a() -> a
    void onError(com.tencent.tauth.UiError) -> onError
    void onCancel() -> onCancel
com.tencent.connect.auth.AuthAgent$FeedConfirmListener$1 -> com.tencent.connect.b.e:
    com.tencent.tauth.IUiListener c -> a
    java.lang.Object d -> b
    com.tencent.connect.auth.AuthAgent$FeedConfirmListener e -> c
    void onClick(android.view.View) -> onClick
com.tencent.connect.auth.AuthAgent$FeedConfirmListener$2 -> com.tencent.connect.b.f:
    com.tencent.tauth.IUiListener c -> a
    java.lang.Object d -> b
    com.tencent.connect.auth.AuthAgent$FeedConfirmListener e -> c
    void onClick(android.view.View) -> onClick
com.tencent.connect.auth.AuthAgent$FeedConfirmListener$3 -> com.tencent.connect.b.g:
    com.tencent.tauth.IUiListener a -> a
    java.lang.Object b -> b
    com.tencent.connect.auth.AuthAgent$FeedConfirmListener c -> c
    void onCancel(android.content.DialogInterface) -> onCancel
com.tencent.connect.auth.AuthAgent$FeedConfirmListener$ButtonListener -> com.tencent.connect.b.h:
    android.app.Dialog a -> d
    com.tencent.connect.auth.AuthAgent$FeedConfirmListener b -> e
com.tencent.connect.auth.AuthAgent$RequestListener -> com.tencent.connect.b.i:
    com.tencent.connect.auth.AuthAgent a -> a
    void onUnknowException(java.lang.Exception) -> a
    void onSocketTimeoutException(java.net.SocketTimeoutException) -> a
    void onNetworkUnavailableException(com.tencent.open.utils.HttpUtils$NetworkUnavailableException) -> a
    void onMalformedURLException(java.net.MalformedURLException) -> a
    void onJSONException(org.json.JSONException) -> a
    void onIOException(java.io.IOException) -> a
    void onHttpStatusException(com.tencent.open.utils.HttpUtils$HttpStatusException) -> a
    void onConnectTimeoutException(org.apache.http.conn.ConnectTimeoutException) -> a
    void onComplete(org.json.JSONObject) -> a
com.tencent.connect.auth.AuthAgent$TokenListener -> com.tencent.connect.b.j:
    com.tencent.tauth.IUiListener b -> b
    boolean c -> c
    android.content.Context d -> d
    com.tencent.connect.auth.AuthAgent a -> a
    void onComplete(java.lang.Object) -> onComplete
    void onError(com.tencent.tauth.UiError) -> onError
    void onCancel() -> onCancel
com.tencent.connect.auth.AuthDialog -> com.tencent.connect.b.k:
    java.lang.String a -> a
    com.tencent.connect.auth.AuthDialog$OnTimeListener b -> b
    com.tencent.tauth.IUiListener c -> c
    android.os.Handler d -> d
    android.widget.FrameLayout e -> e
    android.widget.LinearLayout f -> f
    android.widget.FrameLayout g -> g
    android.widget.ProgressBar h -> h
    java.lang.String i -> i
    com.tencent.open.b.b j -> j
    android.content.Context k -> k
    boolean l -> l
    int m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    long p -> p
    long q -> q
    java.util.HashMap r -> r
    void onCreate(android.os.Bundle) -> onCreate
    void onBackPressed() -> onBackPressed
    void onStop() -> onStop
    java.lang.String a(java.lang.String) -> a
    java.lang.String a() -> a
    void b() -> b
    void c() -> c
    void d() -> d
    boolean e() -> e
    void b(android.content.Context,java.lang.String) -> b
    void callJs(java.lang.String,java.lang.String) -> a
    void dismiss() -> dismiss
    android.content.Context a(com.tencent.connect.auth.AuthDialog) -> a
    void a(android.content.Context,java.lang.String) -> a
    java.lang.String a(com.tencent.connect.auth.AuthDialog,java.lang.String) -> a
    boolean a(com.tencent.connect.auth.AuthDialog,boolean) -> a
    boolean b(com.tencent.connect.auth.AuthDialog) -> b
    boolean c(com.tencent.connect.auth.AuthDialog) -> c
    java.lang.String a(com.tencent.connect.auth.AuthDialog,java.lang.Object) -> a
    java.lang.String d(com.tencent.connect.auth.AuthDialog) -> d
    com.tencent.open.b.b e(com.tencent.connect.auth.AuthDialog) -> e
    com.tencent.connect.auth.AuthDialog$OnTimeListener f(com.tencent.connect.auth.AuthDialog) -> f
    android.widget.FrameLayout g(com.tencent.connect.auth.AuthDialog) -> g
    java.lang.String b(com.tencent.connect.auth.AuthDialog,java.lang.String) -> b
    java.lang.String h(com.tencent.connect.auth.AuthDialog) -> h
    long i(com.tencent.connect.auth.AuthDialog) -> i
    int j(com.tencent.connect.auth.AuthDialog) -> j
    long k(com.tencent.connect.auth.AuthDialog) -> k
    int l(com.tencent.connect.auth.AuthDialog) -> l
    android.os.Handler m(com.tencent.connect.auth.AuthDialog) -> m
    java.lang.String n(com.tencent.connect.auth.AuthDialog) -> n
    long a(com.tencent.connect.auth.AuthDialog,long) -> a
    java.util.HashMap o(com.tencent.connect.auth.AuthDialog) -> o
    java.lang.String c(com.tencent.connect.auth.AuthDialog,java.lang.String) -> c
com.tencent.connect.auth.AuthDialog$1 -> com.tencent.connect.b.l:
    com.tencent.connect.auth.AuthDialog a -> a
    boolean onLongClick(android.view.View) -> onLongClick
com.tencent.connect.auth.AuthDialog$LoginWebViewClient -> com.tencent.connect.b.m:
    com.tencent.connect.auth.AuthDialog a -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslError
com.tencent.connect.auth.AuthDialog$LoginWebViewClient$1 -> com.tencent.connect.b.n:
    com.tencent.connect.auth.AuthDialog$LoginWebViewClient a -> a
    void run() -> run
com.tencent.connect.auth.AuthDialog$OnTimeListener -> com.tencent.connect.b.o:
    java.lang.String d -> d
    java.lang.String a -> a
    java.lang.String b -> b
    com.tencent.tauth.IUiListener e -> e
    com.tencent.connect.auth.AuthDialog c -> c
    void a(java.lang.String) -> a
    void onComplete(java.lang.Object) -> onComplete
    void onError(com.tencent.tauth.UiError) -> onError
    void onCancel() -> onCancel
    void a(com.tencent.connect.auth.AuthDialog$OnTimeListener,java.lang.String) -> a
com.tencent.connect.auth.AuthDialog$THandler -> com.tencent.connect.b.p:
    com.tencent.connect.auth.AuthDialog$OnTimeListener b -> b
    com.tencent.connect.auth.AuthDialog a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.tencent.connect.auth.AuthDialog$TimeOutRunable -> com.tencent.connect.b.q:
    java.lang.String a -> a
    com.tencent.connect.auth.AuthDialog b -> b
    void run() -> run
com.tencent.connect.auth.AuthMap -> com.tencent.connect.b.r:
    int b -> e
    com.tencent.connect.auth.AuthMap sInstance -> a
    java.util.HashMap authMap -> b
    java.lang.String KEY_CHAR_LIST -> c
    boolean a -> d
    com.tencent.connect.auth.AuthMap getInstance() -> a
    com.tencent.connect.auth.AuthMap$Auth get(java.lang.String) -> a
    int getSerial() -> b
    java.lang.String set(com.tencent.connect.auth.AuthMap$Auth) -> a
    void remove(java.lang.String) -> b
    java.lang.String makeKey() -> c
    java.lang.String decode(java.lang.String,java.lang.String) -> a
    java.lang.String a(java.lang.String,java.lang.String) -> b
com.tencent.connect.auth.AuthMap$Auth -> com.tencent.connect.b.s:
    com.tencent.tauth.IUiListener listener -> a
    com.tencent.connect.auth.AuthDialog dialog -> b
    java.lang.String key -> c
com.tencent.connect.auth.QQAuth -> com.tencent.connect.b.t:
    com.tencent.connect.auth.AuthAgent a -> a
    com.tencent.connect.auth.QQToken b -> b
    com.tencent.connect.auth.QQAuth createInstance(java.lang.String,android.content.Context) -> a
    int login(android.app.Activity,java.lang.String,com.tencent.tauth.IUiListener) -> login
    int login(android.app.Activity,java.lang.String,com.tencent.tauth.IUiListener,java.lang.String) -> login
    int login(android.support.v4.app.Fragment,java.lang.String,com.tencent.tauth.IUiListener,java.lang.String) -> login
    int a(android.app.Activity,android.support.v4.app.Fragment,java.lang.String,com.tencent.tauth.IUiListener,java.lang.String) -> a
    int loginWithOEM(android.app.Activity,java.lang.String,com.tencent.tauth.IUiListener,java.lang.String,java.lang.String,java.lang.String) -> a
    void logout(android.content.Context) -> logout
    com.tencent.connect.auth.QQToken getQQToken() -> a
    void setAccessToken(java.lang.String,java.lang.String) -> a
    boolean isSessionValid() -> b
    void setOpenId(android.content.Context,java.lang.String) -> a
com.tencent.connect.auth.QQToken -> com.tencent.connect.b.u:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    int d -> d
    long e -> e
    boolean isSessionValid() -> a
    java.lang.String getAppId() -> b
    java.lang.String getAccessToken() -> c
    void setAccessToken(java.lang.String,java.lang.String) -> a
    java.lang.String getOpenId() -> d
    void setOpenId(java.lang.String) -> a
com.tencent.connect.avatar.ImageActivity -> com.tencent.connect.avatar.ImageActivity:
    com.tencent.connect.auth.QQToken b -> b
    java.lang.String c -> c
    android.os.Handler d -> d
    com.tencent.connect.avatar.b e -> e
    android.widget.Button f -> f
    android.widget.Button g -> g
    com.tencent.connect.avatar.g h -> h
    android.widget.TextView i -> i
    android.widget.ProgressBar j -> j
    int k -> k
    boolean l -> l
    long m -> m
    int n -> n
    int o -> o
    int p -> p
    android.graphics.Rect q -> q
    java.lang.String r -> r
    android.graphics.Bitmap s -> s
    android.widget.RelativeLayout a -> a
    android.view.View$OnClickListener t -> t
    android.view.View$OnClickListener u -> u
    com.tencent.tauth.IUiListener v -> v
    com.tencent.tauth.IUiListener w -> w
    android.graphics.Bitmap a(java.lang.String) -> a
    android.graphics.drawable.Drawable b(java.lang.String) -> b
    android.view.View a() -> a
    void b() -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onBackPressed() -> onBackPressed
    void onDestroy() -> onDestroy
    void c() -> c
    void a(android.graphics.Bitmap) -> a
    void a(java.lang.String,int) -> a
    void b(java.lang.String,int) -> b
    void a(int,java.lang.String,java.lang.String,java.lang.String) -> a
    void d() -> d
    void e() -> e
    void c(java.lang.String) -> c
    java.lang.String d(java.lang.String) -> d
    void a(java.lang.String,long) -> a
    android.graphics.drawable.Drawable a(com.tencent.connect.avatar.ImageActivity,java.lang.String) -> a
    android.graphics.Rect a(com.tencent.connect.avatar.ImageActivity,android.graphics.Rect) -> a
    com.tencent.connect.avatar.g a(com.tencent.connect.avatar.ImageActivity) -> a
    android.graphics.Rect b(com.tencent.connect.avatar.ImageActivity) -> b
    com.tencent.connect.avatar.b c(com.tencent.connect.avatar.ImageActivity) -> c
    android.widget.ProgressBar d(com.tencent.connect.avatar.ImageActivity) -> d
    android.widget.Button e(com.tencent.connect.avatar.ImageActivity) -> e
    android.widget.Button f(com.tencent.connect.avatar.ImageActivity) -> f
    void g(com.tencent.connect.avatar.ImageActivity) -> g
    boolean h(com.tencent.connect.avatar.ImageActivity) -> h
    long i(com.tencent.connect.avatar.ImageActivity) -> i
    void j(com.tencent.connect.avatar.ImageActivity) -> j
    void a(com.tencent.connect.avatar.ImageActivity,java.lang.String,int) -> a
    boolean a(com.tencent.connect.avatar.ImageActivity,boolean) -> a
    void b(com.tencent.connect.avatar.ImageActivity,java.lang.String,int) -> b
    com.tencent.connect.auth.QQToken k(com.tencent.connect.avatar.ImageActivity) -> k
    java.lang.String l(com.tencent.connect.avatar.ImageActivity) -> l
    void a(com.tencent.connect.avatar.ImageActivity,int,java.lang.String,java.lang.String,java.lang.String) -> a
    void b(com.tencent.connect.avatar.ImageActivity,java.lang.String) -> b
    android.os.Handler m(com.tencent.connect.avatar.ImageActivity) -> m
    int n(com.tencent.connect.avatar.ImageActivity) -> n
    void o(com.tencent.connect.avatar.ImageActivity) -> o
com.tencent.connect.avatar.ImageActivity$1 -> com.tencent.connect.avatar.a:
    java.lang.String a -> a
    int b -> b
    com.tencent.connect.avatar.ImageActivity c -> c
    void run() -> run
com.tencent.connect.avatar.ImageActivity$2 -> com.tencent.connect.avatar.c:
    com.tencent.connect.avatar.ImageActivity a -> a
    void onGlobalLayout() -> onGlobalLayout
com.tencent.connect.avatar.ImageActivity$QQAvatarImp -> com.tencent.connect.avatar.d:
    com.tencent.connect.avatar.ImageActivity a -> a
    void setAvator(android.graphics.Bitmap,com.tencent.tauth.IUiListener) -> a
com.tencent.connect.avatar.ImageActivity$a -> com.tencent.connect.avatar.e:
    com.tencent.connect.avatar.ImageActivity a -> a
    void a(android.widget.Button) -> a
    void b(android.widget.Button) -> b
com.tencent.connect.avatar.a -> com.tencent.connect.avatar.f:
    com.tencent.connect.avatar.ImageActivity a -> a
    void onError(com.tencent.tauth.UiError) -> onError
    void onComplete(java.lang.Object) -> onComplete
    void onCancel() -> onCancel
    void a(int) -> a
com.tencent.connect.avatar.a$1 -> com.tencent.connect.avatar.h:
    java.lang.String a -> a
    com.tencent.connect.avatar.a b -> b
    void run() -> run
com.tencent.connect.avatar.b -> com.tencent.connect.avatar.b:
    android.graphics.Matrix c -> c
    android.graphics.Matrix d -> d
    int e -> e
    float f -> f
    float g -> g
    android.graphics.Bitmap h -> h
    boolean i -> i
    float j -> j
    float k -> k
    java.lang.String a -> a
    android.graphics.PointF l -> l
    android.graphics.PointF m -> m
    float n -> n
    float o -> o
    boolean b -> b
    android.graphics.Rect p -> p
    void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    float a(android.view.MotionEvent) -> a
    void a() -> a
    void a(android.graphics.Rect) -> a
    void a(android.graphics.PointF) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void b() -> b
    void c() -> c
    void a(com.tencent.connect.avatar.b) -> a
    boolean a(com.tencent.connect.avatar.b,boolean) -> a
com.tencent.connect.avatar.b$1 -> com.tencent.connect.avatar.i:
    com.tencent.connect.avatar.b a -> a
    void run() -> run
com.tencent.connect.avatar.b$1$1 -> com.tencent.connect.avatar.j:
    com.tencent.connect.avatar.b$1 a -> a
    void run() -> run
com.tencent.connect.avatar.c -> com.tencent.connect.avatar.k:
    int a(android.content.Context,float) -> a
com.tencent.connect.avatar.d -> com.tencent.connect.avatar.l:
    com.tencent.connect.avatar.ImageActivity a -> a
    void onClick(android.view.View) -> onClick
com.tencent.connect.avatar.d$1 -> com.tencent.connect.avatar.m:
    com.tencent.connect.avatar.d a -> a
    void run() -> run
com.tencent.connect.avatar.e -> com.tencent.connect.avatar.n:
    com.tencent.connect.avatar.ImageActivity a -> a
    void onError(com.tencent.tauth.UiError) -> onError
    void onComplete(java.lang.Object) -> onComplete
    void onCancel() -> onCancel
com.tencent.connect.avatar.f -> com.tencent.connect.avatar.o:
    com.tencent.connect.avatar.ImageActivity a -> a
    void onClick(android.view.View) -> onClick
com.tencent.connect.avatar.g -> com.tencent.connect.avatar.g:
    android.graphics.Rect a -> a
    android.graphics.Paint b -> b
    void b() -> b
    void onDraw(android.graphics.Canvas) -> onDraw
    android.graphics.Rect a() -> a
com.tencent.connect.common.AssistActivity -> com.tencent.connect.common.AssistActivity:
    com.tencent.connect.common.BaseApi sApiObject -> a
    com.tencent.connect.common.BaseApi mAPiObject -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void setApiObject(com.tencent.connect.common.BaseApi) -> a
    void setResultDataForLogin(android.app.Activity,android.content.Intent) -> a
com.tencent.connect.common.BaseApi -> com.tencent.connect.common.a:
    java.lang.String TAG -> a
    com.tencent.connect.auth.QQAuth mQQAuth -> b
    com.tencent.connect.auth.QQToken mToken -> c
    java.util.List mTaskList -> d
    android.content.Intent mActivityIntent -> e
    int sRequestCode -> f
    com.tencent.tauth.IUiListener mUiListener -> g
    java.lang.String registerChannel -> h
    java.lang.String installChannel -> i
    java.lang.String businessId -> j
    boolean isOEM -> k
    void onActivityResult(android.app.Activity,int,int,android.content.Intent) -> a
    void handleDataToListener(android.content.Intent,com.tencent.tauth.IUiListener) -> a
    android.content.Intent getActivityIntent() -> b
    android.os.Bundle composeCGIParams() -> c
    android.os.Bundle composeActivityParams() -> d
    android.content.Intent getAssitIntent(android.app.Activity) -> a
    void startAssitActivity(android.app.Activity,com.tencent.tauth.IUiListener) -> a
    void startAssitActivity(android.support.v4.app.Fragment,com.tencent.tauth.IUiListener) -> a
    boolean hasActivityForIntent() -> e
    android.content.Intent getTargetActivityIntent(java.lang.String) -> a
    void releaseResource() -> a
com.tencent.connect.common.BaseApi$ApiTask -> com.tencent.connect.common.b:
    int mRequestCode -> a
    com.tencent.tauth.IUiListener mListener -> b
    com.tencent.connect.common.BaseApi this$0 -> c
com.tencent.connect.common.BaseApi$TempRequestListener -> com.tencent.connect.common.c:
    com.tencent.tauth.IUiListener mListener -> b
    android.os.Handler mHandler -> c
    com.tencent.connect.common.BaseApi this$0 -> a
    void onComplete(org.json.JSONObject) -> a
    void onIOException(java.io.IOException) -> a
    void onMalformedURLException(java.net.MalformedURLException) -> a
    void onJSONException(org.json.JSONException) -> a
    void onConnectTimeoutException(org.apache.http.conn.ConnectTimeoutException) -> a
    void onSocketTimeoutException(java.net.SocketTimeoutException) -> a
    void onNetworkUnavailableException(com.tencent.open.utils.HttpUtils$NetworkUnavailableException) -> a
    void onHttpStatusException(com.tencent.open.utils.HttpUtils$HttpStatusException) -> a
    void onUnknowException(java.lang.Exception) -> a
    com.tencent.tauth.IUiListener access$000(com.tencent.connect.common.BaseApi$TempRequestListener) -> a
com.tencent.connect.common.BaseApi$TempRequestListener$1 -> com.tencent.connect.common.d:
    com.tencent.connect.common.BaseApi val$this$0 -> a
    com.tencent.connect.common.BaseApi$TempRequestListener this$1 -> b
    void handleMessage(android.os.Message) -> handleMessage
com.tencent.connect.dataprovider.DataType -> com.tencent.connect.dataprovider.DataType:
com.tencent.connect.dataprovider.DataType$1 -> com.tencent.connect.dataprovider.a:
com.tencent.connect.dataprovider.DataType$TextAndMediaPath -> com.tencent.connect.dataprovider.DataType$TextAndMediaPath:
    java.lang.String a -> a
    java.lang.String b -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.tencent.connect.dataprovider.DataType$TextAndMediaPath$1 -> com.tencent.connect.dataprovider.b:
    com.tencent.connect.dataprovider.DataType$TextAndMediaPath createFromParcel(android.os.Parcel) -> a
    com.tencent.connect.dataprovider.DataType$TextAndMediaPath[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.tencent.connect.dataprovider.DataType$TextOnly -> com.tencent.connect.dataprovider.DataType$TextOnly:
    java.lang.String a -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.tencent.connect.dataprovider.DataType$TextOnly$1 -> com.tencent.connect.dataprovider.c:
    com.tencent.connect.dataprovider.DataType$TextOnly createFromParcel(android.os.Parcel) -> a
    com.tencent.connect.dataprovider.DataType$TextOnly[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.tencent.connect.share.QQShare -> com.tencent.connect.c.a:
    java.lang.String mViaShareQQType -> a
    void shareToQQ(android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> a
    void a(android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> b
    void b(android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> c
    void c(android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> d
    java.lang.StringBuffer a(java.lang.StringBuffer,android.os.Bundle) -> a
    void releaseResource() -> a
    void onActivityResult(android.app.Activity,int,int,android.content.Intent) -> a
    void a(com.tencent.connect.share.QQShare,android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> a
com.tencent.connect.share.QQShare$1 -> com.tencent.connect.c.b:
    android.os.Bundle a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    com.tencent.tauth.IUiListener d -> d
    android.app.Activity e -> e
    com.tencent.connect.share.QQShare f -> f
    void saved(int,java.lang.String) -> a
    void batchSaved(int,java.util.ArrayList) -> a
com.tencent.connect.share.QQShare$2 -> com.tencent.connect.c.c:
    android.os.Bundle a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    com.tencent.tauth.IUiListener d -> d
    android.app.Activity e -> e
    com.tencent.connect.share.QQShare f -> f
    void saved(int,java.lang.String) -> a
    void batchSaved(int,java.util.ArrayList) -> a
com.tencent.connect.share.QzoneShare -> com.tencent.connect.c.d:
    java.lang.String mViaShareQzoneType -> a
    boolean a -> l
    boolean b -> m
    boolean c -> n
    boolean d -> o
    void shareToQzone(android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> a
    void a(android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> b
    void a(android.content.Context,android.os.Bundle,com.tencent.tauth.IUiListener) -> a
    java.lang.StringBuffer a(java.lang.StringBuffer,android.os.Bundle) -> a
    void releaseResource() -> a
    void onActivityResult(android.app.Activity,int,int,android.content.Intent) -> a
    void a(com.tencent.connect.share.QzoneShare,android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> a
com.tencent.connect.share.QzoneShare$1 -> com.tencent.connect.c.e:
    android.os.Bundle a -> a
    android.app.Activity b -> b
    com.tencent.tauth.IUiListener c -> c
    com.tencent.connect.share.QzoneShare d -> d
    void saved(int,java.lang.String) -> a
    void batchSaved(int,java.util.ArrayList) -> a
com.tencent.connect.share.a -> com.tencent.connect.c.f:
    void a(android.content.Context,java.lang.String,com.tencent.open.utils.AsynLoadImgBack) -> a
    void a(android.content.Context,java.util.ArrayList,com.tencent.open.utils.AsynLoadImgBack) -> a
    android.graphics.Bitmap a(android.graphics.Bitmap,int) -> a
    java.lang.String a(android.graphics.Bitmap,java.lang.String,java.lang.String) -> a
    boolean b(java.lang.String,int,int) -> b
    android.graphics.Bitmap a(java.lang.String,int) -> a
    int a(android.graphics.BitmapFactory$Options,int,int) -> a
    int b(android.graphics.BitmapFactory$Options,int,int) -> b
    boolean a(java.lang.String,int,int) -> a
com.tencent.connect.share.a$1 -> com.tencent.connect.c.g:
    com.tencent.open.utils.AsynLoadImgBack a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.tencent.connect.share.a$2 -> com.tencent.connect.c.h:
    java.lang.String a -> a
    android.os.Handler b -> b
    void run() -> run
com.tencent.connect.share.a$3 -> com.tencent.connect.c.i:
    com.tencent.open.utils.AsynLoadImgBack a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.tencent.connect.share.a$4 -> com.tencent.connect.c.j:
    java.util.ArrayList a -> a
    android.os.Handler b -> b
    void run() -> run
com.tencent.map.b.f -> com.tencent.map.b.f:
    android.net.wifi.WifiManager b -> a
    android.os.Handler d -> b
    java.lang.Runnable e -> c
    int f -> d
    com.tencent.map.b.f$a g -> e
    com.tencent.map.b.f$b h -> f
    boolean i -> g
    void a(long) -> a
    com.tencent.map.b.f$a b(com.tencent.map.b.f) -> a
    android.net.wifi.WifiManager c(com.tencent.map.b.f) -> b
    com.tencent.map.b.f$b a(com.tencent.map.b.f,com.tencent.map.b.f$b) -> a
    com.tencent.map.b.f$b d(com.tencent.map.b.f) -> c
    int e(com.tencent.map.b.f) -> d
com.tencent.map.b.f$a -> com.tencent.map.b.a:
    void a(com.tencent.map.b.f$b) -> a
    void b(int) -> a
com.tencent.map.b.f$b -> com.tencent.map.b.b:
    java.util.List a -> a
    java.lang.Object clone() -> clone
com.tencent.map.b.f$c -> com.tencent.map.b.f$c:
    int a -> a
    java.util.List b -> b
    boolean c -> c
    com.tencent.map.b.f d -> d
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void a(java.util.List) -> a
com.tencent.mm.a.a -> com.tencent.mm.a.a:
    java.lang.String a(byte[]) -> a
com.tencent.mm.sdk.a -> com.tencent.mm.sdk.a:
    android.content.ContentResolver a -> a
    java.lang.String[] b -> b
    java.util.HashMap c -> c
    com.tencent.mm.sdk.a$a d -> d
    java.lang.Object getValue(java.lang.String) -> getValue
    java.util.Map getAll() -> getAll
    java.lang.String getString(java.lang.String,java.lang.String) -> getString
    int getInt(java.lang.String,int) -> getInt
    long getLong(java.lang.String,long) -> getLong
    float getFloat(java.lang.String,float) -> getFloat
    boolean getBoolean(java.lang.String,boolean) -> getBoolean
    boolean contains(java.lang.String) -> contains
    android.content.SharedPreferences$Editor edit() -> edit
    void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener) -> registerOnSharedPreferenceChangeListener
    void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener) -> unregisterOnSharedPreferenceChangeListener
    java.util.Set getStringSet(java.lang.String,java.util.Set) -> getStringSet
com.tencent.mm.sdk.a$a -> com.tencent.mm.sdk.a$a:
    java.util.Map e -> e
    java.util.Set f -> f
    boolean g -> g
    android.content.ContentResolver a -> a
    android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String) -> putString
    android.content.SharedPreferences$Editor putInt(java.lang.String,int) -> putInt
    android.content.SharedPreferences$Editor putLong(java.lang.String,long) -> putLong
    android.content.SharedPreferences$Editor putFloat(java.lang.String,float) -> putFloat
    android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean) -> putBoolean
    android.content.SharedPreferences$Editor remove(java.lang.String) -> remove
    android.content.SharedPreferences$Editor clear() -> clear
    boolean commit() -> commit
    void apply() -> apply
    android.content.SharedPreferences$Editor putStringSet(java.lang.String,java.util.Set) -> putStringSet
com.tencent.mm.sdk.a.a -> com.tencent.mm.sdk.a.a:
    boolean a(android.content.Context,com.tencent.mm.sdk.a.a$a) -> a
com.tencent.mm.sdk.a.a$a -> com.tencent.mm.sdk.a.a$a:
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    int flags -> flags
    android.os.Bundle k -> k
com.tencent.mm.sdk.a.a.a -> com.tencent.mm.sdk.a.a.a:
    boolean a(android.content.Context,com.tencent.mm.sdk.a.a.a$a) -> a
com.tencent.mm.sdk.a.a.a$a -> com.tencent.mm.sdk.a.a.a$a:
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String j -> j
    android.os.Bundle k -> k
com.tencent.mm.sdk.a.a.b -> com.tencent.mm.sdk.a.a.b:
    byte[] a(java.lang.String,int,java.lang.String) -> a
com.tencent.mm.sdk.b.a -> com.tencent.mm.sdk.b.a:
    int level -> level
    com.tencent.mm.sdk.b.a$a n -> n
    com.tencent.mm.sdk.b.a$a o -> o
    java.lang.String p -> p
    void a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String,java.lang.String) -> b
    void c(java.lang.String,java.lang.String) -> c
    void a(java.lang.String,java.lang.String,java.lang.Object[]) -> a
    int a() -> a
com.tencent.mm.sdk.b.a$a -> com.tencent.mm.sdk.b.a$a:
    void d(java.lang.String,java.lang.String) -> d
    void e(java.lang.String,java.lang.String) -> e
    void f(java.lang.String,java.lang.String) -> f
    int b() -> b
com.tencent.mm.sdk.b.b -> com.tencent.mm.sdk.b.b:
    void d(java.lang.String,java.lang.String) -> d
    void e(java.lang.String,java.lang.String) -> e
    void f(java.lang.String,java.lang.String) -> f
    int b() -> b
com.tencent.mm.sdk.b.c -> com.tencent.mm.sdk.b.c:
    long[] q -> q
    java.util.TimeZone GMT -> GMT
    char[] r -> r
    java.lang.String[] s -> s
    boolean a(java.lang.String) -> a
com.tencent.mm.sdk.c.a -> com.tencent.mm.sdk.c.a:
com.tencent.mm.sdk.c.a$a -> com.tencent.mm.sdk.c.a$a:
    java.lang.Object a(int,java.lang.String) -> a
com.tencent.mm.sdk.c.a$b -> com.tencent.mm.sdk.c.a$b:
    android.net.Uri CONTENT_URI -> CONTENT_URI
com.tencent.mm.sdk.constants.Build -> com.tencent.mm.sdk.constants.Build:
    int SDK_INT -> SDK_INT
    java.lang.String SDK_VERSION_NAME -> SDK_VERSION_NAME
    int MIN_SDK_INT -> MIN_SDK_INT
    int TIMELINE_SUPPORTED_SDK_INT -> TIMELINE_SUPPORTED_SDK_INT
    int EMOJI_SUPPORTED_SDK_INT -> EMOJI_SUPPORTED_SDK_INT
    int MUSIC_DATA_URL_SUPPORTED_SDK_INT -> MUSIC_DATA_URL_SUPPORTED_SDK_INT
    int PAY_SUPPORTED_SDK_INT -> PAY_SUPPORTED_SDK_INT
    int OPENID_SUPPORTED_SDK_INT -> OPENID_SUPPORTED_SDK_INT
    int FAVORITE_SUPPPORTED_SDK_INT -> FAVORITE_SUPPPORTED_SDK_INT
    int MESSAGE_ACTION_SUPPPORTED_SDK_INT -> MESSAGE_ACTION_SUPPPORTED_SDK_INT
    int getMajorVersion() -> getMajorVersion
    int getMinorVersion() -> getMinorVersion
com.tencent.mm.sdk.constants.ConstantsAPI -> com.tencent.mm.sdk.constants.ConstantsAPI:
    java.lang.String ACTION_HANDLE_APP_REGISTER -> ACTION_HANDLE_APP_REGISTER
    java.lang.String ACTION_HANDLE_APP_UNREGISTER -> ACTION_HANDLE_APP_UNREGISTER
    java.lang.String ACTION_REFRESH_WXAPP -> ACTION_REFRESH_WXAPP
    int COMMAND_UNKNOWN -> COMMAND_UNKNOWN
    int COMMAND_SENDAUTH -> COMMAND_SENDAUTH
    int COMMAND_SENDMESSAGE_TO_WX -> COMMAND_SENDMESSAGE_TO_WX
    int COMMAND_GETMESSAGE_FROM_WX -> COMMAND_GETMESSAGE_FROM_WX
    int COMMAND_SHOWMESSAGE_FROM_WX -> COMMAND_SHOWMESSAGE_FROM_WX
    int COMMAND_PAY_BY_WX -> COMMAND_PAY_BY_WX
    int COMMAND_LAUNCH_BY_WX -> COMMAND_LAUNCH_BY_WX
    java.lang.String APP_PACKAGE -> APP_PACKAGE
    java.lang.String SDK_VERSION -> SDK_VERSION
    java.lang.String CONTENT -> CONTENT
    java.lang.String CHECK_SUM -> CHECK_SUM
com.tencent.mm.sdk.constants.ConstantsAPI$Token -> com.tencent.mm.sdk.constants.ConstantsAPI$Token:
    java.lang.String WX_TOKEN_KEY -> WX_TOKEN_KEY
    java.lang.String WX_TOKEN_VALUE_MSG -> WX_TOKEN_VALUE_MSG
    java.lang.String WX_TOKEN_PLATFORMID_KEY -> WX_TOKEN_PLATFORMID_KEY
    java.lang.String WX_TOKEN_PLATFORMID_VALUE -> WX_TOKEN_PLATFORMID_VALUE
    java.lang.String WX_TOKEN_JUMP_ARG -> WX_TOKEN_JUMP_ARG
com.tencent.mm.sdk.constants.ConstantsAPI$WXApp -> com.tencent.mm.sdk.constants.ConstantsAPI$WXApp:
    java.lang.String WXAPP_PACKAGE_NAME -> WXAPP_PACKAGE_NAME
    java.lang.String WXAPP_BROADCAST_PERMISSION -> WXAPP_BROADCAST_PERMISSION
    java.lang.String WXAPP_MSG_ENTRY_CLASSNAME -> WXAPP_MSG_ENTRY_CLASSNAME
com.tencent.mm.sdk.modelbase.BaseReq -> com.tencent.mm.sdk.modelbase.BaseReq:
    java.lang.String transaction -> transaction
    java.lang.String openId -> openId
    int getType() -> getType
    void toBundle(android.os.Bundle) -> toBundle
    void fromBundle(android.os.Bundle) -> fromBundle
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelbase.BaseResp -> com.tencent.mm.sdk.modelbase.BaseResp:
    int errCode -> errCode
    java.lang.String errStr -> errStr
    java.lang.String transaction -> transaction
    java.lang.String openId -> openId
    int getType() -> getType
    void toBundle(android.os.Bundle) -> toBundle
    void fromBundle(android.os.Bundle) -> fromBundle
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelbase.BaseResp$ErrCode -> com.tencent.mm.sdk.modelbase.BaseResp$ErrCode:
    int ERR_OK -> ERR_OK
    int ERR_COMM -> ERR_COMM
    int ERR_USER_CANCEL -> ERR_USER_CANCEL
    int ERR_SENT_FAILED -> ERR_SENT_FAILED
    int ERR_AUTH_DENIED -> ERR_AUTH_DENIED
    int ERR_UNSUPPORT -> ERR_UNSUPPORT
com.tencent.mm.sdk.modelmsg.GetMessageFromWX -> com.tencent.mm.sdk.modelmsg.GetMessageFromWX:
com.tencent.mm.sdk.modelmsg.GetMessageFromWX$Req -> com.tencent.mm.sdk.modelmsg.GetMessageFromWX$Req:
    java.lang.String username -> username
    int getType() -> getType
    void toBundle(android.os.Bundle) -> toBundle
    void fromBundle(android.os.Bundle) -> fromBundle
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.GetMessageFromWX$Resp -> com.tencent.mm.sdk.modelmsg.GetMessageFromWX$Resp:
    java.lang.String TAG -> TAG
    com.tencent.mm.sdk.modelmsg.WXMediaMessage message -> message
    int getType() -> getType
    void fromBundle(android.os.Bundle) -> fromBundle
    void toBundle(android.os.Bundle) -> toBundle
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.LaunchFromWX -> com.tencent.mm.sdk.modelmsg.LaunchFromWX:
com.tencent.mm.sdk.modelmsg.LaunchFromWX$Req -> com.tencent.mm.sdk.modelmsg.LaunchFromWX$Req:
    int getType() -> getType
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.LaunchFromWX$Resp -> com.tencent.mm.sdk.modelmsg.LaunchFromWX$Resp:
    int getType() -> getType
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.SendAuth -> com.tencent.mm.sdk.modelmsg.SendAuth:
com.tencent.mm.sdk.modelmsg.SendAuth$Req -> com.tencent.mm.sdk.modelmsg.SendAuth$Req:
    java.lang.String TAG -> TAG
    int LENGTH_LIMIT -> LENGTH_LIMIT
    java.lang.String scope -> scope
    java.lang.String state -> state
    int getType() -> getType
    void fromBundle(android.os.Bundle) -> fromBundle
    void toBundle(android.os.Bundle) -> toBundle
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.SendAuth$Resp -> com.tencent.mm.sdk.modelmsg.SendAuth$Resp:
    java.lang.String TAG -> TAG
    int LENGTH_LIMIT -> LENGTH_LIMIT
    java.lang.String code -> code
    java.lang.String state -> state
    java.lang.String url -> url
    int getType() -> getType
    void fromBundle(android.os.Bundle) -> fromBundle
    void toBundle(android.os.Bundle) -> toBundle
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.SendMessageToWX -> com.tencent.mm.sdk.modelmsg.SendMessageToWX:
com.tencent.mm.sdk.modelmsg.SendMessageToWX$Req -> com.tencent.mm.sdk.modelmsg.SendMessageToWX$Req:
    int WXSceneSession -> WXSceneSession
    int WXSceneTimeline -> WXSceneTimeline
    int WXSceneFavorite -> WXSceneFavorite
    java.lang.String TAG -> TAG
    int FAV_CONTENT_LENGTH_LIMIT -> FAV_CONTENT_LENGTH_LIMIT
    com.tencent.mm.sdk.modelmsg.WXMediaMessage message -> message
    int scene -> scene
    int getType() -> getType
    void fromBundle(android.os.Bundle) -> fromBundle
    void toBundle(android.os.Bundle) -> toBundle
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.SendMessageToWX$Resp -> com.tencent.mm.sdk.modelmsg.SendMessageToWX$Resp:
    int getType() -> getType
    void fromBundle(android.os.Bundle) -> fromBundle
    void toBundle(android.os.Bundle) -> toBundle
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.ShowMessageFromWX -> com.tencent.mm.sdk.modelmsg.ShowMessageFromWX:
com.tencent.mm.sdk.modelmsg.ShowMessageFromWX$Req -> com.tencent.mm.sdk.modelmsg.ShowMessageFromWX$Req:
    com.tencent.mm.sdk.modelmsg.WXMediaMessage message -> message
    int getType() -> getType
    void toBundle(android.os.Bundle) -> toBundle
    void fromBundle(android.os.Bundle) -> fromBundle
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.ShowMessageFromWX$Resp -> com.tencent.mm.sdk.modelmsg.ShowMessageFromWX$Resp:
    int getType() -> getType
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.WXAppExtendObject -> com.tencent.mm.sdk.modelmsg.WXAppExtendObject:
    java.lang.String TAG -> TAG
    int EXTINFO_LENGTH_LIMIT -> EXTINFO_LENGTH_LIMIT
    int PATH_LENGTH_LIMIT -> PATH_LENGTH_LIMIT
    int CONTENT_LENGTH_LIMIT -> CONTENT_LENGTH_LIMIT
    java.lang.String extInfo -> extInfo
    java.lang.String filePath -> filePath
    byte[] fileData -> fileData
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
    int getFileSize(java.lang.String) -> getFileSize
com.tencent.mm.sdk.modelmsg.WXAppLaunchData -> com.tencent.mm.sdk.modelmsg.WXAppLaunchData:
    java.lang.String ACTION_HANDLE_WXAPPLAUNCH -> ACTION_HANDLE_WXAPPLAUNCH
    java.lang.String ACTION_HANDLE_WXAPP_RESULT -> ACTION_HANDLE_WXAPP_RESULT
    java.lang.String ACTION_HANDLE_WXAPP_SHOW -> ACTION_HANDLE_WXAPP_SHOW
    int launchType -> launchType
    java.lang.String message -> message
com.tencent.mm.sdk.modelmsg.WXAppLaunchData$Builder -> com.tencent.mm.sdk.modelmsg.WXAppLaunchData$Builder:
    com.tencent.mm.sdk.modelmsg.WXAppLaunchData fromBundle(android.os.Bundle) -> fromBundle
    android.os.Bundle toBundle(com.tencent.mm.sdk.modelmsg.WXAppLaunchData) -> toBundle
com.tencent.mm.sdk.modelmsg.WXEmojiObject -> com.tencent.mm.sdk.modelmsg.WXEmojiObject:
    java.lang.String TAG -> TAG
    int CONTENT_LENGTH_LIMIT -> CONTENT_LENGTH_LIMIT
    byte[] emojiData -> emojiData
    java.lang.String emojiPath -> emojiPath
    void setEmojiData(byte[]) -> setEmojiData
    void setEmojiPath(java.lang.String) -> setEmojiPath
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
    int getFileSize(java.lang.String) -> getFileSize
com.tencent.mm.sdk.modelmsg.WXFileObject -> com.tencent.mm.sdk.modelmsg.WXFileObject:
    java.lang.String TAG -> TAG
    int CONTENT_LENGTH_LIMIT -> CONTENT_LENGTH_LIMIT
    int contentLengthLimit -> contentLengthLimit
    byte[] fileData -> fileData
    java.lang.String filePath -> filePath
    void setFileData(byte[]) -> setFileData
    void setFilePath(java.lang.String) -> setFilePath
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    void setContentLengthLimit(int) -> setContentLengthLimit
    boolean checkArgs() -> checkArgs
    int getFileSize(java.lang.String) -> getFileSize
com.tencent.mm.sdk.modelmsg.WXImageObject -> com.tencent.mm.sdk.modelmsg.WXImageObject:
    java.lang.String TAG -> TAG
    int CONTENT_LENGTH_LIMIT -> CONTENT_LENGTH_LIMIT
    int PATH_LENGTH_LIMIT -> PATH_LENGTH_LIMIT
    int URL_LENGTH_LIMIT -> URL_LENGTH_LIMIT
    byte[] imageData -> imageData
    java.lang.String imagePath -> imagePath
    java.lang.String imageUrl -> imageUrl
    void setImagePath(java.lang.String) -> setImagePath
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
    int getFileSize(java.lang.String) -> getFileSize
com.tencent.mm.sdk.modelmsg.WXMediaMessage -> com.tencent.mm.sdk.modelmsg.WXMediaMessage:
    java.lang.String TAG -> TAG
    int THUMB_LENGTH_LIMIT -> THUMB_LENGTH_LIMIT
    int TITLE_LENGTH_LIMIT -> TITLE_LENGTH_LIMIT
    int DESCRIPTION_LENGTH_LIMIT -> DESCRIPTION_LENGTH_LIMIT
    int MEDIA_TAG_NAME_LENGTH_LIMIT -> MEDIA_TAG_NAME_LENGTH_LIMIT
    int MESSAGE_ACTION_LENGTH_LIMIT -> MESSAGE_ACTION_LENGTH_LIMIT
    int MESSAGE_EXT_LENGTH_LIMIT -> MESSAGE_EXT_LENGTH_LIMIT
    java.lang.String ACTION_WXAPPMESSAGE -> ACTION_WXAPPMESSAGE
    int sdkVer -> sdkVer
    java.lang.String title -> title
    java.lang.String description -> description
    byte[] thumbData -> thumbData
    com.tencent.mm.sdk.modelmsg.WXMediaMessage$IMediaObject mediaObject -> mediaObject
    java.lang.String mediaTagName -> mediaTagName
    java.lang.String messageAction -> messageAction
    java.lang.String messageExt -> messageExt
    int getType() -> getType
    void setThumbImage(android.graphics.Bitmap) -> setThumbImage
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.WXMediaMessage$Builder -> com.tencent.mm.sdk.modelmsg.WXMediaMessage$Builder:
    java.lang.String KEY_IDENTIFIER -> KEY_IDENTIFIER
    android.os.Bundle toBundle(com.tencent.mm.sdk.modelmsg.WXMediaMessage) -> toBundle
    com.tencent.mm.sdk.modelmsg.WXMediaMessage fromBundle(android.os.Bundle) -> fromBundle
    java.lang.String pathNewToOld(java.lang.String) -> pathNewToOld
    java.lang.String pathOldToNew(java.lang.String) -> pathOldToNew
com.tencent.mm.sdk.modelmsg.WXMediaMessage$IMediaObject -> com.tencent.mm.sdk.modelmsg.WXMediaMessage$IMediaObject:
    int TYPE_UNKNOWN -> TYPE_UNKNOWN
    int TYPE_TEXT -> TYPE_TEXT
    int TYPE_IMAGE -> TYPE_IMAGE
    int TYPE_MUSIC -> TYPE_MUSIC
    int TYPE_VIDEO -> TYPE_VIDEO
    int TYPE_URL -> TYPE_URL
    int TYPE_FILE -> TYPE_FILE
    int TYPE_APPDATA -> TYPE_APPDATA
    int TYPE_EMOJI -> TYPE_EMOJI
    int TYPE_PRODUCT -> TYPE_PRODUCT
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.WXMusicObject -> com.tencent.mm.sdk.modelmsg.WXMusicObject:
    java.lang.String TAG -> TAG
    int LENGTH_LIMIT -> LENGTH_LIMIT
    java.lang.String musicUrl -> musicUrl
    java.lang.String musicLowBandUrl -> musicLowBandUrl
    java.lang.String musicDataUrl -> musicDataUrl
    java.lang.String musicLowBandDataUrl -> musicLowBandDataUrl
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.WXTextObject -> com.tencent.mm.sdk.modelmsg.WXTextObject:
    java.lang.String TAG -> TAG
    int LENGTH_LIMIT -> LENGTH_LIMIT
    java.lang.String text -> text
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.WXVideoObject -> com.tencent.mm.sdk.modelmsg.WXVideoObject:
    java.lang.String TAG -> TAG
    int LENGTH_LIMIT -> LENGTH_LIMIT
    java.lang.String videoUrl -> videoUrl
    java.lang.String videoLowBandUrl -> videoLowBandUrl
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.WXWebpageObject -> com.tencent.mm.sdk.modelmsg.WXWebpageObject:
    java.lang.String TAG -> TAG
    int LENGTH_LIMIT -> LENGTH_LIMIT
    java.lang.String webpageUrl -> webpageUrl
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.package-info -> com.tencent.mm.sdk.modelmsg.package-info:
com.tencent.mm.sdk.modelpay.PayReq -> com.tencent.mm.sdk.modelpay.PayReq:
    java.lang.String TAG -> TAG
    int EXTDATA_MAX_LENGTH -> EXTDATA_MAX_LENGTH
    java.lang.String appId -> appId
    java.lang.String partnerId -> partnerId
    java.lang.String prepayId -> prepayId
    java.lang.String nonceStr -> nonceStr
    java.lang.String timeStamp -> timeStamp
    java.lang.String packageValue -> packageValue
    java.lang.String sign -> sign
    java.lang.String extData -> extData
    com.tencent.mm.sdk.modelpay.PayReq$Options options -> options
    boolean checkArgs() -> checkArgs
    void toBundle(android.os.Bundle) -> toBundle
    void fromBundle(android.os.Bundle) -> fromBundle
    int getType() -> getType
com.tencent.mm.sdk.modelpay.PayReq$Options -> com.tencent.mm.sdk.modelpay.PayReq$Options:
    int INVALID_FLAGS -> INVALID_FLAGS
    java.lang.String callbackClassName -> callbackClassName
    int callbackFlags -> callbackFlags
    void toBundle(android.os.Bundle) -> toBundle
    void fromBundle(android.os.Bundle) -> fromBundle
com.tencent.mm.sdk.modelpay.PayResp -> com.tencent.mm.sdk.modelpay.PayResp:
    java.lang.String prepayId -> prepayId
    java.lang.String returnKey -> returnKey
    java.lang.String extData -> extData
    void toBundle(android.os.Bundle) -> toBundle
    void fromBundle(android.os.Bundle) -> fromBundle
    int getType() -> getType
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.openapi.IWXAPI -> com.tencent.mm.sdk.openapi.IWXAPI:
    boolean registerApp(java.lang.String) -> registerApp
    void unregisterApp() -> unregisterApp
    boolean handleIntent(android.content.Intent,com.tencent.mm.sdk.openapi.IWXAPIEventHandler) -> handleIntent
    boolean isWXAppInstalled() -> isWXAppInstalled
    boolean isWXAppSupportAPI() -> isWXAppSupportAPI
    int getWXAppSupportAPI() -> getWXAppSupportAPI
    boolean openWXApp() -> openWXApp
    boolean sendReq(com.tencent.mm.sdk.modelbase.BaseReq) -> sendReq
    boolean sendResp(com.tencent.mm.sdk.modelbase.BaseResp) -> sendResp
    void detach() -> detach
com.tencent.mm.sdk.openapi.IWXAPIEventHandler -> com.tencent.mm.sdk.openapi.IWXAPIEventHandler:
    void onReq(com.tencent.mm.sdk.modelbase.BaseReq) -> onReq
    void onResp(com.tencent.mm.sdk.modelbase.BaseResp) -> onResp
com.tencent.mm.sdk.openapi.WXAPIFactory -> com.tencent.mm.sdk.openapi.WXAPIFactory:
    java.lang.String TAG -> TAG
    com.tencent.mm.sdk.openapi.IWXAPI createWXAPI(android.content.Context,java.lang.String) -> createWXAPI
    com.tencent.mm.sdk.openapi.IWXAPI createWXAPI(android.content.Context,java.lang.String,boolean) -> createWXAPI
com.tencent.mm.sdk.openapi.WXApiImplComm -> com.tencent.mm.sdk.openapi.WXApiImplComm:
    java.lang.String TAG -> TAG
    java.lang.String WX_APP_SIGNATURE -> WX_APP_SIGNATURE
    boolean isIntentFromWx(android.content.Intent,java.lang.String) -> isIntentFromWx
    boolean validateAppSignatureForPackage(android.content.Context,java.lang.String,boolean) -> validateAppSignatureForPackage
    boolean validateAppSignature(android.content.Context,android.content.pm.Signature[],boolean) -> validateAppSignature
com.tencent.mm.sdk.openapi.WXApiImplV10 -> com.tencent.mm.sdk.openapi.WXApiImplV10:
    java.lang.String TAG -> TAG
    android.content.Context context -> context
    java.lang.String appId -> appId
    boolean checkSignature -> checkSignature
    boolean detached -> detached
    java.lang.String wxappPayEntryClassname -> wxappPayEntryClassname
    boolean registerApp(java.lang.String) -> registerApp
    void unregisterApp() -> unregisterApp
    boolean handleIntent(android.content.Intent,com.tencent.mm.sdk.openapi.IWXAPIEventHandler) -> handleIntent
    boolean isWXAppInstalled() -> isWXAppInstalled
    boolean isWXAppSupportAPI() -> isWXAppSupportAPI
    int getWXAppSupportAPI() -> getWXAppSupportAPI
    boolean openWXApp() -> openWXApp
    boolean sendReq(com.tencent.mm.sdk.modelbase.BaseReq) -> sendReq
    boolean sendPayReq(android.content.Context,android.os.Bundle) -> sendPayReq
    boolean sendResp(com.tencent.mm.sdk.modelbase.BaseResp) -> sendResp
    void detach() -> detach
    boolean checkSumConsistent(byte[],byte[]) -> checkSumConsistent
com.tencent.open.PKDialog -> com.tencent.open.PKDialog:
    java.lang.String TAG -> TAG
    int WEBVIEW_HEIGHT -> WEBVIEW_HEIGHT
    int MSG_COMPLETE -> MSG_COMPLETE
    int MSG_CANCEL -> MSG_CANCEL
    int MSG_SHOW_TIPS -> MSG_SHOW_TIPS
    int MSG_ON_LOAD -> MSG_ON_LOAD
    int MSG_SHOW_PROCESS -> MSG_SHOW_PROCESS
    java.lang.String mUrl -> mUrl
    com.tencent.tauth.IUiListener listener -> listener
    com.tencent.open.PKDialog$OnTimeListener mListener -> mListener
    android.os.Handler mHandler -> mHandler
    com.tencent.open.b.a mFlMain -> mFlMain
    com.tencent.open.b.b mWebView -> mWebView
    java.lang.ref.WeakReference mWeakContext -> mWeakContext
    int mWebviewHeight -> mWebviewHeight
    android.widget.Toast sToast -> sToast
    void onBackPressed() -> onBackPressed
    void onCreate(android.os.Bundle) -> onCreate
    void createViews() -> createViews
    void initViews() -> initViews
    void callJs(java.lang.String,java.lang.String) -> callJs
    void showTips(android.content.Context,java.lang.String) -> showTips
    void showProcessDialog(android.content.Context,java.lang.String) -> showProcessDialog
    void loadUrlWithBrowser(java.lang.String,java.lang.String,java.lang.String) -> loadUrlWithBrowser
    void onKeyboardShown(int) -> onKeyboardShown
    void onKeyboardHidden() -> onKeyboardHidden
    void onConsoleMessage(java.lang.String) -> onConsoleMessage
    android.os.Handler access$200(com.tencent.open.PKDialog) -> access$200
    java.lang.String access$300() -> access$300
    java.lang.ref.WeakReference access$400(com.tencent.open.PKDialog) -> access$400
    com.tencent.open.PKDialog$OnTimeListener access$500(com.tencent.open.PKDialog) -> access$500
    com.tencent.open.b.b access$600(com.tencent.open.PKDialog) -> access$600
    void access$800(android.content.Context,java.lang.String) -> access$800
    void access$900(android.content.Context,java.lang.String) -> access$900
com.tencent.open.PKDialog$1 -> com.tencent.open.PKDialog$1:
com.tencent.open.PKDialog$FbWebViewClient -> com.tencent.open.PKDialog$FbWebViewClient:
    com.tencent.open.PKDialog this$0 -> this$0
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.tencent.open.PKDialog$JsListener -> com.tencent.open.PKDialog$JsListener:
    com.tencent.open.PKDialog this$0 -> this$0
    void onComplete(java.lang.String) -> onComplete
    void onCancel(java.lang.String) -> onCancel
    void showMsg(java.lang.String) -> showMsg
    void onLoad(java.lang.String) -> onLoad
com.tencent.open.PKDialog$OnTimeListener -> com.tencent.open.PKDialog$OnTimeListener:
    java.lang.ref.WeakReference mWeakCtx -> mWeakCtx
    java.lang.String mAction -> mAction
    java.lang.String mUrl -> mUrl
    java.lang.String mAppid -> mAppid
    com.tencent.tauth.IUiListener mWeakL -> mWeakL
    void onComplete(java.lang.String) -> onComplete
    void onComplete(java.lang.Object) -> onComplete
    void onError(com.tencent.tauth.UiError) -> onError
    void onCancel() -> onCancel
    void access$700(com.tencent.open.PKDialog$OnTimeListener,java.lang.String) -> access$700
com.tencent.open.PKDialog$THandler -> com.tencent.open.PKDialog$THandler:
    com.tencent.open.PKDialog$OnTimeListener mL -> mL
    com.tencent.open.PKDialog this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
com.tencent.open.TDialog -> com.tencent.open.TDialog:
    android.widget.FrameLayout$LayoutParams a -> a
    java.lang.ref.WeakReference c -> c
    java.lang.ref.WeakReference d -> d
    java.lang.ref.WeakReference e -> e
    java.lang.String f -> f
    com.tencent.open.TDialog$OnTimeListener g -> g
    android.widget.FrameLayout i -> h
    com.tencent.open.b.b j -> i
    android.widget.FrameLayout k -> j
    android.widget.ProgressBar l -> k
    android.os.Handler m -> l
    android.widget.Toast b -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onBackPressed() -> onBackPressed
    void b() -> b
    void onConsoleMessage(java.lang.String) -> onConsoleMessage
    void c() -> c
    void c(android.content.Context,java.lang.String) -> c
    void d(android.content.Context,java.lang.String) -> d
    java.lang.ref.WeakReference a(com.tencent.open.TDialog) -> a
    void a(android.content.Context,java.lang.String) -> a
    java.lang.ref.WeakReference a() -> a
    void b(android.content.Context,java.lang.String) -> b
    android.os.Handler b(com.tencent.open.TDialog) -> b
    com.tencent.open.TDialog$OnTimeListener c(com.tencent.open.TDialog) -> c
    com.tencent.open.b.b d(com.tencent.open.TDialog) -> d
com.tencent.open.TDialog$1 -> com.tencent.open.TDialog$1:
com.tencent.open.TDialog$FbWebViewClient -> com.tencent.open.TDialog$FbWebViewClient:
    com.tencent.open.TDialog this$0 -> this$0
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.tencent.open.TDialog$JsListener -> com.tencent.open.TDialog$JsListener:
    com.tencent.open.TDialog this$0 -> this$0
    void onAddShare(java.lang.String) -> onAddShare
    void onInvite(java.lang.String) -> onInvite
    void onCancelAddShare(java.lang.String) -> onCancelAddShare
    void onCancelLogin() -> onCancelLogin
    void onCancelInvite() -> onCancelInvite
    void onComplete(java.lang.String) -> onComplete
    void onCancel(java.lang.String) -> onCancel
    void showMsg(java.lang.String) -> showMsg
    void onLoad(java.lang.String) -> onLoad
com.tencent.open.TDialog$OnTimeListener -> com.tencent.open.TDialog$OnTimeListener:
    java.lang.ref.WeakReference mWeakCtx -> mWeakCtx
    java.lang.String mAction -> mAction
    java.lang.String mUrl -> mUrl
    java.lang.String mAppid -> mAppid
    com.tencent.tauth.IUiListener mWeakL -> mWeakL
    void onComplete(java.lang.String) -> onComplete
    void onComplete(java.lang.Object) -> onComplete
    void onError(com.tencent.tauth.UiError) -> onError
    void onCancel() -> onCancel
    void access$000(com.tencent.open.TDialog$OnTimeListener,java.lang.String) -> access$000
com.tencent.open.TDialog$THandler -> com.tencent.open.TDialog$THandler:
    com.tencent.open.TDialog$OnTimeListener mL -> mL
    com.tencent.open.TDialog this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
com.tencent.open.a -> com.tencent.open.a:
    java.util.HashMap a -> a
    void a(com.tencent.open.a$a,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,java.util.List,com.tencent.open.a$b) -> a
    boolean a(android.webkit.WebView,java.lang.String) -> a
com.tencent.open.a$a -> com.tencent.open.b:
    void call(java.lang.String,java.util.List,com.tencent.open.a$b) -> call
    boolean customCallback() -> customCallback
com.tencent.open.a$b -> com.tencent.open.c:
    java.lang.ref.WeakReference a -> a
    long b -> b
    java.lang.String c -> c
    void a(java.lang.Object) -> a
    void a() -> a
    void a(java.lang.String) -> a
com.tencent.open.a.a -> com.tencent.open.a.a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
    java.lang.String h() -> h
    java.lang.String i() -> i
com.tencent.open.a.b -> com.tencent.open.a.b:
    com.tencent.open.a.b a -> a
    long b -> b
    int c -> c
    boolean d -> d
    java.util.Random e -> e
    com.tencent.open.a.d f -> f
    java.util.ArrayList g -> g
    java.util.ArrayList h -> h
    com.tencent.open.a.b a() -> a
    void a(android.content.Context,java.lang.String,long,long,long,int,java.lang.String) -> a
    void a(android.content.Context,java.lang.String,long,long,long,int,java.lang.String,java.lang.String,java.lang.String) -> a
    boolean a(android.content.Context,int) -> a
    void a(android.content.Context,java.lang.String,long,long,long,int,java.lang.String,java.lang.String) -> a
    int b(android.content.Context,int) -> b
    java.lang.String a(android.content.Context) -> a
    boolean b(android.content.Context) -> b
    boolean c(android.content.Context) -> c
    void a(android.content.Context,java.lang.String) -> a
    void a(android.content.Context,java.lang.String,java.lang.String,android.os.Bundle) -> a
    int a(com.tencent.open.a.b,int) -> a
    int a(com.tencent.open.a.b) -> a
    boolean a(com.tencent.open.a.b,boolean) -> a
    java.util.ArrayList b(com.tencent.open.a.b) -> b
    com.tencent.open.a.d c(com.tencent.open.a.b) -> c
com.tencent.open.a.b$1 -> com.tencent.open.a.c:
    java.lang.String a -> a
    android.content.Context b -> b
    android.os.Bundle c -> c
    com.tencent.open.a.b d -> d
    void run() -> run
com.tencent.open.a.c -> com.tencent.open.a.d:
    java.lang.String d -> d
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String e -> e
    java.lang.String a() -> a
    java.lang.String a(android.content.Context) -> a
    java.lang.String b() -> b
    java.lang.String b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    java.lang.String d(android.content.Context) -> d
    java.lang.String e(android.content.Context) -> e
    java.lang.String f(android.content.Context) -> f
com.tencent.open.a.d -> com.tencent.open.a.e:
    android.content.Context a -> a
    android.database.sqlite.SQLiteDatabase b -> b
    com.tencent.open.a.d$a c -> c
    int d -> d
    boolean a(java.lang.String,java.lang.String,java.lang.String,int,long,long,long,java.lang.String) -> a
    int a(java.util.ArrayList) -> a
    boolean a() -> a
    boolean b() -> b
    java.util.ArrayList c() -> c
    java.util.ArrayList d() -> d
    int e() -> e
com.tencent.open.a.d$a -> com.tencent.open.a.f:
    com.tencent.open.a.d a -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.tencent.open.b.a -> com.tencent.open.b.a:
    java.lang.String a -> a
    android.graphics.Rect b -> b
    boolean c -> c
    com.tencent.open.b.a$a d -> d
    void a(com.tencent.open.b.a$a) -> a
    void onMeasure(int,int) -> onMeasure
com.tencent.open.b.a$a -> com.tencent.open.b.c:
    void onKeyboardShown(int) -> onKeyboardShown
    void onKeyboardHidden() -> onKeyboardHidden
com.tencent.open.b.b -> com.tencent.open.b.b:
    void onAttachedToWindow() -> onAttachedToWindow
com.tencent.open.c.a -> com.tencent.open.c.a:
    void a(long) -> a
    android.content.SharedPreferences a() -> a
    long b() -> b
    int c() -> c
    long d() -> d
    int a(java.lang.String) -> a
    int e() -> e
    int a(int) -> a
com.tencent.open.c.b -> com.tencent.open.c.b:
    java.lang.String a -> a
    com.tencent.open.c.b b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    com.tencent.open.c.b a(android.content.Context) -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.tencent.open.c.c -> com.tencent.open.c.c:
    com.tencent.open.c.c a -> a
    com.tencent.open.c.c a() -> a
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
com.tencent.open.c.d -> com.tencent.open.c.d:
    java.lang.String a -> a
    android.net.Uri b -> b
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    int d(android.content.Context) -> d
com.tencent.open.c.e -> com.tencent.open.c.e:
    com.tencent.open.c.e a -> a
    java.lang.String b -> b
    java.util.ArrayList c -> c
    java.util.ArrayList d -> d
    boolean e -> e
    com.tencent.open.c.e a() -> a
    java.lang.String b() -> b
    void a(com.tencent.open.c.g,android.os.Bundle,boolean) -> a
    void a(java.lang.String,com.tencent.open.c.g,android.os.Bundle,boolean) -> a
    boolean c() -> c
    boolean a(java.lang.String) -> a
    boolean b(java.lang.String) -> b
    void a(java.lang.String,android.os.Bundle,boolean) -> a
    boolean a(java.lang.String,android.os.Bundle) -> a
    void a(java.lang.String,java.lang.String,android.os.Bundle,boolean) -> a
    void d() -> d
    boolean a(int) -> a
    java.lang.String a(java.util.ArrayList,java.util.ArrayList) -> a
com.tencent.open.c.e$1 -> com.tencent.open.c.f:
    boolean a -> a
    com.tencent.open.c.g b -> b
    android.os.Bundle c -> c
    java.lang.String d -> d
    com.tencent.open.c.e e -> e
    void run() -> run
com.tencent.open.c.e$2 -> com.tencent.open.c.g:
    java.lang.String a -> a
    com.tencent.open.c.e b -> b
    void run() -> run
com.tencent.open.c.f -> com.tencent.open.c.h:
    com.tencent.open.c.f a -> a
    com.tencent.open.c.f a() -> a
    android.database.sqlite.SQLiteDatabase b() -> b
    java.util.ArrayList a(java.lang.String,java.lang.String) -> a
    long a(java.lang.String,com.tencent.open.c.g) -> a
    int a(java.lang.String,java.util.ArrayList) -> a
    int b(java.lang.String,java.lang.String) -> b
    java.util.ArrayList a(java.lang.String) -> a
    java.util.ArrayList b(java.lang.String) -> b
    int a(java.util.ArrayList) -> a
    int c(java.lang.String,java.lang.String) -> c
    int c(java.lang.String) -> c
com.tencent.open.c.g -> com.tencent.open.c.i:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String a() -> a
    boolean b() -> b
    java.lang.String toString() -> toString
com.tencent.open.d -> com.tencent.open.d:
    com.tencent.open.f a -> a
    boolean onConsoleMessage(android.webkit.ConsoleMessage) -> onConsoleMessage
    void onConsoleMessage(java.lang.String,int,java.lang.String) -> onConsoleMessage
com.tencent.open.f -> com.tencent.open.e:
    com.tencent.open.a jsBridge -> jsBridge
    android.webkit.WebChromeClient mChromeClient -> mChromeClient
    void onCreate(android.os.Bundle) -> onCreate
    void onConsoleMessage(java.lang.String) -> onConsoleMessage
com.tencent.open.utils.ApkExternalInfoTool -> com.tencent.open.d.a:
    com.tencent.open.utils.ZipLong a -> a
    com.tencent.open.utils.ZipShort b -> b
    java.lang.String read(java.io.File,java.lang.String) -> a
    java.lang.String readChannelId(java.io.File) -> a
    byte[] a(java.io.RandomAccessFile) -> a
    com.tencent.open.utils.ZipShort a() -> a
com.tencent.open.utils.ApkExternalInfoTool$1 -> com.tencent.open.d.b:
com.tencent.open.utils.ApkExternalInfoTool$ApkExternalInfo -> com.tencent.open.d.c:
    java.util.Properties a -> a
    byte[] b -> b
    void a(byte[]) -> a
    java.lang.String toString() -> toString
com.tencent.open.utils.AsynLoadImg -> com.tencent.open.d.d:
    java.lang.String a -> a
    com.tencent.open.utils.AsynLoadImgBack b -> b
    java.lang.String c -> c
    long d -> d
    android.os.Handler e -> e
    java.lang.Runnable f -> f
    void save(java.lang.String,com.tencent.open.utils.AsynLoadImgBack) -> save
    boolean saveFile(android.graphics.Bitmap,java.lang.String) -> a
    android.graphics.Bitmap getbitmap(java.lang.String) -> a
    com.tencent.open.utils.AsynLoadImgBack a(com.tencent.open.utils.AsynLoadImg) -> a
    java.lang.String b(com.tencent.open.utils.AsynLoadImg) -> b
    java.lang.String a() -> a
    android.os.Handler c(com.tencent.open.utils.AsynLoadImg) -> c
    long d(com.tencent.open.utils.AsynLoadImg) -> d
com.tencent.open.utils.AsynLoadImg$1 -> com.tencent.open.d.e:
    com.tencent.open.utils.AsynLoadImg a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.tencent.open.utils.AsynLoadImg$2 -> com.tencent.open.d.f:
    com.tencent.open.utils.AsynLoadImg a -> a
    void run() -> run
com.tencent.open.utils.AsynLoadImgBack -> com.tencent.open.d.g:
    void saved(int,java.lang.String) -> a
    void batchSaved(int,java.util.ArrayList) -> a
com.tencent.open.utils.HttpUtils -> com.tencent.open.d.h:
    java.lang.String a -> a
    org.json.JSONObject request(com.tencent.connect.auth.QQToken,android.content.Context,java.lang.String,android.os.Bundle,java.lang.String) -> a
    void requestAsync(com.tencent.connect.auth.QQToken,android.content.Context,java.lang.String,android.os.Bundle,java.lang.String,com.tencent.tauth.IRequestListener) -> a
    void a(android.content.Context,com.tencent.connect.auth.QQToken,java.lang.String) -> a
    int getErrorCodeFromException(java.io.IOException) -> a
    com.tencent.open.utils.Util$Statistic openUrl2(android.content.Context,java.lang.String,java.lang.String,android.os.Bundle) -> a
    java.lang.String a(org.apache.http.HttpResponse) -> a
    org.apache.http.client.HttpClient getHttpClient(android.content.Context,java.lang.String,java.lang.String) -> a
    java.lang.String encodeUrl(android.os.Bundle) -> a
    java.lang.String encodePostBody(android.os.Bundle,java.lang.String) -> a
    com.tencent.open.utils.HttpUtils$NetworkProxy getProxy(android.content.Context) -> a
    int a(android.content.Context) -> b
    java.lang.String b(android.content.Context) -> c
com.tencent.open.utils.HttpUtils$1 -> com.tencent.open.d.i:
    com.tencent.connect.auth.QQToken a -> a
    android.content.Context b -> b
    java.lang.String c -> c
    android.os.Bundle d -> d
    java.lang.String e -> e
    com.tencent.tauth.IRequestListener f -> f
    void run() -> run
com.tencent.open.utils.HttpUtils$CustomSSLSocketFactory -> com.tencent.open.d.j:
    javax.net.ssl.SSLContext a -> a
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
com.tencent.open.utils.HttpUtils$HttpStatusException -> com.tencent.open.d.k:
com.tencent.open.utils.HttpUtils$MyX509TrustManager -> com.tencent.open.d.l:
    javax.net.ssl.X509TrustManager a -> a
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
com.tencent.open.utils.HttpUtils$NetworkProxy -> com.tencent.open.d.m:
    java.lang.String host -> a
    int port -> b
com.tencent.open.utils.HttpUtils$NetworkUnavailableException -> com.tencent.open.d.n:
com.tencent.open.utils.OpenConfig -> com.tencent.open.d.o:
    java.util.HashMap a -> a
    java.lang.String b -> b
    android.content.Context c -> c
    java.lang.String d -> d
    org.json.JSONObject e -> e
    long f -> f
    int g -> g
    boolean h -> h
    com.tencent.open.utils.OpenConfig getInstance(android.content.Context,java.lang.String) -> a
    void a() -> a
    java.lang.String a(java.lang.String) -> d
    void a(java.lang.String,java.lang.String) -> a
    void b() -> b
    void a(org.json.JSONObject) -> a
    void c() -> c
    int getInt(java.lang.String) -> a
    long getLong(java.lang.String) -> b
    boolean getBoolean(java.lang.String) -> c
    void b(java.lang.String) -> e
    android.content.Context a(com.tencent.open.utils.OpenConfig) -> a
    void a(com.tencent.open.utils.OpenConfig,org.json.JSONObject) -> a
    int a(com.tencent.open.utils.OpenConfig,int) -> a
com.tencent.open.utils.OpenConfig$1 -> com.tencent.open.d.p:
    android.os.Bundle a -> a
    com.tencent.open.utils.OpenConfig b -> b
    void run() -> run
com.tencent.open.utils.ServerSetting -> com.tencent.open.d.q:
    java.lang.String a -> a
    com.tencent.open.utils.ServerSetting b -> b
    java.lang.ref.WeakReference c -> c
    com.tencent.open.utils.ServerSetting getInstance() -> a
    java.lang.String getEnvUrl(android.content.Context,java.lang.String) -> a
com.tencent.open.utils.SystemUtils -> com.tencent.open.d.r:
    java.lang.String getAppVersionName(android.content.Context,java.lang.String) -> a
    int compareVersion(java.lang.String,java.lang.String) -> a
    boolean isAppSignatureValid(android.content.Context,java.lang.String,java.lang.String) -> a
    java.lang.String getAppSignatureMD5(android.content.Context,java.lang.String) -> b
    boolean isActivityExist(android.content.Context,android.content.Intent) -> a
    java.lang.String getAppName(android.content.Context) -> a
    int compareQQVersion(android.content.Context,java.lang.String) -> c
    int getAndroidSDKVersion() -> a
    boolean isSupportMultiTouch() -> b
com.tencent.open.utils.TemporaryStorage -> com.tencent.open.d.s:
    java.util.HashMap a -> a
    java.lang.Object set(java.lang.String,java.lang.Object) -> a
    java.lang.Object get(java.lang.String) -> a
    void remove(java.lang.String) -> b
com.tencent.open.utils.Util -> com.tencent.open.d.t:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    int f -> f
    java.lang.String g -> g
    boolean h -> h
    java.lang.String i -> i
    java.lang.String encodeUrl(android.os.Bundle) -> a
    android.os.Bundle decodeUrl(java.lang.String) -> a
    org.json.JSONObject decodeUrlToJson(org.json.JSONObject,java.lang.String) -> a
    android.os.Bundle parseUrl(java.lang.String) -> b
    org.json.JSONObject parseUrlToJson(java.lang.String) -> c
    org.json.JSONObject parseJson(java.lang.String) -> d
    void logd(java.lang.String,java.lang.String) -> a
    java.lang.String getUserIp() -> a
    boolean isEmpty(java.lang.String) -> e
    boolean a(android.content.Context) -> e
    boolean openBrowser(android.content.Context,java.lang.String) -> a
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
    boolean isMobileQQSupportShare(android.content.Context) -> a
    java.lang.String encrypt(java.lang.String) -> f
    char a(int) -> a
    void reportBernoulli(android.content.Context,java.lang.String,long,java.lang.String) -> a
    boolean hasSDCard() -> b
    java.lang.String toHexString(byte[]) -> a
    java.lang.String getApplicationLable(android.content.Context) -> b
    boolean isValidUrl(java.lang.String) -> g
    boolean isValidPath(java.lang.String) -> h
    boolean fileExists(java.lang.String) -> i
    java.lang.String subString(java.lang.String,int,java.lang.String,java.lang.String) -> a
    int parseIntValue(java.lang.String) -> j
    int parseIntValue(java.lang.String,int) -> a
    boolean checkNetWork(android.content.Context) -> c
    android.os.Bundle composeViaReportParams(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    android.os.Bundle composeViaReportParams(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String getLocation(android.content.Context) -> d
    void getPackageInfo(android.content.Context,java.lang.String) -> b
    java.lang.String getVersionName(android.content.Context,java.lang.String) -> c
    java.lang.String getAppVersionName(android.content.Context,java.lang.String) -> d
    java.lang.String getQUA3(android.content.Context,java.lang.String) -> e
    byte[] getBytesUTF8(java.lang.String) -> k
com.tencent.open.utils.Util$1 -> com.tencent.open.d.u:
    android.content.Context a -> a
    android.os.Bundle b -> b
    void run() -> run
com.tencent.open.utils.Util$Statistic -> com.tencent.open.d.v:
    java.lang.String response -> a
    long reqSize -> b
    long rspSize -> c
com.tencent.open.utils.ZipLong -> com.tencent.open.d.w:
    long a -> a
    boolean equals(java.lang.Object) -> equals
    byte[] getBytes() -> a
    long getValue() -> b
    int hashCode() -> hashCode
com.tencent.open.utils.ZipShort -> com.tencent.open.d.x:
    int a -> a
    boolean equals(java.lang.Object) -> equals
    byte[] getBytes() -> a
    int getValue() -> b
    int hashCode() -> hashCode
com.tencent.open.yyb.AppbarActivity -> com.tencent.open.yyb.AppbarActivity:
    com.tencent.open.b.b mWebView -> b
    android.widget.LinearLayout mRootView -> c
    com.tencent.open.yyb.TitleBar mTitleBar -> d
    com.tencent.open.yyb.MoreFloatingDialog mFloatingDialog -> e
    com.tencent.open.yyb.AppbarJsBridge jsBridge -> f
    com.tencent.open.yyb.ShareModel model -> g
    com.tencent.tauth.Tencent tencent -> h
    com.tencent.connect.auth.QQToken mToken -> i
    android.app.ProgressDialog mProgressDialog -> a
    java.lang.String appid -> j
    java.lang.String url -> k
    java.util.ArrayList specialModel -> l
    android.webkit.DownloadListener mDownloadListener -> m
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onBackPressed() -> onBackPressed
    void createViews() -> e
    void initViews() -> f
    boolean supportWebViewFullScreen() -> g
    com.tencent.tauth.Tencent getTencent() -> h
    com.tencent.connect.auth.QQToken getToken() -> i
    java.lang.String getWebViewCacheDir() -> j
    java.lang.String getCommonPath(java.lang.String) -> a
    com.tencent.open.yyb.MoreFloatingDialog getFloatingDialg() -> k
    java.lang.String getCommonRootDir() -> l
    boolean isSDCardExistAndCanWrite() -> m
    java.lang.String getPath(java.lang.String,boolean) -> a
    void setSupportZoom(boolean) -> a
    void onDestroy() -> onDestroy
    void onClick(android.view.View) -> onClick
    void login() -> login
    void shareToQQ() -> a
    void shareToQzone() -> b
    void shareToWX() -> c
    void shareToTimeline() -> d
    void shareToWX(boolean) -> b
    void showProgressDialog(android.content.Context,java.lang.String,java.lang.String) -> a
    com.tencent.open.yyb.TitleBar access$200(com.tencent.open.yyb.AppbarActivity) -> a
    void access$300(com.tencent.open.yyb.AppbarActivity,boolean) -> a
    com.tencent.open.yyb.AppbarJsBridge access$400(com.tencent.open.yyb.AppbarActivity) -> b
    com.tencent.connect.auth.QQToken access$500(com.tencent.open.yyb.AppbarActivity) -> c
    com.tencent.open.b.b access$600(com.tencent.open.yyb.AppbarActivity) -> d
com.tencent.open.yyb.AppbarActivity$1 -> com.tencent.open.yyb.a:
    com.tencent.connect.auth.QQToken a -> a
    com.tencent.open.yyb.AppbarActivity b -> b
    void onError(com.tencent.tauth.UiError) -> onError
    void onComplete(java.lang.Object) -> onComplete
    void onCancel() -> onCancel
com.tencent.open.yyb.AppbarActivity$2 -> com.tencent.open.yyb.b:
    com.tencent.open.yyb.AppbarActivity a -> a
    void onError(com.tencent.tauth.UiError) -> onError
    void onComplete(java.lang.Object) -> onComplete
    void onCancel() -> onCancel
com.tencent.open.yyb.AppbarActivity$3 -> com.tencent.open.yyb.c:
    com.tencent.open.yyb.AppbarActivity a -> a
    void a(byte[]) -> a
com.tencent.open.yyb.AppbarActivity$4 -> com.tencent.open.yyb.d:
    com.tencent.connect.auth.QQToken a -> a
    com.tencent.open.yyb.AppbarActivity b -> b
    void onError(com.tencent.tauth.UiError) -> onError
    void onComplete(java.lang.Object) -> onComplete
    void onCancel() -> onCancel
com.tencent.open.yyb.AppbarActivity$a -> com.tencent.open.yyb.e:
    com.tencent.open.yyb.AppbarActivity$b a -> a
    byte[] a(java.lang.String[]) -> a
    void a(byte[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.tencent.open.yyb.AppbarActivity$b -> com.tencent.open.yyb.f:
    void a(byte[]) -> a
com.tencent.open.yyb.AppbarActivity$c -> com.tencent.open.yyb.g:
    com.tencent.open.yyb.AppbarActivity a -> a
    void onReceivedTitle(android.webkit.WebView,java.lang.String) -> onReceivedTitle
com.tencent.open.yyb.AppbarActivity$d -> com.tencent.open.yyb.h:
    com.tencent.open.yyb.AppbarActivity a -> a
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
com.tencent.open.yyb.AppbarJsBridge -> com.tencent.open.yyb.i:
    android.webkit.WebView a -> a
    android.app.Activity b -> b
    void clickCallback() -> a
    int getVersion() -> b
    void invoke(java.lang.String) -> a
    void a(android.net.Uri,java.lang.String,int,java.lang.String) -> a
    boolean a(java.lang.String) -> b
    void ready() -> c
    void responseShare(int) -> a
    void responseShareFail(int) -> b
    void response(java.lang.String,int,java.lang.String,java.lang.String) -> a
    void response(java.lang.String,int,java.lang.String,java.lang.String,java.util.Map) -> a
    void responseFail(java.lang.String,int,java.lang.String,int) -> a
    void callback(java.lang.String,java.lang.String) -> a
com.tencent.open.yyb.MoreFloatingDialog -> com.tencent.open.yyb.j:
    android.widget.LinearLayout mRootView -> a
    android.widget.RelativeLayout mContentView -> b
    java.util.HashMap mShareItems -> c
    float density -> d
    android.graphics.Rect ninePatchRect -> e
    android.view.View getQQItem() -> a
    android.view.View getQzoneItem() -> b
    android.view.View getWXItem() -> c
    android.view.View getTimelineItem() -> d
    android.widget.TextView addShareItemText(android.graphics.drawable.Drawable,java.lang.String) -> a
    void addHorizontalDivider() -> e
    int dip2px(float) -> a
com.tencent.open.yyb.ShareModel -> com.tencent.open.yyb.ShareModel:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.tencent.open.yyb.TitleBar -> com.tencent.open.yyb.k:
    float density -> a
    android.widget.ImageView backBtn -> b
    android.widget.ImageView shareBtn -> c
    android.widget.TextView title -> d
    android.widget.RelativeLayout backLayout -> e
    void setTitle(java.lang.String) -> setTitle
    void initBackLayout() -> a
    void initBackBtn() -> b
    void initTitle() -> c
    void initShareBtn() -> d
    android.widget.RelativeLayout getBackBtn() -> getBackBtn
    android.widget.ImageView getSharBtn() -> getSharBtn
    int dip2px(float) -> a
com.tencent.open.yyb.a -> com.tencent.open.yyb.l:
    com.tencent.open.yyb.ShareModel a(android.os.Parcel) -> a
    com.tencent.open.yyb.ShareModel[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.tencent.open.yyb.b -> com.tencent.open.yyb.m:
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String b(java.lang.String,java.lang.String,java.lang.String) -> b
    android.graphics.drawable.Drawable a(java.lang.String,android.content.Context) -> a
    android.graphics.drawable.Drawable a(java.lang.String,android.content.Context,android.graphics.Rect) -> a
    void a(java.lang.String,java.lang.String,java.lang.String) -> a
com.tencent.open.yyb.b$1 -> com.tencent.open.yyb.n:
com.tencent.open.yyb.b$b -> com.tencent.open.yyb.o:
    java.lang.Void a(android.os.Bundle[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.tencent.open.yyb.c -> com.tencent.open.yyb.p:
    com.tencent.open.yyb.AppbarActivity a -> a
    void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long) -> onDownloadStart
com.tencent.qqconnect.dataprovider.datatype.TextAndMediaPath -> com.tencent.qqconnect.dataprovider.datatype.TextAndMediaPath:
    java.lang.String a -> a
    java.lang.String b -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.tencent.qqconnect.dataprovider.datatype.TextAndMediaPath$1 -> com.tencent.qqconnect.dataprovider.datatype.a:
    com.tencent.qqconnect.dataprovider.datatype.TextAndMediaPath createFromParcel(android.os.Parcel) -> a
    com.tencent.qqconnect.dataprovider.datatype.TextAndMediaPath[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.tencent.qqconnect.dataprovider.datatype.TextOnly -> com.tencent.qqconnect.dataprovider.datatype.TextOnly:
    java.lang.String a -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.tencent.qqconnect.dataprovider.datatype.TextOnly$1 -> com.tencent.qqconnect.dataprovider.datatype.b:
    com.tencent.qqconnect.dataprovider.datatype.TextOnly createFromParcel(android.os.Parcel) -> a
    com.tencent.qqconnect.dataprovider.datatype.TextOnly[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.tencent.stat.DeviceInfo -> com.tencent.stat.a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    int e -> e
    int f -> f
    long g -> g
    com.tencent.stat.common.StatLogger h -> h
    int a() -> a
    void a(int) -> a
    long b() -> b
    void a(long) -> a
    com.tencent.stat.DeviceInfo a(java.lang.String) -> a
    int a(com.tencent.stat.DeviceInfo) -> a
    java.lang.String toString() -> toString
    org.json.JSONObject c() -> c
    void b(java.lang.String) -> b
    java.lang.String getMid() -> d
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    java.lang.String getImei() -> e
    void e(java.lang.String) -> e
    java.lang.String getMac() -> f
    void b(int) -> b
    int getUserType() -> g
com.tencent.stat.EasyActivity -> com.tencent.stat.EasyActivity:
    void onResume() -> onResume
    void onPause() -> onPause
com.tencent.stat.EasyListActivity -> com.tencent.stat.EasyListActivity:
    void onResume() -> onResume
    void onPause() -> onPause
com.tencent.stat.MtaSDkException -> com.tencent.stat.b:
com.tencent.stat.NetworkMonitor -> com.tencent.stat.c:
    long a -> a
    int b -> b
    java.lang.String c -> c
    int d -> d
    java.lang.String e -> e
    void setMillisecondsConsume(long) -> a
    void setStatusCode(int) -> a
    void setDomain(java.lang.String) -> a
    void setPort(int) -> b
    void setRemoteIp(java.lang.String) -> b
    org.json.JSONObject toJSONObject() -> a
com.tencent.stat.StatConfig -> com.tencent.stat.d:
    com.tencent.stat.common.StatLogger e -> f
    com.tencent.stat.b a -> a
    com.tencent.stat.b b -> b
    com.tencent.stat.StatReportStrategy f -> g
    boolean g -> h
    int h -> i
    int i -> j
    int j -> k
    int k -> l
    int l -> m
    java.lang.String c -> c
    java.lang.String m -> n
    java.lang.String n -> o
    java.lang.String o -> p
    java.lang.String d -> d
    int p -> q
    int q -> r
    boolean r -> s
    long s -> t
    long t -> u
    boolean isAutoExceptionCaught -> e
    java.lang.String u -> v
    int v -> w
    int w -> x
    int x -> y
    int y -> z
    boolean z -> A
    int A -> B
    boolean B -> C
    java.lang.String C -> D
    boolean a(int,int,int) -> a
    com.tencent.stat.StatReportStrategy getStatSendStrategy() -> a
    void setStatSendStrategy(com.tencent.stat.StatReportStrategy) -> a
    boolean isEnableStatService() -> b
    void setEnableStatService(boolean) -> a
    int getSessionTimoutMillis() -> c
    int getMaxBatchReportCount() -> d
    int getMaxSendRetryCount() -> e
    int a() -> f
    int getMaxStoreEventCount() -> g
    java.lang.String a(java.lang.String,java.lang.String) -> a
    void a(org.json.JSONObject) -> a
    void a(com.tencent.stat.b,org.json.JSONObject) -> a
    void b(org.json.JSONObject) -> b
    void a(com.tencent.stat.b) -> a
    void c(org.json.JSONObject) -> c
    org.apache.http.HttpHost b() -> h
    void a(android.content.Context,java.lang.String) -> a
    java.lang.String a(android.content.Context) -> a
    java.lang.String getAppKey(android.content.Context) -> b
    boolean a(java.lang.String) -> c
    void setAppKey(android.content.Context,java.lang.String) -> b
    java.lang.String getInstallChannel(android.content.Context) -> c
    void setInstallChannel(java.lang.String) -> a
    java.lang.String getQQ() -> i
    void setSendPeriodMinutes(int) -> a
    int getSendPeriodMinutes() -> j
    int getMaxParallelTimmingEvents() -> k
    boolean isEnableSmartReporting() -> l
    void setEnableSmartReporting(boolean) -> b
    boolean isAutoExceptionCaught() -> m
    void setAutoExceptionCaught(boolean) -> c
    java.lang.String getStatReportUrl() -> n
    void setStatReportUrl(java.lang.String) -> b
    int getMaxSessionStatReportCount() -> o
    int getCurSessionStatReportCount() -> p
    void a(int) -> b
    void c() -> q
    int getMaxDaySessionNumbers() -> r
    void d() -> s
    void b(int) -> c
    int e() -> t
    int getMaxReportEventLength() -> u
    boolean isEnableConcurrentProcess() -> v
    java.lang.String getCustomUserId(android.content.Context) -> d
    java.lang.String getMid(android.content.Context) -> e
    com.tencent.stat.DeviceInfo getDeviceInfo(android.content.Context) -> f
com.tencent.stat.StatMid -> com.tencent.stat.e:
    com.tencent.stat.common.StatLogger a -> a
    com.tencent.stat.DeviceInfo b -> b
    java.lang.String getMid(android.content.Context) -> a
    com.tencent.stat.DeviceInfo getDeviceInfo(android.content.Context) -> b
    void updateDeviceInfo(android.content.Context,java.lang.String) -> a
    com.tencent.stat.DeviceInfo a(com.tencent.stat.DeviceInfo,com.tencent.stat.DeviceInfo) -> a
    com.tencent.stat.DeviceInfo a(com.tencent.stat.DeviceInfo,com.tencent.stat.DeviceInfo,com.tencent.stat.DeviceInfo) -> a
    com.tencent.stat.DeviceInfo a(android.content.Context) -> c
    com.tencent.stat.DeviceInfo a(java.lang.String) -> a
com.tencent.stat.StatNativeCrashReport -> com.tencent.stat.f:
    com.tencent.stat.common.StatLogger b -> b
    com.tencent.stat.StatNativeCrashReport a -> a
    boolean c -> c
    boolean d -> d
    boolean e -> e
    java.lang.String f -> f
    java.lang.String getTombstonesDir(android.content.Context) -> a
    java.lang.String a(java.io.File) -> a
    java.util.LinkedHashSet a(android.content.Context) -> b
    long b(java.io.File) -> b
com.tencent.stat.StatReportStrategy -> com.tencent.stat.g:
    com.tencent.stat.StatReportStrategy INSTANT -> a
    com.tencent.stat.StatReportStrategy ONLY_WIFI -> b
    com.tencent.stat.StatReportStrategy BATCH -> c
    com.tencent.stat.StatReportStrategy APP_LAUNCH -> d
    com.tencent.stat.StatReportStrategy DEVELOPER -> e
    com.tencent.stat.StatReportStrategy PERIOD -> f
    com.tencent.stat.StatReportStrategy ONLY_WIFI_NO_CACHE -> g
    int a -> h
    com.tencent.stat.StatReportStrategy[] b -> i
    com.tencent.stat.StatReportStrategy[] values() -> values
    com.tencent.stat.StatReportStrategy valueOf(java.lang.String) -> valueOf
    int a() -> a
    com.tencent.stat.StatReportStrategy getStatReportStrategy(int) -> a
com.tencent.stat.StatService -> com.tencent.stat.h:
    android.os.Handler a -> a
    java.util.Map b -> b
    long c -> c
    long d -> d
    int e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.util.Map h -> h
    com.tencent.stat.common.StatLogger i -> i
    java.lang.Thread$UncaughtExceptionHandler j -> j
    boolean k -> k
    void a(android.content.Context) -> a
    boolean b(android.content.Context) -> b
    boolean a(java.lang.String) -> a
    android.os.Handler c(android.content.Context) -> c
    org.json.JSONObject a() -> a
    void d(android.content.Context) -> d
    int a(android.content.Context,boolean) -> a
    void trackBeginPage(android.content.Context,java.lang.String) -> a
    void trackEndPage(android.content.Context,java.lang.String) -> b
    void onResume(android.content.Context) -> e
    void reportQQ(android.content.Context,java.lang.String) -> c
    boolean startStatService(android.content.Context,java.lang.String,java.lang.String) -> a
    void onPause(android.content.Context) -> f
    void a(android.content.Context,java.lang.Throwable) -> a
    void a(android.content.Context,java.util.Map) -> a
    void e(android.content.Context) -> g
    void trackCustomEvent(android.content.Context,java.lang.String,java.lang.String[]) -> a
    void testSpeed(android.content.Context) -> h
    com.tencent.stat.common.StatLogger b() -> b
    java.lang.Thread$UncaughtExceptionHandler c() -> c
com.tencent.stat.a -> com.tencent.stat.i:
    com.tencent.stat.common.StatLogger a -> a
    com.tencent.stat.a b -> b
    boolean c -> c
    boolean d -> d
    boolean e -> e
    android.content.Context f -> f
    com.tencent.stat.a a(android.content.Context) -> a
    boolean b(android.content.Context) -> b
    boolean c(android.content.Context) -> c
    boolean d(android.content.Context) -> d
    boolean a(java.lang.String,java.lang.String) -> a
    java.lang.String b(java.lang.String,java.lang.String) -> b
    boolean c(java.lang.String,java.lang.String) -> c
    java.lang.String d(java.lang.String,java.lang.String) -> d
    boolean e(java.lang.String,java.lang.String) -> e
    java.lang.String f(java.lang.String,java.lang.String) -> f
com.tencent.stat.a.a -> com.tencent.stat.a.a:
    java.util.Map a -> a
    com.tencent.stat.a.f a() -> a
    boolean a(org.json.JSONObject) -> a
com.tencent.stat.a.b -> com.tencent.stat.a.b:
    com.tencent.stat.a.c a -> a
    long l -> l
    void a(java.lang.String[]) -> a
    com.tencent.stat.a.f a() -> a
    boolean a(org.json.JSONObject) -> a
com.tencent.stat.a.c -> com.tencent.stat.a.c:
    java.lang.String a -> a
    java.lang.String[] b -> b
    java.util.Properties c -> c
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.tencent.stat.a.d -> com.tencent.stat.a.d:
    java.lang.String a -> a
    int l -> l
    int m -> m
    void a(long) -> a
    com.tencent.stat.a.f a() -> a
    boolean a(org.json.JSONObject) -> a
com.tencent.stat.a.e -> com.tencent.stat.a.e:
    java.lang.String b -> b
    long c -> c
    int d -> d
    com.tencent.stat.DeviceInfo e -> e
    int f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    boolean a -> a
    android.content.Context k -> k
    long b() -> b
    android.content.Context c() -> c
    com.tencent.stat.a.f a() -> a
    boolean a(org.json.JSONObject) -> a
    boolean b(org.json.JSONObject) -> b
    java.lang.String d() -> d
com.tencent.stat.a.f -> com.tencent.stat.a.f:
    com.tencent.stat.a.f a -> a
    com.tencent.stat.a.f b -> b
    com.tencent.stat.a.f c -> c
    com.tencent.stat.a.f d -> d
    com.tencent.stat.a.f e -> e
    com.tencent.stat.a.f f -> f
    com.tencent.stat.a.f g -> g
    com.tencent.stat.a.f h -> h
    int i -> i
    com.tencent.stat.a.f[] j -> j
    int a() -> a
com.tencent.stat.a.i -> com.tencent.stat.a.g:
    java.lang.String a -> a
    java.lang.String l -> l
    java.lang.String m -> m
    void a(java.lang.String) -> a
    com.tencent.stat.a.f a() -> a
    boolean a(org.json.JSONObject) -> a
com.tencent.stat.a.j -> com.tencent.stat.a.h:
    java.lang.Long a -> a
    java.lang.String l -> l
    java.lang.String m -> m
    com.tencent.stat.a.f a() -> a
    boolean a(org.json.JSONObject) -> a
com.tencent.stat.a.k -> com.tencent.stat.a.i:
    com.tencent.stat.common.a a -> a
    org.json.JSONObject l -> l
    com.tencent.stat.a.f a() -> a
    boolean a(org.json.JSONObject) -> a
com.tencent.stat.b -> com.tencent.stat.j:
    int a -> a
    org.json.JSONObject b -> b
    java.lang.String c -> c
    int d -> d
    java.lang.String a() -> a
com.tencent.stat.c -> com.tencent.stat.k:
    void a() -> a
    void b() -> b
com.tencent.stat.common.StatConstants -> com.tencent.stat.b.a:
    java.lang.String a -> a
com.tencent.stat.common.StatLogger -> com.tencent.stat.b.b:
    java.lang.String a -> a
    boolean b -> b
    int c -> c
    boolean isDebugEnable() -> a
    void setDebugEnable(boolean) -> a
    java.lang.String a() -> b
    void info(java.lang.Object) -> a
    void i(java.lang.Object) -> b
    void warn(java.lang.Object) -> c
    void w(java.lang.Object) -> d
    void error(java.lang.Object) -> e
    void error(java.lang.Exception) -> a
    void e(java.lang.Object) -> f
    void e(java.lang.Exception) -> b
    void debug(java.lang.Object) -> g
    void d(java.lang.Object) -> h
com.tencent.stat.common.a -> com.tencent.stat.b.c:
    com.tencent.stat.common.c a -> a
    com.tencent.stat.common.StatLogger d -> d
    java.lang.Integer b -> b
    java.lang.String c -> c
    org.json.JSONObject e -> e
    com.tencent.stat.common.c a(android.content.Context) -> a
    void a(org.json.JSONObject) -> a
com.tencent.stat.common.b -> com.tencent.stat.b.d:
com.tencent.stat.common.c -> com.tencent.stat.b.e:
    java.lang.String a -> a
    java.lang.String b -> b
    android.util.DisplayMetrics c -> c
    int d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    int l -> l
    java.lang.String m -> m
    android.content.Context n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    void a(org.json.JSONObject) -> a
com.tencent.stat.common.d -> com.tencent.stat.b.f:
    java.util.List a(java.io.File) -> a
    java.io.File a(java.lang.String) -> a
com.tencent.stat.common.e -> com.tencent.stat.b.g:
    byte[] a -> a
    byte[] a(byte[]) -> a
    byte[] b(byte[]) -> b
    byte[] a(byte[],byte[]) -> a
    byte[] b(byte[],byte[]) -> b
com.tencent.stat.common.f -> com.tencent.stat.b.h:
    long a -> a
    long a(android.content.Context,java.lang.String) -> a
    void a(android.content.Context,java.lang.String,long) -> a
    boolean a(android.content.Context) -> a
    void b(android.content.Context) -> b
com.tencent.stat.common.g -> com.tencent.stat.b.i:
    boolean a -> a
    byte[] a(byte[],int) -> a
    byte[] a(byte[],int,int,int) -> a
    byte[] b(byte[],int) -> b
    byte[] b(byte[],int,int,int) -> b
com.tencent.stat.common.h -> com.tencent.stat.b.j:
    byte[] a -> a
    int b -> b
com.tencent.stat.common.i -> com.tencent.stat.b.k:
    int[] c -> c
    int[] d -> d
    int e -> e
    int f -> f
    int[] g -> g
    boolean a(byte[],int,int,boolean) -> a
com.tencent.stat.common.j -> com.tencent.stat.b.l:
    byte[] h -> h
    byte[] i -> i
    byte[] j -> j
    int c -> c
    int k -> k
    boolean d -> d
    boolean e -> e
    boolean f -> f
    byte[] l -> l
    boolean g -> g
    boolean a(byte[],int,int,boolean) -> a
com.tencent.stat.common.k -> com.tencent.stat.b.m:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.util.Random e -> e
    com.tencent.stat.common.StatLogger f -> f
    java.lang.String g -> g
    com.tencent.stat.common.l h -> h
    com.tencent.stat.common.n i -> i
    java.lang.String j -> j
    int k -> k
    java.util.Random h() -> h
    int a() -> a
    byte[] a(byte[]) -> a
    java.lang.String a(java.lang.String) -> a
    org.apache.http.HttpHost a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    android.util.DisplayMetrics d(android.content.Context) -> d
    boolean a(android.content.Context,java.lang.String) -> a
    boolean e(android.content.Context) -> e
    java.lang.String f(android.content.Context) -> f
    boolean g(android.content.Context) -> g
    boolean h(android.content.Context) -> h
    java.lang.String i(android.content.Context) -> i
    java.lang.String j(android.content.Context) -> j
    java.lang.String k(android.content.Context) -> k
    java.lang.String l(android.content.Context) -> l
    java.lang.String m(android.content.Context) -> m
    java.lang.String n(android.content.Context) -> n
    boolean o(android.content.Context) -> o
    java.lang.String p(android.content.Context) -> p
    java.lang.Integer q(android.content.Context) -> q
    java.lang.String r(android.content.Context) -> r
    void a(org.json.JSONObject,java.lang.String,java.lang.String) -> a
    int s(android.content.Context) -> s
    com.tencent.stat.common.StatLogger b() -> b
    long c() -> c
    java.lang.Long a(java.lang.String,java.lang.String,int,int,java.lang.Long) -> a
    long b(java.lang.String) -> b
    java.lang.String t(android.content.Context) -> t
    java.lang.String a(long) -> a
    java.lang.String c(java.lang.String) -> c
    int d() -> d
    java.lang.String d(java.lang.String) -> d
    java.lang.String u(android.content.Context) -> u
    java.lang.String b(android.content.Context,java.lang.String) -> b
    java.lang.String v(android.content.Context) -> v
    java.lang.Integer w(android.content.Context) -> w
    java.lang.String e() -> e
    long f() -> f
    java.lang.String x(android.content.Context) -> x
    long G(android.content.Context) -> G
    long i() -> i
    com.tencent.stat.common.l y(android.content.Context) -> y
    org.json.JSONObject z(android.content.Context) -> z
    java.lang.String A(android.content.Context) -> A
    android.net.wifi.WifiInfo B(android.content.Context) -> B
    java.lang.String C(android.content.Context) -> C
    java.lang.String D(android.content.Context) -> D
    int E(android.content.Context) -> E
    void F(android.content.Context) -> F
    com.tencent.stat.common.StatLogger g() -> g
com.tencent.stat.common.l -> com.tencent.stat.b.n:
    int a() -> a
    int b() -> b
    int c() -> c
    java.lang.String d() -> d
com.tencent.stat.common.m -> com.tencent.stat.b.o:
    boolean accept(java.io.File) -> accept
com.tencent.stat.common.n -> com.tencent.stat.b.p:
com.tencent.stat.common.o -> com.tencent.stat.b.q:
    int a -> a
    boolean a() -> a
com.tencent.stat.common.p -> com.tencent.stat.b.r:
    android.content.SharedPreferences a -> a
    android.content.SharedPreferences a(android.content.Context) -> a
    long a(android.content.Context,java.lang.String,long) -> a
    void b(android.content.Context,java.lang.String,long) -> b
    int a(android.content.Context,java.lang.String,int) -> a
    void b(android.content.Context,java.lang.String,int) -> b
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String) -> a
    void b(android.content.Context,java.lang.String,java.lang.String) -> b
com.tencent.stat.d -> com.tencent.stat.l:
    com.tencent.stat.common.StatLogger c -> c
    long d -> d
    org.apache.http.impl.client.DefaultHttpClient a -> a
    android.os.Handler b -> b
    com.tencent.stat.d e -> e
    android.content.Context f -> f
    void a(android.content.Context) -> a
    android.content.Context a() -> a
    com.tencent.stat.d b() -> b
    void a(java.util.List,com.tencent.stat.c) -> a
    void b(java.util.List,com.tencent.stat.c) -> b
    void a(com.tencent.stat.a.e,com.tencent.stat.c) -> a
    com.tencent.stat.common.StatLogger c() -> c
com.tencent.stat.e -> com.tencent.stat.m:
    com.tencent.stat.d a -> a
    long getKeepAliveDuration(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getKeepAliveDuration
com.tencent.stat.f -> com.tencent.stat.n:
    java.util.List a -> a
    com.tencent.stat.c b -> b
    com.tencent.stat.d c -> c
    void run() -> run
com.tencent.stat.g -> com.tencent.stat.o:
    android.content.Context a -> a
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
com.tencent.stat.h -> com.tencent.stat.p:
    int[] a -> a
com.tencent.stat.i -> com.tencent.stat.q:
    android.content.Context a -> a
    void run() -> run
com.tencent.stat.j -> com.tencent.stat.r:
    android.content.Context a -> a
    java.util.Map b -> b
    java.util.Map a() -> a
    void run() -> run
    com.tencent.stat.NetworkMonitor a(java.lang.String,int) -> a
com.tencent.stat.k -> com.tencent.stat.s:
    com.tencent.stat.a.e a -> a
    com.tencent.stat.StatReportStrategy b -> b
    com.tencent.stat.c c -> c
    void a() -> a
    void a(boolean) -> a
    void run() -> run
    com.tencent.stat.a.e a(com.tencent.stat.k) -> a
com.tencent.stat.l -> com.tencent.stat.t:
    com.tencent.stat.k a -> a
    void a() -> a
    void b() -> b
com.tencent.stat.m -> com.tencent.stat.u:
    com.tencent.stat.k a -> a
    void a() -> a
    void b() -> b
com.tencent.stat.n -> com.tencent.stat.v:
    com.tencent.stat.w d -> d
    android.os.Handler a -> a
    int b -> b
    com.tencent.stat.DeviceInfo c -> c
    com.tencent.stat.common.StatLogger e -> e
    com.tencent.stat.n f -> f
    java.util.HashMap g -> g
    int a() -> a
    void e() -> e
    com.tencent.stat.n a(android.content.Context) -> a
    com.tencent.stat.n b() -> b
    com.tencent.stat.DeviceInfo b(android.content.Context) -> b
    void b(java.util.List) -> b
    void b(java.util.List,int) -> b
    void a(java.util.List,int) -> a
    void a(java.util.List) -> a
    void c(java.util.List,int) -> c
    void b(com.tencent.stat.a.e,com.tencent.stat.c) -> b
    void a(com.tencent.stat.a.e,com.tencent.stat.c) -> a
    void b(com.tencent.stat.b) -> b
    void a(com.tencent.stat.b) -> a
    void c() -> c
    void b(int) -> b
    void a(int) -> a
    void f() -> f
    void a(com.tencent.stat.n) -> a
    void a(com.tencent.stat.n,java.util.List,int) -> a
    void a(com.tencent.stat.n,java.util.List) -> a
    void a(com.tencent.stat.n,com.tencent.stat.a.e,com.tencent.stat.c) -> a
    void a(com.tencent.stat.n,com.tencent.stat.b) -> a
    com.tencent.stat.w b(com.tencent.stat.n) -> b
    com.tencent.stat.common.StatLogger d() -> d
    void a(com.tencent.stat.n,int) -> a
com.tencent.stat.o -> com.tencent.stat.w:
    com.tencent.stat.n a -> a
    void run() -> run
com.tencent.stat.p -> com.tencent.stat.x:
    java.util.List a -> a
    int b -> b
    com.tencent.stat.n c -> c
    void run() -> run
com.tencent.stat.q -> com.tencent.stat.y:
    java.util.List a -> a
    com.tencent.stat.n b -> b
    void run() -> run
com.tencent.stat.r -> com.tencent.stat.z:
    com.tencent.stat.a.e a -> a
    com.tencent.stat.c b -> b
    com.tencent.stat.n c -> c
    void run() -> run
com.tencent.stat.s -> com.tencent.stat.aa:
    com.tencent.stat.b a -> a
    com.tencent.stat.n b -> b
    void run() -> run
com.tencent.stat.t -> com.tencent.stat.ab:
    com.tencent.stat.n a -> a
    void run() -> run
com.tencent.stat.u -> com.tencent.stat.ac:
    java.util.List a -> a
    int b -> b
    com.tencent.stat.n c -> c
    void a() -> a
    void b() -> b
com.tencent.stat.v -> com.tencent.stat.ad:
    int a -> a
    com.tencent.stat.n b -> b
    void run() -> run
com.tencent.stat.w -> com.tencent.stat.ae:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void a(android.database.sqlite.SQLiteDatabase) -> a
    void b(android.database.sqlite.SQLiteDatabase) -> b
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.tencent.stat.x -> com.tencent.stat.af:
    long a -> a
    java.lang.String b -> b
    int c -> c
    int d -> d
com.tencent.tauth.AuthActivity -> com.tencent.tauth.AuthActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void handleActionUri(android.net.Uri) -> a
    void execAuthCallback(android.os.Bundle,java.lang.String) -> a
    void execShareToQQCallback(android.os.Bundle) -> a
com.tencent.tauth.IRequestListener -> com.tencent.tauth.a:
    void onComplete(org.json.JSONObject) -> a
    void onIOException(java.io.IOException) -> a
    void onMalformedURLException(java.net.MalformedURLException) -> a
    void onJSONException(org.json.JSONException) -> a
    void onConnectTimeoutException(org.apache.http.conn.ConnectTimeoutException) -> a
    void onSocketTimeoutException(java.net.SocketTimeoutException) -> a
    void onNetworkUnavailableException(com.tencent.open.utils.HttpUtils$NetworkUnavailableException) -> a
    void onHttpStatusException(com.tencent.open.utils.HttpUtils$HttpStatusException) -> a
    void onUnknowException(java.lang.Exception) -> a
com.tencent.tauth.IUiListener -> com.tencent.tauth.b:
    void onComplete(java.lang.Object) -> onComplete
    void onError(com.tencent.tauth.UiError) -> onError
    void onCancel() -> onCancel
com.tencent.tauth.Tencent -> com.tencent.tauth.c:
    com.tencent.connect.auth.QQAuth mQQAuth -> a
    com.tencent.tauth.Tencent sInstance -> b
    com.tencent.tauth.Tencent createInstance(java.lang.String,android.content.Context) -> a
    boolean checkManifestConfig(android.content.Context,java.lang.String) -> a
    int login(android.app.Activity,java.lang.String,com.tencent.tauth.IUiListener) -> login
    int login(android.support.v4.app.Fragment,java.lang.String,com.tencent.tauth.IUiListener) -> login
    void logout(android.content.Context) -> logout
    void shareToQQ(android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> a
    boolean isSessionValid() -> a
    java.lang.String getAppId() -> b
    void setAccessToken(java.lang.String,java.lang.String) -> a
    void setOpenId(java.lang.String) -> a
    com.tencent.connect.auth.QQToken getQQToken() -> c
com.tencent.tauth.UiError -> com.tencent.tauth.d:
    int errorCode -> a
    java.lang.String errorMessage -> b
    java.lang.String errorDetail -> c
com.umeng.analytics.AnalyticsConfig -> com.b.a.a:
    java.lang.String a -> o
    java.lang.String b -> p
    java.lang.String mWrapperType -> a
    java.lang.String mWrapperVersion -> b
    int mVerticalType -> c
    java.lang.String GPU_VENDER -> d
    java.lang.String GPU_RENDERER -> e
    com.umeng.analytics.Gender sGender -> f
    int sAge -> g
    java.lang.String sId -> h
    java.lang.String sSource -> i
    double[] c -> q
    int[] d -> r
    boolean ACTIVITY_DURATION_OPEN -> j
    boolean COMPRESS_DATA -> k
    boolean ENABLE_MEMORY_BUFFER -> l
    boolean CATCH_EXCEPTION -> m
    long kContinueSessionMillis -> n
    java.lang.String getAppkey(android.content.Context) -> a
    java.lang.String getChannel(android.content.Context) -> b
    double[] getLocation() -> a
    void setReportPolicy(int,int) -> a
    int[] getReportPolicy(android.content.Context) -> c
com.umeng.analytics.Gender -> com.b.a.b:
    com.umeng.analytics.Gender Male -> a
    com.umeng.analytics.Gender Female -> b
    com.umeng.analytics.Gender Unknown -> c
    int value -> d
    com.umeng.analytics.Gender[] a -> e
    com.umeng.analytics.Gender[] values() -> values
    com.umeng.analytics.Gender valueOf(java.lang.String) -> valueOf
    u.aly.ap transGender(com.umeng.analytics.Gender) -> a
com.umeng.analytics.Gender$1 -> com.b.a.c:
    java.lang.String toString() -> toString
com.umeng.analytics.Gender$2 -> com.b.a.d:
    java.lang.String toString() -> toString
com.umeng.analytics.Gender$3 -> com.b.a.e:
    java.lang.String toString() -> toString
com.umeng.analytics.Gender$4 -> com.b.a.f:
    int[] a -> a
com.umeng.analytics.MobclickAgent -> com.b.a.g:
    com.umeng.analytics.c b -> a
    void setSessionContinueMillis(long) -> a
    void openActivityDurationTrack(boolean) -> a
    void onPageStart(java.lang.String) -> a
    void onPageEnd(java.lang.String) -> b
    void onPause(android.content.Context) -> a
    void onResume(android.content.Context) -> b
    void onEvent(android.content.Context,java.lang.String,java.util.Map) -> a
    void updateOnlineConfig(android.content.Context) -> c
com.umeng.analytics.ReportPolicy -> com.b.a.h:
com.umeng.analytics.ReportPolicy$a -> com.b.a.i:
    boolean a(boolean) -> a
com.umeng.analytics.ReportPolicy$b -> com.b.a.j:
    long a -> a
    long b -> b
    u.aly.w c -> c
    boolean a(boolean) -> a
com.umeng.analytics.ReportPolicy$c -> com.b.a.k:
    int a -> a
    u.aly.q b -> b
    boolean a(boolean) -> a
com.umeng.analytics.ReportPolicy$d -> com.b.a.l:
    long a -> a
    u.aly.w b -> b
    boolean a(boolean) -> a
com.umeng.analytics.ReportPolicy$e -> com.b.a.m:
    boolean a(boolean) -> a
com.umeng.analytics.ReportPolicy$f -> com.b.a.n:
    android.content.Context a -> a
    boolean a(boolean) -> a
com.umeng.analytics.a -> com.b.a.o:
    java.lang.String[] f -> a
    java.lang.String[] g -> b
com.umeng.analytics.b -> com.b.a.p:
    void a() -> a
    void b() -> b
com.umeng.analytics.c -> com.b.a.q:
    com.umeng.analytics.onlineconfig.a a -> a
    android.content.Context b -> b
    com.umeng.analytics.b c -> c
    u.aly.m d -> d
    u.aly.z e -> e
    u.aly.v f -> f
    u.aly.n g -> g
    u.aly.k h -> h
    boolean i -> i
    void f(android.content.Context) -> d
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
    void g(android.content.Context) -> e
    void h(android.content.Context) -> f
    void a(android.content.Context,java.lang.String,java.util.Map,long) -> a
    void a(java.lang.Throwable) -> a
    void a(com.umeng.analytics.c,android.content.Context) -> a
    void b(com.umeng.analytics.c,android.content.Context) -> b
com.umeng.analytics.c$1 -> com.b.a.r:
    android.content.Context a -> a
    com.umeng.analytics.c b -> b
    void a() -> a
com.umeng.analytics.c$2 -> com.b.a.s:
    android.content.Context a -> a
    com.umeng.analytics.c b -> b
    void a() -> a
com.umeng.analytics.d -> com.b.a.t:
    java.util.concurrent.ExecutorService a -> a
    long b -> b
    java.util.concurrent.ExecutorService c -> c
    void a(java.lang.Runnable) -> a
    void a() -> a
    void b(java.lang.Runnable) -> b
com.umeng.analytics.e -> com.b.a.u:
    void run() -> run
    void a() -> a
com.umeng.analytics.f -> com.b.a.v:
    com.umeng.analytics.f a -> a
    android.content.Context b -> b
    java.lang.String c -> c
    long d -> d
    long e -> e
    com.umeng.analytics.f a(android.content.Context) -> a
    boolean a(java.io.File) -> a
    int[] a() -> a
    void a(int,int) -> a
    byte[] b() -> b
    void a(byte[]) -> a
    void c() -> c
    byte[] d() -> d
    void b(byte[]) -> b
    void e() -> e
    boolean f() -> f
    android.content.SharedPreferences g() -> g
    java.lang.String l() -> h
    java.lang.String m() -> i
    java.lang.String n() -> j
com.umeng.analytics.onlineconfig.UmengOnlineConfigureListener -> com.b.a.a.a:
    void onDataReceived(org.json.JSONObject) -> a
com.umeng.analytics.onlineconfig.a -> com.b.a.a.b:
    java.lang.String h -> a
    java.lang.String i -> b
    java.lang.String j -> c
    com.umeng.analytics.onlineconfig.UmengOnlineConfigureListener k -> d
    com.umeng.analytics.onlineconfig.c l -> e
    long m -> f
    void a(android.content.Context) -> a
    void a(com.umeng.analytics.onlineconfig.c) -> a
    void a(org.json.JSONObject) -> a
    org.json.JSONObject b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    void a(android.content.Context,com.umeng.analytics.onlineconfig.b) -> a
    void b(android.content.Context,com.umeng.analytics.onlineconfig.b) -> b
    void a(com.umeng.analytics.onlineconfig.a,org.json.JSONObject) -> a
    org.json.JSONObject a(com.umeng.analytics.onlineconfig.a,android.content.Context) -> a
    com.umeng.analytics.onlineconfig.c a(com.umeng.analytics.onlineconfig.a) -> a
    void a(com.umeng.analytics.onlineconfig.a,android.content.Context,com.umeng.analytics.onlineconfig.b) -> a
    void b(com.umeng.analytics.onlineconfig.a,android.content.Context,com.umeng.analytics.onlineconfig.b) -> b
com.umeng.analytics.onlineconfig.a$a -> com.b.a.a.c:
    org.json.JSONObject e -> e
    com.umeng.analytics.onlineconfig.a a -> a
    org.json.JSONObject a() -> a
    java.lang.String b() -> b
com.umeng.analytics.onlineconfig.a$b -> com.b.a.a.d:
    android.content.Context a -> a
    com.umeng.analytics.onlineconfig.a b -> b
    void run() -> run
    boolean a() -> a
    void b() -> b
com.umeng.analytics.onlineconfig.b -> com.b.a.a.e:
    org.json.JSONObject a -> a
    boolean b -> b
    int c -> c
    int d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    void a(org.json.JSONObject) -> a
    void a() -> a
com.umeng.analytics.onlineconfig.c -> com.b.a.a.f:
    void a(int,long) -> a
com.xonami.javaBells.DefaultJingleSession -> com.c.a.a:
    com.xonami.javaBells.JinglePacketHandler jinglePacketHandler -> jinglePacketHandler
    java.lang.String myJid -> myJid
    java.lang.String sessionId -> sessionId
    org.jivesoftware.smack.XMPPConnection connection -> connection
    com.xonami.javaBells.DefaultJingleSession$SessionState state -> state
    java.lang.String peerJid -> peerJid
    boolean checkAndAck(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> checkAndAck
    boolean check(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> check
    void closeSession(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason) -> closeSession
    void ack(org.jivesoftware.smack.packet.IQ) -> ack
    void unsupportedInfo(org.jivesoftware.smack.packet.IQ) -> unsupportedInfo
    void handleContentAcept(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleContentAcept
    void handleContentAdd(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleContentAdd
    void handleContentModify(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleContentModify
    void handleContentReject(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleContentReject
    void handleContentRemove(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleContentRemove
    void handleDescriptionInfo(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleDescriptionInfo
    void handleSecurityInfo(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleSecurityInfo
    void handleSessionAccept(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleSessionAccept
    void handleSessionInfo(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleSessionInfo
    void handleSessionInitiate(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleSessionInitiate
    void handleSessionTerminate(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleSessionTerminate
    void handleTransportAccept(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleTransportAccept
    void handleTransportInfo(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleTransportInfo
    void handleTransportReject(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleTransportReject
    void handleSessionReplace(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleSessionReplace
    java.lang.String getSessionId() -> getSessionId
com.xonami.javaBells.DefaultJingleSession$1 -> com.c.a.b:
    com.xonami.javaBells.DefaultJingleSession this$0 -> a
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
com.xonami.javaBells.DefaultJingleSession$SessionState -> com.c.a.c:
    com.xonami.javaBells.DefaultJingleSession$SessionState NEW -> a
    com.xonami.javaBells.DefaultJingleSession$SessionState NEGOTIATING_TRANSPORT -> b
    com.xonami.javaBells.DefaultJingleSession$SessionState OPEN -> c
    com.xonami.javaBells.DefaultJingleSession$SessionState CLOSED -> d
    com.xonami.javaBells.DefaultJingleSession$SessionState[] $VALUES -> e
    com.xonami.javaBells.DefaultJingleSession$SessionState[] values() -> values
    com.xonami.javaBells.DefaultJingleSession$SessionState valueOf(java.lang.String) -> valueOf
com.xonami.javaBells.IceAgent -> com.c.a.d:
    java.security.SecureRandom random -> a
    int candidateId -> c
    int streamPort -> b
    org.ice4j.ice.Agent agent -> d
    void createStreams(java.util.Collection) -> a
    org.ice4j.ice.Agent getAgent() -> a
    void addAgentStateChangeListener(java.beans.PropertyChangeListener) -> a
    java.util.List getStreamNames() -> b
    void freeAgent() -> c
    void addRemoteCandidates(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> a
    void startConnectivityEstablishment() -> d
    void addLocalCandidateToContents(java.util.List) -> a
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.IceUdpTransportPacketExtension getLocalCandidatePacketExtensionForStream(java.lang.String) -> a
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.CandidateType convertType(org.ice4j.ice.CandidateType) -> a
    org.ice4j.ice.CandidateType convertType(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.CandidateType) -> a
    void createStream(java.lang.String) -> b
    int getStreamPort() -> e
    java.lang.String nextCandidateId() -> f
com.xonami.javaBells.JingleManager -> com.c.a.e:
    boolean enabled -> a
    void enableJingle() -> a
com.xonami.javaBells.JingleManager$1 -> com.c.a.f:
    void connectionCreated(org.jivesoftware.smack.Connection) -> connectionCreated
com.xonami.javaBells.JinglePacketHandler -> com.c.a.g:
    java.util.HashMap jingleSessions -> jingleSessions
    java.util.HashMap deadSessions -> deadSessions
    org.jivesoftware.smack.XMPPConnection connection -> connection
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
    com.xonami.javaBells.JingleSession removeJingleSession(com.xonami.javaBells.JingleSession) -> removeJingleSession
    com.xonami.javaBells.JingleSession createInitateJingleSession(java.lang.String) -> createInitateJingleSession
    com.xonami.javaBells.JingleSession createJingleSession(java.lang.String,net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> createJingleSession
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
    void clear() -> clear
com.xonami.javaBells.JinglePacketHandler$1 -> com.c.a.h:
    int[] $SwitchMap$net$java$sip$communicator$impl$protocol$jabber$extensions$jingle$JingleAction -> a
com.xonami.javaBells.JingleSession -> com.c.a.i:
    void handleContentAcept(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleContentAcept
    void handleContentAdd(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleContentAdd
    void handleContentModify(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleContentModify
    void handleContentReject(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleContentReject
    void handleContentRemove(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleContentRemove
    void handleDescriptionInfo(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleDescriptionInfo
    void handleSecurityInfo(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleSecurityInfo
    void handleSessionAccept(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleSessionAccept
    void handleSessionInfo(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleSessionInfo
    void handleSessionInitiate(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleSessionInitiate
    void handleSessionTerminate(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleSessionTerminate
    void handleTransportAccept(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleTransportAccept
    void handleTransportInfo(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleTransportInfo
    void handleTransportReject(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleTransportReject
    void handleSessionReplace(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> handleSessionReplace
    java.lang.String getSessionId() -> getSessionId
com.xonami.javaBells.MediaType -> com.c.a.j:
    com.xonami.javaBells.MediaType Audio -> a
    com.xonami.javaBells.MediaType Video -> b
    com.xonami.javaBells.MediaType[] $VALUES -> c
    com.xonami.javaBells.MediaType[] values() -> values
    com.xonami.javaBells.MediaType valueOf(java.lang.String) -> valueOf
com.xonami.javaBells.StunTurnAddress -> com.c.a.k:
    org.ice4j.TransportAddress[] stunAddresses -> a
    org.ice4j.TransportAddress[] turnAddresses -> b
    java.lang.String[] hosts -> c
    java.util.HashMap hostToAddressMap -> d
    com.xonami.javaBells.StunTurnAddress getAddress(org.ice4j.TransportAddress[],org.ice4j.TransportAddress[]) -> a
d.This -> d.a:
    b.This spUtil$1853ce08 -> a
    android.content.Context mContext -> b
    java.lang.String ao -> c
    java.lang.String ap -> d
    cn.bmob.v3.listener.OtherLoginListener aq -> e
    com.sina.weibo.sdk.auth.WeiboAuth ar -> f
    com.sina.weibo.sdk.auth.Oauth2AccessToken as -> g
    void I() -> a
    void login() -> login
    void Code(org.json.JSONObject) -> a
    android.content.Context Code(d.This) -> a
    void Code(d.This,com.sina.weibo.sdk.auth.Oauth2AccessToken) -> a
    com.sina.weibo.sdk.auth.Oauth2AccessToken V(d.This) -> b
    void Code(d.This,org.json.JSONObject) -> a
    void V(d.This,org.json.JSONObject) -> b
    cn.bmob.v3.listener.OtherLoginListener I(d.This) -> c
    java.lang.String I(java.lang.String) -> a
d.This$This -> d.b:
    d.This at -> a
    void onCancel() -> onCancel
    void onComplete(android.os.Bundle) -> onComplete
    void onWeiboException(com.sina.weibo.sdk.exception.WeiboException) -> onWeiboException
de.measite.smack.AndroidDebugger -> e.a.a.a:
    boolean printInterpreted -> a
    org.jivesoftware.smack.Connection connection -> b
    org.jivesoftware.smack.PacketListener listener -> c
    org.jivesoftware.smack.ConnectionListener connListener -> d
    java.io.Writer writer -> e
    java.io.Reader reader -> f
    org.jivesoftware.smack.util.ReaderListener readerListener -> g
    org.jivesoftware.smack.util.WriterListener writerListener -> h
    java.io.Reader newConnectionReader(java.io.Reader) -> newConnectionReader
    java.io.Writer newConnectionWriter(java.io.Writer) -> newConnectionWriter
    void userHasLogged(java.lang.String) -> userHasLogged
    java.io.Reader getReader() -> getReader
    java.io.Writer getWriter() -> getWriter
    org.jivesoftware.smack.PacketListener getReaderListener() -> getReaderListener
    org.jivesoftware.smack.PacketListener getWriterListener() -> getWriterListener
de.measite.smack.Sasl -> e.a.a.b:
    java.util.Enumeration getSaslClientFactories() -> a
    org.apache.harmony.javax.security.sasl.SaslClient createSaslClient(java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.util.Map,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> a
de.measite.smack.SaslClientFactory -> e.a.a.c:
    org.apache.harmony.javax.security.sasl.SaslClient createSaslClient(java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.util.Map,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> createSaslClient
    java.lang.String[] getMechanismNames(java.util.Map) -> getMechanismNames
e.This -> f.a:
    b.This spUtil$1853ce08 -> a
    android.content.Context mContext -> b
    java.lang.String au -> c
    cn.bmob.v3.listener.OtherLoginListener aq -> d
    com.tencent.tauth.Tencent av -> e
    void login() -> login
    void Code(org.json.JSONObject) -> a
    void I() -> a
    cn.bmob.v3.listener.OtherLoginListener Code(e.This) -> a
    void Code(e.This,org.json.JSONObject) -> a
    void V(e.This,org.json.JSONObject) -> b
    android.content.Context V(e.This) -> b
    java.lang.String Z(java.lang.String) -> a
    java.lang.String B(java.lang.String) -> b
    java.lang.String I(byte[]) -> a
e.This$1 -> f.b:
    e.This aw -> a
    void onError(com.tencent.tauth.UiError) -> onError
    void onComplete(java.lang.Object) -> onComplete
    void onCancel() -> onCancel
f.This -> g.a:
    java.lang.String TAG -> a
    f.This aE -> b
    android.content.res.Resources aF -> c
    java.lang.String packageName -> d
    f.This a(android.content.Context) -> a
    int C(java.lang.String) -> a
    int S(java.lang.String) -> b
    int F(java.lang.String) -> c
    int I(java.lang.String,java.lang.String) -> a
f.thing -> g.b:
    java.lang.String channel -> a
    boolean aG -> b
    boolean aH -> c
    boolean aI -> d
    boolean aJ -> e
    boolean B() -> a
    void setUpdateOnlyWifi(boolean) -> a
    java.lang.String b(android.content.Context) -> a
    boolean C() -> b
    void Code(boolean) -> b
    boolean S() -> c
    void V(boolean) -> c
    boolean F() -> d
    void I(boolean) -> d
g.From -> h.a:
    android.location.LocationManager aX -> a
    android.location.Location aY -> b
    java.lang.String aZ -> c
    java.lang.String ba -> d
    java.lang.String bb -> e
    java.lang.String bc -> f
    java.lang.String L() -> a
    java.lang.String a() -> b
    boolean c(java.lang.String) -> b
    h.thing$This V(h.Tempest) -> a
    long d(java.lang.String) -> a
    java.lang.String Code(java.util.Map) -> a
g.I -> h.b:
    j.madness Code(java.lang.Object,java.lang.reflect.Type,j.t) -> a
g.Tempest -> h.c:
    char[] bk -> a
    java.lang.String encode(byte[]) -> a
    java.lang.String e(android.content.Context) -> a
    java.lang.String f(android.content.Context) -> b
    int g(android.content.Context) -> c
    boolean h(android.content.Context) -> d
    java.lang.String Z(android.content.Context,java.lang.String) -> a
g.The -> h.d:
    android.content.Context mContext -> c
    java.io.File file -> d
    java.io.RandomAccessFile bd -> e
    cn.bmob.v3.requestmanager.thing requestCommand -> f
    a.thing rApi$6fc396a8 -> g
    cn.bmob.v3.listener.XListener be -> a
    int SIZE -> b
    int bf -> h
    java.lang.String bg -> i
    void b() -> a
    void c() -> b
    void Code(java.lang.String,int,java.lang.String,cn.bmob.v3.listener.XListener) -> a
    boolean V(java.lang.String,int,java.lang.String,cn.bmob.v3.listener.XListener) -> b
    void I(java.lang.String,int,java.lang.String,cn.bmob.v3.listener.XListener) -> c
    java.lang.String Code(long,long) -> a
    byte[] Code(long,int) -> a
    void Code(g.The,java.lang.String,int,java.lang.String,cn.bmob.v3.listener.XListener) -> a
    boolean V(g.The,java.lang.String,int,java.lang.String,cn.bmob.v3.listener.XListener) -> b
g.The$1 -> h.e:
    g.The bh -> a
    void onSuccess(j.madness) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
    void onStart() -> onStart
    void onFinish() -> onFinish
g.The$2 -> h.f:
    g.The bh -> a
    void onSuccess(j.madness) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
    void onStart() -> onStart
g.The$3 -> h.g:
    g.The bh -> a
    cn.bmob.v3.listener.XListener X -> b
    java.lang.String val$file -> c
    int bi -> d
    java.lang.String bj -> e
    void onSuccess(j.madness) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
g.This -> h.h:
    android.graphics.Bitmap D(java.lang.String) -> a
    void Code(java.lang.String,android.graphics.Bitmap) -> a
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
g.acknowledge -> h.i:
    j.madness Code(java.lang.Object,java.lang.reflect.Type,j.t) -> a
g.darkness -> h.j:
    g.of aT -> a
    void handleMessage(android.os.Message) -> handleMessage
g.mine -> h.k:
    boolean aV -> a
    java.lang.String aW -> b
    int a(java.lang.String) -> a
    int b(java.lang.String) -> b
    int d(java.lang.String,java.lang.String) -> a
    int e(java.lang.String,java.lang.String) -> b
    int Code(java.lang.String,java.lang.Object[]) -> a
g.of -> h.l:
    android.content.Context mContext -> f
    android.app.NotificationManager aN -> a
    android.content.Intent aO -> g
    android.app.Notification aP -> b
    android.app.PendingIntent aQ -> c
    java.lang.String aR -> d
    java.lang.String aS -> e
    android.os.Handler handler -> h
    void D() -> a
    void L(java.lang.String) -> a
    void Code(int,int) -> a
    void Code(g.of,int) -> a
    android.content.Context Code(g.of) -> a
    java.lang.Object Code(java.lang.String,java.lang.Class) -> a
    java.lang.String I(java.lang.Object) -> a
g.of$1 -> h.m:
    g.of aT -> a
    java.lang.String aU -> b
    java.lang.String val$fileName -> c
    void run() -> run
g.thing -> h.n:
    int aK -> a
    int aL -> b
    java.lang.String Code(android.content.Context,org.json.JSONObject) -> a
    void Code(org.json.JSONStringer,java.lang.Object) -> a
    void Code(android.content.Context,java.lang.String,java.lang.String) -> a
    java.io.File Code(java.lang.String,android.content.Context) -> a
    java.io.File c(android.content.Context) -> b
    java.lang.Object Code(android.content.Context,java.lang.String,long) -> a
    java.lang.String V(android.content.Context,java.lang.String,long) -> b
    long Code(java.io.File) -> a
    void I(android.content.Context,java.lang.String) -> a
    void d(android.content.Context) -> a
g.thing$1 -> h.o:
    int compare(java.lang.Object,java.lang.Object) -> compare
g.thing$2 -> h.p:
    java.lang.String aM -> a
    boolean accept(java.io.File,java.lang.String) -> accept
gov.nist.core.GenericObject -> i.a.a.a:
    java.lang.String SEMICOLON -> SEMICOLON
    java.lang.String COLON -> COLON
    java.lang.String COMMA -> COMMA
    java.lang.String SLASH -> SLASH
    java.lang.String SP -> SP
    java.lang.String EQUALS -> EQUALS
    java.lang.String STAR -> STAR
    java.lang.String NEWLINE -> NEWLINE
    java.lang.String RETURN -> RETURN
    java.lang.String LESS_THAN -> LESS_THAN
    java.lang.String GREATER_THAN -> GREATER_THAN
    java.lang.String AT -> AT
    java.lang.String DOT -> DOT
    java.lang.String QUESTION -> QUESTION
    java.lang.String POUND -> POUND
    java.lang.String AND -> AND
    java.lang.String LPAREN -> LPAREN
    java.lang.String RPAREN -> RPAREN
    java.lang.String DOUBLE_QUOTE -> DOUBLE_QUOTE
    java.lang.String QUOTE -> QUOTE
    java.lang.String HT -> HT
    java.lang.String PERCENT -> PERCENT
    java.util.Set immutableClasses -> immutableClasses
    java.lang.String[] immutableClassNames -> immutableClassNames
    int indentation -> indentation
    java.lang.String stringRepresentation -> stringRepresentation
    gov.nist.core.Match matchExpression -> matchExpression
    void setMatcher(gov.nist.core.Match) -> setMatcher
    gov.nist.core.Match getMatcher() -> getMatcher
    java.lang.Class getClassFromName(java.lang.String) -> getClassFromName
    boolean isMySubclass(java.lang.Class) -> isMySubclass
    java.lang.Object makeClone(java.lang.Object) -> makeClone
    java.lang.Object clone() -> clone
    void merge(java.lang.Object) -> merge
    java.lang.String getIndentation() -> getIndentation
    void sprint(java.lang.String) -> sprint
    void sprint(java.lang.Object) -> sprint
    void sprint(int) -> sprint
    void sprint(short) -> sprint
    void sprint(char) -> sprint
    void sprint(long) -> sprint
    void sprint(boolean) -> sprint
    void sprint(double) -> sprint
    void sprint(float) -> sprint
    void dbgPrint() -> dbgPrint
    void dbgPrint(java.lang.String) -> dbgPrint
    boolean equals(java.lang.Object) -> equals
    boolean match(java.lang.Object) -> match
    java.lang.String debugDump() -> debugDump
    java.lang.String debugDump(int) -> debugDump
    java.lang.String encode() -> encode
    java.lang.StringBuilder encode(java.lang.StringBuilder) -> encode
gov.nist.core.GenericObjectList -> i.a.a.b:
    int indentation -> a
    java.lang.String listName -> b
    java.util.ListIterator myListIterator -> d
    java.lang.String stringRep -> e
    java.lang.Class myClass -> c
    java.lang.String getIndentation() -> a
    boolean isMySubclass(java.lang.Class) -> a
    java.lang.Object clone() -> clone
    gov.nist.core.GenericObject first() -> b
    gov.nist.core.GenericObject next() -> c
    void sprint(java.lang.String) -> a
    java.lang.String debugDump() -> d
    java.lang.String debugDump(int) -> a
    void addFirst(gov.nist.core.GenericObject) -> a
    java.lang.String encode() -> e
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean match(java.lang.Object) -> a
    void addFirst(java.lang.Object) -> addFirst
gov.nist.core.InternalErrorHandler -> i.a.a.c:
    void handleException(java.lang.Exception) -> a
gov.nist.core.Match -> i.a.a.d:
    boolean match(java.lang.String) -> a
gov.nist.core.NameValue -> i.a.a.e:
    boolean isQuotedString -> a
    boolean isFlagParameter -> b
    java.lang.String separator -> c
    java.lang.String quotes -> d
    java.lang.String name -> e
    java.lang.Object value -> f
    void setSeparator(java.lang.String) -> a
    java.lang.String getName() -> a
    java.lang.Object getValueAsObject() -> b
    void setName(java.lang.String) -> b
    void setValueAsObject(java.lang.Object) -> a
    java.lang.String encode() -> encode
    java.lang.StringBuilder encode(java.lang.StringBuilder) -> encode
    java.lang.Object clone() -> clone
    boolean equals(java.lang.Object) -> equals
    java.lang.String getKey() -> c
    java.lang.String getValue() -> d
    java.lang.String setValue(java.lang.String) -> c
    int hashCode() -> hashCode
    java.lang.Object setValue(java.lang.Object) -> setValue
    java.lang.Object getValue() -> getValue
    java.lang.Object getKey() -> getKey
gov.nist.javax.sdp.fields.AttributeField -> i.a.b.a.a.a:
    gov.nist.core.NameValue attribute -> attribute
    gov.nist.core.NameValue getAttribute() -> getAttribute
    void setAttribute(gov.nist.core.NameValue) -> setAttribute
    java.lang.String encode() -> encode
    java.lang.String toString() -> toString
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    boolean hasValue() -> hasValue
    java.lang.String getValue() -> getValue
    void setValue(java.lang.String) -> setValue
    void setValueAllowNull(java.lang.String) -> setValueAllowNull
    java.lang.Object clone() -> clone
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
gov.nist.javax.sdp.fields.SDPField -> i.a.b.a.a.b:
    java.lang.String fieldName -> fieldName
    java.lang.String encode() -> encode
    java.lang.String getFieldName() -> getFieldName
    char getTypeChar() -> getTypeChar
    java.lang.String toString() -> toString
gov.nist.javax.sdp.fields.SDPObject -> i.a.b.a.a.c:
    java.lang.String SDPFIELDS_PACKAGE -> SDPFIELDS_PACKAGE
    java.lang.String CORE_PACKAGE -> CORE_PACKAGE
    java.lang.String encode() -> encode
    void sprint(java.lang.String) -> sprint
    void initSprint() -> initSprint
    java.lang.String toString() -> toString
    java.lang.String getStringRepresentation() -> getStringRepresentation
    boolean equals(java.lang.Object) -> equals
    java.lang.String debugDump() -> debugDump
    boolean match(java.lang.Object) -> match
    java.lang.String dbgPrint(int) -> dbgPrint
h.From -> j.a:
    java.util.concurrent.BlockingQueue bG -> a
    h.mine bH -> b
    h.thing bs -> c
    h.madness bt -> d
    boolean bu -> e
    void quit() -> a
    void run() -> run
h.I -> j.b:
    android.os.Handler bC -> a
    void execute(java.lang.Runnable) -> execute
h.Tempest -> j.c:
    int statusCode -> a
    byte[] data -> b
    java.util.Map bI -> c
    boolean bJ -> d
    h.this Code(android.content.Context,i.acknowledge) -> a
h.The -> j.d:
h.This -> j.e:
    java.lang.String getMessage() -> getMessage
h.Though -> j.f:
    h.in$This bK -> bK
    int bL -> bL
    java.lang.String mUrl -> mUrl
    int bM -> bM
    h.be$This bN -> bN
    java.lang.Integer bO -> bO
    h.this ai -> ai
    boolean bP -> bP
    boolean bQ -> bQ
    boolean bR -> bR
    long bS -> bS
    h.yet bT -> bT
    h.thing$This bU -> bU
    int getMethod() -> getMethod
    int f() -> f
    h.Though Code(h.yet) -> Code
    void f(java.lang.String) -> f
    void g(java.lang.String) -> g
    h.Though Code(h.this) -> Code
    h.Though Code(int) -> Code
    java.lang.String getUrl() -> getUrl
    java.lang.String g() -> g
    h.Though Code(h.thing$This) -> Code
    h.thing$This h() -> h
    boolean isCanceled() -> isCanceled
    java.util.Map getHeaders() -> getHeaders
    java.lang.String i() -> i
    byte[] j() -> j
    java.lang.String k() -> k
    byte[] l() -> l
    byte[] Code(java.util.Map,java.lang.String) -> Code
    boolean m() -> m
    h.Though$This n() -> n
    int o() -> o
    h.yet p() -> p
    void q() -> q
    boolean r() -> r
    h.be Code(h.Tempest) -> Code
    h.method I(h.method) -> I
    void Code(java.lang.Object) -> Code
    void Z(h.method) -> Z
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
    h.in$This V(h.Though) -> V
h.Though$1 -> j.g:
    h.Though bV -> a
    java.lang.String bW -> b
    long bX -> c
    void run() -> run
h.Though$This -> j.h:
    h.Though$This bY -> a
    h.Though$This bZ -> b
    h.Though$This ca -> c
    h.Though$This cb -> d
h.V -> j.i:
h.acknowledge -> j.j:
    h.Though bD -> a
    h.be bE -> b
    java.lang.Runnable bF -> c
    void run() -> run
h.be -> j.k:
    java.lang.Object result -> a
    h.thing$This cj -> b
    h.method ck -> c
    boolean cl -> d
    h.be Code(java.lang.Object,h.thing$This) -> a
    h.be B(h.method) -> a
h.be$This -> j.l:
    void Code(h.method) -> Code
h.be$thing -> j.m:
    void V(java.lang.Object) -> V
h.darkness -> j.n:
    int bx -> b
    int by -> c
    int bz -> d
    float bA -> e
    int bB -> a
    int d() -> a
    int e() -> b
    void V(h.method) -> a
h.i -> j.o:
h.in -> j.p:
    java.lang.String TAG -> b
    boolean DEBUG -> a
    void V(java.lang.String,java.lang.Object[]) -> a
    void I(java.lang.String,java.lang.Object[]) -> b
    void Z(java.lang.String,java.lang.Object[]) -> c
    void Code(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> a
    void B(java.lang.String,java.lang.Object[]) -> d
    java.lang.String C(java.lang.String,java.lang.Object[]) -> e
h.in$This -> j.q:
    boolean co -> a
    java.util.List cp -> b
    boolean cq -> c
    void add(java.lang.String,long) -> a
    void g(java.lang.String) -> a
    void finalize() -> finalize
h.in$This$This -> j.r:
    java.lang.String name -> a
    long cr -> b
    long time -> c
h.is -> j.s:
h.madness -> j.t:
    java.util.concurrent.Executor cm -> a
    void Code(h.Though,h.be) -> a
    void Code(h.Though,h.be,java.lang.Runnable) -> a
    void Code(h.Though,h.method) -> a
h.method -> j.u:
    h.Tempest cn -> a
h.mine -> j.v:
    h.Tempest Code(h.Though) -> a
h.of -> j.w:
    boolean DEBUG -> a
    java.util.concurrent.BlockingQueue bq -> b
    java.util.concurrent.BlockingQueue br -> c
    h.thing bs -> d
    h.madness bt -> e
    boolean bu -> f
    void quit() -> a
    void run() -> run
    java.util.concurrent.BlockingQueue Code(h.of) -> a
h.of$1 -> j.x:
    h.of bv -> a
    h.Though bw -> b
    void run() -> run
h.there -> j.y:
h.thing -> j.z:
    h.thing$This e(java.lang.String) -> a
    void Code(java.lang.String,h.thing$This) -> a
    void initialize() -> a
h.thing$This -> j.aa:
    byte[] data -> a
    java.lang.String bl -> b
    long bm -> c
    long bn -> d
    long bo -> e
    java.util.Map bp -> f
h.this -> j.ab:
    java.util.concurrent.atomic.AtomicInteger cc -> a
    java.util.Map cd -> b
    java.util.Set ce -> c
    java.util.concurrent.PriorityBlockingQueue cf -> d
    java.util.concurrent.PriorityBlockingQueue cg -> e
    h.thing bs -> f
    h.mine bH -> g
    h.madness bt -> h
    h.From[] ch -> i
    h.of ci -> j
    void start() -> a
    h.Though I(h.Though) -> a
    void Z(h.Though) -> b
    java.lang.Object Z(java.lang.Object) -> a
    void Z(boolean) -> a
h.yet -> j.ac:
    int d() -> a
    int e() -> b
    void V(h.method) -> a
i.From -> k.a:
    h.this ai -> a
    int cJ -> b
    i.From$thing cK -> c
    java.util.HashMap cL -> d
    java.util.HashMap cM -> e
    android.os.Handler mHandler -> f
    java.lang.Runnable bF -> g
    i.From$of Code(java.lang.String,i.From$darkness,int,int) -> a
    void Code(java.lang.String,i.From$This) -> a
    java.util.HashMap Code(i.From) -> a
    void Code(i.From,java.lang.String,android.graphics.Bitmap) -> a
    void Code(i.From,java.lang.String,h.method) -> a
    void Code(i.From,java.lang.Runnable) -> a
i.From$1 -> k.b:
    i.From cN -> a
    java.lang.String cO -> b
    void V(java.lang.Object) -> V
i.From$2 -> k.c:
    i.From cN -> a
    java.lang.String cO -> b
    void Code(h.method) -> Code
i.From$3 -> k.d:
    i.From cN -> a
    void run() -> run
i.From$This -> k.e:
    android.graphics.Bitmap cP -> a
    h.method cQ -> b
    java.util.LinkedList cR -> c
    void C(h.method) -> a
    h.method v() -> a
    void V(i.From$of) -> a
    java.util.LinkedList Code(i.From$This) -> a
    void Code(i.From$This,android.graphics.Bitmap) -> a
    android.graphics.Bitmap V(i.From$This) -> b
i.From$darkness -> k.f:
    void Code(i.From$of) -> Code
i.From$of -> k.g:
    android.graphics.Bitmap cS -> a
    i.From$darkness cT -> b
    android.graphics.Bitmap getBitmap() -> a
    i.From$darkness I(i.From$of) -> a
    void Code(i.From$of,android.graphics.Bitmap) -> a
i.From$thing -> k.h:
    android.graphics.Bitmap D(java.lang.String) -> a
    void Code(java.lang.String,android.graphics.Bitmap) -> a
i.I -> k.i:
    org.apache.http.client.HttpClient cG -> a
    void Code(org.apache.http.client.methods.HttpUriRequest,java.util.Map) -> a
    org.apache.http.HttpResponse Code(h.Though,java.util.Map) -> a
    void Code(org.apache.http.client.methods.HttpEntityEnclosingRequestBase,h.Though) -> a
i.I$This -> k.j:
    java.lang.String getMethod() -> getMethod
i.Tempest -> k.k:
    h.be Code(h.Tempest) -> Code
i.The -> k.l:
    h.be$thing cU -> a
    android.graphics.Bitmap$Config cV -> b
    int cW -> c
    int cX -> d
    java.lang.Object cY -> e
    h.Though$This n() -> n
    int Code(int,int,int,int) -> a
    h.be Code(h.Tempest) -> Code
    int V(int,int,int,int) -> b
    void Code(java.lang.Object) -> Code
i.This -> k.m:
    boolean DEBUG -> a
    int cs -> b
    int ct -> c
    i.acknowledge cu -> d
    i.thing cv -> e
    h.Tempest Code(h.Though) -> a
    void Code(java.lang.String,h.Though,h.method) -> a
    byte[] Code(org.apache.http.HttpEntity) -> a
    java.util.Map Code(org.apache.http.Header[]) -> a
i.V -> k.n:
    java.lang.String cZ -> cZ
    h.be$thing cU -> cU
    java.lang.String da -> da
    void Code(java.lang.Object) -> Code
    java.lang.String i() -> i
    byte[] j() -> j
    java.lang.String k() -> k
    byte[] l() -> l
i.acknowledge -> k.o:
    org.apache.http.HttpResponse Code(h.Though,java.util.Map) -> a
i.darkness -> k.p:
    java.util.Map cB -> a
    long cC -> b
    java.io.File cD -> c
    int cE -> d
    h.thing$This e(java.lang.String) -> a
    void initialize() -> a
    void Code(java.lang.String,h.thing$This) -> a
    void remove(java.lang.String) -> b
    java.lang.String h(java.lang.String) -> c
    java.io.File i(java.lang.String) -> d
    void Code(java.lang.String,i.darkness$This) -> a
    byte[] Code(java.io.InputStream,int) -> a
    int Code(java.io.InputStream) -> e
    void Code(java.io.OutputStream,int) -> a
    int readInt(java.io.InputStream) -> a
    void Code(java.io.OutputStream,long) -> a
    long V(java.io.InputStream) -> b
    void Code(java.io.OutputStream,java.lang.String) -> a
    java.lang.String I(java.io.InputStream) -> c
    java.util.Map Z(java.io.InputStream) -> d
i.darkness$This -> k.q:
    long size -> a
    java.lang.String key -> b
    java.lang.String bl -> c
    long bm -> d
    long bn -> e
    long bo -> f
    java.util.Map bp -> g
    i.darkness$This B(java.io.InputStream) -> a
    boolean Code(java.io.OutputStream) -> a
i.darkness$thing -> k.r:
    int cF -> a
    int read() -> read
    int read(byte[],int,int) -> read
    int Code(i.darkness$thing) -> a
i.i -> k.s:
    i.thing cv -> a
    void close() -> close
    void finalize() -> finalize
    void I(int) -> a
    void write(byte[],int,int) -> write
    void write(int) -> write
i.mine -> k.t:
    i.mine$This cH -> a
    javax.net.ssl.SSLSocketFactory cI -> b
    org.apache.http.HttpResponse Code(h.Though,java.util.Map) -> a
    org.apache.http.HttpEntity Code(java.net.HttpURLConnection) -> a
    void Code(java.net.HttpURLConnection,h.Though) -> a
i.mine$This -> k.u:
    java.lang.String s() -> a
    boolean t() -> b
    boolean u() -> c
i.of -> k.v:
    int compare(java.lang.Object,java.lang.Object) -> compare
i.thing -> k.w:
    java.util.List cw -> a
    java.util.List cx -> b
    int cy -> c
    int cz -> d
    java.util.Comparator cA -> e
    byte[] V(int) -> a
    void Z(byte[]) -> a
    void trim() -> a
internal.org.apache.http.entity.mime.FormBodyPart -> l.a.a.a.a.a.a:
    java.lang.String name -> a
    internal.org.apache.http.entity.mime.Header header -> b
    internal.org.apache.http.entity.mime.content.ContentBody body -> c
    java.lang.String getName() -> a
    internal.org.apache.http.entity.mime.content.ContentBody getBody() -> b
    internal.org.apache.http.entity.mime.Header getHeader() -> c
    void addField(java.lang.String,java.lang.String) -> a
    void generateContentDisp(internal.org.apache.http.entity.mime.content.ContentBody) -> a
    void generateContentType(internal.org.apache.http.entity.mime.content.ContentBody) -> b
    void generateTransferEncoding(internal.org.apache.http.entity.mime.content.ContentBody) -> c
internal.org.apache.http.entity.mime.Header -> l.a.a.a.a.a.b:
    java.util.List fields -> a
    java.util.Map fieldMap -> b
    void addField(internal.org.apache.http.entity.mime.MinimalField) -> a
    internal.org.apache.http.entity.mime.MinimalField getField(java.lang.String) -> a
    java.util.Iterator iterator() -> iterator
    java.lang.String toString() -> toString
internal.org.apache.http.entity.mime.HttpMultipart -> l.a.a.a.a.a.c:
    org.apache.http.util.ByteArrayBuffer FIELD_SEP -> a
    org.apache.http.util.ByteArrayBuffer CR_LF -> b
    org.apache.http.util.ByteArrayBuffer TWO_DASHES -> c
    java.lang.String subType -> d
    java.nio.charset.Charset charset -> e
    java.lang.String boundary -> f
    java.util.List parts -> g
    internal.org.apache.http.entity.mime.HttpMultipartMode mode -> h
    org.apache.http.util.ByteArrayBuffer encode(java.nio.charset.Charset,java.lang.String) -> a
    void writeBytes(org.apache.http.util.ByteArrayBuffer,java.io.OutputStream) -> a
    void writeBytes(java.lang.String,java.nio.charset.Charset,java.io.OutputStream) -> a
    void writeBytes(java.lang.String,java.io.OutputStream) -> a
    void writeField(internal.org.apache.http.entity.mime.MinimalField,java.io.OutputStream) -> a
    void writeField(internal.org.apache.http.entity.mime.MinimalField,java.nio.charset.Charset,java.io.OutputStream) -> a
    java.util.List getBodyParts() -> a
    void addBodyPart(internal.org.apache.http.entity.mime.FormBodyPart) -> a
    java.lang.String getBoundary() -> b
    void doWriteTo(internal.org.apache.http.entity.mime.HttpMultipartMode,java.io.OutputStream,boolean) -> a
    void writeTo(java.io.OutputStream) -> a
    long getTotalLength() -> c
internal.org.apache.http.entity.mime.HttpMultipart$1 -> l.a.a.a.a.a.d:
    int[] $SwitchMap$internal$org$apache$http$entity$mime$HttpMultipartMode -> a
internal.org.apache.http.entity.mime.HttpMultipartMode -> l.a.a.a.a.a.e:
    internal.org.apache.http.entity.mime.HttpMultipartMode STRICT -> a
    internal.org.apache.http.entity.mime.HttpMultipartMode BROWSER_COMPATIBLE -> b
    internal.org.apache.http.entity.mime.HttpMultipartMode[] $VALUES -> c
    internal.org.apache.http.entity.mime.HttpMultipartMode[] values() -> values
    internal.org.apache.http.entity.mime.HttpMultipartMode valueOf(java.lang.String) -> valueOf
internal.org.apache.http.entity.mime.MIME -> l.a.a.a.a.a.f:
    java.nio.charset.Charset DEFAULT_CHARSET -> a
internal.org.apache.http.entity.mime.MinimalField -> l.a.a.a.a.a.g:
    java.lang.String name -> a
    java.lang.String value -> b
    java.lang.String getName() -> a
    java.lang.String getBody() -> b
    java.lang.String toString() -> toString
internal.org.apache.http.entity.mime.MultipartEntity -> l.a.a.a.a.a.h:
    char[] MULTIPART_CHARS -> MULTIPART_CHARS
    internal.org.apache.http.entity.mime.HttpMultipart multipart -> multipart
    org.apache.http.Header contentType -> contentType
    long length -> length
    boolean dirty -> dirty
    java.lang.String generateContentType(java.lang.String,java.nio.charset.Charset) -> generateContentType
    java.lang.String generateBoundary() -> generateBoundary
    void addPart(internal.org.apache.http.entity.mime.FormBodyPart) -> addPart
    void addPart(java.lang.String,internal.org.apache.http.entity.mime.content.ContentBody) -> addPart
    boolean isRepeatable() -> isRepeatable
    boolean isChunked() -> isChunked
    boolean isStreaming() -> isStreaming
    long getContentLength() -> getContentLength
    void consumeContent() -> consumeContent
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    org.apache.http.Header getContentType() -> getContentType
internal.org.apache.http.entity.mime.content.AbstractContentBody -> l.a.a.a.a.a.a.a:
    java.lang.String mimeType -> a
    java.lang.String mediaType -> b
    java.lang.String subType -> c
    java.lang.String getMimeType() -> a
internal.org.apache.http.entity.mime.content.ContentBody -> l.a.a.a.a.a.a.b:
    java.lang.String getFilename() -> b
    void writeTo(java.io.OutputStream) -> a
internal.org.apache.http.entity.mime.content.ContentDescriptor -> l.a.a.a.a.a.a.c:
    java.lang.String getMimeType() -> a
    java.lang.String getCharset() -> c
    java.lang.String getTransferEncoding() -> d
    long getContentLength() -> e
internal.org.apache.http.entity.mime.content.FileBody -> l.a.a.a.a.a.a.d:
    java.io.File file -> a
    java.lang.String filename -> b
    java.lang.String charset -> c
    void writeTo(java.io.OutputStream) -> a
    java.lang.String getTransferEncoding() -> d
    java.lang.String getCharset() -> c
    long getContentLength() -> e
    java.lang.String getFilename() -> b
internal.org.apache.http.entity.mime.content.StringBody -> l.a.a.a.a.a.a.e:
    byte[] content -> a
    java.nio.charset.Charset charset -> b
    void writeTo(java.io.OutputStream) -> a
    java.lang.String getTransferEncoding() -> d
    java.lang.String getCharset() -> c
    long getContentLength() -> e
    java.lang.String getFilename() -> b
j.From -> m.a:
    java.lang.String Code(java.lang.reflect.Field) -> a
j.Hamlet -> m.b:
    j.madness Code(java.lang.Object,java.lang.reflect.Type,j.t) -> a
j.I -> m.c:
    java.lang.String Code(java.lang.reflect.Field) -> a
j.II -> m.d:
j.Tempest -> m.e:
    java.lang.ThreadLocal dj -> c
    java.util.Map dk -> d
    java.util.List dl -> e
    l.thing dm -> f
    boolean dn -> g
    boolean do -> h
    boolean dp -> i
    boolean dq -> j
    j.this dr -> a
    j.t ds -> b
    j.name Code(n.This) -> a
    j.name Code(j.That,n.This) -> a
    j.name Code(java.lang.Class) -> a
    j.madness B(java.lang.Object) -> a
    java.lang.String C(java.lang.Object) -> b
    void Code(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable) -> a
    void Code(java.lang.Object,java.lang.reflect.Type,o.darkness) -> a
    void Code(j.madness,java.lang.Appendable) -> a
    o.darkness Code(java.io.Writer) -> a
    java.lang.Object V(java.lang.String,java.lang.Class) -> a
    java.lang.Object Code(java.lang.String,java.lang.reflect.Type) -> a
    void Code(java.lang.Object,o.This) -> a
    java.lang.Object Code(o.This,java.lang.reflect.Type) -> a
    java.lang.String toString() -> toString
    void Code(j.Tempest,double) -> a
j.Tempest$1 -> m.f:
    j.Tempest dt -> a
    java.lang.Object Code(o.This) -> a
    void Code(o.darkness,java.lang.Object) -> a
j.Tempest$2 -> m.g:
    j.Tempest dt -> a
    java.lang.Object Code(o.This) -> a
    void Code(o.darkness,java.lang.Object) -> a
j.Tempest$3 -> m.h:
    java.lang.Object Code(o.This) -> a
    void Code(o.darkness,java.lang.Object) -> a
j.Tempest$This -> m.i:
    j.name du -> a
    void Code(j.name) -> a
    java.lang.Object Code(o.This) -> a
    void Code(o.darkness,java.lang.Object) -> a
j.That -> m.j:
    j.name Code(j.Tempest,n.This) -> a
j.The -> m.k:
    java.lang.String Code(java.lang.reflect.Field) -> a
j.This -> m.l:
    java.text.DateFormat db -> a
    java.text.DateFormat dc -> b
    java.text.DateFormat dd -> c
    j.madness Code(java.util.Date) -> a
    java.util.Date Code(j.madness) -> a
    java.lang.String toString() -> toString
    java.lang.Object Code(j.madness,java.lang.reflect.Type,j.this) -> a
    j.madness Code(java.lang.Object,java.lang.reflect.Type,j.t) -> a
j.Though -> m.m:
    java.util.List elements -> a
    void V(j.madness) -> a
    java.util.Iterator iterator() -> iterator
    java.lang.Number y() -> a
    java.lang.String getAsString() -> b
    double z() -> c
    long A() -> d
    int E() -> e
    boolean G() -> f
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
j.V -> m.n:
    l.of dv -> a
    j.ii dw -> b
    j.The dx -> c
    java.util.Map dy -> d
    java.util.List dl -> e
    java.util.List dz -> f
    int dA -> g
    int dB -> h
    boolean dC -> i
    j.V Code(java.lang.reflect.Type,java.lang.Object) -> a
    j.Tempest w() -> a
j.What -> m.o:
j.a -> m.p:
    j.Hamlet dI -> a
    j.be dJ -> b
    j.Tempest dK -> c
    n.This dL -> d
    j.That dM -> e
    j.name du -> f
    java.lang.Object Code(o.This) -> a
    void Code(o.darkness,java.lang.Object) -> a
    j.name R() -> a
    j.That Code(n.This,java.lang.Object) -> a
j.a$This -> m.q:
    n.This dN -> a
    boolean dO -> b
    java.lang.Class dP -> c
    j.Hamlet dI -> d
    j.be dJ -> e
    j.name Code(j.Tempest,n.This) -> a
j.acknowledge -> m.r:
    java.lang.String Code(java.lang.reflect.Field) -> a
j.be -> m.s:
    java.lang.Object Code(j.madness,java.lang.reflect.Type,j.this) -> a
j.darkness -> m.t:
    java.lang.String Code(java.lang.reflect.Field) -> a
j.i -> m.u:
    java.lang.Object x() -> a
j.ii -> m.v:
    j.ii dG -> a
    j.ii dH -> b
j.in -> m.w:
    java.lang.Class[] dF -> a
    java.lang.Object value -> b
    void setValue(java.lang.Object) -> a
    boolean isBoolean() -> g
    boolean G() -> f
    boolean isNumber() -> h
    java.lang.Number y() -> a
    boolean Q() -> i
    java.lang.String getAsString() -> b
    double z() -> c
    long A() -> d
    int E() -> e
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean Code(j.in) -> a
j.is -> m.x:
    l.acknowledge dE -> a
    void Code(java.lang.String,j.madness) -> a
    java.util.Set entrySet() -> g
    boolean has(java.lang.String) -> a
    j.madness k(java.lang.String) -> b
    j.Though l(java.lang.String) -> c
    j.is m(java.lang.String) -> d
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
j.madness -> m.y:
    boolean H() -> j
    boolean J() -> k
    boolean K() -> l
    boolean M() -> m
    j.is N() -> n
    j.Though O() -> o
    j.in P() -> p
    boolean G() -> f
    java.lang.Number y() -> a
    java.lang.String getAsString() -> b
    double z() -> c
    long A() -> d
    int E() -> e
    java.lang.String toString() -> toString
j.method -> m.z:
j.mine -> m.aa:
    java.lang.String Code(java.lang.reflect.Field) -> a
j.name -> m.ab:
    void Code(o.darkness,java.lang.Object) -> a
    j.madness B(java.lang.Object) -> a
    java.lang.Object Code(o.This) -> a
j.of -> m.ac:
    j.of de -> a
    j.of df -> b
    j.of dg -> c
    j.of dh -> d
    j.of di -> e
    java.lang.String j(java.lang.String) -> a
    java.lang.String Z(java.lang.String,java.lang.String) -> a
j.s -> m.ad:
j.t -> m.ae:
j.there -> m.af:
    j.there dD -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
j.thing -> m.ag:
j.this -> m.ah:
j.yet -> m.ai:
javax.sdp.Attribute -> n.a.a:
javax.sdp.Field -> n.a.b:
javax.sdp.SdpException -> n.a.c:
javax.sdp.SdpParseException -> n.a.d:
    java.lang.String getMessage() -> getMessage
k.darkness -> o.a:
    double T() -> a
k.of -> o.b:
    double T() -> a
k.thing -> o.c:
    java.lang.String value() -> a
l.From -> p.a:
    java.lang.Object U() -> a
l.I -> p.b:
    java.lang.String value -> a
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    java.lang.String toString() -> toString
l.Tempest -> p.c:
    java.lang.Appendable eB -> a
    l.Tempest$This eC -> b
    void write(char[],int,int) -> write
    void write(int) -> write
    void flush() -> flush
    void close() -> close
l.Tempest$This -> p.d:
    char[] chars -> a
    int length() -> length
    char charAt(int) -> charAt
    java.lang.CharSequence subSequence(int,int) -> subSequence
l.The -> p.e:
    java.util.Map eA -> a
    void Code(java.util.Map,java.util.Map,java.lang.Class,java.lang.Class) -> a
    boolean isPrimitive(java.lang.reflect.Type) -> a
    java.lang.Class Z(java.lang.Class) -> a
l.This -> p.f:
    java.lang.reflect.Type[] dQ -> a
    java.lang.reflect.GenericArrayType Code(java.lang.reflect.Type) -> f
    java.lang.reflect.Type V(java.lang.reflect.Type) -> a
    java.lang.Class I(java.lang.reflect.Type) -> b
    boolean Code(java.lang.reflect.Type,java.lang.reflect.Type) -> a
    java.lang.String Z(java.lang.reflect.Type) -> c
    java.lang.reflect.Type Code(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> a
    java.lang.reflect.Type V(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> b
    java.lang.reflect.Type B(java.lang.reflect.Type) -> d
    java.lang.reflect.Type Code(java.lang.reflect.Type,java.lang.Class) -> a
    java.lang.reflect.Type[] V(java.lang.reflect.Type,java.lang.Class) -> b
    java.lang.reflect.Type Code(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> a
    void C(java.lang.reflect.Type) -> e
    int S(java.lang.Object) -> a
l.This$This -> p.g:
    java.lang.reflect.Type dR -> a
    java.lang.reflect.Type getGenericComponentType() -> getGenericComponentType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
l.This$of -> p.h:
    java.lang.reflect.Type dV -> a
    java.lang.reflect.Type dW -> b
    java.lang.reflect.Type[] getUpperBounds() -> getUpperBounds
    java.lang.reflect.Type[] getLowerBounds() -> getLowerBounds
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
l.This$thing -> p.i:
    java.lang.reflect.Type dS -> a
    java.lang.reflect.Type dT -> b
    java.lang.reflect.Type[] dU -> c
    java.lang.reflect.Type[] getActualTypeArguments() -> getActualTypeArguments
    java.lang.reflect.Type getRawType() -> getRawType
    java.lang.reflect.Type getOwnerType() -> getOwnerType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
l.V -> p.j:
    java.lang.Object newInstance(java.lang.Class) -> a
    l.V ab() -> a
l.V$1 -> p.k:
    java.lang.reflect.Method eD -> a
    java.lang.Object eE -> b
    java.lang.Object newInstance(java.lang.Class) -> a
l.V$2 -> p.l:
    java.lang.reflect.Method eF -> a
    java.lang.Object newInstance(java.lang.Class) -> a
l.V$3 -> p.m:
    java.lang.reflect.Method eF -> a
    int eG -> b
    java.lang.Object newInstance(java.lang.Class) -> a
l.V$4 -> p.n:
    java.lang.Object newInstance(java.lang.Class) -> a
l.acknowledge -> p.o:
    java.util.Comparator en -> d
    java.util.Comparator eo -> e
    l.acknowledge$darkness ep -> f
    int size -> a
    int modCount -> b
    l.acknowledge$darkness eq -> c
    l.acknowledge$This er -> g
    l.acknowledge$thing es -> h
    boolean $assertionsDisabled -> i
    int size() -> size
    java.lang.Object get(java.lang.Object) -> get
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void clear() -> clear
    java.lang.Object remove(java.lang.Object) -> remove
    l.acknowledge$darkness Code(java.lang.Object,boolean) -> a
    l.acknowledge$darkness F(java.lang.Object) -> b
    l.acknowledge$darkness Code(java.util.Map$Entry) -> a
    void Code(l.acknowledge$darkness,boolean) -> a
    l.acknowledge$darkness D(java.lang.Object) -> a
    void Code(l.acknowledge$darkness,l.acknowledge$darkness) -> a
    void V(l.acknowledge$darkness,boolean) -> b
    void Code(l.acknowledge$darkness) -> a
    void V(l.acknowledge$darkness) -> b
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
l.acknowledge$This -> p.p:
    l.acknowledge et -> a
    int size() -> size
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
l.acknowledge$This$1 -> p.q:
    java.lang.Object next() -> next
l.acknowledge$darkness -> p.r:
    l.acknowledge$darkness ew -> a
    l.acknowledge$darkness ex -> b
    l.acknowledge$darkness ey -> c
    l.acknowledge$darkness eu -> d
    l.acknowledge$darkness ez -> e
    java.lang.Object key -> f
    java.lang.Object value -> g
    int height -> h
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    l.acknowledge$darkness Y() -> a
    l.acknowledge$darkness aa() -> b
l.acknowledge$of -> p.s:
    l.acknowledge$darkness eu -> a
    l.acknowledge$darkness ev -> b
    int expectedModCount -> c
    l.acknowledge et -> d
    boolean hasNext() -> hasNext
    l.acknowledge$darkness X() -> a
    void remove() -> remove
l.acknowledge$thing -> p.t:
    l.acknowledge et -> a
    int size() -> size
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
l.acknowledge$thing$1 -> p.u:
    java.lang.Object next() -> next
l.darkness -> p.v:
    l.darkness em -> a
    void I(o.This) -> a
l.mine -> p.w:
    int compare(java.lang.Object,java.lang.Object) -> compare
l.of -> p.x:
    l.of ec -> a
    double ed -> b
    int modifiers -> c
    boolean ee -> d
    java.util.List ef -> e
    java.util.List eg -> f
    l.of W() -> a
    j.name Code(j.Tempest,n.This) -> a
    boolean Code(java.lang.reflect.Field,boolean) -> a
    boolean Code(java.lang.Class,boolean) -> a
    boolean I(java.lang.Class) -> a
    boolean isInnerClass(java.lang.Class) -> b
    boolean Code(k.of,k.darkness) -> a
    java.lang.Object clone() -> clone
l.of$1 -> p.y:
    j.name du -> a
    l.of eh -> b
    boolean ei -> c
    boolean ej -> d
    j.Tempest ek -> e
    n.This el -> f
    java.lang.Object Code(o.This) -> a
    void Code(o.darkness,java.lang.Object) -> a
    j.name R() -> a
l.thing -> p.z:
    java.util.Map dy -> a
    l.From V(n.This) -> a
    l.From V(java.lang.Class) -> a
    java.lang.String toString() -> toString
l.thing$1 -> p.aa:
    j.i dX -> a
    java.lang.reflect.Type am -> b
    java.lang.Object U() -> a
    j.madness V(o.This) -> a
    void Code(j.madness,o.darkness) -> a
    java.io.Writer Code(java.lang.Appendable) -> a
l.thing$10 -> p.ab:
    java.lang.Object U() -> a
l.thing$11 -> p.ac:
    java.lang.Object U() -> a
l.thing$12 -> p.ad:
    java.lang.Object U() -> a
l.thing$2 -> p.ae:
    java.lang.Object U() -> a
l.thing$3 -> p.af:
    java.lang.Object U() -> a
l.thing$4 -> p.ag:
    l.V dY -> a
    java.lang.Class dZ -> b
    java.lang.reflect.Type am -> c
    java.lang.Object U() -> a
l.thing$5 -> p.ah:
    j.i ea -> a
    java.lang.reflect.Type am -> b
    java.lang.Object U() -> a
l.thing$6 -> p.ai:
    java.lang.reflect.Constructor eb -> a
    java.lang.Object U() -> a
l.thing$7 -> p.aj:
    java.lang.Object U() -> a
l.thing$8 -> p.ak:
    java.lang.reflect.Type am -> a
    java.lang.Object U() -> a
l.thing$9 -> p.al:
    java.lang.Object U() -> a
m.By -> q.a:
    java.lang.Object Code(o.This) -> a
    void Code(o.darkness,java.lang.Object) -> a
m.From -> q.b:
    java.io.Writer eO -> a
    j.in eP -> b
    java.util.List eN -> c
    java.lang.String eQ -> d
    j.madness eR -> e
    j.madness ag() -> a
    j.madness ah() -> j
    void I(j.madness) -> a
    o.darkness ai() -> b
    o.darkness aj() -> c
    o.darkness ak() -> d
    o.darkness al() -> e
    o.darkness o(java.lang.String) -> a
    o.darkness p(java.lang.String) -> b
    o.darkness am() -> f
    o.darkness B(boolean) -> a
    o.darkness Code(long) -> a
    o.darkness Code(java.lang.Number) -> a
    void flush() -> flush
    void close() -> close
m.Hamlet -> q.c:
    java.lang.Object Code(o.This) -> a
    void Code(o.darkness,java.lang.Object) -> a
m.I -> q.d:
    j.name Code(j.Tempest,n.This) -> a
m.II -> q.e:
    java.lang.Object Code(o.This) -> a
    void Code(o.darkness,java.lang.Object) -> a
m.Romeo -> q.f:
    java.lang.Number a(o.This) -> b
    java.lang.Object Code(o.This) -> a
    void Code(o.darkness,java.lang.Object) -> a
m.Tempest -> q.g:
    l.thing dm -> a
    boolean eS -> b
    j.name Code(j.Tempest,n.This) -> a
    boolean Code(m.Tempest) -> a
m.Tempest$This -> q.h:
    j.name eT -> a
    j.name eU -> b
    l.From eL -> c
    m.Tempest eV -> d
    java.lang.Object Code(o.This) -> a
    void Code(o.darkness,java.lang.Object) -> a
m.That -> q.i:
    java.net.URI F(o.This) -> b
    java.lang.Object Code(o.This) -> a
    void Code(o.darkness,java.lang.Object) -> a
m.The -> q.j:
    void write(char[],int,int) -> write
    void flush() -> flush
    void close() -> close
m.This -> q.k:
    j.That eH -> a
    java.lang.Class eI -> b
    j.name eJ -> c
    java.lang.Object Code(o.This) -> a
    void Code(o.darkness,java.lang.Object) -> a
m.Though -> q.l:
    l.thing dm -> a
    j.The dx -> b
    l.of dv -> c
    boolean Code(java.lang.reflect.Field,boolean) -> a
    j.name Code(j.Tempest,n.This) -> a
    java.util.Map Code(j.Tempest,n.This,java.lang.Class) -> a
m.Though$1 -> q.m:
    j.name eX -> d
    java.lang.reflect.Field val$field -> e
    j.Tempest eY -> f
    n.This eZ -> g
    boolean fa -> h
    void Code(o.darkness,java.lang.Object) -> a
    void Code(o.This,java.lang.Object) -> a
m.Though$This -> q.n:
    l.From eL -> a
    java.util.Map fb -> b
    java.lang.Object Code(o.This) -> a
    void Code(o.darkness,java.lang.Object) -> a
m.Though$thing -> q.o:
    java.lang.String name -> a
    boolean fc -> b
    boolean fd -> c
    void Code(o.darkness,java.lang.Object) -> a
    void Code(o.This,java.lang.Object) -> a
m.V -> q.p:
    j.That eH -> a
    j.Tempest dK -> b
    int[] eW -> c
    java.lang.Object Code(o.This) -> a
    void Code(o.darkness,java.lang.Object) -> a
    int[] an() -> a
m.What -> q.q:
    java.math.BigInteger S(o.This) -> b
    java.lang.Object Code(o.This) -> a
    void Code(o.darkness,java.lang.Object) -> a
m.a -> q.r:
    java.lang.Object Code(o.This) -> a
    void Code(o.darkness,java.lang.Object) -> a
m.acknowledge -> q.s:
    java.lang.Object eM -> a
    java.util.List eN -> b
    void beginArray() -> a
    void endArray() -> b
    void beginObject() -> c
    void endObject() -> d
    boolean hasNext() -> e
    o.of ac() -> f
    java.lang.Object ad() -> q
    java.lang.Object ae() -> r
    void Code(o.of) -> a
    java.lang.String nextName() -> g
    java.lang.String nextString() -> h
    boolean nextBoolean() -> i
    void nextNull() -> j
    double nextDouble() -> k
    long nextLong() -> l
    int nextInt() -> m
    void close() -> close
    void skipValue() -> n
    java.lang.String toString() -> toString
    void af() -> o
m.and -> q.t:
    java.lang.Object Code(o.This) -> a
    void Code(o.darkness,java.lang.Object) -> a
m.any -> q.u:
    java.lang.Object Code(o.This) -> a
    void Code(o.darkness,java.lang.Object) -> a
m.as -> q.v:
    java.lang.Number a(o.This) -> b
    java.lang.Object Code(o.This) -> a
    void Code(o.darkness,java.lang.Object) -> a
m.be -> q.w:
    j.name Code(j.Tempest,n.This) -> a
m.call -> q.x:
    java.lang.Object Code(o.This) -> a
    void Code(o.darkness,java.lang.Object) -> a
m.darkness -> q.y:
    j.That eH -> a
    java.text.DateFormat db -> b
    java.text.DateFormat dc -> c
    java.text.DateFormat dd -> d
    java.util.Date n(java.lang.String) -> a
    void Code(o.darkness,java.util.Date) -> a
    java.lang.Object Code(o.This) -> a
    void Code(o.darkness,java.lang.Object) -> a
m.i -> q.z:
    j.name Code(j.Tempest,n.This) -> a
m.ii -> q.aa:
    java.math.BigDecimal C(o.This) -> b
    java.lang.Object Code(o.This) -> a
    void Code(o.darkness,java.lang.Object) -> a
m.in -> q.ab:
    java.lang.Object Code(o.This) -> a
    void Code(o.darkness,java.lang.Object) -> a
m.is -> q.ac:
    j.name fg -> B
    j.That fh -> a
    j.name fi -> C
    j.That fj -> b
    j.name fk -> D
    j.name fl -> c
    j.That fm -> d
    j.name fn -> E
    j.That fo -> e
    j.name fp -> F
    j.That fq -> f
    j.name fr -> G
    j.That fs -> g
    j.name ft -> h
    j.name fu -> i
    j.name fv -> j
    j.name fw -> H
    j.That fx -> k
    j.name fy -> I
    j.That fz -> l
    j.name fA -> J
    j.name fB -> m
    j.name fC -> n
    j.That fD -> o
    j.name fE -> K
    j.That fF -> p
    j.name fG -> L
    j.That fH -> q
    j.name fI -> M
    j.That fJ -> r
    j.name fK -> N
    j.That fL -> s
    j.name fM -> O
    j.That fN -> t
    j.name fO -> P
    j.That fP -> u
    j.That fQ -> v
    j.name fR -> Q
    j.That fS -> w
    j.name fT -> R
    j.That fU -> x
    j.name fV -> y
    j.That fW -> z
    j.That fX -> A
    j.That Code(n.This,j.name) -> a
    j.That Code(java.lang.Class,j.name) -> a
    j.That Code(java.lang.Class,java.lang.Class,j.name) -> a
    j.That V(java.lang.Class,j.name) -> b
m.is$1 -> q.ad:
    j.name Code(j.Tempest,n.This) -> a
m.is$2 -> q.ae:
    n.This el -> a
    j.name fZ -> b
    j.name Code(j.Tempest,n.This) -> a
m.is$3 -> q.af:
    java.lang.Class ga -> a
    j.name fZ -> b
    j.name Code(j.Tempest,n.This) -> a
    java.lang.String toString() -> toString
m.is$4 -> q.ag:
    java.lang.Class gb -> a
    java.lang.Class gc -> b
    j.name fZ -> c
    j.name Code(j.Tempest,n.This) -> a
    java.lang.String toString() -> toString
m.is$5 -> q.ah:
    java.lang.Class gd -> a
    java.lang.Class ge -> b
    j.name fZ -> c
    j.name Code(j.Tempest,n.This) -> a
    java.lang.String toString() -> toString
m.is$6 -> q.ai:
    java.lang.Class val$clazz -> a
    j.name fZ -> b
    j.name Code(j.Tempest,n.This) -> a
    java.lang.String toString() -> toString
m.is$This -> q.aj:
    java.util.Map gf -> a
    java.util.Map gg -> b
    java.lang.Object Code(o.This) -> a
    void Code(o.darkness,java.lang.Object) -> a
m.madness -> q.ak:
    j.That eH -> a
    java.text.DateFormat fe -> b
    java.sql.Time B(o.This) -> b
    void Code(o.darkness,java.sql.Time) -> a
    java.lang.Object Code(o.This) -> a
    void Code(o.darkness,java.lang.Object) -> a
m.method -> q.al:
    java.lang.Object Code(o.This) -> a
    void Code(o.darkness,java.lang.Object) -> a
m.mine -> q.am:
    int read(char[],int,int) -> read
    void close() -> close
m.name -> q.an:
    java.lang.Object Code(o.This) -> a
    void Code(o.darkness,java.lang.Object) -> a
m.of -> q.ao:
    l.thing dm -> a
    j.name Code(j.Tempest,n.This) -> a
m.of$This -> q.ap:
    j.name eK -> a
    l.From eL -> b
    java.lang.Object Code(o.This) -> a
    void Code(o.darkness,java.lang.Object) -> a
m.other -> q.aq:
    int[] eW -> a
    j.madness L(o.This) -> b
    void Code(o.darkness,j.madness) -> a
    java.lang.Object Code(o.This) -> a
    void Code(o.darkness,java.lang.Object) -> a
    int[] an() -> a
m.rose -> q.ar:
    j.name Code(j.Tempest,n.This) -> a
m.rose$1 -> q.as:
    j.name fY -> a
    java.lang.Object Code(o.This) -> a
    void Code(o.darkness,java.lang.Object) -> a
m.s -> q.at:
    java.lang.Object Code(o.This) -> a
    void Code(o.darkness,java.lang.Object) -> a
m.smell -> q.au:
    java.lang.Number a(o.This) -> b
    java.lang.Object Code(o.This) -> a
    void Code(o.darkness,java.lang.Object) -> a
m.sweet -> q.av:
    java.lang.Number a(o.This) -> b
    java.lang.Object Code(o.This) -> a
    void Code(o.darkness,java.lang.Object) -> a
m.t -> q.aw:
    int[] eW -> a
    java.lang.Object Code(o.This) -> a
    void Code(o.darkness,java.lang.Object) -> a
    int[] an() -> a
m.there -> q.ax:
    j.Tempest ff -> a
    j.name du -> b
    java.lang.reflect.Type type -> c
    java.lang.Object Code(o.This) -> a
    void Code(o.darkness,java.lang.Object) -> a
m.thing -> q.ay:
    j.name Code(j.Tempest,n.This) -> a
m.this -> q.az:
    j.That eH -> a
    java.text.DateFormat fe -> b
    java.sql.Date Z(o.This) -> b
    void Code(o.darkness,java.sql.Date) -> a
    java.lang.Object Code(o.This) -> a
    void Code(o.darkness,java.lang.Object) -> a
m.we -> q.ba:
    java.lang.Object Code(o.This) -> a
    void Code(o.darkness,java.lang.Object) -> a
m.which -> q.bb:
    int[] eW -> a
    java.util.BitSet D(o.This) -> b
    java.lang.Object Code(o.This) -> a
    void Code(o.darkness,java.lang.Object) -> a
    int[] an() -> a
m.word -> q.bc:
    java.lang.Object Code(o.This) -> a
    void Code(o.darkness,java.lang.Object) -> a
m.would -> q.bd:
    java.lang.Object Code(o.This) -> a
    void Code(o.darkness,java.lang.Object) -> a
m.yet -> q.be:
    j.name Code(j.Tempest,n.This) -> a
n.This -> r.a:
    java.lang.Class gh -> a
    java.lang.reflect.Type type -> b
    int hashCode -> c
    java.lang.Class getRawType() -> a
    java.lang.reflect.Type ao() -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    n.This S(java.lang.reflect.Type) -> a
    n.This B(java.lang.Class) -> a
net.java.sip.communicator.impl.protocol.jabber.extensions.AbstractPacketExtension -> net.java.sip.communicator.impl.protocol.jabber.extensions.AbstractPacketExtension:
    java.lang.String namespace -> namespace
    java.lang.String elementName -> elementName
    java.util.Map attributes -> attributes
    java.lang.String textContent -> textContent
    java.util.List childExtensions -> childExtensions
    java.lang.String getElementName() -> getElementName
    void setNamespace(java.lang.String) -> setNamespace
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
    java.util.List getChildExtensions() -> getChildExtensions
    void addChildExtension(org.jivesoftware.smack.packet.PacketExtension) -> addChildExtension
    void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    void removeAttribute(java.lang.String) -> removeAttribute
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    java.lang.String getAttributeAsString(java.lang.String) -> getAttributeAsString
    int getAttributeAsInt(java.lang.String) -> getAttributeAsInt
    int getAttributeAsInt(java.lang.String,int) -> getAttributeAsInt
    java.net.URI getAttributeAsURI(java.lang.String) -> getAttributeAsURI
    java.util.List getAttributeNames() -> getAttributeNames
    void setText(java.lang.String) -> setText
    java.lang.String getText() -> getText
    org.jivesoftware.smack.packet.PacketExtension getFirstChildOfType(java.lang.Class) -> getFirstChildOfType
    java.util.List getChildExtensionsOfType(java.lang.Class) -> getChildExtensionsOfType
net.java.sip.communicator.impl.protocol.jabber.extensions.DefaultPacketExtensionProvider -> net.java.sip.communicator.impl.protocol.jabber.extensions.DefaultPacketExtensionProvider:
    java.util.logging.Logger logger -> logger
    java.lang.Class packetClass -> packetClass
    net.java.sip.communicator.impl.protocol.jabber.extensions.AbstractPacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.BandwidthPacketExtension -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.BandwidthPacketExtension:
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String TYPE_ATTR_NAME -> TYPE_ATTR_NAME
    void setType(java.lang.String) -> setType
    java.lang.String getType() -> getType
    void setBandwidth(java.lang.String) -> setBandwidth
    java.lang.String getBandwidth() -> getBandwidth
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.CandidatePacketExtension -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.CandidatePacketExtension:
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String COMPONENT_ATTR_NAME -> COMPONENT_ATTR_NAME
    int RTP_COMPONENT_ID -> RTP_COMPONENT_ID
    int RTCP_COMPONENT_ID -> RTCP_COMPONENT_ID
    java.lang.String FOUNDATION_ATTR_NAME -> FOUNDATION_ATTR_NAME
    java.lang.String GENERATION_ATTR_NAME -> GENERATION_ATTR_NAME
    java.lang.String ID_ATTR_NAME -> ID_ATTR_NAME
    java.lang.String IP_ATTR_NAME -> IP_ATTR_NAME
    java.lang.String NETWORK_ATTR_NAME -> NETWORK_ATTR_NAME
    java.lang.String PORT_ATTR_NAME -> PORT_ATTR_NAME
    java.lang.String PRIORITY_ATTR_NAME -> PRIORITY_ATTR_NAME
    java.lang.String PROTOCOL_ATTR_NAME -> PROTOCOL_ATTR_NAME
    java.lang.String REL_ADDR_ATTR_NAME -> REL_ADDR_ATTR_NAME
    java.lang.String REL_PORT_ATTR_NAME -> REL_PORT_ATTR_NAME
    java.lang.String TYPE_ATTR_NAME -> TYPE_ATTR_NAME
    void setComponent(int) -> setComponent
    int getComponent() -> getComponent
    void setFoundation(int) -> setFoundation
    int getFoundation() -> getFoundation
    void setGeneration(int) -> setGeneration
    int getGeneration() -> getGeneration
    void setID(java.lang.String) -> setID
    java.lang.String getID() -> getID
    void setIP(java.lang.String) -> setIP
    java.lang.String getIP() -> getIP
    void setNetwork(int) -> setNetwork
    int getNetwork() -> getNetwork
    void setPort(int) -> setPort
    int getPort() -> getPort
    void setPriority(long) -> setPriority
    int getPriority() -> getPriority
    void setProtocol(java.lang.String) -> setProtocol
    java.lang.String getProtocol() -> getProtocol
    void setRelAddr(java.lang.String) -> setRelAddr
    java.lang.String getRelAddr() -> getRelAddr
    void setRelPort(int) -> setRelPort
    int getRelPort() -> getRelPort
    void setType(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.CandidateType) -> setType
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.CandidateType getType() -> getType
    int compareTo(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.CandidatePacketExtension) -> compareTo
    int compareTo(java.lang.Object) -> compareTo
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.CandidateType -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.CandidateType:
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.CandidateType host -> host
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.CandidateType prflx -> prflx
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.CandidateType relay -> relay
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.CandidateType srflx -> srflx
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.CandidateType stun -> stun
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.CandidateType local -> local
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.CandidateType[] $VALUES -> $VALUES
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.CandidateType[] values() -> values
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.CandidateType valueOf(java.lang.String) -> valueOf
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.CoinPacketExtension -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.CoinPacketExtension:
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String ISFOCUS_ATTR_NAME -> ISFOCUS_ATTR_NAME
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension:
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String CREATOR_ATTR_NAME -> CREATOR_ATTR_NAME
    java.lang.String DISPOSITION_ATTR_NAME -> DISPOSITION_ATTR_NAME
    java.lang.String NAME_ATTR_NAME -> NAME_ATTR_NAME
    java.lang.String SENDERS_ATTR_NAME -> SENDERS_ATTR_NAME
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension$CreatorEnum getCreator() -> getCreator
    void setCreator(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension$CreatorEnum) -> setCreator
    java.lang.String getDisposition() -> getDisposition
    void setDisposition(java.lang.String) -> setDisposition
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension$SendersEnum getSenders() -> getSenders
    void setSenders(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension$SendersEnum) -> setSenders
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension$CreatorEnum -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension$CreatorEnum:
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension$CreatorEnum initiator -> initiator
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension$CreatorEnum responder -> responder
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension$CreatorEnum[] $VALUES -> $VALUES
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension$CreatorEnum[] values() -> values
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension$CreatorEnum valueOf(java.lang.String) -> valueOf
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension$SendersEnum -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension$SendersEnum:
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension$SendersEnum initiator -> initiator
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension$SendersEnum none -> none
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension$SendersEnum responder -> responder
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension$SendersEnum both -> both
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension$SendersEnum[] $VALUES -> $VALUES
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension$SendersEnum[] values() -> values
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension$SendersEnum valueOf(java.lang.String) -> valueOf
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.CryptoPacketExtension -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.CryptoPacketExtension:
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String CRYPTO_SUITE_ATTR_NAME -> CRYPTO_SUITE_ATTR_NAME
    java.lang.String KEY_PARAMS_ATTR_NAME -> KEY_PARAMS_ATTR_NAME
    java.lang.String SESSION_PARAMS_ATTR_NAME -> SESSION_PARAMS_ATTR_NAME
    java.lang.String TAG_ATTR_NAME -> TAG_ATTR_NAME
    void initialize(ch.imvs.sdes4j.srtp.SrtpCryptoAttribute) -> initialize
    void setCryptoSuite(java.lang.String) -> setCryptoSuite
    java.lang.String getCryptoSuite() -> getCryptoSuite
    boolean equalsCryptoSuite(java.lang.String) -> equalsCryptoSuite
    void setKeyParams(java.lang.String) -> setKeyParams
    java.lang.String getKeyParams() -> getKeyParams
    boolean equalsKeyParams(java.lang.String) -> equalsKeyParams
    void setSessionParams(java.lang.String) -> setSessionParams
    java.lang.String getSessionParams() -> getSessionParams
    boolean equalsSessionParams(java.lang.String) -> equalsSessionParams
    void setTag(java.lang.String) -> setTag
    java.lang.String getTag() -> getTag
    boolean equalsTag(java.lang.String) -> equalsTag
    ch.imvs.sdes4j.srtp.SrtpCryptoAttribute toSrtpCryptoAttribute() -> toSrtpCryptoAttribute
    boolean equalsStrings(java.lang.String,java.lang.String) -> equalsStrings
    boolean equals(java.lang.Object) -> equals
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.EncryptionPacketExtension -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.EncryptionPacketExtension:
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String REQUIRED_ATTR_NAME -> REQUIRED_ATTR_NAME
    java.util.List cryptoList -> cryptoList
    void addCrypto(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.CryptoPacketExtension) -> addCrypto
    java.util.List getCryptoList() -> getCryptoList
    void setRequired(boolean) -> setRequired
    boolean isRequired() -> isRequired
    java.util.List getChildExtensions() -> getChildExtensions
    void addChildExtension(org.jivesoftware.smack.packet.PacketExtension) -> addChildExtension
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.IceUdpTransportPacketExtension -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.IceUdpTransportPacketExtension:
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String PWD_ATTR_NAME -> PWD_ATTR_NAME
    java.lang.String UFRAG_ATTR_NAME -> UFRAG_ATTR_NAME
    java.util.List candidateList -> candidateList
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.RemoteCandidatePacketExtension remoteCandidate -> remoteCandidate
    void setPassword(java.lang.String) -> setPassword
    java.lang.String getPassword() -> getPassword
    void setUfrag(java.lang.String) -> setUfrag
    java.lang.String getUfrag() -> getUfrag
    java.util.List getChildExtensions() -> getChildExtensions
    void addCandidate(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.CandidatePacketExtension) -> addCandidate
    boolean removeCandidate(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.CandidatePacketExtension) -> removeCandidate
    java.util.List getCandidateList() -> getCandidateList
    void setRemoteCandidate(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.RemoteCandidatePacketExtension) -> setRemoteCandidate
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.RemoteCandidatePacketExtension getRemoteCandidate() -> getRemoteCandidate
    void addChildExtension(org.jivesoftware.smack.packet.PacketExtension) -> addChildExtension
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.InputEvtPacketExtension -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.InputEvtPacketExtension:
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String NAMESPACE -> NAMESPACE
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleAction -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleAction:
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleAction CONTENT_ACCEPT -> CONTENT_ACCEPT
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleAction CONTENT_ADD -> CONTENT_ADD
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleAction CONTENT_MODIFY -> CONTENT_MODIFY
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleAction CONTENT_REJECT -> CONTENT_REJECT
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleAction CONTENT_REMOVE -> CONTENT_REMOVE
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleAction DESCRIPTION_INFO -> DESCRIPTION_INFO
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleAction SECURITY_INFO -> SECURITY_INFO
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleAction SESSION_ACCEPT -> SESSION_ACCEPT
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleAction SESSION_INFO -> SESSION_INFO
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleAction SESSION_INITIATE -> SESSION_INITIATE
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleAction SESSION_TERMINATE -> SESSION_TERMINATE
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleAction TRANSPORT_ACCEPT -> TRANSPORT_ACCEPT
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleAction TRANSPORT_INFO -> TRANSPORT_INFO
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleAction TRANSPORT_REJECT -> TRANSPORT_REJECT
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleAction TRANSPORT_REPLACE -> TRANSPORT_REPLACE
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleAction CALL_ACCEPT -> CALL_ACCEPT
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleAction CALLER_RELAY -> CALLER_RELAY
    java.lang.String actionName -> actionName
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleAction[] $VALUES -> $VALUES
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleAction[] values() -> values
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleAction valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleAction parseString(java.lang.String) -> parseString
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ:
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String ACTION_ATTR_NAME -> ACTION_ATTR_NAME
    java.lang.String INITIATOR_ATTR_NAME -> INITIATOR_ATTR_NAME
    java.lang.String RESPONDER_ATTR_NAME -> RESPONDER_ATTR_NAME
    java.lang.String SID_ATTR_NAME -> SID_ATTR_NAME
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleAction action -> action
    java.lang.String initiator -> initiator
    java.lang.String responder -> responder
    java.lang.String sid -> sid
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ReasonPacketExtension reason -> reason
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.SessionInfoPacketExtension sessionInfo -> sessionInfo
    java.util.List contentList -> contentList
    java.lang.String getChildElementXML() -> getChildElementXML
    void setSID(java.lang.String) -> setSID
    java.lang.String getSID() -> getSID
    java.lang.String generateSID() -> generateSID
    void setResponder(java.lang.String) -> setResponder
    java.lang.String getResponder() -> getResponder
    void setInitiator(java.lang.String) -> setInitiator
    java.lang.String getInitiator() -> getInitiator
    void setAction(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleAction) -> setAction
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleAction getAction() -> getAction
    void setReason(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ReasonPacketExtension) -> setReason
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ReasonPacketExtension getReason() -> getReason
    java.util.List getContentList() -> getContentList
    void addContent(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension) -> addContent
    boolean containsContentChildOfType(java.lang.Class) -> containsContentChildOfType
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension getContentForType(java.lang.Class) -> getContentForType
    void setSessionInfo(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.SessionInfoPacketExtension) -> setSessionInfo
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.SessionInfoPacketExtension getSessionInfo() -> getSessionInfo
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQProvider -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQProvider:
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JinglePacketFactory -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JinglePacketFactory:
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ createRinging(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ) -> createRinging
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ createSessionInfo(java.lang.String,java.lang.String,java.lang.String) -> createSessionInfo
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ createSessionInfo(java.lang.String,java.lang.String,java.lang.String,net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.SessionInfoType) -> createSessionInfo
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ createBusy(java.lang.String,java.lang.String,java.lang.String) -> createBusy
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ createBye(java.lang.String,java.lang.String,java.lang.String) -> createBye
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ createCancel(java.lang.String,java.lang.String,java.lang.String) -> createCancel
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ createSessionTerminate(java.lang.String,java.lang.String,java.lang.String,net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason,java.lang.String) -> createSessionTerminate
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ createSessionAccept(java.lang.String,java.lang.String,java.lang.String,java.lang.Iterable) -> createSessionAccept
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ createSessionInitiate(java.lang.String,java.lang.String,java.lang.String,java.util.List) -> createSessionInitiate
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ createContentAdd(java.lang.String,java.lang.String,java.lang.String,java.util.List) -> createContentAdd
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ createContentAccept(java.lang.String,java.lang.String,java.lang.String,java.lang.Iterable) -> createContentAccept
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ createContentReject(java.lang.String,java.lang.String,java.lang.String,java.lang.Iterable) -> createContentReject
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ createContentModify(java.lang.String,java.lang.String,java.lang.String,net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension) -> createContentModify
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ createContentRemove(java.lang.String,java.lang.String,java.lang.String,java.lang.Iterable) -> createContentRemove
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ createCallAccept(java.lang.String,java.lang.String,java.lang.String) -> createCallAccept
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.JingleIQ createCallerRelay(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> createCallerRelay
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.MuteSessionInfoPacketExtension -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.MuteSessionInfoPacketExtension:
    java.lang.String NAME_ATTR_VALUE -> NAME_ATTR_VALUE
    boolean isMute() -> isMute
    java.lang.String getName() -> getName
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ParameterPacketExtension -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ParameterPacketExtension:
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String NAME_ATTR_NAME -> NAME_ATTR_NAME
    java.lang.String VALUE_ATTR_NAME -> VALUE_ATTR_NAME
    void setName(java.lang.String) -> setName
    java.lang.String getName() -> getName
    void setValue(java.lang.String) -> setValue
    java.lang.String getValue() -> getValue
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.PayloadTypePacketExtension -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.PayloadTypePacketExtension:
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String CHANNELS_ATTR_NAME -> CHANNELS_ATTR_NAME
    java.lang.String CLOCKRATE_ATTR_NAME -> CLOCKRATE_ATTR_NAME
    java.lang.String ID_ATTR_NAME -> ID_ATTR_NAME
    java.lang.String MAXPTIME_ATTR_NAME -> MAXPTIME_ATTR_NAME
    java.lang.String NAME_ATTR_NAME -> NAME_ATTR_NAME
    java.lang.String PTIME_ATTR_NAME -> PTIME_ATTR_NAME
    void setChannels(int) -> setChannels
    int getChannels() -> getChannels
    void setClockrate(int) -> setClockrate
    int getClockrate() -> getClockrate
    void setId(int) -> setId
    int getID() -> getID
    void setMaxptime(int) -> setMaxptime
    int getMaxptime() -> getMaxptime
    void setPtime(int) -> setPtime
    int getPtime() -> getPtime
    void setName(java.lang.String) -> setName
    java.lang.String getName() -> getName
    void addParameter(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ParameterPacketExtension) -> addParameter
    java.util.List getParameters() -> getParameters
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.RTPHdrExtPacketExtension -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.RTPHdrExtPacketExtension:
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String ID_ATTR_NAME -> ID_ATTR_NAME
    java.lang.String SENDERS_ATTR_NAME -> SENDERS_ATTR_NAME
    java.lang.String URI_ATTR_NAME -> URI_ATTR_NAME
    java.lang.String ATTRIBUTES_ATTR_NAME -> ATTRIBUTES_ATTR_NAME
    void setID(java.lang.String) -> setID
    java.lang.String getID() -> getID
    void setSenders(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension$SendersEnum) -> setSenders
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ContentPacketExtension$SendersEnum getSenders() -> getSenders
    void setURI(java.net.URI) -> setURI
    java.net.URI getURI() -> getURI
    void setAttributes(java.lang.String) -> setAttributes
    java.lang.String getAttributes() -> getAttributes
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.RawUdpTransportPacketExtension -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.RawUdpTransportPacketExtension:
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.util.List getChildExtensions() -> getChildExtensions
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason:
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason ALTERNATIVE_SESSION -> ALTERNATIVE_SESSION
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason BUSY -> BUSY
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason CANCEL -> CANCEL
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason CONNECTIVITY_ERROR -> CONNECTIVITY_ERROR
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason DECLINE -> DECLINE
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason EXPIRED -> EXPIRED
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason FAILED_APPLICATION -> FAILED_APPLICATION
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason FAILED_TRANSPORT -> FAILED_TRANSPORT
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason GENERAL_ERROR -> GENERAL_ERROR
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason GONE -> GONE
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason INCOMPATIBLE_PARAMETERS -> INCOMPATIBLE_PARAMETERS
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason MEDIA_ERROR -> MEDIA_ERROR
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason SECURITY_ERROR -> SECURITY_ERROR
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason SUCCESS -> SUCCESS
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason TIMEOUT -> TIMEOUT
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason UNSUPPORTED_APPLICATIONS -> UNSUPPORTED_APPLICATIONS
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason UNSUPPORTED_TRANSPORTS -> UNSUPPORTED_TRANSPORTS
    java.lang.String reasonValue -> reasonValue
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason[] $VALUES -> $VALUES
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason[] values() -> values
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason parseString(java.lang.String) -> parseString
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ReasonPacketExtension -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ReasonPacketExtension:
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String TEXT_ELEMENT_NAME -> TEXT_ELEMENT_NAME
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason reason -> reason
    java.lang.String text -> text
    org.jivesoftware.smack.packet.PacketExtension otherExtension -> otherExtension
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.Reason getReason() -> getReason
    java.lang.String getText() -> getText
    void setText(java.lang.String) -> setText
    org.jivesoftware.smack.packet.PacketExtension getOtherExtension() -> getOtherExtension
    void setOtherExtension(org.jivesoftware.smack.packet.PacketExtension) -> setOtherExtension
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ReasonProvider -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ReasonProvider:
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ReasonPacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
    java.lang.String parseText(org.xmlpull.v1.XmlPullParser) -> parseText
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.RedirectPacketExtension -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.RedirectPacketExtension:
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String redir -> redir
    void setRedir(java.lang.String) -> setRedir
    java.lang.String getRedir() -> getRedir
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.RedirectProvider -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.RedirectProvider:
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.RedirectPacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
    java.lang.String parseText(org.xmlpull.v1.XmlPullParser) -> parseText
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.RemoteCandidatePacketExtension -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.RemoteCandidatePacketExtension:
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.RtpDescriptionPacketExtension -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.RtpDescriptionPacketExtension:
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String MEDIA_ATTR_NAME -> MEDIA_ATTR_NAME
    java.lang.String SSRC_ATTR_NAME -> SSRC_ATTR_NAME
    java.util.List payloadTypes -> payloadTypes
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.EncryptionPacketExtension encryption -> encryption
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.BandwidthPacketExtension bandwidth -> bandwidth
    java.util.List extmapList -> extmapList
    java.util.List children -> children
    void setMedia(java.lang.String) -> setMedia
    java.lang.String getMedia() -> getMedia
    void setSsrc(java.lang.String) -> setSsrc
    java.lang.String getSsrc() -> getSsrc
    void addPayloadType(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.PayloadTypePacketExtension) -> addPayloadType
    java.util.List getPayloadTypes() -> getPayloadTypes
    java.util.List getChildExtensions() -> getChildExtensions
    void addChildExtension(org.jivesoftware.smack.packet.PacketExtension) -> addChildExtension
    void setEncryption(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.EncryptionPacketExtension) -> setEncryption
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.EncryptionPacketExtension getEncryption() -> getEncryption
    void setBandwidth(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.BandwidthPacketExtension) -> setBandwidth
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.BandwidthPacketExtension getBandwidth() -> getBandwidth
    void addExtmap(net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.RTPHdrExtPacketExtension) -> addExtmap
    java.util.List getExtmapList() -> getExtmapList
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.SessionInfoPacketExtension -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.SessionInfoPacketExtension:
    java.lang.String NAMESPACE -> NAMESPACE
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.SessionInfoType type -> type
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.SessionInfoType getType() -> getType
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.SessionInfoType -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.SessionInfoType:
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.SessionInfoType active -> active
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.SessionInfoType hold -> hold
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.SessionInfoType mute -> mute
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.SessionInfoType ringing -> ringing
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.SessionInfoType unhold -> unhold
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.SessionInfoType unmute -> unmute
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.SessionInfoType[] $VALUES -> $VALUES
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.SessionInfoType[] values() -> values
    net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.SessionInfoType valueOf(java.lang.String) -> valueOf
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.TransferPacketExtension -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.TransferPacketExtension:
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String FROM_ATTR_NAME -> FROM_ATTR_NAME
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String SID_ATTR_NAME -> SID_ATTR_NAME
    java.lang.String TO_ATTR_NAME -> TO_ATTR_NAME
    java.lang.String getFrom() -> getFrom
    void setFrom(java.lang.String) -> setFrom
    java.lang.String getSID() -> getSID
    void setSID(java.lang.String) -> setSID
    java.lang.String getTo() -> getTo
    void setTo(java.lang.String) -> setTo
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.TransferredPacketExtension -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.TransferredPacketExtension:
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String NAMESPACE -> NAMESPACE
net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ZrtpHashPacketExtension -> net.java.sip.communicator.impl.protocol.jabber.extensions.jingle.ZrtpHashPacketExtension:
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String VERSION_ATTR_NAME -> VERSION_ATTR_NAME
    java.lang.String getVersion() -> getVersion
    void setVersion(java.lang.String) -> setVersion
    java.lang.String getValue() -> getValue
    void setValue(java.lang.String) -> setValue
o.I -> s.a:
o.This -> s.b:
    char[] gi -> a
    java.io.Reader in -> b
    boolean gj -> c
    char[] gk -> d
    int pos -> e
    int limit -> f
    int lineNumber -> g
    int gl -> h
    int gm -> i
    long gn -> j
    int go -> k
    java.lang.String gp -> l
    int[] stack -> m
    int gq -> n
    void setLenient(boolean) -> a
    boolean isLenient() -> p
    void beginArray() -> a
    void endArray() -> b
    void beginObject() -> c
    void endObject() -> d
    boolean hasNext() -> e
    o.of ac() -> f
    int ap() -> o
    int aq() -> q
    int ar() -> r
    boolean Code(char) -> a
    java.lang.String nextName() -> g
    java.lang.String nextString() -> h
    boolean nextBoolean() -> i
    void nextNull() -> j
    double nextDouble() -> k
    long nextLong() -> l
    java.lang.String V(char) -> b
    java.lang.String as() -> s
    void I(char) -> c
    int nextInt() -> m
    void close() -> close
    void skipValue() -> n
    void push(int) -> a
    boolean Z(int) -> b
    int getColumnNumber() -> t
    int C(boolean) -> b
    void at() -> u
    void au() -> v
    java.lang.String toString() -> toString
    char av() -> w
    java.io.IOException q(java.lang.String) -> a
    int b(o.This) -> a
    int c(o.This) -> b
    void Code(o.This,int) -> a
    int d(o.This) -> c
    int e(o.This) -> d
o.darkness -> s.c:
    java.lang.String[] gC -> a
    java.lang.String[] gD -> b
    java.io.Writer out -> c
    int[] stack -> d
    int gq -> e
    java.lang.String gE -> f
    java.lang.String separator -> g
    boolean gj -> h
    boolean do -> i
    java.lang.String gF -> j
    boolean dn -> k
    void setIndent(java.lang.String) -> c
    void setLenient(boolean) -> b
    boolean isLenient() -> g
    void S(boolean) -> c
    boolean ax() -> h
    void F(boolean) -> d
    boolean ay() -> i
    o.darkness ai() -> b
    o.darkness aj() -> c
    o.darkness ak() -> d
    o.darkness al() -> e
    o.darkness Code(int,java.lang.String) -> a
    o.darkness Code(int,int,java.lang.String) -> a
    void push(int) -> a
    int peek() -> a
    void B(int) -> b
    o.darkness o(java.lang.String) -> a
    void az() -> j
    o.darkness p(java.lang.String) -> b
    o.darkness am() -> f
    o.darkness B(boolean) -> a
    o.darkness Code(long) -> a
    o.darkness Code(java.lang.Number) -> a
    void flush() -> flush
    void close() -> close
    void r(java.lang.String) -> d
    void aA() -> k
    void D(boolean) -> e
o.of -> s.d:
    o.of gr -> a
    o.of gs -> b
    o.of gt -> c
    o.of gu -> d
    o.of gv -> e
    o.of gw -> f
    o.of gx -> g
    o.of gy -> h
    o.of gz -> i
    o.of gA -> j
    o.of[] gB -> k
    o.of[] aw() -> a
o.thing -> s.e:
    void I(o.This) -> a
org.apache.harmony.javax.security.auth.AuthPermission -> org.apache.harmony.javax.security.auth.AuthPermission:
    long serialVersionUID -> serialVersionUID
    java.lang.String CREATE_LOGIN_CONTEXT -> CREATE_LOGIN_CONTEXT
    java.lang.String CREATE_LOGIN_CONTEXT_ANY -> CREATE_LOGIN_CONTEXT_ANY
    java.lang.String init(java.lang.String) -> init
org.apache.harmony.javax.security.auth.DestroyFailedException -> org.apache.harmony.javax.security.auth.DestroyFailedException:
    long serialVersionUID -> serialVersionUID
org.apache.harmony.javax.security.auth.Destroyable -> org.apache.harmony.javax.security.auth.Destroyable:
    void destroy() -> destroy
    boolean isDestroyed() -> isDestroyed
org.apache.harmony.javax.security.auth.PrivateCredentialPermission -> org.apache.harmony.javax.security.auth.PrivateCredentialPermission:
    long serialVersionUID -> serialVersionUID
    java.lang.String READ -> READ
    java.lang.String credentialClass -> credentialClass
    int offset -> offset
    org.apache.harmony.javax.security.auth.PrivateCredentialPermission$CredOwner[] set -> set
    void initTargetName(java.lang.String) -> initTargetName
    void readObject(java.io.ObjectInputStream) -> readObject
    java.lang.String[][] getPrincipals() -> getPrincipals
    java.lang.String getActions() -> getActions
    java.lang.String getCredentialClass() -> getCredentialClass
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean implies(java.security.Permission) -> implies
    java.security.PermissionCollection newPermissionCollection() -> newPermissionCollection
    boolean sameMembers(java.lang.Object[],java.lang.Object[],int) -> sameMembers
org.apache.harmony.javax.security.auth.PrivateCredentialPermission$CredOwner -> org.apache.harmony.javax.security.auth.PrivateCredentialPermission$CredOwner:
    long serialVersionUID -> serialVersionUID
    java.lang.String principalClass -> principalClass
    java.lang.String principalName -> principalName
    boolean isClassWildcard -> isClassWildcard
    boolean isPNameWildcard -> isPNameWildcard
    boolean implies(java.lang.Object) -> implies
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.apache.harmony.javax.security.auth.RefreshFailedException -> org.apache.harmony.javax.security.auth.RefreshFailedException:
    long serialVersionUID -> serialVersionUID
org.apache.harmony.javax.security.auth.Refreshable -> org.apache.harmony.javax.security.auth.Refreshable:
    void refresh() -> refresh
    boolean isCurrent() -> isCurrent
org.apache.harmony.javax.security.auth.Subject -> org.apache.harmony.javax.security.auth.Subject:
    long serialVersionUID -> serialVersionUID
    org.apache.harmony.javax.security.auth.AuthPermission _AS -> _AS
    org.apache.harmony.javax.security.auth.AuthPermission _AS_PRIVILEGED -> _AS_PRIVILEGED
    org.apache.harmony.javax.security.auth.AuthPermission _SUBJECT -> _SUBJECT
    org.apache.harmony.javax.security.auth.AuthPermission _PRINCIPALS -> _PRINCIPALS
    org.apache.harmony.javax.security.auth.AuthPermission _PRIVATE_CREDENTIALS -> _PRIVATE_CREDENTIALS
    org.apache.harmony.javax.security.auth.AuthPermission _PUBLIC_CREDENTIALS -> _PUBLIC_CREDENTIALS
    org.apache.harmony.javax.security.auth.AuthPermission _READ_ONLY -> _READ_ONLY
    java.util.Set principals -> principals
    boolean readOnly -> readOnly
    org.apache.harmony.javax.security.auth.Subject$SecureSet privateCredentials -> privateCredentials
    org.apache.harmony.javax.security.auth.Subject$SecureSet publicCredentials -> publicCredentials
    java.lang.Object doAs(org.apache.harmony.javax.security.auth.Subject,java.security.PrivilegedAction) -> doAs
    java.lang.Object doAsPrivileged(org.apache.harmony.javax.security.auth.Subject,java.security.PrivilegedAction,java.security.AccessControlContext) -> doAsPrivileged
    java.lang.Object doAs_PrivilegedAction(org.apache.harmony.javax.security.auth.Subject,java.security.PrivilegedAction,java.security.AccessControlContext) -> doAs_PrivilegedAction
    java.lang.Object doAs(org.apache.harmony.javax.security.auth.Subject,java.security.PrivilegedExceptionAction) -> doAs
    java.lang.Object doAsPrivileged(org.apache.harmony.javax.security.auth.Subject,java.security.PrivilegedExceptionAction,java.security.AccessControlContext) -> doAsPrivileged
    java.lang.Object doAs_PrivilegedExceptionAction(org.apache.harmony.javax.security.auth.Subject,java.security.PrivilegedExceptionAction,java.security.AccessControlContext) -> doAs_PrivilegedExceptionAction
    boolean equals(java.lang.Object) -> equals
    java.util.Set getPrincipals() -> getPrincipals
    java.util.Set getPrincipals(java.lang.Class) -> getPrincipals
    java.util.Set getPrivateCredentials() -> getPrivateCredentials
    java.util.Set getPrivateCredentials(java.lang.Class) -> getPrivateCredentials
    java.util.Set getPublicCredentials() -> getPublicCredentials
    java.util.Set getPublicCredentials(java.lang.Class) -> getPublicCredentials
    int hashCode() -> hashCode
    void setReadOnly() -> setReadOnly
    boolean isReadOnly() -> isReadOnly
    java.lang.String toString() -> toString
    void readObject(java.io.ObjectInputStream) -> readObject
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    org.apache.harmony.javax.security.auth.Subject getSubject(java.security.AccessControlContext) -> getSubject
    void checkPermission(java.security.Permission) -> checkPermission
    void checkState() -> checkState
    org.apache.harmony.javax.security.auth.AuthPermission access$000() -> access$000
    void access$100(org.apache.harmony.javax.security.auth.Subject) -> access$100
    void access$200(java.security.Permission) -> access$200
    org.apache.harmony.javax.security.auth.AuthPermission access$300() -> access$300
    java.util.Set access$400(org.apache.harmony.javax.security.auth.Subject) -> access$400
    org.apache.harmony.javax.security.auth.AuthPermission access$500() -> access$500
org.apache.harmony.javax.security.auth.Subject$1 -> org.apache.harmony.javax.security.auth.Subject$1:
    java.security.AccessControlContext val$context -> val$context
    org.apache.harmony.javax.security.auth.SubjectDomainCombiner val$combiner -> val$combiner
    java.lang.Object run() -> run
org.apache.harmony.javax.security.auth.Subject$2 -> org.apache.harmony.javax.security.auth.Subject$2:
    java.security.AccessControlContext val$context -> val$context
    org.apache.harmony.javax.security.auth.SubjectDomainCombiner val$combiner -> val$combiner
    java.security.AccessControlContext run() -> run
    java.lang.Object run() -> run
org.apache.harmony.javax.security.auth.Subject$3 -> org.apache.harmony.javax.security.auth.Subject$3:
    java.security.AccessControlContext val$context -> val$context
    java.security.DomainCombiner run() -> run
    java.lang.Object run() -> run
org.apache.harmony.javax.security.auth.Subject$SecureSet -> org.apache.harmony.javax.security.auth.Subject$SecureSet:
    long serialVersionUID -> serialVersionUID
    java.util.LinkedList elements -> elements
    int setType -> setType
    int SET_Principal -> SET_Principal
    int SET_PrivCred -> SET_PrivCred
    int SET_PubCred -> SET_PubCred
    org.apache.harmony.javax.security.auth.AuthPermission permission -> permission
    org.apache.harmony.javax.security.auth.Subject this$0 -> this$0
    void verifyElement(java.lang.Object) -> verifyElement
    boolean add(java.lang.Object) -> add
    java.util.Iterator iterator() -> iterator
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.util.Set get(java.lang.Class) -> get
    void readObject(java.io.ObjectInputStream) -> readObject
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    org.apache.harmony.javax.security.auth.AuthPermission access$600(org.apache.harmony.javax.security.auth.Subject$SecureSet) -> access$600
org.apache.harmony.javax.security.auth.Subject$SecureSet$1 -> org.apache.harmony.javax.security.auth.Subject$SecureSet$1:
    org.apache.harmony.javax.security.auth.Subject$SecureSet this$1 -> this$1
    java.lang.Object next() -> next
org.apache.harmony.javax.security.auth.Subject$SecureSet$2 -> org.apache.harmony.javax.security.auth.Subject$SecureSet$2:
    java.util.LinkedList elements -> elements
    java.lang.Class val$c -> val$c
    org.apache.harmony.javax.security.auth.Subject$SecureSet this$1 -> this$1
    boolean add(java.lang.Object) -> add
    java.util.Iterator iterator() -> iterator
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
org.apache.harmony.javax.security.auth.Subject$SecureSet$SecureIterator -> org.apache.harmony.javax.security.auth.Subject$SecureSet$SecureIterator:
    java.util.Iterator iterator -> iterator
    org.apache.harmony.javax.security.auth.Subject$SecureSet this$1 -> this$1
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
org.apache.harmony.javax.security.auth.SubjectDomainCombiner -> org.apache.harmony.javax.security.auth.SubjectDomainCombiner:
    org.apache.harmony.javax.security.auth.Subject subject -> subject
    org.apache.harmony.javax.security.auth.AuthPermission _GET -> _GET
    org.apache.harmony.javax.security.auth.Subject getSubject() -> getSubject
    java.security.ProtectionDomain[] combine(java.security.ProtectionDomain[],java.security.ProtectionDomain[]) -> combine
org.apache.harmony.javax.security.auth.callback.Callback -> org.apache.harmony.javax.security.auth.callback.Callback:
org.apache.harmony.javax.security.auth.callback.CallbackHandler -> org.apache.harmony.javax.security.auth.callback.CallbackHandler:
    void handle(org.apache.harmony.javax.security.auth.callback.Callback[]) -> handle
org.apache.harmony.javax.security.auth.callback.ChoiceCallback -> org.apache.harmony.javax.security.auth.callback.ChoiceCallback:
    long serialVersionUID -> serialVersionUID
    int defaultChoice -> defaultChoice
    java.lang.String prompt -> prompt
    boolean multipleSelectionsAllowed -> multipleSelectionsAllowed
    java.lang.String[] choices -> choices
    int[] selections -> selections
    void setChoices(java.lang.String[]) -> setChoices
    void setPrompt(java.lang.String) -> setPrompt
    void setDefaultChoice(int) -> setDefaultChoice
    boolean allowMultipleSelections() -> allowMultipleSelections
    java.lang.String[] getChoices() -> getChoices
    int getDefaultChoice() -> getDefaultChoice
    java.lang.String getPrompt() -> getPrompt
    int[] getSelectedIndexes() -> getSelectedIndexes
    void setSelectedIndex(int) -> setSelectedIndex
    void setSelectedIndexes(int[]) -> setSelectedIndexes
org.apache.harmony.javax.security.auth.callback.ConfirmationCallback -> org.apache.harmony.javax.security.auth.callback.ConfirmationCallback:
    long serialVersionUID -> serialVersionUID
    int YES -> YES
    int NO -> NO
    int CANCEL -> CANCEL
    int OK -> OK
    int YES_NO_OPTION -> YES_NO_OPTION
    int YES_NO_CANCEL_OPTION -> YES_NO_CANCEL_OPTION
    int OK_CANCEL_OPTION -> OK_CANCEL_OPTION
    int UNSPECIFIED_OPTION -> UNSPECIFIED_OPTION
    int INFORMATION -> INFORMATION
    int WARNING -> WARNING
    int ERROR -> ERROR
    java.lang.String prompt -> prompt
    int messageType -> messageType
    int optionType -> optionType
    int defaultOption -> defaultOption
    java.lang.String[] options -> options
    int selection -> selection
    java.lang.String getPrompt() -> getPrompt
    int getMessageType() -> getMessageType
    int getDefaultOption() -> getDefaultOption
    java.lang.String[] getOptions() -> getOptions
    int getOptionType() -> getOptionType
    int getSelectedIndex() -> getSelectedIndex
    void setSelectedIndex(int) -> setSelectedIndex
org.apache.harmony.javax.security.auth.callback.LanguageCallback -> org.apache.harmony.javax.security.auth.callback.LanguageCallback:
    long serialVersionUID -> serialVersionUID
    java.util.Locale locale -> locale
    java.util.Locale getLocale() -> getLocale
    void setLocale(java.util.Locale) -> setLocale
org.apache.harmony.javax.security.auth.callback.NameCallback -> org.apache.harmony.javax.security.auth.callback.NameCallback:
    long serialVersionUID -> serialVersionUID
    java.lang.String prompt -> prompt
    java.lang.String defaultName -> defaultName
    java.lang.String inputName -> inputName
    void setPrompt(java.lang.String) -> setPrompt
    void setDefaultName(java.lang.String) -> setDefaultName
    java.lang.String getPrompt() -> getPrompt
    java.lang.String getDefaultName() -> getDefaultName
    void setName(java.lang.String) -> setName
    java.lang.String getName() -> getName
org.apache.harmony.javax.security.auth.callback.PasswordCallback -> org.apache.harmony.javax.security.auth.callback.PasswordCallback:
    long serialVersionUID -> serialVersionUID
    java.lang.String prompt -> prompt
    boolean echoOn -> echoOn
    char[] inputPassword -> inputPassword
    void setPrompt(java.lang.String) -> setPrompt
    java.lang.String getPrompt() -> getPrompt
    boolean isEchoOn() -> isEchoOn
    void setPassword(char[]) -> setPassword
    char[] getPassword() -> getPassword
    void clearPassword() -> clearPassword
org.apache.harmony.javax.security.auth.callback.TextInputCallback -> org.apache.harmony.javax.security.auth.callback.TextInputCallback:
    long serialVersionUID -> serialVersionUID
    java.lang.String defaultText -> defaultText
    java.lang.String prompt -> prompt
    java.lang.String inputText -> inputText
    void setPrompt(java.lang.String) -> setPrompt
    void setDefaultText(java.lang.String) -> setDefaultText
    java.lang.String getDefaultText() -> getDefaultText
    java.lang.String getPrompt() -> getPrompt
    java.lang.String getText() -> getText
    void setText(java.lang.String) -> setText
org.apache.harmony.javax.security.auth.callback.TextOutputCallback -> org.apache.harmony.javax.security.auth.callback.TextOutputCallback:
    long serialVersionUID -> serialVersionUID
    int INFORMATION -> INFORMATION
    int WARNING -> WARNING
    int ERROR -> ERROR
    java.lang.String message -> message
    int messageType -> messageType
    java.lang.String getMessage() -> getMessage
    int getMessageType() -> getMessageType
org.apache.harmony.javax.security.auth.callback.UnsupportedCallbackException -> org.apache.harmony.javax.security.auth.callback.UnsupportedCallbackException:
    long serialVersionUID -> serialVersionUID
    org.apache.harmony.javax.security.auth.callback.Callback callback -> callback
    org.apache.harmony.javax.security.auth.callback.Callback getCallback() -> getCallback
org.apache.harmony.javax.security.auth.login.AccountException -> org.apache.harmony.javax.security.auth.login.AccountException:
    long serialVersionUID -> serialVersionUID
org.apache.harmony.javax.security.auth.login.AccountExpiredException -> org.apache.harmony.javax.security.auth.login.AccountExpiredException:
    long serialVersionUID -> serialVersionUID
org.apache.harmony.javax.security.auth.login.AccountLockedException -> org.apache.harmony.javax.security.auth.login.AccountLockedException:
    long serialVersionUID -> serialVersionUID
org.apache.harmony.javax.security.auth.login.AccountNotFoundException -> org.apache.harmony.javax.security.auth.login.AccountNotFoundException:
    long serialVersionUID -> serialVersionUID
org.apache.harmony.javax.security.auth.login.AppConfigurationEntry -> org.apache.harmony.javax.security.auth.login.AppConfigurationEntry:
    java.util.Map options -> options
    org.apache.harmony.javax.security.auth.login.AppConfigurationEntry$LoginModuleControlFlag controlFlag -> controlFlag
    java.lang.String loginModuleName -> loginModuleName
    java.lang.String getLoginModuleName() -> getLoginModuleName
    org.apache.harmony.javax.security.auth.login.AppConfigurationEntry$LoginModuleControlFlag getControlFlag() -> getControlFlag
    java.util.Map getOptions() -> getOptions
org.apache.harmony.javax.security.auth.login.AppConfigurationEntry$LoginModuleControlFlag -> org.apache.harmony.javax.security.auth.login.AppConfigurationEntry$LoginModuleControlFlag:
    java.lang.String flag -> flag
    org.apache.harmony.javax.security.auth.login.AppConfigurationEntry$LoginModuleControlFlag REQUIRED -> REQUIRED
    org.apache.harmony.javax.security.auth.login.AppConfigurationEntry$LoginModuleControlFlag REQUISITE -> REQUISITE
    org.apache.harmony.javax.security.auth.login.AppConfigurationEntry$LoginModuleControlFlag OPTIONAL -> OPTIONAL
    org.apache.harmony.javax.security.auth.login.AppConfigurationEntry$LoginModuleControlFlag SUFFICIENT -> SUFFICIENT
    java.lang.String toString() -> toString
org.apache.harmony.javax.security.auth.login.Configuration -> org.apache.harmony.javax.security.auth.login.Configuration:
    org.apache.harmony.javax.security.auth.login.Configuration configuration -> configuration
    org.apache.harmony.javax.security.auth.AuthPermission GET_LOGIN_CONFIGURATION -> GET_LOGIN_CONFIGURATION
    org.apache.harmony.javax.security.auth.AuthPermission SET_LOGIN_CONFIGURATION -> SET_LOGIN_CONFIGURATION
    java.lang.String LOGIN_CONFIGURATION_PROVIDER -> LOGIN_CONFIGURATION_PROVIDER
    org.apache.harmony.javax.security.auth.login.Configuration getConfiguration() -> getConfiguration
    org.apache.harmony.javax.security.auth.login.Configuration getDefaultProvider() -> getDefaultProvider
    org.apache.harmony.javax.security.auth.login.Configuration getAccessibleConfiguration() -> getAccessibleConfiguration
    void setConfiguration(org.apache.harmony.javax.security.auth.login.Configuration) -> setConfiguration
    org.apache.harmony.javax.security.auth.login.AppConfigurationEntry[] getAppConfigurationEntry(java.lang.String) -> getAppConfigurationEntry
    void refresh() -> refresh
org.apache.harmony.javax.security.auth.login.Configuration$1 -> org.apache.harmony.javax.security.auth.login.Configuration$1:
    void refresh() -> refresh
    org.apache.harmony.javax.security.auth.login.AppConfigurationEntry[] getAppConfigurationEntry(java.lang.String) -> getAppConfigurationEntry
org.apache.harmony.javax.security.auth.login.CredentialException -> org.apache.harmony.javax.security.auth.login.CredentialException:
    long serialVersionUID -> serialVersionUID
org.apache.harmony.javax.security.auth.login.CredentialExpiredException -> org.apache.harmony.javax.security.auth.login.CredentialExpiredException:
    long serialVersionUID -> serialVersionUID
org.apache.harmony.javax.security.auth.login.CredentialNotFoundException -> org.apache.harmony.javax.security.auth.login.CredentialNotFoundException:
    long serialVersionUID -> serialVersionUID
org.apache.harmony.javax.security.auth.login.FailedLoginException -> org.apache.harmony.javax.security.auth.login.FailedLoginException:
    long serialVersionUID -> serialVersionUID
org.apache.harmony.javax.security.auth.login.LoginContext -> org.apache.harmony.javax.security.auth.login.LoginContext:
    java.lang.String DEFAULT_CALLBACK_HANDLER_PROPERTY -> DEFAULT_CALLBACK_HANDLER_PROPERTY
    int OPTIONAL -> OPTIONAL
    int REQUIRED -> REQUIRED
    int REQUISITE -> REQUISITE
    int SUFFICIENT -> SUFFICIENT
    org.apache.harmony.javax.security.auth.Subject subject -> subject
    boolean userProvidedSubject -> userProvidedSubject
    boolean userProvidedConfig -> userProvidedConfig
    java.security.AccessControlContext userContext -> userContext
    org.apache.harmony.javax.security.auth.callback.CallbackHandler callbackHandler -> callbackHandler
    org.apache.harmony.javax.security.auth.login.LoginContext$Module[] modules -> modules
    java.util.Map sharedState -> sharedState
    java.lang.ClassLoader contextClassLoader -> contextClassLoader
    boolean loggedIn -> loggedIn
    void init(java.lang.String,org.apache.harmony.javax.security.auth.Subject,org.apache.harmony.javax.security.auth.callback.CallbackHandler,org.apache.harmony.javax.security.auth.login.Configuration) -> init
    org.apache.harmony.javax.security.auth.Subject getSubject() -> getSubject
    void login() -> login
    void loginImpl() -> loginImpl
    void logout() -> logout
    void logoutImpl() -> logoutImpl
    java.lang.ClassLoader access$002(org.apache.harmony.javax.security.auth.login.LoginContext,java.lang.ClassLoader) -> access$002
    java.lang.ClassLoader access$000(org.apache.harmony.javax.security.auth.login.LoginContext) -> access$000
    org.apache.harmony.javax.security.auth.callback.CallbackHandler access$102(org.apache.harmony.javax.security.auth.login.LoginContext,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> access$102
    void access$200(org.apache.harmony.javax.security.auth.login.LoginContext) -> access$200
    void access$300(org.apache.harmony.javax.security.auth.login.LoginContext) -> access$300
    java.security.AccessControlContext access$500(org.apache.harmony.javax.security.auth.login.LoginContext) -> access$500
org.apache.harmony.javax.security.auth.login.LoginContext$1 -> org.apache.harmony.javax.security.auth.login.LoginContext$1:
    org.apache.harmony.javax.security.auth.callback.CallbackHandler val$cbHandler -> val$cbHandler
    org.apache.harmony.javax.security.auth.login.LoginContext this$0 -> this$0
    java.lang.Void run() -> run
    java.lang.Object run() -> run
org.apache.harmony.javax.security.auth.login.LoginContext$2 -> org.apache.harmony.javax.security.auth.login.LoginContext$2:
    org.apache.harmony.javax.security.auth.login.LoginContext this$0 -> this$0
    java.lang.Void run() -> run
    java.lang.Object run() -> run
org.apache.harmony.javax.security.auth.login.LoginContext$3 -> org.apache.harmony.javax.security.auth.login.LoginContext$3:
    org.apache.harmony.javax.security.auth.login.LoginContext this$0 -> this$0
    java.lang.Void run() -> run
    java.lang.Object run() -> run
org.apache.harmony.javax.security.auth.login.LoginContext$ContextedCallbackHandler -> org.apache.harmony.javax.security.auth.login.LoginContext$ContextedCallbackHandler:
    org.apache.harmony.javax.security.auth.callback.CallbackHandler hiddenHandlerRef -> hiddenHandlerRef
    org.apache.harmony.javax.security.auth.login.LoginContext this$0 -> this$0
    void handle(org.apache.harmony.javax.security.auth.callback.Callback[]) -> handle
    org.apache.harmony.javax.security.auth.callback.CallbackHandler access$400(org.apache.harmony.javax.security.auth.login.LoginContext$ContextedCallbackHandler) -> access$400
org.apache.harmony.javax.security.auth.login.LoginContext$ContextedCallbackHandler$1 -> org.apache.harmony.javax.security.auth.login.LoginContext$ContextedCallbackHandler$1:
    org.apache.harmony.javax.security.auth.callback.Callback[] val$callbacks -> val$callbacks
    org.apache.harmony.javax.security.auth.login.LoginContext$ContextedCallbackHandler this$1 -> this$1
    java.lang.Void run() -> run
    java.lang.Object run() -> run
org.apache.harmony.javax.security.auth.login.LoginContext$Module -> org.apache.harmony.javax.security.auth.login.LoginContext$Module:
    org.apache.harmony.javax.security.auth.login.AppConfigurationEntry entry -> entry
    int flag -> flag
    org.apache.harmony.javax.security.auth.spi.LoginModule module -> module
    java.lang.Class klass -> klass
    org.apache.harmony.javax.security.auth.login.LoginContext this$0 -> this$0
    int getFlag() -> getFlag
    void create(org.apache.harmony.javax.security.auth.Subject,org.apache.harmony.javax.security.auth.callback.CallbackHandler,java.util.Map) -> create
org.apache.harmony.javax.security.auth.login.LoginException -> org.apache.harmony.javax.security.auth.login.LoginException:
    long serialVersionUID -> serialVersionUID
org.apache.harmony.javax.security.auth.spi.LoginModule -> org.apache.harmony.javax.security.auth.spi.LoginModule:
    void initialize(org.apache.harmony.javax.security.auth.Subject,org.apache.harmony.javax.security.auth.callback.CallbackHandler,java.util.Map,java.util.Map) -> initialize
    boolean login() -> login
    boolean commit() -> commit
    boolean abort() -> abort
    boolean logout() -> logout
org.apache.harmony.javax.security.sasl.AuthenticationException -> org.apache.harmony.javax.security.sasl.AuthenticationException:
    long serialVersionUID -> serialVersionUID
org.apache.harmony.javax.security.sasl.AuthorizeCallback -> org.apache.harmony.javax.security.sasl.AuthorizeCallback:
    long serialVersionUID -> serialVersionUID
    java.lang.String authenticationID -> authenticationID
    java.lang.String authorizationID -> authorizationID
    java.lang.String authorizedID -> authorizedID
    boolean authorized -> authorized
    java.lang.String getAuthenticationID() -> getAuthenticationID
    java.lang.String getAuthorizationID() -> getAuthorizationID
    java.lang.String getAuthorizedID() -> getAuthorizedID
    boolean isAuthorized() -> isAuthorized
    void setAuthorized(boolean) -> setAuthorized
    void setAuthorizedID(java.lang.String) -> setAuthorizedID
org.apache.harmony.javax.security.sasl.RealmCallback -> org.apache.harmony.javax.security.sasl.RealmCallback:
    long serialVersionUID -> serialVersionUID
org.apache.harmony.javax.security.sasl.RealmChoiceCallback -> org.apache.harmony.javax.security.sasl.RealmChoiceCallback:
    long serialVersionUID -> serialVersionUID
org.apache.harmony.javax.security.sasl.Sasl -> org.apache.harmony.javax.security.sasl.Sasl:
    java.lang.String CLIENTFACTORYSRV -> CLIENTFACTORYSRV
    java.lang.String SERVERFACTORYSRV -> SERVERFACTORYSRV
    java.lang.String POLICY_NOPLAINTEXT -> POLICY_NOPLAINTEXT
    java.lang.String POLICY_NOACTIVE -> POLICY_NOACTIVE
    java.lang.String POLICY_NODICTIONARY -> POLICY_NODICTIONARY
    java.lang.String POLICY_NOANONYMOUS -> POLICY_NOANONYMOUS
    java.lang.String POLICY_FORWARD_SECRECY -> POLICY_FORWARD_SECRECY
    java.lang.String POLICY_PASS_CREDENTIALS -> POLICY_PASS_CREDENTIALS
    java.lang.String MAX_BUFFER -> MAX_BUFFER
    java.lang.String RAW_SEND_SIZE -> RAW_SEND_SIZE
    java.lang.String REUSE -> REUSE
    java.lang.String QOP -> QOP
    java.lang.String STRENGTH -> STRENGTH
    java.lang.String SERVER_AUTH -> SERVER_AUTH
    java.lang.Object newInstance(java.lang.String,java.security.Provider) -> newInstance
    java.util.Collection findFactories(java.lang.String) -> findFactories
    java.util.Enumeration getSaslClientFactories() -> getSaslClientFactories
    java.util.Enumeration getSaslServerFactories() -> getSaslServerFactories
    org.apache.harmony.javax.security.sasl.SaslServer createSaslServer(java.lang.String,java.lang.String,java.lang.String,java.util.Map,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> createSaslServer
    org.apache.harmony.javax.security.sasl.SaslClient createSaslClient(java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.util.Map,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> createSaslClient
org.apache.harmony.javax.security.sasl.SaslClient -> org.apache.harmony.javax.security.sasl.SaslClient:
    void dispose() -> dispose
    byte[] evaluateChallenge(byte[]) -> evaluateChallenge
    java.lang.String getMechanismName() -> getMechanismName
    java.lang.Object getNegotiatedProperty(java.lang.String) -> getNegotiatedProperty
    boolean hasInitialResponse() -> hasInitialResponse
    boolean isComplete() -> isComplete
    byte[] unwrap(byte[],int,int) -> unwrap
    byte[] wrap(byte[],int,int) -> wrap
org.apache.harmony.javax.security.sasl.SaslClientFactory -> org.apache.harmony.javax.security.sasl.SaslClientFactory:
    org.apache.harmony.javax.security.sasl.SaslClient createSaslClient(java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.util.Map,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> createSaslClient
    java.lang.String[] getMechanismNames(java.util.Map) -> getMechanismNames
org.apache.harmony.javax.security.sasl.SaslException -> org.apache.harmony.javax.security.sasl.SaslException:
    long serialVersionUID -> serialVersionUID
    java.lang.Throwable _exception -> _exception
    java.lang.Throwable getCause() -> getCause
    java.lang.Throwable initCause(java.lang.Throwable) -> initCause
    java.lang.String toString() -> toString
org.apache.harmony.javax.security.sasl.SaslServer -> org.apache.harmony.javax.security.sasl.SaslServer:
    void dispose() -> dispose
    byte[] evaluateResponse(byte[]) -> evaluateResponse
    java.lang.String getAuthorizationID() -> getAuthorizationID
    java.lang.String getMechanismName() -> getMechanismName
    java.lang.Object getNegotiatedProperty(java.lang.String) -> getNegotiatedProperty
    boolean isComplete() -> isComplete
    byte[] unwrap(byte[],int,int) -> unwrap
    byte[] wrap(byte[],int,int) -> wrap
org.apache.harmony.javax.security.sasl.SaslServerFactory -> org.apache.harmony.javax.security.sasl.SaslServerFactory:
    org.apache.harmony.javax.security.sasl.SaslServer createSaslServer(java.lang.String,java.lang.String,java.lang.String,java.util.Map,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> createSaslServer
    java.lang.String[] getMechanismNames(java.util.Map) -> getMechanismNames
org.apache.qpid.management.common.sasl.CRAMMD5HashedSaslClientFactory -> org.apache.qpid.management.common.sasl.CRAMMD5HashedSaslClientFactory:
    java.lang.String MECHANISM -> MECHANISM
    org.apache.harmony.javax.security.sasl.SaslClient createSaslClient(java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.util.Map,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> createSaslClient
    java.lang.String[] getMechanismNames(java.util.Map) -> getMechanismNames
org.apache.qpid.management.common.sasl.ClientSaslFactory -> org.apache.qpid.management.common.sasl.ClientSaslFactory:
    org.apache.harmony.javax.security.sasl.SaslClient createSaslClient(java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.util.Map,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> createSaslClient
    java.lang.String[] getMechanismNames(java.util.Map) -> getMechanismNames
org.apache.qpid.management.common.sasl.Constants -> org.apache.qpid.management.common.sasl.Constants:
    java.lang.String MECH_CRAMMD5 -> MECH_CRAMMD5
    java.lang.String MECH_PLAIN -> MECH_PLAIN
    java.lang.String SASL_CRAMMD5 -> SASL_CRAMMD5
    java.lang.String SASL_PLAIN -> SASL_PLAIN
org.apache.qpid.management.common.sasl.JCAProvider -> org.apache.qpid.management.common.sasl.JCAProvider:
    long serialVersionUID -> serialVersionUID
    void register(java.util.Map) -> register
org.apache.qpid.management.common.sasl.PlainSaslClient -> org.apache.qpid.management.common.sasl.PlainSaslClient:
    boolean completed -> completed
    org.apache.harmony.javax.security.auth.callback.CallbackHandler cbh -> cbh
    java.lang.String authorizationID -> authorizationID
    java.lang.String authenticationID -> authenticationID
    byte[] password -> password
    byte SEPARATOR -> SEPARATOR
    byte[] evaluateChallenge(byte[]) -> evaluateChallenge
    java.lang.String getMechanismName() -> getMechanismName
    boolean hasInitialResponse() -> hasInitialResponse
    boolean isComplete() -> isComplete
    byte[] unwrap(byte[],int,int) -> unwrap
    byte[] wrap(byte[],int,int) -> wrap
    java.lang.Object getNegotiatedProperty(java.lang.String) -> getNegotiatedProperty
    void clearPassword() -> clearPassword
    void dispose() -> dispose
    void finalize() -> finalize
    java.lang.Object[] getUserInfo() -> getUserInfo
org.apache.qpid.management.common.sasl.SaslProvider -> org.apache.qpid.management.common.sasl.SaslProvider:
    long serialVersionUID -> serialVersionUID
org.apache.qpid.management.common.sasl.UserPasswordCallbackHandler -> org.apache.qpid.management.common.sasl.UserPasswordCallbackHandler:
    java.lang.String user -> user
    char[] pwchars -> pwchars
    void handle(org.apache.harmony.javax.security.auth.callback.Callback[]) -> handle
    void clearPassword() -> clearPassword
    void finalize() -> finalize
org.apache.qpid.management.common.sasl.UsernameHashedPasswordCallbackHandler -> org.apache.qpid.management.common.sasl.UsernameHashedPasswordCallbackHandler:
    java.lang.String user -> user
    char[] pwchars -> pwchars
    void handle(org.apache.harmony.javax.security.auth.callback.Callback[]) -> handle
    void clearPassword() -> clearPassword
    void finalize() -> finalize
    char[] getHash(java.lang.String) -> getHash
org.bitlet.weupnp.GatewayDevice -> org.bitlet.weupnp.GatewayDevice:
    java.lang.String st -> st
    java.lang.String location -> location
    java.lang.String serviceType -> serviceType
    java.lang.String serviceTypeCIF -> serviceTypeCIF
    java.lang.String urlBase -> urlBase
    java.lang.String controlURL -> controlURL
    java.lang.String controlURLCIF -> controlURLCIF
    java.lang.String eventSubURL -> eventSubURL
    java.lang.String eventSubURLCIF -> eventSubURLCIF
    java.lang.String sCPDURL -> sCPDURL
    java.lang.String sCPDURLCIF -> sCPDURLCIF
    java.lang.String deviceType -> deviceType
    java.lang.String deviceTypeCIF -> deviceTypeCIF
    java.lang.String friendlyName -> friendlyName
    java.lang.String manufacturer -> manufacturer
    java.lang.String modelDescription -> modelDescription
    java.lang.String presentationURL -> presentationURL
    java.net.InetAddress localAddress -> localAddress
    java.lang.String modelNumber -> modelNumber
    java.lang.String modelName -> modelName
    int TIMEOUT -> TIMEOUT
    void loadDescription() -> loadDescription
    java.util.Map simpleUPnPcommand(java.lang.String,java.lang.String,java.lang.String,java.util.Map) -> simpleUPnPcommand
    boolean isConnected() -> isConnected
    java.lang.String getExternalIPAddress() -> getExternalIPAddress
    boolean addPortMapping(int,int,java.lang.String,java.lang.String,java.lang.String) -> addPortMapping
    boolean getSpecificPortMappingEntry(int,java.lang.String,org.bitlet.weupnp.PortMappingEntry) -> getSpecificPortMappingEntry
    boolean getGenericPortMappingEntry(int,org.bitlet.weupnp.PortMappingEntry) -> getGenericPortMappingEntry
    java.lang.Integer getPortMappingNumberOfEntries() -> getPortMappingNumberOfEntries
    boolean deletePortMapping(int,java.lang.String) -> deletePortMapping
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    void setLocalAddress(java.net.InetAddress) -> setLocalAddress
    java.lang.String getSt() -> getSt
    void setSt(java.lang.String) -> setSt
    java.lang.String getLocation() -> getLocation
    void setLocation(java.lang.String) -> setLocation
    java.lang.String getServiceType() -> getServiceType
    void setServiceType(java.lang.String) -> setServiceType
    java.lang.String getServiceTypeCIF() -> getServiceTypeCIF
    void setServiceTypeCIF(java.lang.String) -> setServiceTypeCIF
    java.lang.String getControlURL() -> getControlURL
    void setControlURL(java.lang.String) -> setControlURL
    java.lang.String getControlURLCIF() -> getControlURLCIF
    void setControlURLCIF(java.lang.String) -> setControlURLCIF
    java.lang.String getEventSubURL() -> getEventSubURL
    void setEventSubURL(java.lang.String) -> setEventSubURL
    java.lang.String getEventSubURLCIF() -> getEventSubURLCIF
    void setEventSubURLCIF(java.lang.String) -> setEventSubURLCIF
    java.lang.String getSCPDURL() -> getSCPDURL
    void setSCPDURL(java.lang.String) -> setSCPDURL
    java.lang.String getSCPDURLCIF() -> getSCPDURLCIF
    void setSCPDURLCIF(java.lang.String) -> setSCPDURLCIF
    java.lang.String getDeviceType() -> getDeviceType
    void setDeviceType(java.lang.String) -> setDeviceType
    java.lang.String getDeviceTypeCIF() -> getDeviceTypeCIF
    void setDeviceTypeCIF(java.lang.String) -> setDeviceTypeCIF
    java.lang.String getURLBase() -> getURLBase
    void setURLBase(java.lang.String) -> setURLBase
    java.lang.String getFriendlyName() -> getFriendlyName
    void setFriendlyName(java.lang.String) -> setFriendlyName
    java.lang.String getManufacturer() -> getManufacturer
    void setManufacturer(java.lang.String) -> setManufacturer
    java.lang.String getModelDescription() -> getModelDescription
    void setModelDescription(java.lang.String) -> setModelDescription
    java.lang.String getPresentationURL() -> getPresentationURL
    void setPresentationURL(java.lang.String) -> setPresentationURL
    java.lang.String getModelName() -> getModelName
    void setModelName(java.lang.String) -> setModelName
    java.lang.String getModelNumber() -> getModelNumber
    void setModelNumber(java.lang.String) -> setModelNumber
    java.lang.String copyOrCatUrl(java.lang.String,java.lang.String) -> copyOrCatUrl
org.bitlet.weupnp.GatewayDeviceHandler -> org.bitlet.weupnp.GatewayDeviceHandler:
    org.bitlet.weupnp.GatewayDevice device -> device
    java.lang.String currentElement -> currentElement
    int level -> level
    short state -> state
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void characters(char[],int,int) -> characters
org.bitlet.weupnp.GatewayDiscover -> org.bitlet.weupnp.GatewayDiscover:
    int PORT -> PORT
    java.lang.String IP -> IP
    int TIMEOUT -> TIMEOUT
    java.lang.String stSearch -> stSearch
    java.util.Map devices -> devices
    java.util.Map discover() -> discover
    org.bitlet.weupnp.GatewayDevice parseMSearchReplay(byte[]) -> parseMSearchReplay
    org.bitlet.weupnp.GatewayDevice getValidGateway() -> getValidGateway
    java.net.InetAddress getOutboundAddress(java.net.SocketAddress) -> getOutboundAddress
org.bitlet.weupnp.LogUtils -> org.bitlet.weupnp.LogUtils:
    java.lang.String LOG_NAME -> LOG_NAME
    java.util.logging.Logger logger -> logger
    java.util.logging.Logger getLogger() -> getLogger
    java.lang.String getLogName() -> getLogName
org.bitlet.weupnp.Main -> org.bitlet.weupnp.Main:
    int SAMPLE_PORT -> SAMPLE_PORT
    short WAIT_TIME -> WAIT_TIME
    void main(java.lang.String[]) -> main
org.bitlet.weupnp.NameValueHandler -> org.bitlet.weupnp.NameValueHandler:
    java.util.Map nameValue -> nameValue
    java.lang.String currentElement -> currentElement
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void characters(char[],int,int) -> characters
org.bitlet.weupnp.PortMappingEntry -> org.bitlet.weupnp.PortMappingEntry:
    int internalPort -> internalPort
    int externalPort -> externalPort
    java.lang.String remoteHost -> remoteHost
    java.lang.String internalClient -> internalClient
    java.lang.String protocol -> protocol
    java.lang.String enabled -> enabled
    java.lang.String portMappingDescription -> portMappingDescription
    int getInternalPort() -> getInternalPort
    void setInternalPort(int) -> setInternalPort
    int getExternalPort() -> getExternalPort
    void setExternalPort(int) -> setExternalPort
    java.lang.String getRemoteHost() -> getRemoteHost
    void setRemoteHost(java.lang.String) -> setRemoteHost
    java.lang.String getInternalClient() -> getInternalClient
    void setInternalClient(java.lang.String) -> setInternalClient
    java.lang.String getProtocol() -> getProtocol
    void setProtocol(java.lang.String) -> setProtocol
    java.lang.String getEnabled() -> getEnabled
    void setEnabled(java.lang.String) -> setEnabled
    java.lang.String getPortMappingDescription() -> getPortMappingDescription
    void setPortMappingDescription(java.lang.String) -> setPortMappingDescription
org.ice4j.AbstractResponseCollector -> org.ice4j.AbstractResponseCollector:
    void processFailure(org.ice4j.BaseStunMessageEvent) -> processFailure
    void processTimeout(org.ice4j.StunTimeoutEvent) -> processTimeout
    void processUnreachable(org.ice4j.StunFailureEvent) -> processUnreachable
org.ice4j.BaseStunMessageEvent -> org.ice4j.BaseStunMessageEvent:
    long serialVersionUID -> serialVersionUID
    org.ice4j.message.Message message -> message
    org.ice4j.stack.StunStack stunStack -> stunStack
    org.ice4j.stack.TransactionID transactionID -> transactionID
    org.ice4j.message.Message getMessage() -> getMessage
    org.ice4j.TransportAddress getSourceAddress() -> getSourceAddress
    org.ice4j.stack.StunStack getStunStack() -> getStunStack
    org.ice4j.stack.TransactionID getTransactionID() -> getTransactionID
    void setTransactionID(org.ice4j.stack.TransactionID) -> setTransactionID
org.ice4j.ChannelDataMessageEvent -> org.ice4j.ChannelDataMessageEvent:
    long serialVersionUID -> serialVersionUID
    org.ice4j.stack.StunStack stunStack -> stunStack
    org.ice4j.TransportAddress remoteAddress -> remoteAddress
    org.ice4j.TransportAddress localAddress -> localAddress
    org.ice4j.message.ChannelData channelDataMessage -> channelDataMessage
    org.ice4j.message.ChannelData getChannelDataMessage() -> getChannelDataMessage
    org.ice4j.TransportAddress getRemoteAddress() -> getRemoteAddress
    org.ice4j.TransportAddress getLocalAddress() -> getLocalAddress
    org.ice4j.stack.StunStack getStunStack() -> getStunStack
org.ice4j.PeerUdpMessageEvent -> org.ice4j.PeerUdpMessageEvent:
    long serialVersionUID -> serialVersionUID
    org.ice4j.stack.StunStack stunStack -> stunStack
    org.ice4j.stack.RawMessage udpMessage -> udpMessage
    byte[] getBytes() -> getBytes
    int getMessageLength() -> getMessageLength
    org.ice4j.TransportAddress getRemoteAddress() -> getRemoteAddress
    org.ice4j.TransportAddress getLocalAddress() -> getLocalAddress
    org.ice4j.stack.StunStack getStunStack() -> getStunStack
org.ice4j.ResponseCollector -> org.ice4j.ResponseCollector:
    void processResponse(org.ice4j.StunResponseEvent) -> processResponse
    void processTimeout(org.ice4j.StunTimeoutEvent) -> processTimeout
org.ice4j.StackProperties -> org.ice4j.StackProperties:
    java.util.logging.Logger logger -> logger
    java.lang.String BIND_RETRIES -> BIND_RETRIES
    int BIND_RETRIES_DEFAULT_VALUE -> BIND_RETRIES_DEFAULT_VALUE
    java.lang.String FIRST_CTRAN_RETRANS_AFTER -> FIRST_CTRAN_RETRANS_AFTER
    java.lang.String MAX_CTRAN_RETRANS_TIMER -> MAX_CTRAN_RETRANS_TIMER
    java.lang.String KEEP_CRANS_AFTER_A_RESPONSE -> KEEP_CRANS_AFTER_A_RESPONSE
    java.lang.String MAX_CTRAN_RETRANSMISSIONS -> MAX_CTRAN_RETRANSMISSIONS
    java.lang.String MAX_CHECK_LIST_SIZE -> MAX_CHECK_LIST_SIZE
    java.lang.String SOFTWARE -> SOFTWARE
    java.lang.String PROPAGATE_RECEIVED_RETRANSMISSIONS -> PROPAGATE_RECEIVED_RETRANSMISSIONS
    java.lang.String ALLOW_LINK_TO_GLOBAL_REACHABILITY -> ALLOW_LINK_TO_GLOBAL_REACHABILITY
    java.lang.String ALWAYS_SIGN -> ALWAYS_SIGN
    java.lang.String REQUIRE_MESSAGE_INTEGRITY -> REQUIRE_MESSAGE_INTEGRITY
    java.lang.String TERMINATION_DELAY -> TERMINATION_DELAY
    java.lang.String NO_KEEP_ALIVES -> NO_KEEP_ALIVES
    java.lang.String NOMINATION_TIMER -> NOMINATION_TIMER
    java.lang.String DISABLE_IPv6 -> DISABLE_IPv6
    java.lang.String ALLOWED_INTERFACES -> ALLOWED_INTERFACES
    java.lang.String BLOCKED_INTERFACES -> BLOCKED_INTERFACES
    java.lang.String getString(java.lang.String) -> getString
    java.lang.String[] getStringArray(java.lang.String,java.lang.String) -> getStringArray
    int getInt(java.lang.String,int) -> getInt
    boolean getBoolean(java.lang.String,boolean) -> getBoolean
org.ice4j.StunException -> org.ice4j.StunException:
    long serialVersionUID -> serialVersionUID
    int UNKNOWN_ERROR -> UNKNOWN_ERROR
    int ILLEGAL_STATE -> ILLEGAL_STATE
    int ILLEGAL_ARGUMENT -> ILLEGAL_ARGUMENT
    int INTERNAL_ERROR -> INTERNAL_ERROR
    int TRANSACTION_DOES_NOT_EXIST -> TRANSACTION_DOES_NOT_EXIST
    int NETWORK_ERROR -> NETWORK_ERROR
    int TRANSACTION_ALREADY_ANSWERED -> TRANSACTION_ALREADY_ANSWERED
    int id -> id
    void setID(int) -> setID
    int getID() -> getID
org.ice4j.StunFailureEvent -> org.ice4j.StunFailureEvent:
    long serialVersionUID -> serialVersionUID
    java.lang.Throwable cause -> cause
    org.ice4j.TransportAddress getLocalAddress() -> getLocalAddress
    java.lang.Throwable getCause() -> getCause
    java.lang.String toString() -> toString
org.ice4j.StunMessageEvent -> org.ice4j.StunMessageEvent:
    long serialVersionUID -> serialVersionUID
    org.ice4j.stack.RawMessage rawMessage -> rawMessage
    org.ice4j.TransportAddress getLocalAddress() -> getLocalAddress
    org.ice4j.TransportAddress getRemoteAddress() -> getRemoteAddress
    java.lang.String toString() -> toString
    org.ice4j.stack.RawMessage getRawMessage() -> getRawMessage
org.ice4j.StunResponseEvent -> org.ice4j.StunResponseEvent:
    long serialVersionUID -> serialVersionUID
    org.ice4j.message.Request request -> request
    org.ice4j.message.Request getRequest() -> getRequest
    org.ice4j.message.Response getResponse() -> getResponse
org.ice4j.StunTimeoutEvent -> org.ice4j.StunTimeoutEvent:
    long serialVersionUID -> serialVersionUID
    org.ice4j.TransportAddress getLocalAddress() -> getLocalAddress
    java.lang.String toString() -> toString
org.ice4j.Transport -> org.ice4j.Transport:
    org.ice4j.Transport TCP -> TCP
    org.ice4j.Transport UDP -> UDP
    org.ice4j.Transport TLS -> TLS
    org.ice4j.Transport DTLS -> DTLS
    org.ice4j.Transport SCTP -> SCTP
    org.ice4j.Transport SSLTCP -> SSLTCP
    java.lang.String transportName -> transportName
    org.ice4j.Transport[] $VALUES -> $VALUES
    org.ice4j.Transport[] values() -> values
    org.ice4j.Transport valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
    org.ice4j.Transport parse(java.lang.String) -> parse
org.ice4j.TransportAddress -> org.ice4j.TransportAddress:
    long serialVersionUID -> serialVersionUID
    org.ice4j.Transport transport -> transport
    byte[] getAddressBytes() -> getAddressBytes
    java.lang.String toString() -> toString
    java.lang.String getHostAddress() -> getHostAddress
    org.ice4j.Transport getTransport() -> getTransport
    boolean equals(org.ice4j.TransportAddress) -> equals
    boolean equalsTransportAddress(java.lang.Object) -> equalsTransportAddress
    boolean isIPv6() -> isIPv6
    boolean canReach(org.ice4j.TransportAddress) -> canReach
org.ice4j.attribute.AddressAttribute -> org.ice4j.attribute.AddressAttribute:
    byte ADDRESS_FAMILY_IPV4 -> ADDRESS_FAMILY_IPV4
    byte ADDRESS_FAMILY_IPV6 -> ADDRESS_FAMILY_IPV6
    org.ice4j.TransportAddress address -> address
    char DATA_LENGTH_FOR_IPV6 -> DATA_LENGTH_FOR_IPV6
    char DATA_LENGTH_FOR_IPV4 -> DATA_LENGTH_FOR_IPV4
    boolean isTypeValid(char) -> isTypeValid
    void setAttributeType(char) -> setAttributeType
    java.lang.String getName() -> getName
    boolean equals(java.lang.Object) -> equals
    char getDataLength() -> getDataLength
    byte[] encode() -> encode
    void setAddress(org.ice4j.TransportAddress) -> setAddress
    org.ice4j.TransportAddress getAddress() -> getAddress
    byte[] getAddressBytes() -> getAddressBytes
    byte getFamily() -> getFamily
    int getPort() -> getPort
    void decodeAttributeBody(byte[],char,char) -> decodeAttributeBody
org.ice4j.attribute.AlternateServerAttribute -> org.ice4j.attribute.AlternateServerAttribute:
    java.lang.String NAME -> NAME
    int getPort() -> getPort
    byte getFamily() -> getFamily
    byte[] getAddressBytes() -> getAddressBytes
    org.ice4j.TransportAddress getAddress() -> getAddress
    void setAddress(org.ice4j.TransportAddress) -> setAddress
    byte[] encode() -> encode
    char getDataLength() -> getDataLength
    boolean equals(java.lang.Object) -> equals
    java.lang.String getName() -> getName
org.ice4j.attribute.Attribute -> org.ice4j.attribute.Attribute:
    char MAPPED_ADDRESS -> MAPPED_ADDRESS
    char RESPONSE_ADDRESS -> RESPONSE_ADDRESS
    char CHANGE_REQUEST -> CHANGE_REQUEST
    char SOURCE_ADDRESS -> SOURCE_ADDRESS
    char CHANGED_ADDRESS -> CHANGED_ADDRESS
    char USERNAME -> USERNAME
    char PASSWORD -> PASSWORD
    char MESSAGE_INTEGRITY -> MESSAGE_INTEGRITY
    char ERROR_CODE -> ERROR_CODE
    char UNKNOWN_ATTRIBUTES -> UNKNOWN_ATTRIBUTES
    char REFLECTED_FROM -> REFLECTED_FROM
    char REALM -> REALM
    char NONCE -> NONCE
    char XOR_MAPPED_ADDRESS -> XOR_MAPPED_ADDRESS
    char XOR_ONLY -> XOR_ONLY
    char SOFTWARE -> SOFTWARE
    char ALTERNATE_SERVER -> ALTERNATE_SERVER
    char FINGERPRINT -> FINGERPRINT
    char UNKNOWN_OPTIONAL_ATTRIBUTE -> UNKNOWN_OPTIONAL_ATTRIBUTE
    char CHANNEL_NUMBER -> CHANNEL_NUMBER
    char LIFETIME -> LIFETIME
    char XOR_PEER_ADDRESS -> XOR_PEER_ADDRESS
    char DATA -> DATA
    char XOR_RELAYED_ADDRESS -> XOR_RELAYED_ADDRESS
    char REQUESTED_ADDRESS_FAMILY -> REQUESTED_ADDRESS_FAMILY
    char EVEN_PORT -> EVEN_PORT
    char REQUESTED_TRANSPORT -> REQUESTED_TRANSPORT
    char DONT_FRAGMENT -> DONT_FRAGMENT
    char RESERVATION_TOKEN -> RESERVATION_TOKEN
    char CONNECTION_ID -> CONNECTION_ID
    char MAGIC_COOKIE -> MAGIC_COOKIE
    char DESTINATION_ADDRESS -> DESTINATION_ADDRESS
    char REMOTE_ADDRESS -> REMOTE_ADDRESS
    char PRIORITY -> PRIORITY
    char USE_CANDIDATE -> USE_CANDIDATE
    char ICE_CONTROLLED -> ICE_CONTROLLED
    char ICE_CONTROLLING -> ICE_CONTROLLING
    char attributeType -> attributeType
    char HEADER_LENGTH -> HEADER_LENGTH
    int locationInMessage -> locationInMessage
    char getDataLength() -> getDataLength
    java.lang.String getName() -> getName
    char getAttributeType() -> getAttributeType
    void setAttributeType(char) -> setAttributeType
    boolean equals(java.lang.Object) -> equals
    byte[] encode() -> encode
    void setLocationInMessage(int) -> setLocationInMessage
    int getLocationInMessage() -> getLocationInMessage
    void decodeAttributeBody(byte[],char,char) -> decodeAttributeBody
org.ice4j.attribute.AttributeDecoder -> org.ice4j.attribute.AttributeDecoder:
    org.ice4j.attribute.Attribute decode(byte[],char,char) -> decode
org.ice4j.attribute.AttributeFactory -> org.ice4j.attribute.AttributeFactory:
    org.ice4j.attribute.ChangeRequestAttribute createChangeRequestAttribute() -> createChangeRequestAttribute
    org.ice4j.attribute.ChangeRequestAttribute createChangeRequestAttribute(boolean,boolean) -> createChangeRequestAttribute
    org.ice4j.attribute.ChangedAddressAttribute createChangedAddressAttribute(org.ice4j.TransportAddress) -> createChangedAddressAttribute
    org.ice4j.attribute.ErrorCodeAttribute createErrorCodeAttribute(byte,byte) -> createErrorCodeAttribute
    org.ice4j.attribute.ErrorCodeAttribute createErrorCodeAttribute(byte,byte,java.lang.String) -> createErrorCodeAttribute
    org.ice4j.attribute.ErrorCodeAttribute createErrorCodeAttribute(char) -> createErrorCodeAttribute
    org.ice4j.attribute.ErrorCodeAttribute createErrorCodeAttribute(char,java.lang.String) -> createErrorCodeAttribute
    org.ice4j.attribute.MappedAddressAttribute createMappedAddressAttribute(org.ice4j.TransportAddress) -> createMappedAddressAttribute
    org.ice4j.attribute.ReflectedFromAttribute createReflectedFromAttribute(org.ice4j.TransportAddress) -> createReflectedFromAttribute
    org.ice4j.attribute.ResponseAddressAttribute createResponseAddressAttribute(org.ice4j.TransportAddress) -> createResponseAddressAttribute
    org.ice4j.attribute.SourceAddressAttribute createSourceAddressAttribute(org.ice4j.TransportAddress) -> createSourceAddressAttribute
    org.ice4j.attribute.UnknownAttributesAttribute createUnknownAttributesAttribute() -> createUnknownAttributesAttribute
    org.ice4j.attribute.XorRelayedAddressAttribute createXorRelayedAddressAttribute(org.ice4j.TransportAddress,byte[]) -> createXorRelayedAddressAttribute
    org.ice4j.attribute.XorPeerAddressAttribute createXorPeerAddressAttribute(org.ice4j.TransportAddress,byte[]) -> createXorPeerAddressAttribute
    org.ice4j.attribute.XorMappedAddressAttribute createXorMappedAddressAttribute(org.ice4j.TransportAddress,byte[]) -> createXorMappedAddressAttribute
    org.ice4j.attribute.UsernameAttribute createUsernameAttribute(byte[]) -> createUsernameAttribute
    org.ice4j.attribute.UsernameAttribute createUsernameAttribute(java.lang.String) -> createUsernameAttribute
    org.ice4j.attribute.MessageIntegrityAttribute createMessageIntegrityAttribute(java.lang.String) -> createMessageIntegrityAttribute
    org.ice4j.attribute.FingerprintAttribute createFingerprintAttribute() -> createFingerprintAttribute
    org.ice4j.attribute.ChannelNumberAttribute createChannelNumberAttribute(char) -> createChannelNumberAttribute
    org.ice4j.attribute.RealmAttribute createRealmAttribute(byte[]) -> createRealmAttribute
    org.ice4j.attribute.NonceAttribute createNonceAttribute(byte[]) -> createNonceAttribute
    org.ice4j.attribute.SoftwareAttribute createSoftwareAttribute(byte[]) -> createSoftwareAttribute
    org.ice4j.attribute.EvenPortAttribute createEvenPortAttribute(boolean) -> createEvenPortAttribute
    org.ice4j.attribute.LifetimeAttribute createLifetimeAttribute(int) -> createLifetimeAttribute
    org.ice4j.attribute.RequestedTransportAttribute createRequestedTransportAttribute(byte) -> createRequestedTransportAttribute
    org.ice4j.attribute.ReservationTokenAttribute createReservationTokenAttribute(byte[]) -> createReservationTokenAttribute
    org.ice4j.attribute.DataAttribute createDataAttribute(byte[]) -> createDataAttribute
    org.ice4j.attribute.DataAttribute createDataAttributeWithoutPadding(byte[]) -> createDataAttributeWithoutPadding
    org.ice4j.attribute.IceControlledAttribute createIceControlledAttribute(long) -> createIceControlledAttribute
    org.ice4j.attribute.PriorityAttribute createPriorityAttribute(long) -> createPriorityAttribute
    org.ice4j.attribute.UseCandidateAttribute createUseCandidateAttribute() -> createUseCandidateAttribute
    org.ice4j.attribute.IceControllingAttribute createIceControllingAttribute(long) -> createIceControllingAttribute
    org.ice4j.attribute.MagicCookieAttribute createMagicCookieAttribute() -> createMagicCookieAttribute
    org.ice4j.attribute.DestinationAddressAttribute createDestinationAddressAttribute(org.ice4j.TransportAddress) -> createDestinationAddressAttribute
    org.ice4j.attribute.RequestedAddressFamilyAttribute createRequestedAddressFamilyAttribute(char) -> createRequestedAddressFamilyAttribute
    org.ice4j.attribute.ConnectionIdAttribute createConnectionIdAttribute(int) -> createConnectionIdAttribute
org.ice4j.attribute.ChangeRequestAttribute -> org.ice4j.attribute.ChangeRequestAttribute:
    java.lang.String NAME -> NAME
    boolean changeIpFlag -> changeIpFlag
    boolean changePortFlag -> changePortFlag
    char DATA_LENGTH -> DATA_LENGTH
    java.lang.String getName() -> getName
    boolean equals(java.lang.Object) -> equals
    char getDataLength() -> getDataLength
    byte[] encode() -> encode
    void setChangeIpFlag(boolean) -> setChangeIpFlag
    boolean getChangeIpFlag() -> getChangeIpFlag
    void setChangePortFlag(boolean) -> setChangePortFlag
    boolean getChangePortFlag() -> getChangePortFlag
    void decodeAttributeBody(byte[],char,char) -> decodeAttributeBody
org.ice4j.attribute.ChangedAddressAttribute -> org.ice4j.attribute.ChangedAddressAttribute:
    java.lang.String NAME -> NAME
    int getPort() -> getPort
    byte getFamily() -> getFamily
    byte[] getAddressBytes() -> getAddressBytes
    org.ice4j.TransportAddress getAddress() -> getAddress
    void setAddress(org.ice4j.TransportAddress) -> setAddress
    byte[] encode() -> encode
    char getDataLength() -> getDataLength
    boolean equals(java.lang.Object) -> equals
    java.lang.String getName() -> getName
org.ice4j.attribute.ChannelNumberAttribute -> org.ice4j.attribute.ChannelNumberAttribute:
    java.lang.String NAME -> NAME
    char DATA_LENGTH -> DATA_LENGTH
    char channelNumber -> channelNumber
    boolean equals(java.lang.Object) -> equals
    java.lang.String getName() -> getName
    char getDataLength() -> getDataLength
    byte[] encode() -> encode
    void decodeAttributeBody(byte[],char,char) -> decodeAttributeBody
    void setChannelNumber(char) -> setChannelNumber
    char getChannelNumber() -> getChannelNumber
    boolean isValidRange(char) -> isValidRange
org.ice4j.attribute.ConnectionIdAttribute -> org.ice4j.attribute.ConnectionIdAttribute:
    java.lang.String NAME -> NAME
    char DATA_LENGTH -> DATA_LENGTH
    int connectionIdValue -> connectionIdValue
    char getDataLength() -> getDataLength
    java.lang.String getName() -> getName
    boolean equals(java.lang.Object) -> equals
    byte[] encode() -> encode
    void decodeAttributeBody(byte[],char,char) -> decodeAttributeBody
    int getConnectionIdValue() -> getConnectionIdValue
    void setConnectionIdValue(int) -> setConnectionIdValue
org.ice4j.attribute.ContentDependentAttribute -> org.ice4j.attribute.ContentDependentAttribute:
    byte[] encode(org.ice4j.stack.StunStack,byte[],int,int) -> encode
org.ice4j.attribute.DataAttribute -> org.ice4j.attribute.DataAttribute:
    java.lang.String NAME -> NAME
    byte[] data -> data
    boolean padding -> padding
    void decodeAttributeBody(byte[],char,char) -> decodeAttributeBody
    byte[] encode() -> encode
    char getDataLength() -> getDataLength
    java.lang.String getName() -> getName
    byte[] getData() -> getData
    void setData(byte[]) -> setData
    boolean equals(java.lang.Object) -> equals
org.ice4j.attribute.DestinationAddressAttribute -> org.ice4j.attribute.DestinationAddressAttribute:
    java.lang.String NAME -> NAME
    int getPort() -> getPort
    byte getFamily() -> getFamily
    byte[] getAddressBytes() -> getAddressBytes
    org.ice4j.TransportAddress getAddress() -> getAddress
    void setAddress(org.ice4j.TransportAddress) -> setAddress
    byte[] encode() -> encode
    char getDataLength() -> getDataLength
    boolean equals(java.lang.Object) -> equals
    java.lang.String getName() -> getName
org.ice4j.attribute.DontFragmentAttribute -> org.ice4j.attribute.DontFragmentAttribute:
    java.lang.String NAME -> NAME
    char DATA_LENGTH -> DATA_LENGTH
    boolean equals(java.lang.Object) -> equals
    java.lang.String getName() -> getName
    char getDataLength() -> getDataLength
    byte[] encode() -> encode
    void decodeAttributeBody(byte[],char,char) -> decodeAttributeBody
org.ice4j.attribute.ErrorCodeAttribute -> org.ice4j.attribute.ErrorCodeAttribute:
    java.lang.String NAME -> NAME
    char TRY_ALTERNATE -> TRY_ALTERNATE
    char BAD_REQUEST -> BAD_REQUEST
    char UNAUTHORIZED -> UNAUTHORIZED
    char FORBIDDEN -> FORBIDDEN
    char UNKNOWN_ATTRIBUTE -> UNKNOWN_ATTRIBUTE
    char STALE_CREDENTIALS -> STALE_CREDENTIALS
    char INTEGRITY_CHECK_FAILURE -> INTEGRITY_CHECK_FAILURE
    char MISSING_USERNAME -> MISSING_USERNAME
    char USE_TLS -> USE_TLS
    char ALLOCATION_MISMATCH -> ALLOCATION_MISMATCH
    char STALE_NONCE -> STALE_NONCE
    char ADDRESS_FAMILY_NOT_SUPPORTED -> ADDRESS_FAMILY_NOT_SUPPORTED
    char WRONG_CREDENTIALS -> WRONG_CREDENTIALS
    char UNSUPPORTED_TRANSPORT_PROTOCOL -> UNSUPPORTED_TRANSPORT_PROTOCOL
    char PEER_ADDRESS_FAMILY_MISMATCH -> PEER_ADDRESS_FAMILY_MISMATCH
    char CONNECTION_ALREADY_EXISTS -> CONNECTION_ALREADY_EXISTS
    char CONNECTION_TIMEOUT_OR_FAILURE -> CONNECTION_TIMEOUT_OR_FAILURE
    char ALLOCATION_QUOTA_REACHED -> ALLOCATION_QUOTA_REACHED
    char ROLE_CONFLICT -> ROLE_CONFLICT
    char SERVER_ERROR -> SERVER_ERROR
    char INSUFFICIENT_CAPACITY -> INSUFFICIENT_CAPACITY
    char GLOBAL_FAILURE -> GLOBAL_FAILURE
    byte errorClass -> errorClass
    byte errorNumber -> errorNumber
    byte[] reasonPhrase -> reasonPhrase
    void setErrorCode(char) -> setErrorCode
    char getErrorCode() -> getErrorCode
    void setErrorNumber(byte) -> setErrorNumber
    byte getErrorNumber() -> getErrorNumber
    void setErrorClass(byte) -> setErrorClass
    byte getErrorClass() -> getErrorClass
    java.lang.String getDefaultReasonPhrase(char) -> getDefaultReasonPhrase
    void setReasonPhrase(java.lang.String) -> setReasonPhrase
    java.lang.String getReasonPhrase() -> getReasonPhrase
    java.lang.String getName() -> getName
    char getDataLength() -> getDataLength
    byte[] encode() -> encode
    boolean equals(java.lang.Object) -> equals
    void decodeAttributeBody(byte[],char,char) -> decodeAttributeBody
org.ice4j.attribute.EvenPortAttribute -> org.ice4j.attribute.EvenPortAttribute:
    java.lang.String NAME -> NAME
    char DATA_LENGTH -> DATA_LENGTH
    boolean rFlag -> rFlag
    boolean equals(java.lang.Object) -> equals
    java.lang.String getName() -> getName
    char getDataLength() -> getDataLength
    byte[] encode() -> encode
    void decodeAttributeBody(byte[],char,char) -> decodeAttributeBody
    void setRFlag(boolean) -> setRFlag
    boolean isRFlag() -> isRFlag
org.ice4j.attribute.FingerprintAttribute -> org.ice4j.attribute.FingerprintAttribute:
    java.lang.String NAME -> NAME
    byte[] XOR_MASK -> XOR_MASK
    byte[] crc -> crc
    byte[] getChecksum() -> getChecksum
    char getDataLength() -> getDataLength
    java.lang.String getName() -> getName
    boolean equals(java.lang.Object) -> equals
    byte[] encode() -> encode
    byte[] encode(org.ice4j.stack.StunStack,byte[],int,int) -> encode
    void decodeAttributeBody(byte[],char,char) -> decodeAttributeBody
    byte[] calculateXorCRC32(byte[],int,int) -> calculateXorCRC32
org.ice4j.attribute.IceControlAttribute -> org.ice4j.attribute.IceControlAttribute:
    char DATA_LENGTH_ICE_CONTROL -> DATA_LENGTH_ICE_CONTROL
    long tieBreaker -> tieBreaker
    boolean isControlling -> isControlling
    void decodeAttributeBody(byte[],char,char) -> decodeAttributeBody
    byte[] encode() -> encode
    boolean equals(java.lang.Object) -> equals
    char getDataLength() -> getDataLength
    java.lang.String getName() -> getName
    void setTieBreaker(long) -> setTieBreaker
    long getTieBreaker() -> getTieBreaker
org.ice4j.attribute.IceControlledAttribute -> org.ice4j.attribute.IceControlledAttribute:
org.ice4j.attribute.IceControllingAttribute -> org.ice4j.attribute.IceControllingAttribute:
org.ice4j.attribute.LifetimeAttribute -> org.ice4j.attribute.LifetimeAttribute:
    java.lang.String NAME -> NAME
    char DATA_LENGTH -> DATA_LENGTH
    int lifetime -> lifetime
    boolean equals(java.lang.Object) -> equals
    java.lang.String getName() -> getName
    char getDataLength() -> getDataLength
    byte[] encode() -> encode
    void decodeAttributeBody(byte[],char,char) -> decodeAttributeBody
    void setLifetime(int) -> setLifetime
    int getLifetime() -> getLifetime
org.ice4j.attribute.MagicCookieAttribute -> org.ice4j.attribute.MagicCookieAttribute:
    java.lang.String NAME -> NAME
    char DATA_LENGTH -> DATA_LENGTH
    int value -> value
    java.lang.String getName() -> getName
    char getDataLength() -> getDataLength
    boolean equals(java.lang.Object) -> equals
    byte[] encode() -> encode
    void decodeAttributeBody(byte[],char,char) -> decodeAttributeBody
org.ice4j.attribute.MappedAddressAttribute -> org.ice4j.attribute.MappedAddressAttribute:
    java.lang.String NAME -> NAME
    int getPort() -> getPort
    byte getFamily() -> getFamily
    byte[] getAddressBytes() -> getAddressBytes
    org.ice4j.TransportAddress getAddress() -> getAddress
    void setAddress(org.ice4j.TransportAddress) -> setAddress
    byte[] encode() -> encode
    char getDataLength() -> getDataLength
    boolean equals(java.lang.Object) -> equals
    java.lang.String getName() -> getName
org.ice4j.attribute.MessageIntegrityAttribute -> org.ice4j.attribute.MessageIntegrityAttribute:
    java.lang.String NAME -> NAME
    java.lang.String HMAC_SHA1_ALGORITHM -> HMAC_SHA1_ALGORITHM
    char DATA_LENGTH -> DATA_LENGTH
    byte[] hmacSha1Content -> hmacSha1Content
    java.lang.String username -> username
    java.lang.String media -> media
    void setUsername(java.lang.String) -> setUsername
    void setMedia(java.lang.String) -> setMedia
    byte[] getHmacSha1Content() -> getHmacSha1Content
    byte[] calculateHmacSha1(byte[],int,int,byte[]) -> calculateHmacSha1
    void decodeAttributeBody(byte[],char,char) -> decodeAttributeBody
    byte[] encode() -> encode
    byte[] encode(org.ice4j.stack.StunStack,byte[],int,int) -> encode
    char getDataLength() -> getDataLength
    java.lang.String getName() -> getName
    boolean equals(java.lang.Object) -> equals
org.ice4j.attribute.NonceAttribute -> org.ice4j.attribute.NonceAttribute:
    java.lang.String NAME -> NAME
    byte[] nonce -> nonce
    void decodeAttributeBody(byte[],char,char) -> decodeAttributeBody
    byte[] encode() -> encode
    char getDataLength() -> getDataLength
    java.lang.String getName() -> getName
    byte[] getNonce() -> getNonce
    void setNonce(byte[]) -> setNonce
    boolean equals(java.lang.Object) -> equals
org.ice4j.attribute.OptionalAttribute -> org.ice4j.attribute.OptionalAttribute:
    byte[] attributeValue -> attributeValue
    void decodeAttributeBody(byte[],char,char) -> decodeAttributeBody
    byte[] encode() -> encode
    char getDataLength() -> getDataLength
    java.lang.String getName() -> getName
    byte[] getBody() -> getBody
    void setBody(byte[],int,int) -> setBody
    boolean equals(java.lang.Object) -> equals
org.ice4j.attribute.PriorityAttribute -> org.ice4j.attribute.PriorityAttribute:
    char DATA_LENGTH_PRIORITY -> DATA_LENGTH_PRIORITY
    long priority -> priority
    void decodeAttributeBody(byte[],char,char) -> decodeAttributeBody
    byte[] encode() -> encode
    boolean equals(java.lang.Object) -> equals
    char getDataLength() -> getDataLength
    java.lang.String getName() -> getName
    long getPriority() -> getPriority
    void setPriority(long) -> setPriority
org.ice4j.attribute.RealmAttribute -> org.ice4j.attribute.RealmAttribute:
    java.lang.String NAME -> NAME
    byte[] realm -> realm
    void decodeAttributeBody(byte[],char,char) -> decodeAttributeBody
    byte[] encode() -> encode
    char getDataLength() -> getDataLength
    java.lang.String getName() -> getName
    byte[] getRealm() -> getRealm
    void setRealm(byte[]) -> setRealm
    boolean equals(java.lang.Object) -> equals
org.ice4j.attribute.ReflectedFromAttribute -> org.ice4j.attribute.ReflectedFromAttribute:
    java.lang.String NAME -> NAME
    int getPort() -> getPort
    byte getFamily() -> getFamily
    byte[] getAddressBytes() -> getAddressBytes
    org.ice4j.TransportAddress getAddress() -> getAddress
    void setAddress(org.ice4j.TransportAddress) -> setAddress
    byte[] encode() -> encode
    char getDataLength() -> getDataLength
    boolean equals(java.lang.Object) -> equals
    java.lang.String getName() -> getName
org.ice4j.attribute.RemoteAddressAttribute -> org.ice4j.attribute.RemoteAddressAttribute:
    java.lang.String NAME -> NAME
    int getPort() -> getPort
    byte getFamily() -> getFamily
    byte[] getAddressBytes() -> getAddressBytes
    org.ice4j.TransportAddress getAddress() -> getAddress
    void setAddress(org.ice4j.TransportAddress) -> setAddress
    byte[] encode() -> encode
    char getDataLength() -> getDataLength
    boolean equals(java.lang.Object) -> equals
    java.lang.String getName() -> getName
org.ice4j.attribute.RequestedAddressFamilyAttribute -> org.ice4j.attribute.RequestedAddressFamilyAttribute:
    java.lang.String NAME -> NAME
    char DATA_LENGTH -> DATA_LENGTH
    char IPv4 -> IPv4
    char IPv6 -> IPv6
    char family -> family
    char getDataLength() -> getDataLength
    java.lang.String getName() -> getName
    boolean equals(java.lang.Object) -> equals
    byte[] encode() -> encode
    void decodeAttributeBody(byte[],char,char) -> decodeAttributeBody
    char getFamily() -> getFamily
    boolean setFamily(char) -> setFamily
org.ice4j.attribute.RequestedTransportAttribute -> org.ice4j.attribute.RequestedTransportAttribute:
    java.lang.String NAME -> NAME
    char DATA_LENGTH -> DATA_LENGTH
    byte UDP -> UDP
    byte TCP -> TCP
    byte transportProtocol -> transportProtocol
    boolean equals(java.lang.Object) -> equals
    java.lang.String getName() -> getName
    char getDataLength() -> getDataLength
    byte[] encode() -> encode
    void decodeAttributeBody(byte[],char,char) -> decodeAttributeBody
    void setRequestedTransport(byte) -> setRequestedTransport
    int getRequestedTransport() -> getRequestedTransport
org.ice4j.attribute.ReservationTokenAttribute -> org.ice4j.attribute.ReservationTokenAttribute:
    java.lang.String NAME -> NAME
    byte[] reservationToken -> reservationToken
    int hashCode -> hashCode
    java.util.Random random -> random
    void decodeAttributeBody(byte[],char,char) -> decodeAttributeBody
    byte[] encode() -> encode
    java.lang.String getName() -> getName
    byte[] getReservationToken() -> getReservationToken
    void setReservationToken(byte[]) -> setReservationToken
    char getDataLength() -> getDataLength
    org.ice4j.attribute.ReservationTokenAttribute createNewReservationTokenAttribute() -> createNewReservationTokenAttribute
    void generateReservationTokenAttribute(org.ice4j.attribute.ReservationTokenAttribute,int) -> generateReservationTokenAttribute
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String toString(byte[]) -> toString
    int hashCode() -> hashCode
org.ice4j.attribute.ResponseAddressAttribute -> org.ice4j.attribute.ResponseAddressAttribute:
    java.lang.String NAME -> NAME
    int getPort() -> getPort
    byte getFamily() -> getFamily
    byte[] getAddressBytes() -> getAddressBytes
    org.ice4j.TransportAddress getAddress() -> getAddress
    void setAddress(org.ice4j.TransportAddress) -> setAddress
    byte[] encode() -> encode
    char getDataLength() -> getDataLength
    boolean equals(java.lang.Object) -> equals
    java.lang.String getName() -> getName
org.ice4j.attribute.SoftwareAttribute -> org.ice4j.attribute.SoftwareAttribute:
    byte[] software -> software
    void decodeAttributeBody(byte[],char,char) -> decodeAttributeBody
    byte[] encode() -> encode
    char getDataLength() -> getDataLength
    java.lang.String getName() -> getName
    byte[] getSoftware() -> getSoftware
    void setSoftware(byte[]) -> setSoftware
    boolean equals(java.lang.Object) -> equals
org.ice4j.attribute.SourceAddressAttribute -> org.ice4j.attribute.SourceAddressAttribute:
    java.lang.String NAME -> NAME
    int getPort() -> getPort
    byte getFamily() -> getFamily
    byte[] getAddressBytes() -> getAddressBytes
    org.ice4j.TransportAddress getAddress() -> getAddress
    void setAddress(org.ice4j.TransportAddress) -> setAddress
    byte[] encode() -> encode
    char getDataLength() -> getDataLength
    boolean equals(java.lang.Object) -> equals
    java.lang.String getName() -> getName
org.ice4j.attribute.UnknownAttributesAttribute -> org.ice4j.attribute.UnknownAttributesAttribute:
    java.lang.String NAME -> NAME
    java.util.ArrayList unknownAttributes -> unknownAttributes
    java.lang.String getName() -> getName
    char getDataLength() -> getDataLength
    void addAttributeID(char) -> addAttributeID
    boolean contains(char) -> contains
    java.util.Iterator getAttributes() -> getAttributes
    int getAttributeCount() -> getAttributeCount
    char getAttribute(int) -> getAttribute
    byte[] encode() -> encode
    boolean equals(java.lang.Object) -> equals
    void decodeAttributeBody(byte[],char,char) -> decodeAttributeBody
org.ice4j.attribute.UseCandidateAttribute -> org.ice4j.attribute.UseCandidateAttribute:
    char DATA_LENGTH_USE_CANDIDATE -> DATA_LENGTH_USE_CANDIDATE
    void decodeAttributeBody(byte[],char,char) -> decodeAttributeBody
    byte[] encode() -> encode
    boolean equals(java.lang.Object) -> equals
    char getDataLength() -> getDataLength
    java.lang.String getName() -> getName
org.ice4j.attribute.UsernameAttribute -> org.ice4j.attribute.UsernameAttribute:
    java.lang.String NAME -> NAME
    byte[] username -> username
    void decodeAttributeBody(byte[],char,char) -> decodeAttributeBody
    byte[] encode() -> encode
    char getDataLength() -> getDataLength
    java.lang.String getName() -> getName
    byte[] getUsername() -> getUsername
    void setUsername(byte[]) -> setUsername
    boolean equals(java.lang.Object) -> equals
org.ice4j.attribute.XorMappedAddressAttribute -> org.ice4j.attribute.XorMappedAddressAttribute:
    java.lang.String NAME -> NAME
    org.ice4j.TransportAddress applyXor(org.ice4j.TransportAddress,byte[]) -> applyXor
    org.ice4j.TransportAddress getAddress(byte[]) -> getAddress
    org.ice4j.TransportAddress applyXor(byte[]) -> applyXor
    void setAddress(org.ice4j.TransportAddress,byte[]) -> setAddress
    int getPort() -> getPort
    byte getFamily() -> getFamily
    byte[] getAddressBytes() -> getAddressBytes
    org.ice4j.TransportAddress getAddress() -> getAddress
    void setAddress(org.ice4j.TransportAddress) -> setAddress
    byte[] encode() -> encode
    char getDataLength() -> getDataLength
    boolean equals(java.lang.Object) -> equals
    java.lang.String getName() -> getName
org.ice4j.attribute.XorOnlyAttribute -> org.ice4j.attribute.XorOnlyAttribute:
    void decodeAttributeBody(byte[],char,char) -> decodeAttributeBody
    byte[] encode() -> encode
    char getDataLength() -> getDataLength
    java.lang.String getName() -> getName
    boolean equals(java.lang.Object) -> equals
org.ice4j.attribute.XorPeerAddressAttribute -> org.ice4j.attribute.XorPeerAddressAttribute:
    java.lang.String NAME -> NAME
org.ice4j.attribute.XorRelayedAddressAttribute -> org.ice4j.attribute.XorRelayedAddressAttribute:
    java.lang.String NAME -> NAME
org.ice4j.ice.Agent -> org.ice4j.ice.Agent:
    int CONSENT_FRESHNESS_MAX_RETRANSMISSIONS -> CONSENT_FRESHNESS_MAX_RETRANSMISSIONS
    int CONSENT_FRESHNESS_WAIT_INTERVAL -> CONSENT_FRESHNESS_WAIT_INTERVAL
    int DEFAULT_MAX_CHECK_LIST_SIZE -> DEFAULT_MAX_CHECK_LIST_SIZE
    int DEFAULT_TERMINATION_DELAY -> DEFAULT_TERMINATION_DELAY
    java.beans.PropertyChangeListener[] NO_STATE_CHANGE_LISTENERS -> NO_STATE_CHANGE_LISTENERS
    java.util.logging.Logger logger -> logger
    java.util.Map mediaStreams -> mediaStreams
    org.ice4j.ice.harvest.HostCandidateHarvester hostCandidateHarvester -> hostCandidateHarvester
    org.ice4j.ice.harvest.CandidateHarvesterSet harvesters -> harvesters
    org.ice4j.ice.FoundationsRegistry foundationsRegistry -> foundationsRegistry
    org.ice4j.ice.DefaultNominator nominator -> nominator
    java.lang.String PROPERTY_ICE_PROCESSING_STATE -> PROPERTY_ICE_PROCESSING_STATE
    long taValue -> taValue
    java.util.List preDiscoveredPairsQueue -> preDiscoveredPairsQueue
    java.lang.Object startLock -> startLock
    java.lang.String ufrag -> ufrag
    java.lang.String password -> password
    long tieBreaker -> tieBreaker
    boolean isControlling -> isControlling
    org.ice4j.ice.ConnectivityCheckClient connCheckClient -> connCheckClient
    org.ice4j.ice.ConnectivityCheckServer connCheckServer -> connCheckServer
    org.ice4j.ice.IceProcessingState state -> state
    java.util.List stateListeners -> stateListeners
    org.ice4j.stack.StunStack stunStack -> stunStack
    org.ice4j.ice.Agent$TerminationThread terminationThread -> terminationThread
    java.lang.Thread stunKeepAliveThread -> stunKeepAliveThread
    int generation -> generation
    boolean trickle -> trickle
    boolean shutdown -> shutdown
    boolean harvestingStarted -> harvestingStarted
    boolean performConsentFreshness -> performConsentFreshness
    org.ice4j.ice.IceMediaStream createMediaStream(java.lang.String) -> createMediaStream
    org.ice4j.ice.Component createComponent(org.ice4j.ice.IceMediaStream,org.ice4j.Transport,int,int,int) -> createComponent
    void gatherCandidates(org.ice4j.ice.Component,int,int,int) -> gatherCandidates
    void startCandidateTrickle(org.ice4j.ice.harvest.TrickleCallback) -> startCandidateTrickle
    void startConnectivityEstablishment() -> startConnectivityEstablishment
    void pruneNonMatchedStreams() -> pruneNonMatchedStreams
    boolean isStarted() -> isStarted
    boolean isOver() -> isOver
    org.ice4j.ice.IceProcessingState getState() -> getState
    void addStateChangeListener(java.beans.PropertyChangeListener) -> addStateChangeListener
    void removeStateChangeListener(java.beans.PropertyChangeListener) -> removeStateChangeListener
    void fireStateChange(org.ice4j.ice.IceProcessingState,org.ice4j.ice.IceProcessingState) -> fireStateChange
    void setState(org.ice4j.ice.IceProcessingState) -> setState
    void initCheckLists() -> initCheckLists
    void addCandidateHarvester(org.ice4j.ice.harvest.CandidateHarvester) -> addCandidateHarvester
    org.ice4j.ice.harvest.CandidateHarvesterSet getHarvesters() -> getHarvesters
    java.lang.String getLocalUfrag() -> getLocalUfrag
    java.lang.String getLocalPassword() -> getLocalPassword
    java.lang.String generateLocalUserName(java.lang.String) -> generateLocalUserName
    java.lang.String generateRemoteUserName(java.lang.String) -> generateRemoteUserName
    java.lang.String generateLocalUserName(org.ice4j.ice.RemoteCandidate,org.ice4j.ice.LocalCandidate) -> generateLocalUserName
    java.lang.String generateRemoteUserName(org.ice4j.ice.RemoteCandidate,org.ice4j.ice.LocalCandidate) -> generateRemoteUserName
    java.lang.String generateUserName(org.ice4j.ice.Candidate,org.ice4j.ice.Candidate) -> generateUserName
    org.ice4j.ice.FoundationsRegistry getFoundationsRegistry() -> getFoundationsRegistry
    org.ice4j.ice.IceMediaStream getStream(java.lang.String) -> getStream
    java.util.List getStreamNames() -> getStreamNames
    java.util.List getStreams() -> getStreams
    int getStreamCount() -> getStreamCount
    java.util.List getStreamsWithPendingConnectivityEstablishment() -> getStreamsWithPendingConnectivityEstablishment
    org.ice4j.stack.StunStack getStunStack() -> getStunStack
    int getActiveCheckListCount() -> getActiveCheckListCount
    java.lang.String toString() -> toString
    long getTieBreaker() -> getTieBreaker
    void setControlling(boolean) -> setControlling
    void removeStream(org.ice4j.ice.IceMediaStream) -> removeStream
    boolean isControlling() -> isControlling
    org.ice4j.ice.LocalCandidate findLocalCandidate(org.ice4j.TransportAddress) -> findLocalCandidate
    org.ice4j.ice.LocalCandidate findLocalCandidate(org.ice4j.TransportAddress,java.lang.String) -> findLocalCandidate
    org.ice4j.ice.RemoteCandidate findRemoteCandidate(org.ice4j.TransportAddress) -> findRemoteCandidate
    org.ice4j.ice.CandidatePair findCandidatePair(org.ice4j.TransportAddress,org.ice4j.TransportAddress) -> findCandidatePair
    org.ice4j.ice.CandidatePair findCandidatePair(java.lang.String,java.lang.String) -> findCandidatePair
    void incomingCheckReceived(org.ice4j.TransportAddress,org.ice4j.TransportAddress,long,java.lang.String,java.lang.String,boolean) -> incomingCheckReceived
    void triggerCheck(org.ice4j.ice.CandidatePair) -> triggerCheck
    void validatePair(org.ice4j.ice.CandidatePair) -> validatePair
    void nominate(org.ice4j.ice.CandidatePair) -> nominate
    void setNominationStrategy(org.ice4j.ice.NominationStrategy) -> setNominationStrategy
    void nominationConfirmed(org.ice4j.ice.CandidatePair) -> nominationConfirmed
    void checkListStatesUpdated() -> checkListStatesUpdated
    void logCandTypes() -> logCandTypes
    int countHostCandidates() -> countHostCandidates
    void setTa(long) -> setTa
    long calculateTa() -> calculateTa
    long calculateStunHarvestRTO() -> calculateStunHarvestRTO
    long calculateStunConnCheckRTO() -> calculateStunConnCheckRTO
    void scheduleTermination() -> scheduleTermination
    void scheduleStunKeepAlive() -> scheduleStunKeepAlive
    void terminate(org.ice4j.ice.IceProcessingState) -> terminate
    java.lang.String ensureIceAttributeLength(java.lang.String,int,int) -> ensureIceAttributeLength
    void finalize() -> finalize
    void free() -> free
    int getGeneration() -> getGeneration
    void setGeneration(int) -> setGeneration
    void runInStunKeepAliveThread() -> runInStunKeepAliveThread
    boolean runInStunKeepAliveThreadCondition() -> runInStunKeepAliveThreadCondition
    org.ice4j.ice.CandidatePair getSelectedPair(java.lang.String) -> getSelectedPair
    org.ice4j.ice.LocalCandidate getSelectedLocalCandidate(java.lang.String) -> getSelectedLocalCandidate
    org.ice4j.ice.RemoteCandidate getSelectedRemoteCandidate(java.lang.String) -> getSelectedRemoteCandidate
    boolean isTrickling() -> isTrickling
    void setTrickling(boolean) -> setTrickling
    long getHarvestingTime(java.lang.String) -> getHarvestingTime
    int getHarvestCount(java.lang.String) -> getHarvestCount
    long getTotalHarvestingTime() -> getTotalHarvestingTime
    int getHarvestCount() -> getHarvestCount
    boolean getPerformConsentFreshness() -> getPerformConsentFreshness
    void setPerformConsentFreshness(boolean) -> setPerformConsentFreshness
    void access$100(org.ice4j.ice.Agent) -> access$100
    java.util.logging.Logger access$200() -> access$200
    void access$300(org.ice4j.ice.Agent,org.ice4j.ice.IceProcessingState) -> access$300
    org.ice4j.ice.Agent$TerminationThread access$402(org.ice4j.ice.Agent,org.ice4j.ice.Agent$TerminationThread) -> access$402
org.ice4j.ice.Agent$1 -> org.ice4j.ice.Agent$1:
    org.ice4j.ice.Agent this$0 -> this$0
    void run() -> run
org.ice4j.ice.Agent$TerminationThread -> org.ice4j.ice.Agent$TerminationThread:
    org.ice4j.ice.Agent this$0 -> this$0
    void run() -> run
org.ice4j.ice.Candidate -> org.ice4j.ice.Candidate:
    org.ice4j.TransportAddress transportAddress -> transportAddress
    org.ice4j.ice.CandidateType candidateType -> candidateType
    java.lang.String foundation -> foundation
    org.ice4j.ice.Candidate base -> base
    long priority -> priority
    boolean virtual -> virtual
    org.ice4j.ice.Component parentComponent -> parentComponent
    org.ice4j.TransportAddress stunServerAddress -> stunServerAddress
    org.ice4j.TransportAddress relayServerAddress -> relayServerAddress
    org.ice4j.TransportAddress mappedAddress -> mappedAddress
    org.ice4j.ice.Candidate relatedCandidate -> relatedCandidate
    int MAX_TYPE_PREFERENCE -> MAX_TYPE_PREFERENCE
    int MIN_TYPE_PREFERENCE -> MIN_TYPE_PREFERENCE
    int MAX_LOCAL_PREFERENCE -> MAX_LOCAL_PREFERENCE
    int MIN_LOCAL_PREFERENCE -> MIN_LOCAL_PREFERENCE
    org.ice4j.ice.CandidateType getType() -> getType
    void setCandidateType(org.ice4j.ice.CandidateType) -> setCandidateType
    java.lang.String getFoundation() -> getFoundation
    void setFoundation(java.lang.String) -> setFoundation
    org.ice4j.ice.Candidate getBase() -> getBase
    void setBase(org.ice4j.ice.Candidate) -> setBase
    long getPriority() -> getPriority
    org.ice4j.TransportAddress getTransportAddress() -> getTransportAddress
    boolean equals(java.lang.Object) -> equals
    org.ice4j.ice.Component getParentComponent() -> getParentComponent
    long computePriority() -> computePriority
    long computeGTalkPriority() -> computeGTalkPriority
    long computePriorityForType(org.ice4j.ice.CandidateType) -> computePriorityForType
    long computeGTalkPriorityForType(org.ice4j.ice.CandidateType) -> computeGTalkPriorityForType
    int getTypePreference(org.ice4j.ice.CandidateType) -> getTypePreference
    int getLocalPreference() -> getLocalPreference
    boolean isVirtual() -> isVirtual
    void setVirtual(boolean) -> setVirtual
    org.ice4j.TransportAddress getStunServerAddress() -> getStunServerAddress
    void setStunServerAddress(org.ice4j.TransportAddress) -> setStunServerAddress
    org.ice4j.TransportAddress getRelayServerAddress() -> getRelayServerAddress
    void setRelayServerAddress(org.ice4j.TransportAddress) -> setRelayServerAddress
    org.ice4j.TransportAddress getMappedAddress() -> getMappedAddress
    void setMappedAddress(org.ice4j.TransportAddress) -> setMappedAddress
    org.ice4j.Transport getTransport() -> getTransport
    org.ice4j.TransportAddress getRelatedAddress() -> getRelatedAddress
    org.ice4j.ice.Candidate findRelatedCandidate(org.ice4j.TransportAddress) -> findRelatedCandidate
    java.lang.String toString() -> toString
    java.lang.String toShortString() -> toShortString
    int getDefaultPreference() -> getDefaultPreference
    boolean canReach(org.ice4j.ice.Candidate) -> canReach
    boolean isDefault() -> isDefault
    java.lang.String getUfrag() -> getUfrag
    org.ice4j.TransportAddress getHostAddress() -> getHostAddress
    org.ice4j.TransportAddress getReflexiveAddress() -> getReflexiveAddress
    org.ice4j.TransportAddress getRelayedAddress() -> getRelayedAddress
    org.ice4j.ice.Candidate getRelatedCandidate() -> getRelatedCandidate
    int compareTo(org.ice4j.ice.Candidate) -> compareTo
    int compareTo(java.lang.Object) -> compareTo
org.ice4j.ice.Candidate$1 -> org.ice4j.ice.Candidate$1:
    int[] $SwitchMap$org$ice4j$ice$CandidateType -> $SwitchMap$org$ice4j$ice$CandidateType
org.ice4j.ice.CandidateExtendedType -> org.ice4j.ice.CandidateExtendedType:
    org.ice4j.ice.CandidateExtendedType HOST_CANDIDATE -> HOST_CANDIDATE
    org.ice4j.ice.CandidateExtendedType UPNP_CANDIDATE -> UPNP_CANDIDATE
    org.ice4j.ice.CandidateExtendedType STATICALLY_MAPPED_CANDIDATE -> STATICALLY_MAPPED_CANDIDATE
    org.ice4j.ice.CandidateExtendedType STUN_PEER_REFLEXIVE_CANDIDATE -> STUN_PEER_REFLEXIVE_CANDIDATE
    org.ice4j.ice.CandidateExtendedType STUN_SERVER_REFLEXIVE_CANDIDATE -> STUN_SERVER_REFLEXIVE_CANDIDATE
    org.ice4j.ice.CandidateExtendedType TURN_RELAYED_CANDIDATE -> TURN_RELAYED_CANDIDATE
    org.ice4j.ice.CandidateExtendedType GOOGLE_TURN_RELAYED_CANDIDATE -> GOOGLE_TURN_RELAYED_CANDIDATE
    org.ice4j.ice.CandidateExtendedType GOOGLE_TCP_TURN_RELAYED_CANDIDATE -> GOOGLE_TCP_TURN_RELAYED_CANDIDATE
    org.ice4j.ice.CandidateExtendedType JINGLE_NODE_CANDIDATE -> JINGLE_NODE_CANDIDATE
    java.lang.String extendedTypeName -> extendedTypeName
    org.ice4j.ice.CandidateExtendedType[] $VALUES -> $VALUES
    org.ice4j.ice.CandidateExtendedType[] values() -> values
    org.ice4j.ice.CandidateExtendedType valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
    org.ice4j.ice.CandidateExtendedType parse(java.lang.String) -> parse
org.ice4j.ice.CandidatePair -> org.ice4j.ice.CandidatePair:
    long CONSENT_FRESHNESS_UNKNOWN -> CONSENT_FRESHNESS_UNKNOWN
    long MATH_POW_2_32 -> MATH_POW_2_32
    org.ice4j.ice.LocalCandidate localCandidate -> localCandidate
    org.ice4j.ice.RemoteCandidate remoteCandidate -> remoteCandidate
    long priority -> priority
    boolean useCandidate -> useCandidate
    boolean useCandidateSent -> useCandidateSent
    boolean isValid -> isValid
    boolean isNominated -> isNominated
    org.ice4j.ice.CandidatePair$PairComparator comparator -> comparator
    org.ice4j.ice.CandidatePairState state -> state
    org.ice4j.stack.TransactionID connCheckTranID -> connCheckTranID
    long consentFreshness -> consentFreshness
    java.lang.String getFoundation() -> getFoundation
    org.ice4j.ice.LocalCandidate getLocalCandidate() -> getLocalCandidate
    void setLocalCandidate(org.ice4j.ice.LocalCandidate) -> setLocalCandidate
    org.ice4j.ice.RemoteCandidate getRemoteCandidate() -> getRemoteCandidate
    void setRemoteCandidate(org.ice4j.ice.RemoteCandidate) -> setRemoteCandidate
    org.ice4j.ice.CandidatePairState getState() -> getState
    void setStateFailed() -> setStateFailed
    void setStateFrozen() -> setStateFrozen
    void setStateInProgress(org.ice4j.stack.TransactionID) -> setStateInProgress
    void setStateSucceeded() -> setStateSucceeded
    void setStateWaiting() -> setStateWaiting
    void setState(org.ice4j.ice.CandidatePairState,org.ice4j.stack.TransactionID) -> setState
    boolean isFrozen() -> isFrozen
    org.ice4j.ice.Candidate getControllingAgentCandidate() -> getControllingAgentCandidate
    org.ice4j.ice.Candidate getControlledAgentCandidate() -> getControlledAgentCandidate
    void computePriority() -> computePriority
    long getPriority() -> getPriority
    int compareTo(org.ice4j.ice.CandidatePair) -> compareTo
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String toShortString() -> toShortString
    org.ice4j.ice.Component getParentComponent() -> getParentComponent
    org.ice4j.stack.TransactionID getConnectivityCheckTransaction() -> getConnectivityCheckTransaction
    void setUseCandidateSent() -> setUseCandidateSent
    boolean useCandidateSent() -> useCandidateSent
    void setUseCandidateReceived() -> setUseCandidateReceived
    boolean useCandidateReceived() -> useCandidateReceived
    void nominate() -> nominate
    boolean isNominated() -> isNominated
    boolean isValid() -> isValid
    void validate() -> validate
    long getConsentFreshness() -> getConsentFreshness
    void setConsentFreshness() -> setConsentFreshness
    void setConsentFreshness(long) -> setConsentFreshness
    int compareTo(java.lang.Object) -> compareTo
org.ice4j.ice.CandidatePair$PairComparator -> org.ice4j.ice.CandidatePair$PairComparator:
    int compare(org.ice4j.ice.CandidatePair,org.ice4j.ice.CandidatePair) -> compare
    boolean equals(java.lang.Object) -> equals
    int compare(java.lang.Object,java.lang.Object) -> compare
org.ice4j.ice.CandidatePairState -> org.ice4j.ice.CandidatePairState:
    org.ice4j.ice.CandidatePairState WAITING -> WAITING
    org.ice4j.ice.CandidatePairState IN_PROGRESS -> IN_PROGRESS
    org.ice4j.ice.CandidatePairState SUCCEEDED -> SUCCEEDED
    org.ice4j.ice.CandidatePairState FAILED -> FAILED
    org.ice4j.ice.CandidatePairState FROZEN -> FROZEN
    java.lang.String stateName -> stateName
    org.ice4j.ice.CandidatePairState[] $VALUES -> $VALUES
    org.ice4j.ice.CandidatePairState[] values() -> values
    org.ice4j.ice.CandidatePairState valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
org.ice4j.ice.CandidatePrioritizer -> org.ice4j.ice.CandidatePrioritizer:
    int compareCandidates(org.ice4j.ice.Candidate,org.ice4j.ice.Candidate) -> compareCandidates
    int compare(org.ice4j.ice.Candidate,org.ice4j.ice.Candidate) -> compare
    boolean equals(java.lang.Object) -> equals
    int compare(java.lang.Object,java.lang.Object) -> compare
org.ice4j.ice.CandidateType -> org.ice4j.ice.CandidateType:
    org.ice4j.ice.CandidateType PEER_REFLEXIVE_CANDIDATE -> PEER_REFLEXIVE_CANDIDATE
    org.ice4j.ice.CandidateType SERVER_REFLEXIVE_CANDIDATE -> SERVER_REFLEXIVE_CANDIDATE
    org.ice4j.ice.CandidateType RELAYED_CANDIDATE -> RELAYED_CANDIDATE
    org.ice4j.ice.CandidateType HOST_CANDIDATE -> HOST_CANDIDATE
    org.ice4j.ice.CandidateType LOCAL_CANDIDATE -> LOCAL_CANDIDATE
    org.ice4j.ice.CandidateType STUN_CANDIDATE -> STUN_CANDIDATE
    java.lang.String typeName -> typeName
    org.ice4j.ice.CandidateType[] $VALUES -> $VALUES
    org.ice4j.ice.CandidateType[] values() -> values
    org.ice4j.ice.CandidateType valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
    org.ice4j.ice.CandidateType parse(java.lang.String) -> parse
org.ice4j.ice.CheckList -> org.ice4j.ice.CheckList:
    java.util.logging.Logger logger -> logger
    long serialVersionUID -> serialVersionUID
    org.ice4j.ice.CheckListState state -> state
    java.util.List triggeredCheckQueue -> triggeredCheckQueue
    org.ice4j.ice.IceMediaStream parentStream -> parentStream
    java.util.List stateListeners -> stateListeners
    java.util.List checkListeners -> checkListeners
    java.lang.String PROPERTY_CHECK_LIST_STATE -> PROPERTY_CHECK_LIST_STATE
    java.lang.String PROPERTY_CHECK_LIST_CHECKS -> PROPERTY_CHECK_LIST_CHECKS
    org.ice4j.ice.CheckListState getState() -> getState
    void setState(org.ice4j.ice.CheckListState) -> setState
    void scheduleTriggeredCheck(org.ice4j.ice.CandidatePair) -> scheduleTriggeredCheck
    org.ice4j.ice.CandidatePair popTriggeredCheck() -> popTriggeredCheck
    org.ice4j.ice.CandidatePair getNextOrdinaryPairToCheck() -> getNextOrdinaryPairToCheck
    boolean isActive() -> isActive
    boolean allChecksCompleted() -> allChecksCompleted
    boolean isFrozen() -> isFrozen
    java.lang.String toString() -> toString
    void computeInitialCheckListPairStates() -> computeInitialCheckListPairStates
    void recomputePairPriorities() -> recomputePairPriorities
    void handleNominationConfirmed(org.ice4j.ice.CandidatePair) -> handleNominationConfirmed
    java.lang.String getName() -> getName
    boolean containsNomineeForComponent(org.ice4j.ice.Component) -> containsNomineeForComponent
    void addStateChangeListener(java.beans.PropertyChangeListener) -> addStateChangeListener
    void removeStateChangeListener(java.beans.PropertyChangeListener) -> removeStateChangeListener
    void fireStateChange(org.ice4j.ice.CheckListState,org.ice4j.ice.CheckListState) -> fireStateChange
    void addChecksListener(java.beans.PropertyChangeListener) -> addChecksListener
    void removeChecksListener(java.beans.PropertyChangeListener) -> removeChecksListener
    void fireEndOfOrdinaryChecks() -> fireEndOfOrdinaryChecks
    org.ice4j.ice.IceMediaStream getParentStream() -> getParentStream
org.ice4j.ice.CheckListState -> org.ice4j.ice.CheckListState:
    org.ice4j.ice.CheckListState RUNNING -> RUNNING
    org.ice4j.ice.CheckListState COMPLETED -> COMPLETED
    org.ice4j.ice.CheckListState FAILED -> FAILED
    java.lang.String stateName -> stateName
    org.ice4j.ice.CheckListState[] $VALUES -> $VALUES
    org.ice4j.ice.CheckListState[] values() -> values
    org.ice4j.ice.CheckListState valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
org.ice4j.ice.Component -> org.ice4j.ice.Component:
    java.util.logging.Logger logger -> logger
    int componentID -> componentID
    int RTP -> RTP
    int RTCP -> RTCP
    org.ice4j.Transport transport -> transport
    org.ice4j.ice.IceMediaStream parentStream -> parentStream
    java.util.List localCandidates -> localCandidates
    java.util.List remoteCandidates -> remoteCandidates
    java.util.List remoteUpdateCandidates -> remoteUpdateCandidates
    org.ice4j.ice.CandidatePrioritizer candidatePrioritizer -> candidatePrioritizer
    org.ice4j.ice.LocalCandidate defaultCandidate -> defaultCandidate
    org.ice4j.ice.CandidatePair selectedPair -> selectedPair
    org.ice4j.ice.Candidate defaultRemoteCandidate -> defaultRemoteCandidate
    boolean addLocalCandidate(org.ice4j.ice.LocalCandidate) -> addLocalCandidate
    java.util.List getLocalCandidates() -> getLocalCandidates
    int countLocalHostCandidates() -> countLocalHostCandidates
    int getLocalCandidateCount() -> getLocalCandidateCount
    void addRemoteCandidate(org.ice4j.ice.RemoteCandidate) -> addRemoteCandidate
    void addUpdateRemoteCandidates(org.ice4j.ice.RemoteCandidate) -> addUpdateRemoteCandidates
    org.ice4j.ice.LocalCandidate createLocalTcpCandidate4GTalk(org.ice4j.ice.RemoteCandidate,org.ice4j.ice.LocalCandidate) -> createLocalTcpCandidate4GTalk
    void updateRemoteCandidates() -> updateRemoteCandidates
    java.util.List getRemoteCandidates() -> getRemoteCandidates
    void addRemoteCandidates(java.util.List) -> addRemoteCandidates
    int getRemoteCandidateCount() -> getRemoteCandidateCount
    org.ice4j.ice.IceMediaStream getParentStream() -> getParentStream
    int getComponentID() -> getComponentID
    org.ice4j.Transport getTransport() -> getTransport
    java.lang.String toString() -> toString
    java.lang.String toShortString() -> toShortString
    void prioritizeCandidates() -> prioritizeCandidates
    void eliminateRedundantCandidates() -> eliminateRedundantCandidates
    org.ice4j.ice.LocalCandidate findRedundant(org.ice4j.ice.LocalCandidate) -> findRedundant
    org.ice4j.ice.LocalCandidate getDefaultCandidate() -> getDefaultCandidate
    org.ice4j.ice.Candidate getDefaultRemoteCandidate() -> getDefaultRemoteCandidate
    void setDefaultRemoteCandidate(org.ice4j.ice.Candidate) -> setDefaultRemoteCandidate
    void selectDefaultCandidate() -> selectDefaultCandidate
    void free() -> free
    void free(org.ice4j.ice.LocalCandidate) -> free
    org.ice4j.ice.LocalCandidate findLocalCandidate(org.ice4j.TransportAddress) -> findLocalCandidate
    org.ice4j.ice.RemoteCandidate findRemoteCandidate(org.ice4j.TransportAddress) -> findRemoteCandidate
    int coundHostCandidates() -> coundHostCandidates
    void setSelectedPair(org.ice4j.ice.CandidatePair) -> setSelectedPair
    org.ice4j.ice.CandidatePair getSelectedPair() -> getSelectedPair
    java.lang.String getName() -> getName
org.ice4j.ice.ConnectivityCheckClient -> org.ice4j.ice.ConnectivityCheckClient:
    java.util.logging.Logger logger -> logger
    org.ice4j.ice.Agent parentAgent -> parentAgent
    org.ice4j.stack.StunStack stunStack -> stunStack
    java.util.List paceMakers -> paceMakers
    java.util.Map timers -> timers
    void startChecks() -> startChecks
    void startChecks(org.ice4j.ice.CheckList) -> startChecks
    void sendBindingIndicationForPair(org.ice4j.ice.CandidatePair) -> sendBindingIndicationForPair
    org.ice4j.stack.TransactionID startCheckForPair(org.ice4j.ice.CandidatePair) -> startCheckForPair
    org.ice4j.stack.TransactionID startCheckForPair(org.ice4j.ice.CandidatePair,int,int,int) -> startCheckForPair
    void processResponse(org.ice4j.StunResponseEvent) -> processResponse
    void updateCheckListAndTimerStates(org.ice4j.ice.CandidatePair) -> updateCheckListAndTimerStates
    void processSuccessResponse(org.ice4j.StunResponseEvent) -> processSuccessResponse
    boolean checkSymmetricAddresses(org.ice4j.StunResponseEvent) -> checkSymmetricAddresses
    void processErrorResponse(org.ice4j.StunResponseEvent) -> processErrorResponse
    void processTimeout(org.ice4j.StunTimeoutEvent) -> processTimeout
    void stop() -> stop
    java.util.logging.Logger access$000() -> access$000
    org.ice4j.ice.Agent access$100(org.ice4j.ice.ConnectivityCheckClient) -> access$100
    java.util.List access$200(org.ice4j.ice.ConnectivityCheckClient) -> access$200
org.ice4j.ice.ConnectivityCheckClient$1 -> org.ice4j.ice.ConnectivityCheckClient$1:
    org.ice4j.ice.CheckList val$checkList -> val$checkList
    java.lang.String val$streamName -> val$streamName
    org.ice4j.ice.ConnectivityCheckClient this$0 -> this$0
    void run() -> run
org.ice4j.ice.ConnectivityCheckClient$PaceMaker -> org.ice4j.ice.ConnectivityCheckClient$PaceMaker:
    boolean running -> running
    org.ice4j.ice.CheckList checkList -> checkList
    org.ice4j.ice.ConnectivityCheckClient this$0 -> this$0
    long getNextWaitInterval() -> getNextWaitInterval
    void run() -> run
org.ice4j.ice.ConnectivityCheckServer -> org.ice4j.ice.ConnectivityCheckServer:
    java.util.logging.Logger logger -> logger
    org.ice4j.ice.Agent parentAgent -> parentAgent
    boolean started -> started
    org.ice4j.stack.StunStack stunStack -> stunStack
    void processRequest(org.ice4j.StunMessageEvent) -> processRequest
    long extractPriority(org.ice4j.message.Request) -> extractPriority
    boolean repairRoleConflict(org.ice4j.StunMessageEvent) -> repairRoleConflict
    boolean checkLocalUserName(java.lang.String) -> checkLocalUserName
    byte[] getLocalKey(java.lang.String) -> getLocalKey
    byte[] getRemoteKey(java.lang.String,java.lang.String) -> getRemoteKey
    void start() -> start
    void stop() -> stop
org.ice4j.ice.DefaultNominator -> org.ice4j.ice.DefaultNominator:
    java.util.logging.Logger logger -> logger
    org.ice4j.ice.Agent parentAgent -> parentAgent
    org.ice4j.ice.NominationStrategy strategy -> strategy
    java.util.Map validatedCandidates -> validatedCandidates
    void propertyChange(java.beans.PropertyChangeEvent) -> propertyChange
    void strategyNominateFirstValid(java.beans.PropertyChangeEvent) -> strategyNominateFirstValid
    void strategyNominateHighestPrio(java.beans.PropertyChangeEvent) -> strategyNominateHighestPrio
    void setStrategy(org.ice4j.ice.NominationStrategy) -> setStrategy
    void strategyNominateFirstHostOrReflexiveValid(java.beans.PropertyChangeEvent) -> strategyNominateFirstHostOrReflexiveValid
    java.util.logging.Logger access$000() -> access$000
    org.ice4j.ice.Agent access$100(org.ice4j.ice.DefaultNominator) -> access$100
    java.util.Map access$200(org.ice4j.ice.DefaultNominator) -> access$200
org.ice4j.ice.DefaultNominator$RelayedCandidateTask -> org.ice4j.ice.DefaultNominator$RelayedCandidateTask:
    int WAIT_TIME -> WAIT_TIME
    org.ice4j.ice.CandidatePair pair -> pair
    boolean cancelled -> cancelled
    org.ice4j.ice.DefaultNominator this$0 -> this$0
    void propertyChange(java.beans.PropertyChangeEvent) -> propertyChange
    boolean cancel() -> cancel
    void run() -> run
org.ice4j.ice.FoundationsRegistry -> org.ice4j.ice.FoundationsRegistry:
    int lastAssignedFoundation -> lastAssignedFoundation
    int lastAssignedRemoteFoundation -> lastAssignedRemoteFoundation
    java.util.Map foundations -> foundations
    void assignFoundation(org.ice4j.ice.Candidate) -> assignFoundation
    java.lang.String obtainFoundationForPeerReflexiveCandidate() -> obtainFoundationForPeerReflexiveCandidate
    int size() -> size
org.ice4j.ice.FoundationsRegistry$1 -> org.ice4j.ice.FoundationsRegistry$1:
    int[] $SwitchMap$org$ice4j$ice$CandidateType -> $SwitchMap$org$ice4j$ice$CandidateType
org.ice4j.ice.GoogleRelayedCandidate -> org.ice4j.ice.GoogleRelayedCandidate:
    org.ice4j.socket.GoogleRelayedCandidateDatagramSocket relayedCandidateDatagramSocket -> relayedCandidateDatagramSocket
    org.ice4j.socket.GoogleRelayedCandidateSocket relayedCandidateSocket -> relayedCandidateSocket
    org.ice4j.socket.IceSocketWrapper socket -> socket
    org.ice4j.ice.harvest.GoogleTurnCandidateHarvest turnCandidateHarvest -> turnCandidateHarvest
    java.lang.String username -> username
    java.lang.String password -> password
    org.ice4j.socket.GoogleRelayedCandidateDatagramSocket getRelayedCandidateDatagramSocket() -> getRelayedCandidateDatagramSocket
    org.ice4j.socket.GoogleRelayedCandidateSocket getRelayedCandidateSocket() -> getRelayedCandidateSocket
    org.ice4j.socket.IceSocketWrapper getIceSocketWrapper() -> getIceSocketWrapper
    java.lang.String getPassword() -> getPassword
org.ice4j.ice.HostCandidate -> org.ice4j.ice.HostCandidate:
    org.ice4j.socket.IceSocketWrapper socket -> socket
    org.ice4j.socket.StunDatagramPacketFilter createStunDatagramPacketFilter(org.ice4j.TransportAddress) -> createStunDatagramPacketFilter
    org.ice4j.socket.IceSocketWrapper getIceSocketWrapper() -> getIceSocketWrapper
org.ice4j.ice.IceMediaStream -> org.ice4j.ice.IceMediaStream:
    java.util.logging.Logger logger -> logger
    java.lang.String PROPERTY_PAIR_CONSENT_FRESHNESS_CHANGED -> PROPERTY_PAIR_CONSENT_FRESHNESS_CHANGED
    java.lang.String PROPERTY_PAIR_NOMINATED -> PROPERTY_PAIR_NOMINATED
    java.lang.String PROPERTY_PAIR_STATE_CHANGED -> PROPERTY_PAIR_STATE_CHANGED
    java.lang.String PROPERTY_PAIR_VALIDATED -> PROPERTY_PAIR_VALIDATED
    java.lang.String name -> name
    java.util.Map components -> components
    java.util.TreeSet validList -> validList
    int lastComponentID -> lastComponentID
    org.ice4j.ice.CheckList checkList -> checkList
    org.ice4j.ice.Agent parentAgent -> parentAgent
    java.util.List streamListeners -> streamListeners
    int maxCheckListSize -> maxCheckListSize
    java.lang.String remoteUfrag -> remoteUfrag
    java.lang.String remotePassword -> remotePassword
    org.ice4j.ice.Component createComponent(org.ice4j.Transport) -> createComponent
    java.lang.String getName() -> getName
    java.lang.String toString() -> toString
    org.ice4j.ice.Component getComponent(int) -> getComponent
    java.util.List getComponents() -> getComponents
    int getComponentCount() -> getComponentCount
    java.util.List getComponentIDs() -> getComponentIDs
    int getStreamCount() -> getStreamCount
    org.ice4j.ice.Agent getParentAgent() -> getParentAgent
    void free() -> free
    void removeComponent(org.ice4j.ice.Component) -> removeComponent
    void initCheckList() -> initCheckList
    void createCheckList(java.util.List) -> createCheckList
    void createCheckList(org.ice4j.ice.Component,java.util.List) -> createCheckList
    void orderCheckList() -> orderCheckList
    void pruneCheckList(java.util.List) -> pruneCheckList
    org.ice4j.ice.CheckList getCheckList() -> getCheckList
    void setMaxCheckListSize(int) -> setMaxCheckListSize
    org.ice4j.ice.LocalCandidate findLocalCandidate(org.ice4j.TransportAddress) -> findLocalCandidate
    org.ice4j.ice.RemoteCandidate findRemoteCandidate(org.ice4j.TransportAddress) -> findRemoteCandidate
    org.ice4j.ice.CandidatePair findCandidatePair(org.ice4j.TransportAddress,org.ice4j.TransportAddress) -> findCandidatePair
    org.ice4j.ice.CandidatePair findCandidatePair(java.lang.String,java.lang.String) -> findCandidatePair
    int countHostCandidates() -> countHostCandidates
    void addToCheckList(org.ice4j.ice.CandidatePair) -> addToCheckList
    void addToValidList(org.ice4j.ice.CandidatePair) -> addToValidList
    boolean validListContainsFoundation(java.lang.String) -> validListContainsFoundation
    boolean validListContainsNomineeForComponent(org.ice4j.ice.Component) -> validListContainsNomineeForComponent
    boolean validListContainsAllComponents() -> validListContainsAllComponents
    boolean allComponentsAreNominated() -> allComponentsAreNominated
    boolean allComponentsHaveSelected() -> allComponentsHaveSelected
    org.ice4j.ice.CandidatePair getValidPair(org.ice4j.ice.Component) -> getValidPair
    void addPairChangeListener(java.beans.PropertyChangeListener) -> addPairChangeListener
    void removePairStateChangeListener(java.beans.PropertyChangeListener) -> removePairStateChangeListener
    void firePairPropertyChange(org.ice4j.ice.CandidatePair,java.lang.String,java.lang.Object,java.lang.Object) -> firePairPropertyChange
    void setRemoteUfrag(java.lang.String) -> setRemoteUfrag
    java.lang.String getRemoteUfrag() -> getRemoteUfrag
    void setRemotePassword(java.lang.String) -> setRemotePassword
    java.lang.String getRemotePassword() -> getRemotePassword
org.ice4j.ice.IceProcessingState -> org.ice4j.ice.IceProcessingState:
    org.ice4j.ice.IceProcessingState WAITING -> WAITING
    org.ice4j.ice.IceProcessingState RUNNING -> RUNNING
    org.ice4j.ice.IceProcessingState COMPLETED -> COMPLETED
    org.ice4j.ice.IceProcessingState FAILED -> FAILED
    org.ice4j.ice.IceProcessingState TERMINATED -> TERMINATED
    java.lang.String stateName -> stateName
    org.ice4j.ice.IceProcessingState[] $VALUES -> $VALUES
    org.ice4j.ice.IceProcessingState[] values() -> values
    org.ice4j.ice.IceProcessingState valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
org.ice4j.ice.LocalCandidate -> org.ice4j.ice.LocalCandidate:
    org.ice4j.ice.CandidateExtendedType extendedType -> extendedType
    java.lang.String ufrag -> ufrag
    java.util.logging.Logger logger -> logger
    java.net.DatagramSocket getDatagramSocket() -> getDatagramSocket
    java.net.Socket getSocket() -> getSocket
    org.ice4j.socket.IceSocketWrapper getIceSocketWrapper() -> getIceSocketWrapper
    org.ice4j.socket.IceSocketWrapper getStunSocket(org.ice4j.TransportAddress) -> getStunSocket
    org.ice4j.stack.StunStack getStunStack() -> getStunStack
    org.ice4j.socket.StunDatagramPacketFilter createStunDatagramPacketFilter(org.ice4j.TransportAddress) -> createStunDatagramPacketFilter
    void free() -> free
    boolean isDefault() -> isDefault
    void setUfrag(java.lang.String) -> setUfrag
    java.lang.String getUfrag() -> getUfrag
    org.ice4j.ice.CandidateExtendedType getExtendedType() -> getExtendedType
    void setExtendedType(org.ice4j.ice.CandidateExtendedType) -> setExtendedType
    org.ice4j.ice.LocalCandidate findRelatedCandidate(org.ice4j.TransportAddress) -> findRelatedCandidate
    org.ice4j.ice.Candidate findRelatedCandidate(org.ice4j.TransportAddress) -> findRelatedCandidate
org.ice4j.ice.NetworkUtils -> org.ice4j.ice.NetworkUtils:
    java.util.logging.Logger logger -> logger
    java.lang.String IN6_ADDR_ANY -> IN6_ADDR_ANY
    int IN6_ADDR_SIZE -> IN6_ADDR_SIZE
    int IN6_ADDR_TOKEN_SIZE -> IN6_ADDR_TOKEN_SIZE
    java.lang.String IN4_ADDR_ANY -> IN4_ADDR_ANY
    int IN4_ADDR_SIZE -> IN4_ADDR_SIZE
    java.lang.String IN_ADDR_ANY -> IN_ADDR_ANY
    int MAX_PORT_NUMBER -> MAX_PORT_NUMBER
    int MIN_PORT_NUMBER -> MIN_PORT_NUMBER
    java.util.Random portNumberGenerator -> portNumberGenerator
    boolean isWindowsAutoConfiguredIPv4Address(java.net.InetAddress) -> isWindowsAutoConfiguredIPv4Address
    boolean isLinkLocalIPv4Address(java.net.InetAddress) -> isLinkLocalIPv4Address
    int getRandomPortNumber() -> getRandomPortNumber
    int getRandomPortNumber(int,int) -> getRandomPortNumber
    int getRandomPortNumber(int,int,boolean) -> getRandomPortNumber
    boolean isIPv4Address(java.lang.String) -> isIPv4Address
    boolean isIPv6Address(java.lang.String) -> isIPv6Address
    boolean isValidIPAddress(java.lang.String) -> isValidIPAddress
    byte[] strToIPv4(java.lang.String) -> strToIPv4
    byte[] strToIPv6(java.lang.String) -> strToIPv6
    byte[] mappedIPv4ToRealIPv4(byte[]) -> mappedIPv4ToRealIPv4
    boolean isMappedIPv4Addr(byte[]) -> isMappedIPv4Addr
    java.net.InetAddress getInetAddress(java.lang.String) -> getInetAddress
    java.lang.String determineAnyAddress() -> determineAnyAddress
    boolean isValidPortNumber(int) -> isValidPortNumber
    boolean isInterfaceLoopback(java.net.NetworkInterface) -> isInterfaceLoopback
    boolean isInterfaceUp(java.net.NetworkInterface) -> isInterfaceUp
    boolean isInterfaceVirtual(java.net.NetworkInterface) -> isInterfaceVirtual
    java.lang.String stripScopeID(java.lang.String) -> stripScopeID
org.ice4j.ice.NominationStrategy -> org.ice4j.ice.NominationStrategy:
    org.ice4j.ice.NominationStrategy NONE -> NONE
    org.ice4j.ice.NominationStrategy NOMINATE_FIRST_VALID -> NOMINATE_FIRST_VALID
    org.ice4j.ice.NominationStrategy NOMINATE_HIGHEST_PRIO -> NOMINATE_HIGHEST_PRIO
    org.ice4j.ice.NominationStrategy NOMINATE_FIRST_HOST_OR_REFLEXIVE_VALID -> NOMINATE_FIRST_HOST_OR_REFLEXIVE_VALID
    org.ice4j.ice.NominationStrategy NOMINATE_BEST_RTT -> NOMINATE_BEST_RTT
    java.lang.String strategyName -> strategyName
    org.ice4j.ice.NominationStrategy[] $VALUES -> $VALUES
    org.ice4j.ice.NominationStrategy[] values() -> values
    org.ice4j.ice.NominationStrategy valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
org.ice4j.ice.PeerReflexiveCandidate -> org.ice4j.ice.PeerReflexiveCandidate:
    org.ice4j.socket.IceSocketWrapper getIceSocketWrapper() -> getIceSocketWrapper
org.ice4j.ice.RelayedCandidate -> org.ice4j.ice.RelayedCandidate:
    org.ice4j.socket.RelayedCandidateDatagramSocket relayedCandidateDatagramSocket -> relayedCandidateDatagramSocket
    org.ice4j.socket.IceSocketWrapper socket -> socket
    org.ice4j.ice.harvest.TurnCandidateHarvest turnCandidateHarvest -> turnCandidateHarvest
    org.ice4j.socket.RelayedCandidateDatagramSocket getRelayedCandidateDatagramSocket() -> getRelayedCandidateDatagramSocket
    org.ice4j.socket.IceSocketWrapper getIceSocketWrapper() -> getIceSocketWrapper
org.ice4j.ice.RemoteCandidate -> org.ice4j.ice.RemoteCandidate:
    java.lang.String ufrag -> ufrag
    void setPriority(long) -> setPriority
    boolean isDefault() -> isDefault
    java.lang.String getUfrag() -> getUfrag
    org.ice4j.ice.RemoteCandidate findRelatedCandidate(org.ice4j.TransportAddress) -> findRelatedCandidate
    org.ice4j.ice.Candidate findRelatedCandidate(org.ice4j.TransportAddress) -> findRelatedCandidate
org.ice4j.ice.ServerReflexiveCandidate -> org.ice4j.ice.ServerReflexiveCandidate:
    org.ice4j.ice.harvest.StunCandidateHarvest stunHarvest -> stunHarvest
    org.ice4j.socket.IceSocketWrapper getIceSocketWrapper() -> getIceSocketWrapper
    void free() -> free
org.ice4j.ice.UPNPCandidate -> org.ice4j.ice.UPNPCandidate:
    org.bitlet.weupnp.GatewayDevice device -> device
    void free() -> free
    org.ice4j.socket.IceSocketWrapper getIceSocketWrapper() -> getIceSocketWrapper
org.ice4j.ice.harvest.AwsCandidateHarvester -> org.ice4j.ice.harvest.AwsCandidateHarvester:
    java.util.logging.Logger logger -> logger
    java.lang.String PUBLIC_IP_URL -> PUBLIC_IP_URL
    java.lang.String LOCAL_IP_URL -> LOCAL_IP_URL
    java.lang.String EC2_TEST_URL -> EC2_TEST_URL
    java.lang.Boolean RUNNING_ON_EC2 -> RUNNING_ON_EC2
    org.ice4j.TransportAddress mask -> mask
    org.ice4j.TransportAddress face -> face
    java.util.Collection harvest(org.ice4j.ice.Component) -> harvest
    boolean obtainEC2Addresses() -> obtainEC2Addresses
    boolean smellsLikeAnEC2() -> smellsLikeAnEC2
    boolean doTestEc2() -> doTestEc2
    java.lang.String fetch(java.lang.String) -> fetch
org.ice4j.ice.harvest.CandidateHarvester -> org.ice4j.ice.harvest.CandidateHarvester:
    org.ice4j.ice.harvest.HarvestStatistics harvestStatistics -> harvestStatistics
    java.util.Collection harvest(org.ice4j.ice.Component) -> harvest
    org.ice4j.ice.harvest.HarvestStatistics getHarvestStatistics() -> getHarvestStatistics
org.ice4j.ice.harvest.CandidateHarvesterSet -> org.ice4j.ice.harvest.CandidateHarvesterSet:
    java.util.logging.Logger logger -> logger
    java.util.Collection elements -> elements
    java.util.concurrent.ExecutorService threadPool -> threadPool
    boolean add(org.ice4j.ice.harvest.CandidateHarvester) -> add
    void harvest(org.ice4j.ice.Component) -> harvest
    void harvest(java.util.List,org.ice4j.ice.harvest.TrickleCallback) -> harvest
    void harvest(java.util.Iterator,java.util.List,java.util.concurrent.ExecutorService,org.ice4j.ice.harvest.TrickleCallback) -> harvest
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean add(java.lang.Object) -> add
org.ice4j.ice.harvest.CandidateHarvesterSet$1 -> org.ice4j.ice.harvest.CandidateHarvesterSet$1:
    java.util.Iterator val$elementIter -> val$elementIter
    org.ice4j.ice.harvest.CandidateHarvesterSet this$0 -> this$0
    boolean hasNext() -> hasNext
    org.ice4j.ice.harvest.CandidateHarvester next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
org.ice4j.ice.harvest.CandidateHarvesterSetElement -> org.ice4j.ice.harvest.CandidateHarvesterSetElement:
    java.util.logging.Logger logger -> logger
    boolean enabled -> enabled
    org.ice4j.ice.harvest.CandidateHarvester harvester -> harvester
    void harvest(org.ice4j.ice.Component,org.ice4j.ice.harvest.TrickleCallback) -> harvest
    boolean harvesterEquals(org.ice4j.ice.harvest.CandidateHarvester) -> harvesterEquals
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    org.ice4j.ice.harvest.CandidateHarvester getHarvester() -> getHarvester
    void startHarvestTiming() -> startHarvestTiming
    void stopHarvestTiming(java.util.Collection) -> stopHarvestTiming
org.ice4j.ice.harvest.CandidateHarvesterSetTask -> org.ice4j.ice.harvest.CandidateHarvesterSetTask:
    java.util.logging.Logger logger -> logger
    org.ice4j.ice.harvest.CandidateHarvesterSetElement harvester -> harvester
    java.util.Collection components -> components
    org.ice4j.ice.harvest.TrickleCallback trickleCallback -> trickleCallback
    org.ice4j.ice.harvest.CandidateHarvesterSetElement getHarvester() -> getHarvester
    void run() -> run
org.ice4j.ice.harvest.GoogleTurnCandidateHarvest -> org.ice4j.ice.harvest.GoogleTurnCandidateHarvest:
    java.util.logging.Logger logger -> logger
    org.ice4j.message.Request requestToStartResolvingCandidate -> requestToStartResolvingCandidate
    java.lang.String password -> password
    void createCandidates(org.ice4j.message.Response) -> createCandidates
    void createRelayedCandidate(org.ice4j.message.Response) -> createRelayedCandidate
    org.ice4j.ice.GoogleRelayedCandidate createRelayedCandidate(org.ice4j.TransportAddress,org.ice4j.TransportAddress) -> createRelayedCandidate
    org.ice4j.message.Request createRequestToStartResolvingCandidate() -> createRequestToStartResolvingCandidate
    boolean addShortTermCredentialAttributes(org.ice4j.message.Request) -> addShortTermCredentialAttributes
    boolean completedResolvingCandidate(org.ice4j.message.Request,org.ice4j.message.Response) -> completedResolvingCandidate
    void close(org.ice4j.socket.GoogleRelayedCandidateDatagramSocket) -> close
    boolean processErrorOrFailure(org.ice4j.message.Response,org.ice4j.message.Request,org.ice4j.stack.TransactionID) -> processErrorOrFailure
    void processSuccess(org.ice4j.message.Response,org.ice4j.message.Request,org.ice4j.stack.TransactionID) -> processSuccess
org.ice4j.ice.harvest.GoogleTurnCandidateHarvester -> org.ice4j.ice.harvest.GoogleTurnCandidateHarvester:
    java.lang.String password -> password
    org.ice4j.ice.harvest.GoogleTurnCandidateHarvest createHarvest(org.ice4j.ice.HostCandidate) -> createHarvest
    java.lang.String getPassword() -> getPassword
    org.ice4j.ice.harvest.StunCandidateHarvest createHarvest(org.ice4j.ice.HostCandidate) -> createHarvest
org.ice4j.ice.harvest.GoogleTurnSSLCandidateHarvester -> org.ice4j.ice.harvest.GoogleTurnSSLCandidateHarvester:
    byte[] SSL_SERVER_HANDSHAKE -> SSL_SERVER_HANDSHAKE
    byte[] SSL_CLIENT_HANDSHAKE -> SSL_CLIENT_HANDSHAKE
    org.ice4j.ice.harvest.GoogleTurnCandidateHarvest createHarvest(org.ice4j.ice.HostCandidate) -> createHarvest
    org.ice4j.ice.HostCandidate getHostCandidate(org.ice4j.ice.HostCandidate) -> getHostCandidate
    boolean sslHandshake(java.io.InputStream,java.io.OutputStream) -> sslHandshake
    org.ice4j.ice.harvest.StunCandidateHarvest createHarvest(org.ice4j.ice.HostCandidate) -> createHarvest
org.ice4j.ice.harvest.HarvestStatistics -> org.ice4j.ice.harvest.HarvestStatistics:
    int harvestCount -> harvestCount
    long lastStartHarvestingTime -> lastStartHarvestingTime
    long lastHarvestingTime -> lastHarvestingTime
    int totalCandidateCount -> totalCandidateCount
    java.lang.String harvesterName -> harvesterName
    void startHarvestTiming() -> startHarvestTiming
    void stopHarvestTiming(java.util.Collection) -> stopHarvestTiming
    void stopHarvestTiming(int) -> stopHarvestTiming
    long getHarvestDuration() -> getHarvestDuration
    int getTotalCandidateCount() -> getTotalCandidateCount
    int getHarvestCount() -> getHarvestCount
    void setName(java.lang.String) -> setName
    java.lang.String getName() -> getName
    java.lang.String toString() -> toString
org.ice4j.ice.harvest.HostCandidateHarvester -> org.ice4j.ice.harvest.HostCandidateHarvester:
    java.util.logging.Logger logger -> logger
    org.ice4j.ice.harvest.HarvestStatistics harvestStatistics -> harvestStatistics
    java.lang.String[] allowedInterfaces -> allowedInterfaces
    java.lang.String[] blockedInterfaces -> blockedInterfaces
    boolean interfaceFiltersinitialized -> interfaceFiltersinitialized
    java.lang.String[] getAllowedInterfaces() -> getAllowedInterfaces
    java.lang.String[] getBlockedInterfaces() -> getBlockedInterfaces
    void harvest(org.ice4j.ice.Component,int,int,int,org.ice4j.Transport) -> harvest
    boolean isInterfaceAllowed(java.net.NetworkInterface) -> isInterfaceAllowed
    org.ice4j.socket.IceSocketWrapper createServerSocket(java.net.InetAddress,int,int,int,org.ice4j.ice.Component) -> createServerSocket
    org.ice4j.socket.IceSocketWrapper createDatagramSocket(java.net.InetAddress,int,int,int) -> createDatagramSocket
    void createAndRegisterStunSocket(org.ice4j.ice.HostCandidate) -> createAndRegisterStunSocket
    void checkPorts(int,int,int) -> checkPorts
    org.ice4j.ice.harvest.HarvestStatistics getHarvestStatistics() -> getHarvestStatistics
    void initializeInterfaceFilters() -> initializeInterfaceFilters
org.ice4j.ice.harvest.MappingCandidateHarvester -> org.ice4j.ice.harvest.MappingCandidateHarvester:
    org.ice4j.TransportAddress mask -> mask
    org.ice4j.TransportAddress face -> face
    java.util.Collection harvest(org.ice4j.ice.Component) -> harvest
org.ice4j.ice.harvest.StunCandidateHarvest -> org.ice4j.ice.harvest.StunCandidateHarvest:
    java.util.logging.Logger logger -> logger
    org.ice4j.ice.LocalCandidate[] NO_CANDIDATES -> NO_CANDIDATES
    long SEND_KEEP_ALIVE_MESSAGE_INTERVAL_NOT_SPECIFIED -> SEND_KEEP_ALIVE_MESSAGE_INTERVAL_NOT_SPECIFIED
    java.util.List candidates -> candidates
    boolean completedResolvingCandidate -> completedResolvingCandidate
    org.ice4j.ice.harvest.StunCandidateHarvester harvester -> harvester
    org.ice4j.ice.HostCandidate hostCandidate -> hostCandidate
    org.ice4j.security.LongTermCredentialSession longTermCredentialSession -> longTermCredentialSession
    java.util.Map requests -> requests
    long sendKeepAliveMessageInterval -> sendKeepAliveMessageInterval
    java.lang.Object sendKeepAliveMessageSyncRoot -> sendKeepAliveMessageSyncRoot
    java.lang.Thread sendKeepAliveMessageThread -> sendKeepAliveMessageThread
    long sendKeepAliveMessageTime -> sendKeepAliveMessageTime
    boolean addCandidate(org.ice4j.ice.LocalCandidate) -> addCandidate
    boolean addShortTermCredentialAttributes(org.ice4j.message.Request) -> addShortTermCredentialAttributes
    boolean completedResolvingCandidate(org.ice4j.message.Request,org.ice4j.message.Response) -> completedResolvingCandidate
    boolean containsCandidate(org.ice4j.ice.LocalCandidate) -> containsCandidate
    void createCandidates(org.ice4j.message.Response) -> createCandidates
    org.ice4j.message.Message createKeepAliveMessage(org.ice4j.ice.LocalCandidate) -> createKeepAliveMessage
    org.ice4j.message.Request createRequestToRetry(org.ice4j.message.Request) -> createRequestToRetry
    org.ice4j.message.Request createRequestToStartResolvingCandidate() -> createRequestToStartResolvingCandidate
    void createSendKeepAliveMessageThread() -> createSendKeepAliveMessageThread
    void createServerReflexiveCandidate(org.ice4j.message.Response) -> createServerReflexiveCandidate
    org.ice4j.ice.ServerReflexiveCandidate createServerReflexiveCandidate(org.ice4j.TransportAddress) -> createServerReflexiveCandidate
    void exitSendKeepAliveMessageThread() -> exitSendKeepAliveMessageThread
    int getCandidateCount() -> getCandidateCount
    org.ice4j.ice.LocalCandidate[] getCandidates() -> getCandidates
    org.ice4j.TransportAddress getMappedAddress(org.ice4j.message.Response) -> getMappedAddress
    boolean processChallenge(byte[],byte[],org.ice4j.message.Request,org.ice4j.stack.TransactionID) -> processChallenge
    boolean processChallenge(org.ice4j.message.Response,org.ice4j.message.Request,org.ice4j.stack.TransactionID) -> processChallenge
    boolean processErrorOrFailure(org.ice4j.message.Response,org.ice4j.message.Request,org.ice4j.stack.TransactionID) -> processErrorOrFailure
    void processFailure(org.ice4j.BaseStunMessageEvent) -> processFailure
    void processResponse(org.ice4j.StunResponseEvent) -> processResponse
    boolean processStaleNonce(org.ice4j.message.Response,org.ice4j.message.Request,org.ice4j.stack.TransactionID) -> processStaleNonce
    void processSuccess(org.ice4j.message.Response,org.ice4j.message.Request,org.ice4j.stack.TransactionID) -> processSuccess
    boolean processUnauthorized(org.ice4j.message.Response,org.ice4j.message.Request,org.ice4j.stack.TransactionID) -> processUnauthorized
    boolean runInSendKeepAliveMessageThread() -> runInSendKeepAliveMessageThread
    void sendKeepAliveMessage() -> sendKeepAliveMessage
    boolean sendKeepAliveMessage(org.ice4j.ice.LocalCandidate) -> sendKeepAliveMessage
    org.ice4j.stack.TransactionID sendRequest(org.ice4j.message.Request,boolean,org.ice4j.stack.TransactionID) -> sendRequest
    void setSendKeepAliveMessageInterval(long) -> setSendKeepAliveMessageInterval
    boolean startResolvingCandidate() -> startResolvingCandidate
    void close() -> close
    boolean access$000(org.ice4j.ice.harvest.StunCandidateHarvest) -> access$000
    void access$100(org.ice4j.ice.harvest.StunCandidateHarvest) -> access$100
org.ice4j.ice.harvest.StunCandidateHarvest$SendKeepAliveMessageThread -> org.ice4j.ice.harvest.StunCandidateHarvest$SendKeepAliveMessageThread:
    java.lang.ref.WeakReference harvest -> harvest
    void run() -> run
org.ice4j.ice.harvest.StunCandidateHarvester -> org.ice4j.ice.harvest.StunCandidateHarvester:
    java.util.logging.Logger logger -> logger
    java.util.List completedHarvests -> completedHarvests
    java.lang.String shortTermCredentialUsername -> shortTermCredentialUsername
    java.util.List startedHarvests -> startedHarvests
    org.ice4j.TransportAddress stunServer -> stunServer
    org.ice4j.stack.StunStack stunStack -> stunStack
    void completedResolvingCandidate(org.ice4j.ice.harvest.StunCandidateHarvest) -> completedResolvingCandidate
    org.ice4j.ice.harvest.StunCandidateHarvest createHarvest(org.ice4j.ice.HostCandidate) -> createHarvest
    org.ice4j.security.LongTermCredential createLongTermCredential(org.ice4j.ice.harvest.StunCandidateHarvest,byte[]) -> createLongTermCredential
    java.lang.String getShortTermCredentialUsername() -> getShortTermCredentialUsername
    org.ice4j.stack.StunStack getStunStack() -> getStunStack
    java.util.Collection harvest(org.ice4j.ice.Component) -> harvest
    java.lang.String listCandidates(java.util.Collection) -> listCandidates
    void startResolvingCandidate(org.ice4j.ice.HostCandidate) -> startResolvingCandidate
    void waitForResolutionEnd() -> waitForResolutionEnd
    java.lang.String toString() -> toString
    org.ice4j.ice.HostCandidate getHostCandidate(org.ice4j.ice.HostCandidate) -> getHostCandidate
org.ice4j.ice.harvest.TrickleCallback -> org.ice4j.ice.harvest.TrickleCallback:
    void onIceCandidates(java.util.Collection) -> onIceCandidates
org.ice4j.ice.harvest.TurnCandidateHarvest -> org.ice4j.ice.harvest.TurnCandidateHarvest:
    java.util.logging.Logger logger -> logger
    org.ice4j.message.Request requestToStartResolvingCandidate -> requestToStartResolvingCandidate
    void close(org.ice4j.socket.RelayedCandidateDatagramSocket) -> close
    boolean completedResolvingCandidate(org.ice4j.message.Request,org.ice4j.message.Response) -> completedResolvingCandidate
    void createCandidates(org.ice4j.message.Response) -> createCandidates
    org.ice4j.message.Message createKeepAliveMessage(org.ice4j.ice.LocalCandidate) -> createKeepAliveMessage
    void createRelayedCandidate(org.ice4j.message.Response) -> createRelayedCandidate
    org.ice4j.ice.RelayedCandidate createRelayedCandidate(org.ice4j.TransportAddress,org.ice4j.TransportAddress) -> createRelayedCandidate
    org.ice4j.message.Request createRequestToRetry(org.ice4j.message.Request) -> createRequestToRetry
    org.ice4j.message.Request createRequestToStartResolvingCandidate() -> createRequestToStartResolvingCandidate
    boolean processErrorOrFailure(org.ice4j.message.Response,org.ice4j.message.Request,org.ice4j.stack.TransactionID) -> processErrorOrFailure
    void processSuccess(org.ice4j.message.Response,org.ice4j.message.Request,org.ice4j.stack.TransactionID) -> processSuccess
    byte[] sendRequest(org.ice4j.socket.RelayedCandidateDatagramSocket,org.ice4j.message.Request) -> sendRequest
org.ice4j.ice.harvest.TurnCandidateHarvest$1 -> org.ice4j.ice.harvest.TurnCandidateHarvest$1:
    int[] $SwitchMap$org$ice4j$ice$CandidateType -> $SwitchMap$org$ice4j$ice$CandidateType
org.ice4j.ice.harvest.TurnCandidateHarvester -> org.ice4j.ice.harvest.TurnCandidateHarvester:
    org.ice4j.security.LongTermCredential longTermCredential -> longTermCredential
    org.ice4j.ice.harvest.TurnCandidateHarvest createHarvest(org.ice4j.ice.HostCandidate) -> createHarvest
    org.ice4j.security.LongTermCredential createLongTermCredential(org.ice4j.ice.harvest.StunCandidateHarvest,byte[]) -> createLongTermCredential
    org.ice4j.ice.harvest.StunCandidateHarvest createHarvest(org.ice4j.ice.HostCandidate) -> createHarvest
org.ice4j.ice.harvest.UPNPHarvester -> org.ice4j.ice.harvest.UPNPHarvester:
    java.util.logging.Logger logger -> logger
    int MAX_RETRIES -> MAX_RETRIES
    java.lang.String stIP -> stIP
    java.lang.String stPPP -> stPPP
    java.lang.Object rootSync -> rootSync
    org.bitlet.weupnp.GatewayDevice device -> device
    int finishThreads -> finishThreads
    java.util.Collection harvest(org.ice4j.ice.Component) -> harvest
    java.util.List createUPNPCandidate(org.ice4j.socket.IceSocketWrapper,java.lang.String,int,org.ice4j.ice.Component,org.bitlet.weupnp.GatewayDevice) -> createUPNPCandidate
    java.lang.String toString() -> toString
    java.util.logging.Logger access$000() -> access$000
    java.lang.Object access$100(org.ice4j.ice.harvest.UPNPHarvester) -> access$100
    int access$208(org.ice4j.ice.harvest.UPNPHarvester) -> access$208
org.ice4j.ice.harvest.UPNPHarvester$UPNPThread -> org.ice4j.ice.harvest.UPNPHarvester$UPNPThread:
    org.bitlet.weupnp.GatewayDevice device -> device
    java.lang.String st -> st
    org.ice4j.ice.harvest.UPNPHarvester this$0 -> this$0
    org.bitlet.weupnp.GatewayDevice getDevice() -> getDevice
    void run() -> run
org.ice4j.ice.sdp.CandidateAttribute -> org.ice4j.ice.sdp.CandidateAttribute:
    java.lang.String NAME -> NAME
    long serialVersionUID -> serialVersionUID
    org.ice4j.ice.Candidate candidate -> candidate
    java.lang.String COLON -> COLON
    java.lang.String NEWLINE -> NEWLINE
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    boolean hasValue() -> hasValue
    java.lang.String getValue() -> getValue
    void setValue(java.lang.String) -> setValue
    char getTypeChar() -> getTypeChar
    org.ice4j.ice.sdp.CandidateAttribute clone() -> clone
    java.lang.String encode() -> encode
    java.lang.Object clone() -> clone
org.ice4j.message.ChannelData -> org.ice4j.message.ChannelData:
    char channelNumber -> channelNumber
    byte[] data -> data
    char HEADER_LENGTH -> HEADER_LENGTH
    void setChannelNumber(char) -> setChannelNumber
    char getChannelNumber() -> getChannelNumber
    void setData(byte[]) -> setData
    byte[] getData() -> getData
    char getDataLength() -> getDataLength
    boolean validateChannelNumber(char) -> validateChannelNumber
    byte[] encode() -> encode
    org.ice4j.message.ChannelData decode(byte[],char,char) -> decode
    boolean isChannelDataMessage(byte[]) -> isChannelDataMessage
org.ice4j.message.Indication -> org.ice4j.message.Indication:
    void setMessageType(char) -> setMessageType
org.ice4j.message.Message -> org.ice4j.message.Message:
    java.util.logging.Logger logger -> logger
    char STUN_REQUEST -> STUN_REQUEST
    char STUN_INDICATION -> STUN_INDICATION
    char STUN_SUCCESS_RESP -> STUN_SUCCESS_RESP
    char STUN_ERROR_RESP -> STUN_ERROR_RESP
    char STUN_METHOD_BINDING -> STUN_METHOD_BINDING
    char BINDING_REQUEST -> BINDING_REQUEST
    char BINDING_SUCCESS_RESPONSE -> BINDING_SUCCESS_RESPONSE
    char BINDING_ERROR_RESPONSE -> BINDING_ERROR_RESPONSE
    char BINDING_INDICATION -> BINDING_INDICATION
    char SHARED_SECRET_REQUEST -> SHARED_SECRET_REQUEST
    char SHARED_SECRET_RESPONSE -> SHARED_SECRET_RESPONSE
    char SHARED_SECRET_ERROR_RESPONSE -> SHARED_SECRET_ERROR_RESPONSE
    char TURN_METHOD_ALLOCATE -> TURN_METHOD_ALLOCATE
    char TURN_METHOD_REFRESH -> TURN_METHOD_REFRESH
    char TURN_METHOD_SEND -> TURN_METHOD_SEND
    char TURN_METHOD_DATA -> TURN_METHOD_DATA
    char TURN_METHOD_CREATEPERMISSION -> TURN_METHOD_CREATEPERMISSION
    char TURN_METHOD_CHANNELBIND -> TURN_METHOD_CHANNELBIND
    char TURN_METHOD_CONNECT -> TURN_METHOD_CONNECT
    char TURN_METHOD_CONNECTION_BIND -> TURN_METHOD_CONNECTION_BIND
    char TURN_METHOD_CONNECTION_ATTEMPT -> TURN_METHOD_CONNECTION_ATTEMPT
    char ALLOCATE_REQUEST -> ALLOCATE_REQUEST
    char ALLOCATE_RESPONSE -> ALLOCATE_RESPONSE
    char ALLOCATE_ERROR_RESPONSE -> ALLOCATE_ERROR_RESPONSE
    char REFRESH_REQUEST -> REFRESH_REQUEST
    char ALLOCATE_REFRESH_REQUEST -> ALLOCATE_REFRESH_REQUEST
    char REFRESH_RESPONSE -> REFRESH_RESPONSE
    char REFRESH_ERROR_RESPONSE -> REFRESH_ERROR_RESPONSE
    char CHANNELBIND_REQUEST -> CHANNELBIND_REQUEST
    char CHANNELBIND_RESPONSE -> CHANNELBIND_RESPONSE
    char CHANNELBIND_ERROR_RESPONSE -> CHANNELBIND_ERROR_RESPONSE
    char CREATEPERMISSION_REQUEST -> CREATEPERMISSION_REQUEST
    char CREATEPERMISSION_RESPONSE -> CREATEPERMISSION_RESPONSE
    char CREATEPERMISSION_ERROR_RESPONSE -> CREATEPERMISSION_ERROR_RESPONSE
    char SEND_INDICATION -> SEND_INDICATION
    char DATA_INDICATION -> DATA_INDICATION
    char CONNECT_REQUEST -> CONNECT_REQUEST
    char CONNECT_RESPONSE -> CONNECT_RESPONSE
    char CONNECT_ERROR_RESPONSE -> CONNECT_ERROR_RESPONSE
    char CONNECTION_BIND_REQUEST -> CONNECTION_BIND_REQUEST
    char CONNECTION_BIND_SUCCESS_RESPONSE -> CONNECTION_BIND_SUCCESS_RESPONSE
    char CONNECTION_BIND_ERROR_RESPONSE -> CONNECTION_BIND_ERROR_RESPONSE
    char CONNECTION_ATTEMPT_INDICATION -> CONNECTION_ATTEMPT_INDICATION
    char SEND_REQUEST -> SEND_REQUEST
    char OLD_DATA_INDICATION -> OLD_DATA_INDICATION
    byte HEADER_LENGTH -> HEADER_LENGTH
    char messageType -> messageType
    byte[] transactionID -> transactionID
    byte[] MAGIC_COOKIE -> MAGIC_COOKIE
    byte TRANSACTION_ID_LENGTH -> TRANSACTION_ID_LENGTH
    byte RFC3489_TRANSACTION_ID_LENGTH -> RFC3489_TRANSACTION_ID_LENGTH
    java.util.LinkedHashMap attributes -> attributes
    boolean rfc3489CompatibilityMode -> rfc3489CompatibilityMode
    byte N_A -> N_A
    byte C -> C
    byte O -> O
    byte M -> M
    byte BINDING_REQUEST_PRESENTITY_INDEX -> BINDING_REQUEST_PRESENTITY_INDEX
    byte BINDING_RESPONSE_PRESENTITY_INDEX -> BINDING_RESPONSE_PRESENTITY_INDEX
    byte BINDING_ERROR_RESPONSE_PRESENTITY_INDEX -> BINDING_ERROR_RESPONSE_PRESENTITY_INDEX
    byte SHARED_SECRET_REQUEST_PRESENTITY_INDEX -> SHARED_SECRET_REQUEST_PRESENTITY_INDEX
    byte SHARED_SECRET_RESPONSE_PRESENTITY_INDEX -> SHARED_SECRET_RESPONSE_PRESENTITY_INDEX
    byte SHARED_SECRET_ERROR_RESPONSE_PRESENTITY_INDEX -> SHARED_SECRET_ERROR_RESPONSE_PRESENTITY_INDEX
    byte ALLOCATE_REQUEST_PRESENTITY_INDEX -> ALLOCATE_REQUEST_PRESENTITY_INDEX
    byte ALLOCATE_RESPONSE_PRESENTITY_INDEX -> ALLOCATE_RESPONSE_PRESENTITY_INDEX
    byte REFRESH_REQUEST_PRESENTITY_INDEX -> REFRESH_REQUEST_PRESENTITY_INDEX
    byte REFRESH_RESPONSE_PRESENTITY_INDEX -> REFRESH_RESPONSE_PRESENTITY_INDEX
    byte CHANNELBIND_REQUEST_PRESENTITY_INDEX -> CHANNELBIND_REQUEST_PRESENTITY_INDEX
    byte CHANNELBIND_RESPONSE_PRESENTITY_INDEX -> CHANNELBIND_RESPONSE_PRESENTITY_INDEX
    byte SEND_INDICATION_PRESENTITY_INDEX -> SEND_INDICATION_PRESENTITY_INDEX
    byte DATA_INDICATION_PRESENTITY_INDEX -> DATA_INDICATION_PRESENTITY_INDEX
    byte MAPPED_ADDRESS_PRESENTITY_INDEX -> MAPPED_ADDRESS_PRESENTITY_INDEX
    byte RESPONSE_ADDRESS_PRESENTITY_INDEX -> RESPONSE_ADDRESS_PRESENTITY_INDEX
    byte CHANGE_REQUEST_PRESENTITY_INDEX -> CHANGE_REQUEST_PRESENTITY_INDEX
    byte SOURCE_ADDRESS_PRESENTITY_INDEX -> SOURCE_ADDRESS_PRESENTITY_INDEX
    byte CHANGED_ADDRESS_PRESENTITY_INDEX -> CHANGED_ADDRESS_PRESENTITY_INDEX
    byte USERNAME_PRESENTITY_INDEX -> USERNAME_PRESENTITY_INDEX
    byte PASSWORD_PRESENTITY_INDEX -> PASSWORD_PRESENTITY_INDEX
    byte MESSAGE_INTEGRITY_PRESENTITY_INDEX -> MESSAGE_INTEGRITY_PRESENTITY_INDEX
    byte ERROR_CODE_PRESENTITY_INDEX -> ERROR_CODE_PRESENTITY_INDEX
    byte UNKNOWN_ATTRIBUTES_PRESENTITY_INDEX -> UNKNOWN_ATTRIBUTES_PRESENTITY_INDEX
    byte REFLECTED_FROM_PRESENTITY_INDEX -> REFLECTED_FROM_PRESENTITY_INDEX
    byte XOR_MAPPED_ADDRESS_PRESENTITY_INDEX -> XOR_MAPPED_ADDRESS_PRESENTITY_INDEX
    byte XOR_ONLY_PRESENTITY_INDEX -> XOR_ONLY_PRESENTITY_INDEX
    byte SOFTWARE_PRESENTITY_INDEX -> SOFTWARE_PRESENTITY_INDEX
    byte UNKNOWN_OPTIONAL_ATTRIBUTES_PRESENTITY_INDEX -> UNKNOWN_OPTIONAL_ATTRIBUTES_PRESENTITY_INDEX
    byte ALTERNATE_SERVER_PRESENTITY_INDEX -> ALTERNATE_SERVER_PRESENTITY_INDEX
    byte REALM_PRESENTITY_INDEX -> REALM_PRESENTITY_INDEX
    byte NONCE_PRESENTITY_INDEX -> NONCE_PRESENTITY_INDEX
    byte FINGERPRINT_PRESENTITY_INDEX -> FINGERPRINT_PRESENTITY_INDEX
    byte CHANNEL_NUMBER_PRESENTITY_INDEX -> CHANNEL_NUMBER_PRESENTITY_INDEX
    byte LIFETIME_PRESENTITY_INDEX -> LIFETIME_PRESENTITY_INDEX
    byte XOR_PEER_ADDRESS_PRESENTITY_INDEX -> XOR_PEER_ADDRESS_PRESENTITY_INDEX
    byte DATA_PRESENTITY_INDEX -> DATA_PRESENTITY_INDEX
    byte XOR_RELAYED_ADDRESS_PRESENTITY_INDEX -> XOR_RELAYED_ADDRESS_PRESENTITY_INDEX
    byte EVEN_PORT_PRESENTITY_INDEX -> EVEN_PORT_PRESENTITY_INDEX
    byte REQUESTED_TRANSPORT_PRESENTITY_INDEX -> REQUESTED_TRANSPORT_PRESENTITY_INDEX
    byte DONT_FRAGMENT_PRESENTITY_INDEX -> DONT_FRAGMENT_PRESENTITY_INDEX
    byte RESERVATION_TOKEN_PRESENTITY_INDEX -> RESERVATION_TOKEN_PRESENTITY_INDEX
    byte PRIORITY_PRESENTITY_INDEX -> PRIORITY_PRESENTITY_INDEX
    byte ICE_CONTROLLING_PRESENTITY_INDEX -> ICE_CONTROLLING_PRESENTITY_INDEX
    byte ICE_CONTROLLED_PRESENTITY_INDEX -> ICE_CONTROLLED_PRESENTITY_INDEX
    byte USE_CANDIDATE_PRESENTITY_INDEX -> USE_CANDIDATE_PRESENTITY_INDEX
    byte DESTINATION_ADDRESS_PRESENTITY_INDEX -> DESTINATION_ADDRESS_PRESENTITY_INDEX
    byte[][] attributePresentities -> attributePresentities
    char getDataLength() -> getDataLength
    char getDataLengthWithoutPadding() -> getDataLengthWithoutPadding
    void putAttribute(org.ice4j.attribute.Attribute) -> putAttribute
    boolean containsAttribute(char) -> containsAttribute
    org.ice4j.attribute.Attribute getAttribute(char) -> getAttribute
    java.util.List getAttributes() -> getAttributes
    org.ice4j.attribute.Attribute removeAttribute(char) -> removeAttribute
    int getAttributeCount() -> getAttributeCount
    void setMessageType(char) -> setMessageType
    char getMessageType() -> getMessageType
    void setTransactionID(byte[]) -> setTransactionID
    byte[] getTransactionID() -> getTransactionID
    byte getAttributePresentity(char) -> getAttributePresentity
    java.lang.String getName() -> getName
    boolean equals(java.lang.Object) -> equals
    byte[] encode(org.ice4j.stack.StunStack) -> encode
    void prepareForEncoding() -> prepareForEncoding
    org.ice4j.message.Message decode(byte[],char,char) -> decode
    void performAttributeSpecificActions(org.ice4j.attribute.Attribute,byte[],int,int) -> performAttributeSpecificActions
    boolean validateFingerprint(org.ice4j.attribute.FingerprintAttribute,byte[],int,int) -> validateFingerprint
    void validateAttributePresentity() -> validateAttributePresentity
    boolean isErrorResponseType(char) -> isErrorResponseType
    boolean isSuccessResponseType(char) -> isSuccessResponseType
    boolean isResponseType(char) -> isResponseType
    boolean isIndicationType(char) -> isIndicationType
    boolean isRequestType(char) -> isRequestType
    java.lang.String toString() -> toString
org.ice4j.message.MessageFactory -> org.ice4j.message.MessageFactory:
    java.util.logging.Logger logger -> logger
    org.ice4j.message.Request createBindingRequest() -> createBindingRequest
    org.ice4j.message.Request createBindingRequest(long) -> createBindingRequest
    org.ice4j.message.Request createBindingRequest(long,boolean,long) -> createBindingRequest
    org.ice4j.message.Response create3489BindingResponse(org.ice4j.TransportAddress,org.ice4j.TransportAddress,org.ice4j.TransportAddress) -> create3489BindingResponse
    org.ice4j.message.Response createBindingResponse(org.ice4j.message.Request,org.ice4j.TransportAddress) -> createBindingResponse
    org.ice4j.message.Response createBindingErrorResponse(char,java.lang.String,char[]) -> createBindingErrorResponse
    org.ice4j.message.Response createBindingErrorResponseUnknownAttributes(char[]) -> createBindingErrorResponseUnknownAttributes
    org.ice4j.message.Response createBindingErrorResponseUnknownAttributes(java.lang.String,char[]) -> createBindingErrorResponseUnknownAttributes
    org.ice4j.message.Response createBindingErrorResponse(char,java.lang.String) -> createBindingErrorResponse
    org.ice4j.message.Response createBindingErrorResponse(char) -> createBindingErrorResponse
    org.ice4j.message.Indication createBindingIndication() -> createBindingIndication
    org.ice4j.message.Request createAllocateRequest() -> createAllocateRequest
    org.ice4j.message.Request createAllocateRequest(byte,boolean) -> createAllocateRequest
    org.ice4j.message.Response createAllocationResponse(org.ice4j.message.Request,org.ice4j.TransportAddress,org.ice4j.TransportAddress,int) -> createAllocationResponse
    org.ice4j.message.Response createAllocationResponse(org.ice4j.message.Request,org.ice4j.TransportAddress,org.ice4j.TransportAddress,byte[],int) -> createAllocationResponse
    org.ice4j.message.Response createAllocationErrorResponse(char) -> createAllocationErrorResponse
    org.ice4j.message.Response createAllocationErrorResponse(char,java.lang.String) -> createAllocationErrorResponse
    org.ice4j.message.Request createGoogleAllocateRequest(java.lang.String) -> createGoogleAllocateRequest
    void addLongTermCredentialAttributes(org.ice4j.message.Request,byte[],byte[],byte[]) -> addLongTermCredentialAttributes
    org.ice4j.message.Request createRefreshRequest() -> createRefreshRequest
    org.ice4j.message.Request createRefreshRequest(int) -> createRefreshRequest
    org.ice4j.message.Response createRefreshResponse(int) -> createRefreshResponse
    org.ice4j.message.Response createRefreshErrorResponse(char) -> createRefreshErrorResponse
    org.ice4j.message.Response createRefreshErrorResponse(char,java.lang.String) -> createRefreshErrorResponse
    org.ice4j.message.Request createChannelBindRequest(char,org.ice4j.TransportAddress,byte[]) -> createChannelBindRequest
    org.ice4j.message.Response createChannelBindResponse() -> createChannelBindResponse
    org.ice4j.message.Response createChannelBindErrorResponse(char) -> createChannelBindErrorResponse
    org.ice4j.message.Response createChannelBindErrorResponse(char,java.lang.String) -> createChannelBindErrorResponse
    org.ice4j.message.Request createCreatePermissionRequest(org.ice4j.TransportAddress,byte[]) -> createCreatePermissionRequest
    org.ice4j.message.Response createCreatePermissionResponse() -> createCreatePermissionResponse
    org.ice4j.message.Response createCreatePermissionErrorResponse(char) -> createCreatePermissionErrorResponse
    org.ice4j.message.Response createPermissionErrorResponse(char,java.lang.String) -> createPermissionErrorResponse
    org.ice4j.message.Indication createSendIndication(org.ice4j.TransportAddress,byte[],byte[]) -> createSendIndication
    org.ice4j.message.Indication createDataIndication(org.ice4j.TransportAddress,byte[],byte[]) -> createDataIndication
    org.ice4j.message.Request createSendRequest(java.lang.String,org.ice4j.TransportAddress,byte[]) -> createSendRequest
    org.ice4j.message.Request createSharedSecretRequest() -> createSharedSecretRequest
    org.ice4j.message.Response createSharedSecretResponse() -> createSharedSecretResponse
    org.ice4j.message.Response createSharedSecretErrorResponse() -> createSharedSecretErrorResponse
    org.ice4j.message.Request createConnectRequest(org.ice4j.TransportAddress,org.ice4j.message.Request) -> createConnectRequest
    org.ice4j.message.Response createConnectResponse(int) -> createConnectResponse
    org.ice4j.message.Response createConnectErrorResponse(char) -> createConnectErrorResponse
    org.ice4j.message.Response createConnectErrorResponse(char,java.lang.String) -> createConnectErrorResponse
    org.ice4j.message.Request createConnectionBindRequest(int) -> createConnectionBindRequest
    org.ice4j.message.Response createConnectionBindResponse() -> createConnectionBindResponse
    org.ice4j.message.Response createConnectionBindErrorResponse(char) -> createConnectionBindErrorResponse
    org.ice4j.message.Response createConnectionBindErrorResponse(char,java.lang.String) -> createConnectionBindErrorResponse
    org.ice4j.message.Indication createConnectionAttemptIndication(int,org.ice4j.TransportAddress) -> createConnectionAttemptIndication
org.ice4j.message.Request -> org.ice4j.message.Request:
    void setMessageType(char) -> setMessageType
org.ice4j.message.Response -> org.ice4j.message.Response:
    boolean isErrorResponse() -> isErrorResponse
    boolean isSuccessResponse() -> isSuccessResponse
    void setMessageType(char) -> setMessageType
org.ice4j.pseudotcp.EnShutdown -> org.ice4j.pseudotcp.EnShutdown:
    org.ice4j.pseudotcp.EnShutdown SD_NONE -> SD_NONE
    org.ice4j.pseudotcp.EnShutdown SD_GRACEFUL -> SD_GRACEFUL
    org.ice4j.pseudotcp.EnShutdown SD_FORCEFUL -> SD_FORCEFUL
    org.ice4j.pseudotcp.EnShutdown[] $VALUES -> $VALUES
    org.ice4j.pseudotcp.EnShutdown[] values() -> values
    org.ice4j.pseudotcp.EnShutdown valueOf(java.lang.String) -> valueOf
org.ice4j.pseudotcp.IPseudoTcpNotify -> org.ice4j.pseudotcp.IPseudoTcpNotify:
    void OnTcpOpen(org.ice4j.pseudotcp.PseudoTCPBase) -> OnTcpOpen
    void OnTcpReadable(org.ice4j.pseudotcp.PseudoTCPBase) -> OnTcpReadable
    void OnTcpWriteable(org.ice4j.pseudotcp.PseudoTCPBase) -> OnTcpWriteable
    void OnTcpClosed(org.ice4j.pseudotcp.PseudoTCPBase,java.io.IOException) -> OnTcpClosed
    org.ice4j.pseudotcp.WriteResult TcpWritePacket(org.ice4j.pseudotcp.PseudoTCPBase,byte[],int) -> TcpWritePacket
org.ice4j.pseudotcp.Option -> org.ice4j.pseudotcp.Option:
    org.ice4j.pseudotcp.Option OPT_NODELAY -> OPT_NODELAY
    org.ice4j.pseudotcp.Option OPT_ACKDELAY -> OPT_ACKDELAY
    org.ice4j.pseudotcp.Option OPT_RCVBUF -> OPT_RCVBUF
    org.ice4j.pseudotcp.Option OPT_SNDBUF -> OPT_SNDBUF
    org.ice4j.pseudotcp.Option OPT_READ_TIMEOUT -> OPT_READ_TIMEOUT
    org.ice4j.pseudotcp.Option OPT_WRITE_TIMEOUT -> OPT_WRITE_TIMEOUT
    org.ice4j.pseudotcp.Option[] $VALUES -> $VALUES
    org.ice4j.pseudotcp.Option[] values() -> values
    org.ice4j.pseudotcp.Option valueOf(java.lang.String) -> valueOf
org.ice4j.pseudotcp.PseudoTCPBase -> org.ice4j.pseudotcp.PseudoTCPBase:
    java.util.logging.Logger logger -> logger
    boolean PSEUDO_KEEPALIVE -> PSEUDO_KEEPALIVE
    int[] PACKET_MAXIMUMS -> PACKET_MAXIMUMS
    int MAX_PACKET -> MAX_PACKET
    int MIN_PACKET -> MIN_PACKET
    int IP_HEADER_SIZE -> IP_HEADER_SIZE
    int ICMP_HEADER_SIZE -> ICMP_HEADER_SIZE
    int UDP_HEADER_SIZE -> UDP_HEADER_SIZE
    int JINGLE_HEADER_SIZE -> JINGLE_HEADER_SIZE
    int DEFAULT_RCV_BUF_SIZE -> DEFAULT_RCV_BUF_SIZE
    int DEFAULT_SND_BUF_SIZE -> DEFAULT_SND_BUF_SIZE
    long MAX_SEQ -> MAX_SEQ
    int HEADER_SIZE -> HEADER_SIZE
    int PACKET_OVERHEAD -> PACKET_OVERHEAD
    long MIN_RTO -> MIN_RTO
    long DEF_RTO -> DEF_RTO
    long MAX_RTO -> MAX_RTO
    long DEF_ACK_DELAY -> DEF_ACK_DELAY
    short FLAG_CTL -> FLAG_CTL
    short FLAG_RST -> FLAG_RST
    short CTL_CONNECT -> CTL_CONNECT
    short CTL_EXTRA -> CTL_EXTRA
    short TCP_OPT_EOL -> TCP_OPT_EOL
    short TCP_OPT_NOOP -> TCP_OPT_NOOP
    short TCP_OPT_MSS -> TCP_OPT_MSS
    short TCP_OPT_WND_SCALE -> TCP_OPT_WND_SCALE
    int CTRL_BOUND -> CTRL_BOUND
    long DEFAULT_TIMEOUT -> DEFAULT_TIMEOUT
    long CLOSED_TIMEOUT -> CLOSED_TIMEOUT
    int IDLE_PING -> IDLE_PING
    int IDLE_TIMEOUT -> IDLE_TIMEOUT
    org.ice4j.pseudotcp.PseudoTcpState m_state -> m_state
    long m_conv -> m_conv
    boolean m_bReadEnable -> m_bReadEnable
    boolean m_bWriteEnable -> m_bWriteEnable
    boolean m_bOutgoing -> m_bOutgoing
    long m_lasttraffic -> m_lasttraffic
    java.util.List m_rlist -> m_rlist
    long m_lastrecv -> m_lastrecv
    int m_rbuf_len -> m_rbuf_len
    int m_rcv_nxt -> m_rcv_nxt
    int m_rcv_wnd -> m_rcv_wnd
    short m_rwnd_scale -> m_rwnd_scale
    org.ice4j.pseudotcp.util.ByteFifoBuffer m_rbuf -> m_rbuf
    java.util.List m_slist -> m_slist
    long m_lastsend -> m_lastsend
    long m_snd_nxt -> m_snd_nxt
    long m_snd_una -> m_snd_una
    int m_sbuf_len -> m_sbuf_len
    int m_snd_wnd -> m_snd_wnd
    short m_swnd_scale -> m_swnd_scale
    org.ice4j.pseudotcp.util.ByteFifoBuffer m_sbuf -> m_sbuf
    long m_mss -> m_mss
    long m_largest -> m_largest
    long m_mtu_advise -> m_mtu_advise
    int m_msslevel -> m_msslevel
    long m_rto_base -> m_rto_base
    long m_ts_recent -> m_ts_recent
    long m_ts_lastack -> m_ts_lastack
    long m_rx_rttvar -> m_rx_rttvar
    long m_rx_srtt -> m_rx_srtt
    long m_rx_rto -> m_rx_rto
    long m_ssthresh -> m_ssthresh
    long m_cwnd -> m_cwnd
    short m_dup_acks -> m_dup_acks
    long m_recover -> m_recover
    long m_t_ack -> m_t_ack
    boolean m_use_nagling -> m_use_nagling
    long m_ack_delay -> m_ack_delay
    boolean m_support_wnd_scale -> m_support_wnd_scale
    org.ice4j.pseudotcp.PseudoTcpNotify m_notify -> m_notify
    org.ice4j.pseudotcp.EnShutdown m_shutdown -> m_shutdown
    java.lang.String debugName -> debugName
    java.lang.Object ack_notify -> ack_notify
    boolean $assertionsDisabled -> $assertionsDisabled
    void connect() -> connect
    void notifyMTU(int) -> notifyMTU
    int getMTU() -> getMTU
    long now() -> now
    long getNextClock(long) -> getNextClock
    void notifyClock(long) -> notifyClock
    boolean notifyPacket(byte[],int) -> notifyPacket
    long getOption(org.ice4j.pseudotcp.Option) -> getOption
    void setOption(org.ice4j.pseudotcp.Option,long) -> setOption
    long getCongestionWindow() -> getCongestionWindow
    long getBytesInFlight() -> getBytesInFlight
    long getBytesBufferedNotSent() -> getBytesBufferedNotSent
    int getAvailable() -> getAvailable
    int getAvailableSendBuffer() -> getAvailableSendBuffer
    long getRoundTripTimeEstimateMs() -> getRoundTripTimeEstimateMs
    int recv(byte[],int,int) -> recv
    int recv(byte[],int) -> recv
    int send(byte[],int) -> send
    int send(byte[],int,int) -> send
    void close(boolean) -> close
    int queue(byte[],int,int,boolean) -> queue
    org.ice4j.pseudotcp.WriteResult packet(long,short,long,long) -> packet
    org.ice4j.pseudotcp.Segment parseSeg(byte[],int) -> parseSeg
    java.lang.String segToStr(org.ice4j.pseudotcp.Segment) -> segToStr
    boolean parse(byte[],int) -> parse
    long clock_check(long) -> clock_check
    boolean process(org.ice4j.pseudotcp.Segment) -> process
    long timeDiff(long,long) -> timeDiff
    void long_to_bytes(long,byte[],int) -> long_to_bytes
    void short_to_bytes(int,byte[],int) -> short_to_bytes
    long bytes_to_long(byte[],int) -> bytes_to_long
    int bytes_to_short(byte[],int) -> bytes_to_short
    byte[] copy_buffer(byte[],int,int) -> copy_buffer
    long bound(long,long,long) -> bound
    byte[] scrollBuffer(byte[],int) -> scrollBuffer
    boolean transmit(org.ice4j.pseudotcp.SSegment,long) -> transmit
    void attemptSend(org.ice4j.pseudotcp.SendFlags) -> attemptSend
    void closedown(java.io.IOException) -> closedown
    void adjustMTU() -> adjustMTU
    boolean isReceiveBufferFull() -> isReceiveBufferFull
    void disableWindowScale() -> disableWindowScale
    void queueConnectMessage() -> queueConnectMessage
    boolean parseOptions(byte[],int,int) -> parseOptions
    void applyOption(short,byte[],long) -> applyOption
    void applyWindowScaleOption(short) -> applyWindowScaleOption
    void resizeSendBuffer(int) -> resizeSendBuffer
    void resizeReceiveBuffer(int) -> resizeReceiveBuffer
    int getM_snd_wnd() -> getM_snd_wnd
    org.ice4j.pseudotcp.PseudoTcpState getState() -> getState
    int getSendBufferSize() -> getSendBufferSize
    int getRecvBufferSize() -> getRecvBufferSize
    short getM_rwnd_scale() -> getM_rwnd_scale
    short getM_swnd_scale() -> getM_swnd_scale
    java.lang.Object getAckNotify() -> getAckNotify
    long getConversationID() -> getConversationID
    void setConversationID(long) -> setConversationID
org.ice4j.pseudotcp.PseudoTcpJavaSocket -> org.ice4j.pseudotcp.PseudoTcpJavaSocket:
org.ice4j.pseudotcp.PseudoTcpNotify -> org.ice4j.pseudotcp.PseudoTcpNotify:
    void onTcpOpen(org.ice4j.pseudotcp.PseudoTCPBase) -> onTcpOpen
    void onTcpReadable(org.ice4j.pseudotcp.PseudoTCPBase) -> onTcpReadable
    void onTcpWriteable(org.ice4j.pseudotcp.PseudoTCPBase) -> onTcpWriteable
    void onTcpClosed(org.ice4j.pseudotcp.PseudoTCPBase,java.io.IOException) -> onTcpClosed
    org.ice4j.pseudotcp.WriteResult tcpWritePacket(org.ice4j.pseudotcp.PseudoTCPBase,byte[],int) -> tcpWritePacket
org.ice4j.pseudotcp.PseudoTcpSocket -> org.ice4j.pseudotcp.PseudoTcpSocket:
    org.ice4j.pseudotcp.PseudoTcpSocketImpl socketImpl -> socketImpl
    java.lang.Object connectLock -> connectLock
    java.lang.Object closeLock -> closeLock
    long getConversationID() -> getConversationID
    void setConversationID(long) -> setConversationID
    void setMTU(int) -> setMTU
    int getMTU() -> getMTU
    long getOption(org.ice4j.pseudotcp.Option) -> getOption
    void setOption(org.ice4j.pseudotcp.Option,long) -> setOption
    void accept(int) -> accept
    void setDebugName(java.lang.String) -> setDebugName
    org.ice4j.pseudotcp.PseudoTcpState getState() -> getState
    boolean isConnected() -> isConnected
    boolean isConnecting() -> isConnecting
    boolean isClosed() -> isClosed
    void connect(java.net.SocketAddress) -> connect
    void checkDestination(int) -> checkDestination
    void connect(java.net.SocketAddress,int) -> connect
    void close() -> close
    void accept(java.net.SocketAddress,int) -> accept
    java.io.FileDescriptor getFileDescriptor() -> getFileDescriptor
org.ice4j.pseudotcp.PseudoTcpSocketFactory -> org.ice4j.pseudotcp.PseudoTcpSocketFactory:
    long DEFAULT_CONVERSATION_ID -> DEFAULT_CONVERSATION_ID
    int DEFAULT_CONNECT_TIMEOUT -> DEFAULT_CONNECT_TIMEOUT
    java.net.Socket createSocket(java.lang.String,int) -> createSocket
    java.net.Socket createSocket(java.net.InetAddress,int) -> createSocket
    void connectSocket(java.net.Socket,java.net.InetSocketAddress) -> connectSocket
    java.net.Socket createBoundSocket(java.net.InetSocketAddress) -> createBoundSocket
    java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int) -> createSocket
    org.ice4j.pseudotcp.PseudoTcpSocket createSocket(java.net.DatagramSocket) -> createSocket
    org.ice4j.pseudotcp.PseudoTcpSocket createSocket() -> createSocket
    java.net.SocketImpl createSocketImpl() -> createSocketImpl
    java.net.Socket createSocket() -> createSocket
org.ice4j.pseudotcp.PseudoTcpSocketImpl -> org.ice4j.pseudotcp.PseudoTcpSocketImpl:
    java.util.logging.Logger logger -> logger
    org.ice4j.pseudotcp.PseudoTCPBase pseudoTcp -> pseudoTcp
    java.net.DatagramSocket socket -> socket
    java.net.SocketAddress remoteAddr -> remoteAddr
    int DATAGRAM_RCV_BUFFER_SIZE -> DATAGRAM_RCV_BUFFER_SIZE
    java.lang.Object write_notify -> write_notify
    java.lang.Object read_notify -> read_notify
    java.lang.Object state_notify -> state_notify
    java.io.IOException exception -> exception
    long writeTimeout -> writeTimeout
    long readTimeout -> readTimeout
    org.ice4j.pseudotcp.PseudoTcpSocketImpl$PseudoTcpInputStream inputStream -> inputStream
    org.ice4j.pseudotcp.PseudoTcpSocketImpl$PseudoTcpOutputStream outputstream -> outputstream
    java.util.Map options -> options
    boolean runReceive -> runReceive
    java.lang.Thread receiveThread -> receiveThread
    boolean runClock -> runClock
    java.util.concurrent.ScheduledThreadPoolExecutor clockExecutor -> clockExecutor
    java.util.concurrent.ScheduledFuture currentlyScheduledClockTask -> currentlyScheduledClockTask
    java.lang.Runnable clockTaskRunner -> clockTaskRunner
    void setMTU(int) -> setMTU
    int getMTU() -> getMTU
    long getConversationID() -> getConversationID
    void setConversationID(long) -> setConversationID
    void setDebugName(java.lang.String) -> setDebugName
    void create(boolean) -> create
    void connect(java.lang.String,int) -> connect
    void connect(java.net.InetAddress,int) -> connect
    void connect(java.net.SocketAddress,int) -> connect
    void bind(java.net.InetAddress,int) -> bind
    void listen(int) -> listen
    void setOption(int,java.lang.Object) -> setOption
    java.lang.Object getOption(int) -> getOption
    long getPTCPOption(org.ice4j.pseudotcp.Option) -> getPTCPOption
    void setPTCPOption(org.ice4j.pseudotcp.Option,long) -> setPTCPOption
    void doConnect(java.net.InetSocketAddress,long) -> doConnect
    void accept(java.net.SocketAddress,int) -> accept
    void accept(int) -> accept
    void accept(java.net.SocketImpl) -> accept
    org.ice4j.pseudotcp.PseudoTcpState getState() -> getState
    void updateClock() -> updateClock
    void startThreads() -> startThreads
    void onTcpOpen(org.ice4j.pseudotcp.PseudoTCPBase) -> onTcpOpen
    void onTcpReadable(org.ice4j.pseudotcp.PseudoTCPBase) -> onTcpReadable
    void onTcpWriteable(org.ice4j.pseudotcp.PseudoTCPBase) -> onTcpWriteable
    void onTcpClosed(org.ice4j.pseudotcp.PseudoTCPBase,java.io.IOException) -> onTcpClosed
    void releaseAllLocks() -> releaseAllLocks
    void joinAllThreads() -> joinAllThreads
    org.ice4j.pseudotcp.WriteResult tcpWritePacket(org.ice4j.pseudotcp.PseudoTCPBase,byte[],int) -> tcpWritePacket
    void receivePackets() -> receivePackets
    void runClock() -> runClock
    void scheduleClockTask(long) -> scheduleClockTask
    void cancelClockTask(boolean) -> cancelClockTask
    java.io.OutputStream getOutputStream() -> getOutputStream
    java.io.InputStream getInputStream() -> getInputStream
    int available() -> available
    void close() -> close
    void sendUrgentData(int) -> sendUrgentData
    java.io.FileDescriptor getFileDescriptor() -> getFileDescriptor
    void shutdownInput() -> shutdownInput
    void shutdownOutput() -> shutdownOutput
    java.net.InetAddress getInetAddress() -> getInetAddress
    int getPort() -> getPort
    boolean supportsUrgentData() -> supportsUrgentData
    int getLocalPort() -> getLocalPort
    void setPerformancePreferences(int,int,int) -> setPerformancePreferences
    void access$000(org.ice4j.pseudotcp.PseudoTcpSocketImpl) -> access$000
    void access$100(org.ice4j.pseudotcp.PseudoTcpSocketImpl) -> access$100
    java.util.logging.Logger access$200() -> access$200
    org.ice4j.pseudotcp.PseudoTCPBase access$300(org.ice4j.pseudotcp.PseudoTcpSocketImpl) -> access$300
    long access$400(org.ice4j.pseudotcp.PseudoTcpSocketImpl) -> access$400
    java.lang.Object access$500(org.ice4j.pseudotcp.PseudoTcpSocketImpl) -> access$500
    java.io.IOException access$600(org.ice4j.pseudotcp.PseudoTcpSocketImpl) -> access$600
    java.lang.Object access$700(org.ice4j.pseudotcp.PseudoTcpSocketImpl) -> access$700
    long access$800(org.ice4j.pseudotcp.PseudoTcpSocketImpl) -> access$800
org.ice4j.pseudotcp.PseudoTcpSocketImpl$1 -> org.ice4j.pseudotcp.PseudoTcpSocketImpl$1:
    org.ice4j.pseudotcp.PseudoTcpSocketImpl this$0 -> this$0
    void run() -> run
org.ice4j.pseudotcp.PseudoTcpSocketImpl$2 -> org.ice4j.pseudotcp.PseudoTcpSocketImpl$2:
    org.ice4j.pseudotcp.PseudoTcpSocketImpl this$0 -> this$0
    void run() -> run
org.ice4j.pseudotcp.PseudoTcpSocketImpl$PseudoTcpInputStream -> org.ice4j.pseudotcp.PseudoTcpSocketImpl$PseudoTcpInputStream:
    org.ice4j.pseudotcp.PseudoTcpSocketImpl this$0 -> this$0
    boolean markSupported() -> markSupported
    int read() -> read
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    int available() -> available
    void close() -> close
    long skip(long) -> skip
    void mark(int) -> mark
    void reset() -> reset
org.ice4j.pseudotcp.PseudoTcpSocketImpl$PseudoTcpOutputStream -> org.ice4j.pseudotcp.PseudoTcpSocketImpl$PseudoTcpOutputStream:
    org.ice4j.pseudotcp.PseudoTcpSocketImpl this$0 -> this$0
    void write(int) -> write
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    void flush() -> flush
    void close() -> close
org.ice4j.pseudotcp.PseudoTcpState -> org.ice4j.pseudotcp.PseudoTcpState:
    org.ice4j.pseudotcp.PseudoTcpState TCP_LISTEN -> TCP_LISTEN
    org.ice4j.pseudotcp.PseudoTcpState TCP_SYN_SENT -> TCP_SYN_SENT
    org.ice4j.pseudotcp.PseudoTcpState TCP_SYN_RECEIVED -> TCP_SYN_RECEIVED
    org.ice4j.pseudotcp.PseudoTcpState TCP_ESTABLISHED -> TCP_ESTABLISHED
    org.ice4j.pseudotcp.PseudoTcpState TCP_CLOSED -> TCP_CLOSED
    org.ice4j.pseudotcp.PseudoTcpState[] $VALUES -> $VALUES
    org.ice4j.pseudotcp.PseudoTcpState[] values() -> values
    org.ice4j.pseudotcp.PseudoTcpState valueOf(java.lang.String) -> valueOf
org.ice4j.pseudotcp.RSegment -> org.ice4j.pseudotcp.RSegment:
    long seq -> seq
    long len -> len
org.ice4j.pseudotcp.SSegment -> org.ice4j.pseudotcp.SSegment:
    long seq -> seq
    long len -> len
    short xmit -> xmit
    boolean bCtrl -> bCtrl
org.ice4j.pseudotcp.Segment -> org.ice4j.pseudotcp.Segment:
    long conv -> conv
    long seq -> seq
    long ack -> ack
    byte flags -> flags
    int wnd -> wnd
    long tsval -> tsval
    long tsecr -> tsecr
    byte[] data -> data
    int len -> len
org.ice4j.pseudotcp.SendFlags -> org.ice4j.pseudotcp.SendFlags:
    org.ice4j.pseudotcp.SendFlags sfNone -> sfNone
    org.ice4j.pseudotcp.SendFlags sfImmediateAck -> sfImmediateAck
    org.ice4j.pseudotcp.SendFlags sfDelayedAck -> sfDelayedAck
    org.ice4j.pseudotcp.SendFlags[] $VALUES -> $VALUES
    org.ice4j.pseudotcp.SendFlags[] values() -> values
    org.ice4j.pseudotcp.SendFlags valueOf(java.lang.String) -> valueOf
org.ice4j.pseudotcp.WriteResult -> org.ice4j.pseudotcp.WriteResult:
    org.ice4j.pseudotcp.WriteResult WR_SUCCESS -> WR_SUCCESS
    org.ice4j.pseudotcp.WriteResult WR_TOO_LARGE -> WR_TOO_LARGE
    org.ice4j.pseudotcp.WriteResult WR_FAIL -> WR_FAIL
    org.ice4j.pseudotcp.WriteResult[] $VALUES -> $VALUES
    org.ice4j.pseudotcp.WriteResult[] values() -> values
    org.ice4j.pseudotcp.WriteResult valueOf(java.lang.String) -> valueOf
org.ice4j.pseudotcp.util.ByteFifoBuffer -> org.ice4j.pseudotcp.util.ByteFifoBuffer:
    byte[] array -> array
    int write_pos -> write_pos
    int buffered -> buffered
    int read_pos -> read_pos
    int length() -> length
    int read(byte[],int) -> read
    int read(byte[],int,int) -> read
    int readLimit(int) -> readLimit
    void readOp(byte[],int,int,byte[],int,int) -> readOp
    int getWriteRemaining() -> getWriteRemaining
    int getBuffered() -> getBuffered
    int write(byte[],int) -> write
    int write(byte[],int,int) -> write
    void writeOp(byte[],int,int,byte[],int,int) -> writeOp
    int writeLimit(int) -> writeLimit
    void assertWriteLimit(int) -> assertWriteLimit
    void consumeWriteBuffer(int) -> consumeWriteBuffer
    boolean setCapacity(int) -> setCapacity
    void consumeReadData(int) -> consumeReadData
    int readOffset(byte[],int,int,int) -> readOffset
    int writeOffset(byte[],int,int) -> writeOffset
    void resetReadPosition() -> resetReadPosition
    void resetWritePosition() -> resetWritePosition
org.ice4j.security.CredentialsAuthority -> org.ice4j.security.CredentialsAuthority:
    byte[] getLocalKey(java.lang.String) -> getLocalKey
    byte[] getRemoteKey(java.lang.String,java.lang.String) -> getRemoteKey
    boolean checkLocalUserName(java.lang.String) -> checkLocalUserName
org.ice4j.security.CredentialsManager -> org.ice4j.security.CredentialsManager:
    java.util.List authorities -> authorities
    org.ice4j.security.CredentialsAuthority[] unmodifiableAuthorities -> unmodifiableAuthorities
    boolean checkLocalUserName(java.lang.String) -> checkLocalUserName
    org.ice4j.security.CredentialsAuthority[] getAuthorities() -> getAuthorities
    byte[] getLocalKey(java.lang.String) -> getLocalKey
    byte[] getRemoteKey(java.lang.String,java.lang.String) -> getRemoteKey
    void registerAuthority(org.ice4j.security.CredentialsAuthority) -> registerAuthority
    void unregisterAuthority(org.ice4j.security.CredentialsAuthority) -> unregisterAuthority
org.ice4j.security.LongTermCredential -> org.ice4j.security.LongTermCredential:
    byte[] password -> password
    byte[] username -> username
    byte[] getBytes(java.lang.String) -> getBytes
    java.lang.String toString(byte[]) -> toString
    byte[] getPassword() -> getPassword
    byte[] getUsername() -> getUsername
org.ice4j.security.LongTermCredentialSession -> org.ice4j.security.LongTermCredentialSession:
    org.ice4j.security.LongTermCredential longTermCredential -> longTermCredential
    byte[] nonce -> nonce
    byte[] realm -> realm
    void addAttributes(org.ice4j.message.Request) -> addAttributes
    boolean checkLocalUserName(java.lang.String) -> checkLocalUserName
    byte[] getLocalKey(java.lang.String) -> getLocalKey
    byte[] getNonce() -> getNonce
    byte[] getPassword() -> getPassword
    byte[] getRealm() -> getRealm
    byte[] getRemoteKey(java.lang.String,java.lang.String) -> getRemoteKey
    byte[] getUsername() -> getUsername
    boolean realmEquals(byte[]) -> realmEquals
    void setNonce(byte[]) -> setNonce
    boolean usernameEquals(byte[]) -> usernameEquals
org.ice4j.socket.DatagramPacketFilter -> org.ice4j.socket.DatagramPacketFilter:
    boolean accept(java.net.DatagramPacket) -> accept
org.ice4j.socket.DatagramSocketFactory -> org.ice4j.socket.DatagramSocketFactory:
    java.net.DatagramSocket createUnboundDatagramSocket() -> createUnboundDatagramSocket
org.ice4j.socket.DelegatingDatagramSocket -> org.ice4j.socket.DelegatingDatagramSocket:
    java.util.logging.Logger logger -> logger
    java.net.DatagramSocket delegate -> delegate
    long nbReceivedRtpPackets -> nbReceivedRtpPackets
    long nbSentRtpPackets -> nbSentRtpPackets
    long nbLostRtpPackets -> nbLostRtpPackets
    long lastRtpSequenceNumber -> lastRtpSequenceNumber
    long lastLostPacketLogTime -> lastLostPacketLogTime
    org.ice4j.socket.DatagramSocketFactory delegateFactory -> delegateFactory
    int defaultReceiveBufferSize -> defaultReceiveBufferSize
    void bind(java.net.SocketAddress) -> bind
    void close() -> close
    void connect(java.net.InetAddress,int) -> connect
    void connect(java.net.SocketAddress) -> connect
    void disconnect() -> disconnect
    boolean getBroadcast() -> getBroadcast
    java.nio.channels.DatagramChannel getChannel() -> getChannel
    java.net.InetAddress getInetAddress() -> getInetAddress
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getLocalPort() -> getLocalPort
    java.net.SocketAddress getLocalSocketAddress() -> getLocalSocketAddress
    int getPort() -> getPort
    int getReceiveBufferSize() -> getReceiveBufferSize
    java.net.SocketAddress getRemoteSocketAddress() -> getRemoteSocketAddress
    boolean getReuseAddress() -> getReuseAddress
    int getSendBufferSize() -> getSendBufferSize
    int getSoTimeout() -> getSoTimeout
    int getTrafficClass() -> getTrafficClass
    boolean isBound() -> isBound
    boolean isClosed() -> isClosed
    boolean isConnected() -> isConnected
    void receive(java.net.DatagramPacket) -> receive
    void send(java.net.DatagramPacket) -> send
    void setBroadcast(boolean) -> setBroadcast
    void setReceiveBufferSize(int) -> setReceiveBufferSize
    void setReuseAddress(boolean) -> setReuseAddress
    void setSendBufferSize(int) -> setSendBufferSize
    void setSoTimeout(int) -> setSoTimeout
    void setTrafficClass(int) -> setTrafficClass
    boolean logRTPPacket(long) -> logRTPPacket
    void logPacketToPcap(java.net.DatagramPacket,long,boolean,java.net.InetAddress,int) -> logPacketToPcap
    long getRtpSequenceNumber(java.net.DatagramPacket) -> getRtpSequenceNumber
    void updateRtpLosses(java.net.DatagramPacket) -> updateRtpLosses
    long logRtpLosses(long,long,long) -> logRtpLosses
    long getNbLost(long,long) -> getNbLost
    void setDefaultDelegateFactory(org.ice4j.socket.DatagramSocketFactory) -> setDefaultDelegateFactory
    void setDefaultReceiveBufferSize(int) -> setDefaultReceiveBufferSize
    void initReceiveBufferSize() -> initReceiveBufferSize
org.ice4j.socket.DelegatingSocket -> org.ice4j.socket.DelegatingSocket:
    java.net.Socket delegate -> delegate
    java.io.InputStream inputStream -> inputStream
    java.io.OutputStream outputStream -> outputStream
    long nbReceivedRtpPackets -> nbReceivedRtpPackets
    long nbSentRtpPackets -> nbSentRtpPackets
    long nbLostRtpPackets -> nbLostRtpPackets
    long lastRtpSequenceNumber -> lastRtpSequenceNumber
    long lastLostPacketLogTime -> lastLostPacketLogTime
    void bind(java.net.SocketAddress) -> bind
    void close() -> close
    void connect(java.net.SocketAddress) -> connect
    void connect(java.net.SocketAddress,int) -> connect
    java.nio.channels.SocketChannel getChannel() -> getChannel
    java.net.InetAddress getInetAddress() -> getInetAddress
    java.io.InputStream getInputStream() -> getInputStream
    boolean getKeepAlive() -> getKeepAlive
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getLocalPort() -> getLocalPort
    java.net.SocketAddress getLocalSocketAddress() -> getLocalSocketAddress
    boolean getOOBInline() -> getOOBInline
    java.io.OutputStream getOutputStream() -> getOutputStream
    int getPort() -> getPort
    int getReceiveBufferSize() -> getReceiveBufferSize
    java.net.SocketAddress getRemoteSocketAddress() -> getRemoteSocketAddress
    boolean getReuseAddress() -> getReuseAddress
    int getSendBufferSize() -> getSendBufferSize
    int getSoLinger() -> getSoLinger
    int getSoTimeout() -> getSoTimeout
    boolean getTcpNoDelay() -> getTcpNoDelay
    int getTrafficClass() -> getTrafficClass
    boolean isBound() -> isBound
    boolean isClosed() -> isClosed
    boolean isConnected() -> isConnected
    boolean isInputShutdown() -> isInputShutdown
    boolean isOutputShutdown() -> isOutputShutdown
    void sendUrgentData(int) -> sendUrgentData
    void setKeepAlive(boolean) -> setKeepAlive
    void setOOBInline(boolean) -> setOOBInline
    void setPerformancePreferences(int,int,int) -> setPerformancePreferences
    void setReceiveBufferSize(int) -> setReceiveBufferSize
    void setReuseAddress(boolean) -> setReuseAddress
    void setSendBufferSize(int) -> setSendBufferSize
    void setSoLinger(boolean,int) -> setSoLinger
    void setSoTimeout(int) -> setSoTimeout
    void setTcpNoDelay(boolean) -> setTcpNoDelay
    void setTrafficClass(int) -> setTrafficClass
    void shutdownInput() -> shutdownInput
    void shutdownOutput() -> shutdownOutput
    java.lang.String toString() -> toString
    void send(java.net.DatagramPacket) -> send
    void receive(java.net.DatagramPacket) -> receive
    void receiveFromNetwork(java.net.DatagramPacket,java.io.InputStream,java.net.InetAddress,int) -> receiveFromNetwork
    void setOriginalInputStream(java.io.InputStream) -> setOriginalInputStream
    void updateRtpLosses(java.net.DatagramPacket) -> updateRtpLosses
org.ice4j.socket.GoogleRelayedCandidateDatagramSocket -> org.ice4j.socket.GoogleRelayedCandidateDatagramSocket:
    java.util.logging.Logger logger -> logger
    boolean closed -> closed
    org.ice4j.ice.GoogleRelayedCandidate relayedCandidate -> relayedCandidate
    org.ice4j.ice.harvest.GoogleTurnCandidateHarvest turnCandidateHarvest -> turnCandidateHarvest
    org.ice4j.socket.GoogleRelayedCandidateDelegate socketDelegate -> socketDelegate
    void close() -> close
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getLocalPort() -> getLocalPort
    java.net.InetSocketAddress getLocalSocketAddress() -> getLocalSocketAddress
    org.ice4j.ice.GoogleRelayedCandidate getRelayedCandidate() -> getRelayedCandidate
    void processSuccess(org.ice4j.message.Response,org.ice4j.message.Request) -> processSuccess
    void processResponse(org.ice4j.StunResponseEvent) -> processResponse
    void receive(java.net.DatagramPacket) -> receive
    void send(java.net.DatagramPacket) -> send
    java.net.SocketAddress getLocalSocketAddress() -> getLocalSocketAddress
org.ice4j.socket.GoogleRelayedCandidateDelegate -> org.ice4j.socket.GoogleRelayedCandidateDelegate:
    java.util.logging.Logger logger -> logger
    boolean closed -> closed
    java.util.List packetsToReceive -> packetsToReceive
    java.util.List packetsToSend -> packetsToSend
    java.lang.Thread sendThread -> sendThread
    org.ice4j.ice.harvest.GoogleTurnCandidateHarvest turnCandidateHarvest -> turnCandidateHarvest
    java.lang.String username -> username
    void close() -> close
    void handleMessageEvent(org.ice4j.StunMessageEvent) -> handleMessageEvent
    boolean processErrorOrFailure(org.ice4j.message.Response,org.ice4j.message.Request) -> processErrorOrFailure
    void processSuccess(org.ice4j.message.Response,org.ice4j.message.Request) -> processSuccess
    void processResponse(org.ice4j.StunResponseEvent) -> processResponse
    void processTimeout(org.ice4j.StunTimeoutEvent) -> processTimeout
    void receive(java.net.DatagramPacket) -> receive
    void send(java.net.DatagramPacket) -> send
    void createSendThread() -> createSendThread
    void runInSendThread() -> runInSendThread
    void access$000(org.ice4j.socket.GoogleRelayedCandidateDelegate) -> access$000
    java.util.List access$100(org.ice4j.socket.GoogleRelayedCandidateDelegate) -> access$100
    java.lang.Thread access$200(org.ice4j.socket.GoogleRelayedCandidateDelegate) -> access$200
    java.lang.Thread access$202(org.ice4j.socket.GoogleRelayedCandidateDelegate,java.lang.Thread) -> access$202
    boolean access$300(org.ice4j.socket.GoogleRelayedCandidateDelegate) -> access$300
    void access$400(org.ice4j.socket.GoogleRelayedCandidateDelegate) -> access$400
org.ice4j.socket.GoogleRelayedCandidateDelegate$1 -> org.ice4j.socket.GoogleRelayedCandidateDelegate$1:
    org.ice4j.socket.GoogleRelayedCandidateDelegate this$0 -> this$0
    void run() -> run
org.ice4j.socket.GoogleRelayedCandidateSocket -> org.ice4j.socket.GoogleRelayedCandidateSocket:
    java.util.logging.Logger logger -> logger
    boolean closed -> closed
    org.ice4j.ice.GoogleRelayedCandidate relayedCandidate -> relayedCandidate
    org.ice4j.socket.GoogleRelayedCandidateDelegate socketDelegate -> socketDelegate
    org.ice4j.socket.GoogleRelayedCandidateSocket$TCPOutputStream outputStream -> outputStream
    void close() -> close
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getLocalPort() -> getLocalPort
    java.net.InetSocketAddress getLocalSocketAddress() -> getLocalSocketAddress
    org.ice4j.ice.GoogleRelayedCandidate getRelayedCandidate() -> getRelayedCandidate
    void processSuccess(org.ice4j.message.Response,org.ice4j.message.Request) -> processSuccess
    void processResponse(org.ice4j.StunResponseEvent) -> processResponse
    void receive(java.net.DatagramPacket) -> receive
    void send(java.net.DatagramPacket) -> send
    java.io.OutputStream getOutputStream() -> getOutputStream
    java.net.SocketAddress getLocalSocketAddress() -> getLocalSocketAddress
org.ice4j.socket.GoogleRelayedCandidateSocket$TCPOutputStream -> org.ice4j.socket.GoogleRelayedCandidateSocket$TCPOutputStream:
    org.ice4j.TransportAddress target -> target
    org.ice4j.socket.GoogleRelayedCandidateSocket this$0 -> this$0
    void close() -> close
    void flush() -> flush
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    void write(int) -> write
org.ice4j.socket.IceSocketWrapper -> org.ice4j.socket.IceSocketWrapper:
    void send(java.net.DatagramPacket) -> send
    void receive(java.net.DatagramPacket) -> receive
    void close() -> close
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getLocalPort() -> getLocalPort
    java.net.SocketAddress getLocalSocketAddress() -> getLocalSocketAddress
    java.net.Socket getTCPSocket() -> getTCPSocket
    java.net.DatagramSocket getUDPSocket() -> getUDPSocket
org.ice4j.socket.IceTcpServerSocketWrapper -> org.ice4j.socket.IceTcpServerSocketWrapper:
    java.util.logging.Logger logger -> logger
    java.lang.Thread acceptThread -> acceptThread
    java.net.ServerSocket serverSocket -> serverSocket
    boolean isRun -> isRun
    org.ice4j.ice.Component component -> component
    java.util.List sockets -> sockets
    void send(java.net.DatagramPacket) -> send
    void receive(java.net.DatagramPacket) -> receive
    void close() -> close
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getLocalPort() -> getLocalPort
    java.net.SocketAddress getLocalSocketAddress() -> getLocalSocketAddress
    java.net.Socket getTCPSocket() -> getTCPSocket
    java.net.DatagramSocket getUDPSocket() -> getUDPSocket
    boolean access$102(org.ice4j.socket.IceTcpServerSocketWrapper,boolean) -> access$102
    boolean access$100(org.ice4j.socket.IceTcpServerSocketWrapper) -> access$100
    java.net.ServerSocket access$200(org.ice4j.socket.IceTcpServerSocketWrapper) -> access$200
    org.ice4j.ice.Component access$300(org.ice4j.socket.IceTcpServerSocketWrapper) -> access$300
    java.util.List access$400(org.ice4j.socket.IceTcpServerSocketWrapper) -> access$400
    java.util.logging.Logger access$500() -> access$500
org.ice4j.socket.IceTcpServerSocketWrapper$1 -> org.ice4j.socket.IceTcpServerSocketWrapper$1:
org.ice4j.socket.IceTcpServerSocketWrapper$ThreadAccept -> org.ice4j.socket.IceTcpServerSocketWrapper$ThreadAccept:
    org.ice4j.socket.IceTcpServerSocketWrapper this$0 -> this$0
    void run() -> run
org.ice4j.socket.IceTcpSocketWrapper -> org.ice4j.socket.IceTcpSocketWrapper:
    java.net.Socket socket -> socket
    java.io.InputStream inputStream -> inputStream
    java.io.OutputStream outputStream -> outputStream
    void send(java.net.DatagramPacket) -> send
    void receive(java.net.DatagramPacket) -> receive
    void close() -> close
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getLocalPort() -> getLocalPort
    java.net.SocketAddress getLocalSocketAddress() -> getLocalSocketAddress
    java.net.Socket getTCPSocket() -> getTCPSocket
    java.net.DatagramSocket getUDPSocket() -> getUDPSocket
org.ice4j.socket.IceUdpSocketWrapper -> org.ice4j.socket.IceUdpSocketWrapper:
    java.net.DatagramSocket socket -> socket
    void send(java.net.DatagramPacket) -> send
    void receive(java.net.DatagramPacket) -> receive
    void close() -> close
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getLocalPort() -> getLocalPort
    java.net.SocketAddress getLocalSocketAddress() -> getLocalSocketAddress
    java.net.Socket getTCPSocket() -> getTCPSocket
    java.net.DatagramSocket getUDPSocket() -> getUDPSocket
org.ice4j.socket.MultiplexedDatagramSocket -> org.ice4j.socket.MultiplexedDatagramSocket:
    org.ice4j.socket.DatagramPacketFilter filter -> filter
    org.ice4j.socket.MultiplexingDatagramSocket multiplexing -> multiplexing
    java.util.List received -> received
    void close() -> close
    org.ice4j.socket.DatagramPacketFilter getFilter() -> getFilter
    void receive(java.net.DatagramPacket) -> receive
org.ice4j.socket.MultiplexedSocket -> org.ice4j.socket.MultiplexedSocket:
    org.ice4j.socket.DatagramPacketFilter filter -> filter
    org.ice4j.socket.MultiplexingSocket multiplexing -> multiplexing
    java.util.List received -> received
    void close() -> close
    org.ice4j.socket.DatagramPacketFilter getFilter() -> getFilter
    void receive(java.net.DatagramPacket) -> receive
org.ice4j.socket.MultiplexingDatagramSocket -> org.ice4j.socket.MultiplexingDatagramSocket:
    java.util.logging.Logger logger -> logger
    org.ice4j.socket.MultiplexedDatagramSocket[] NO_SOCKETS -> NO_SOCKETS
    boolean inReceive -> inReceive
    java.util.List received -> received
    int receiveBufferSize -> receiveBufferSize
    java.lang.Object receiveSyncRoot -> receiveSyncRoot
    boolean setReceiveBufferSize -> setReceiveBufferSize
    org.ice4j.socket.MultiplexedDatagramSocket[] sockets -> sockets
    java.lang.Object socketsSyncRoot -> socketsSyncRoot
    int soTimeout -> soTimeout
    java.net.DatagramPacket clone(java.net.DatagramPacket) -> clone
    void close(org.ice4j.socket.MultiplexedDatagramSocket) -> close
    void copy(java.net.DatagramPacket,java.net.DatagramPacket) -> copy
    org.ice4j.socket.MultiplexedDatagramSocket getSocket(org.ice4j.socket.DatagramPacketFilter) -> getSocket
    org.ice4j.socket.MultiplexedDatagramSocket getSocket(org.ice4j.socket.DatagramPacketFilter,boolean) -> getSocket
    void receive(java.net.DatagramPacket) -> receive
    void receive(java.util.List,java.net.DatagramPacket,int) -> receive
    void receive(org.ice4j.socket.MultiplexedDatagramSocket,java.net.DatagramPacket) -> receive
    void setReceiveBufferSize(int) -> setReceiveBufferSize
    void setSoTimeout(int) -> setSoTimeout
    int getSoTimeout() -> getSoTimeout
org.ice4j.socket.MultiplexingSocket -> org.ice4j.socket.MultiplexingSocket:
    java.util.logging.Logger logger -> logger
    org.ice4j.socket.MultiplexedSocket[] NO_SOCKETS -> NO_SOCKETS
    boolean inReceive -> inReceive
    java.util.List received -> received
    org.ice4j.socket.TCPInputStream inputStream -> inputStream
    org.ice4j.socket.TCPOutputStream outputStream -> outputStream
    java.lang.Object receiveSyncRoot -> receiveSyncRoot
    org.ice4j.socket.MultiplexedSocket[] sockets -> sockets
    java.lang.Object socketsSyncRoot -> socketsSyncRoot
    int soTimeout -> soTimeout
    void receive(java.net.DatagramPacket) -> receive
    void receive(org.ice4j.socket.MultiplexedSocket,java.net.DatagramPacket) -> receive
    void receive(java.util.List,java.net.DatagramPacket,int) -> receive
    void close() -> close
    void close(org.ice4j.socket.MultiplexedSocket) -> close
    org.ice4j.socket.MultiplexedSocket getSocket(org.ice4j.socket.DatagramPacketFilter) -> getSocket
    void addReceivedPacket(java.net.DatagramPacket) -> addReceivedPacket
    java.io.InputStream getInputStream() -> getInputStream
    java.io.OutputStream getOutputStream() -> getOutputStream
    java.io.InputStream getOriginalInputStream() -> getOriginalInputStream
    java.io.OutputStream getOriginalOutputStream() -> getOriginalOutputStream
    void setSoTimeout(int) -> setSoTimeout
    int getSoTimeout() -> getSoTimeout
org.ice4j.socket.RelayedCandidateDatagramSocket -> org.ice4j.socket.RelayedCandidateDatagramSocket:
    java.lang.String TAG -> TAG
    java.util.logging.Logger logger -> logger
    char CHANNEL_NUMBER_NOT_SPECIFIED -> CHANNEL_NUMBER_NOT_SPECIFIED
    int CHANNELDATA_CHANNELNUMBER_LENGTH -> CHANNELDATA_CHANNELNUMBER_LENGTH
    int CHANNELDATA_LENGTH_LENGTH -> CHANNELDATA_LENGTH_LENGTH
    char MAX_CHANNEL_NUMBER -> MAX_CHANNEL_NUMBER
    char MIN_CHANNEL_NUMBER -> MIN_CHANNEL_NUMBER
    long PERMISSION_LIFETIME -> PERMISSION_LIFETIME
    long PERMISSION_LIFETIME_LEEWAY -> PERMISSION_LIFETIME_LEEWAY
    java.net.DatagramSocket channelDataSocket -> channelDataSocket
    java.util.List channels -> channels
    boolean closed -> closed
    org.ice4j.socket.DatagramPacketFilter connectivityCheckRecognizer -> connectivityCheckRecognizer
    char nextChannelNumber -> nextChannelNumber
    java.util.List packetsToReceive -> packetsToReceive
    java.util.List packetsToSend -> packetsToSend
    java.lang.Thread receiveChannelDataThread -> receiveChannelDataThread
    org.ice4j.ice.RelayedCandidate relayedCandidate -> relayedCandidate
    java.lang.Thread sendThread -> sendThread
    org.ice4j.ice.harvest.TurnCandidateHarvest turnCandidateHarvest -> turnCandidateHarvest
    java.util.List channelObservers -> channelObservers
    org.ice4j.TransportAddress hostAddress -> hostAddress
    org.ice4j.TransportAddress getHostAddress() -> getHostAddress
    org.ice4j.TransportAddress getStunServer() -> getStunServer
    boolean channelDataSocketAccept(java.net.DatagramPacket) -> channelDataSocketAccept
    boolean channelDataSocketAcceptMethod(char) -> channelDataSocketAcceptMethod
    void close() -> close
    void createReceiveChannelDataThread() -> createReceiveChannelDataThread
    void createSendThread() -> createSendThread
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getLocalPort() -> getLocalPort
    java.net.InetSocketAddress getLocalSocketAddress() -> getLocalSocketAddress
    char getNextChannelNumber() -> getNextChannelNumber
    org.ice4j.ice.RelayedCandidate getRelayedCandidate() -> getRelayedCandidate
    void handleMessageEvent(org.ice4j.StunMessageEvent) -> handleMessageEvent
    boolean processErrorOrFailure(org.ice4j.message.Response,org.ice4j.message.Request) -> processErrorOrFailure
    void processSuccess(org.ice4j.message.Response,org.ice4j.message.Request) -> processSuccess
    void receive(java.net.DatagramPacket) -> receive
    void runInReceiveChannelDataThread() -> runInReceiveChannelDataThread
    void runInSendThread() -> runInSendThread
    void send(java.net.DatagramPacket) -> send
    void setChannelBound(org.ice4j.message.Request,boolean) -> setChannelBound
    void setChannelNumberIsConfirmed(org.ice4j.message.Request,boolean) -> setChannelNumberIsConfirmed
    void registerChannelObserver(org.ice4j.socket.RelayedCandidateDatagramSocket$IRelayedCandiateChannelObserver) -> registerChannelObserver
    void unRegisterChannelObserver(org.ice4j.socket.RelayedCandidateDatagramSocket$IRelayedCandiateChannelObserver) -> unRegisterChannelObserver
    org.ice4j.socket.RelayedCandidateDatagramSocket$Channel bindChannel(org.ice4j.TransportAddress) -> bindChannel
    void registerChannelBoundNotification() -> registerChannelBoundNotification
    java.net.SocketAddress getLocalSocketAddress() -> getLocalSocketAddress
    boolean access$000(org.ice4j.socket.RelayedCandidateDatagramSocket,java.net.DatagramPacket) -> access$000
    boolean access$100(org.ice4j.socket.RelayedCandidateDatagramSocket,char) -> access$100
    void access$200(org.ice4j.socket.RelayedCandidateDatagramSocket) -> access$200
    java.util.List access$300(org.ice4j.socket.RelayedCandidateDatagramSocket) -> access$300
    java.lang.Thread access$400(org.ice4j.socket.RelayedCandidateDatagramSocket) -> access$400
    java.lang.Thread access$402(org.ice4j.socket.RelayedCandidateDatagramSocket,java.lang.Thread) -> access$402
    boolean access$500(org.ice4j.socket.RelayedCandidateDatagramSocket) -> access$500
    void access$600(org.ice4j.socket.RelayedCandidateDatagramSocket) -> access$600
    void access$700(org.ice4j.socket.RelayedCandidateDatagramSocket) -> access$700
    java.util.List access$800(org.ice4j.socket.RelayedCandidateDatagramSocket) -> access$800
    java.lang.Thread access$900(org.ice4j.socket.RelayedCandidateDatagramSocket) -> access$900
    java.lang.Thread access$902(org.ice4j.socket.RelayedCandidateDatagramSocket,java.lang.Thread) -> access$902
    void access$1000(org.ice4j.socket.RelayedCandidateDatagramSocket) -> access$1000
    org.ice4j.ice.harvest.TurnCandidateHarvest access$1100(org.ice4j.socket.RelayedCandidateDatagramSocket) -> access$1100
    char access$1200(org.ice4j.socket.RelayedCandidateDatagramSocket) -> access$1200
    java.lang.String access$1300() -> access$1300
    java.net.DatagramSocket access$1400(org.ice4j.socket.RelayedCandidateDatagramSocket) -> access$1400
org.ice4j.socket.RelayedCandidateDatagramSocket$1 -> org.ice4j.socket.RelayedCandidateDatagramSocket$1:
    org.ice4j.socket.RelayedCandidateDatagramSocket this$0 -> this$0
    boolean accept(java.net.DatagramPacket) -> accept
    boolean acceptMethod(char) -> acceptMethod
org.ice4j.socket.RelayedCandidateDatagramSocket$2 -> org.ice4j.socket.RelayedCandidateDatagramSocket$2:
    org.ice4j.socket.RelayedCandidateDatagramSocket this$0 -> this$0
    void run() -> run
org.ice4j.socket.RelayedCandidateDatagramSocket$3 -> org.ice4j.socket.RelayedCandidateDatagramSocket$3:
    org.ice4j.socket.RelayedCandidateDatagramSocket this$0 -> this$0
    void run() -> run
org.ice4j.socket.RelayedCandidateDatagramSocket$Channel -> org.ice4j.socket.RelayedCandidateDatagramSocket$Channel:
    long bindingTimeStamp -> bindingTimeStamp
    byte[] bindingTransactionID -> bindingTransactionID
    boolean bound -> bound
    byte[] channelData -> channelData
    boolean channelDataIsPreferred -> channelDataIsPreferred
    java.net.DatagramPacket channelDataPacket -> channelDataPacket
    char channelNumber -> channelNumber
    boolean channelNumberIsConfirmed -> channelNumberIsConfirmed
    org.ice4j.TransportAddress peerAddress -> peerAddress
    org.ice4j.socket.RelayedCandidateDatagramSocket this$0 -> this$0
    void bind() -> bind
    boolean channelNumberEquals(char) -> channelNumberEquals
    char getChannelNumber() -> getChannelNumber
    boolean getChannelDataIsPreferred() -> getChannelDataIsPreferred
    boolean isBinding() -> isBinding
    boolean isBound() -> isBound
    boolean peerAddressEquals(org.ice4j.TransportAddress) -> peerAddressEquals
    void send(java.net.DatagramPacket,org.ice4j.TransportAddress) -> send
    void setBound(boolean,byte[]) -> setBound
    void setChannelDataIsPreferred(boolean) -> setChannelDataIsPreferred
    void setChannelNumberIsConfirmed(boolean,byte[]) -> setChannelNumberIsConfirmed
org.ice4j.socket.RelayedCandidateDatagramSocket$IRelayedCandiateChannelObserver -> org.ice4j.socket.RelayedCandidateDatagramSocket$IRelayedCandiateChannelObserver:
    void channelBound(org.ice4j.socket.RelayedCandidateDatagramSocket$Channel) -> channelBound
    void channelSetConfirmed(org.ice4j.socket.RelayedCandidateDatagramSocket$Channel) -> channelSetConfirmed
org.ice4j.socket.RtcpDemuxPacketFilter -> org.ice4j.socket.RtcpDemuxPacketFilter:
    boolean accept(java.net.DatagramPacket) -> accept
org.ice4j.socket.SafeCloseDatagramSocket -> org.ice4j.socket.SafeCloseDatagramSocket:
    int inReceive -> inReceive
    java.lang.Object inReceiveSyncRoot -> inReceiveSyncRoot
    void close() -> close
    void receive(java.net.DatagramPacket) -> receive
org.ice4j.socket.StunDatagramPacketFilter -> org.ice4j.socket.StunDatagramPacketFilter:
    org.ice4j.TransportAddress stunServer -> stunServer
    boolean accept(java.net.DatagramPacket) -> accept
    boolean acceptMethod(char) -> acceptMethod
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean isStunPacket(java.net.DatagramPacket) -> isStunPacket
org.ice4j.socket.TCPInputStream -> org.ice4j.socket.TCPInputStream:
    java.util.List packets -> packets
    byte[] currentPacket -> currentPacket
    int currentPacketOffset -> currentPacketOffset
    int currentPacketLength -> currentPacketLength
    java.lang.Object readSyncRoot -> readSyncRoot
    int available() -> available
    void close() -> close
    void mark(int) -> mark
    boolean markSupported() -> markSupported
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    void reset() -> reset
    long skip(long) -> skip
    int read() -> read
    byte[] getNextPacket() -> getNextPacket
    void addPacket(byte[]) -> addPacket
org.ice4j.socket.TCPOutputStream -> org.ice4j.socket.TCPOutputStream:
    java.io.OutputStream outputStream -> outputStream
    void close() -> close
    void flush() -> flush
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    void write(int) -> write
org.ice4j.socket.TurnDatagramPacketFilter -> org.ice4j.socket.TurnDatagramPacketFilter:
    boolean accept(java.net.DatagramPacket) -> accept
    boolean acceptMethod(char) -> acceptMethod
org.ice4j.stack.ChannelDataEventHandler -> org.ice4j.stack.ChannelDataEventHandler:
    void handleMessageEvent(org.ice4j.ChannelDataMessageEvent) -> handleMessageEvent
org.ice4j.stack.Connector -> org.ice4j.stack.Connector:
    java.util.logging.Logger logger -> logger
    org.ice4j.stack.MessageQueue messageQueue -> messageQueue
    org.ice4j.socket.IceSocketWrapper sock -> sock
    java.lang.Object sockLock -> sockLock
    boolean running -> running
    org.ice4j.stack.ErrorHandler errorHandler -> errorHandler
    org.ice4j.TransportAddress listenAddress -> listenAddress
    void start() -> start
    org.ice4j.socket.IceSocketWrapper getSocket() -> getSocket
    void run() -> run
    void stop() -> stop
    void sendMessage(byte[],org.ice4j.TransportAddress) -> sendMessage
    java.lang.String toString() -> toString
    org.ice4j.TransportAddress getListenAddress() -> getListenAddress
org.ice4j.stack.ErrorHandler -> org.ice4j.stack.ErrorHandler:
    void handleError(java.lang.String,java.lang.Throwable) -> handleError
    void handleFatalError(java.lang.Runnable,java.lang.String,java.lang.Throwable) -> handleFatalError
org.ice4j.stack.EventDispatcher -> org.ice4j.stack.EventDispatcher:
    java.util.List messageListeners -> messageListeners
    java.util.Map children -> children
    void addIndicationListener(org.ice4j.TransportAddress,org.ice4j.stack.MessageEventHandler) -> addIndicationListener
    void addOldIndicationListener(org.ice4j.TransportAddress,org.ice4j.stack.MessageEventHandler) -> addOldIndicationListener
    void addMessageListener(org.ice4j.stack.EventDispatcher$MessageTypeEventHandler) -> addMessageListener
    void addMessageListener(org.ice4j.TransportAddress,org.ice4j.stack.EventDispatcher$MessageTypeEventHandler) -> addMessageListener
    void addRequestListener(org.ice4j.stack.RequestListener) -> addRequestListener
    void addRequestListener(org.ice4j.TransportAddress,org.ice4j.stack.RequestListener) -> addRequestListener
    void removeMessageListener(org.ice4j.stack.EventDispatcher$MessageTypeEventHandler) -> removeMessageListener
    void removeMessageListener(org.ice4j.TransportAddress,org.ice4j.stack.EventDispatcher$MessageTypeEventHandler) -> removeMessageListener
    void removeRequestListener(org.ice4j.stack.RequestListener) -> removeRequestListener
    void removeRequestListener(org.ice4j.TransportAddress,org.ice4j.stack.RequestListener) -> removeRequestListener
    void fireMessageEvent(org.ice4j.StunMessageEvent) -> fireMessageEvent
    boolean hasRequestListeners(org.ice4j.TransportAddress) -> hasRequestListeners
    void removeAllListeners() -> removeAllListeners
org.ice4j.stack.EventDispatcher$IndicationEventHandler -> org.ice4j.stack.EventDispatcher$IndicationEventHandler:
    void handleMessageEvent(org.ice4j.StunMessageEvent) -> handleMessageEvent
org.ice4j.stack.EventDispatcher$MessageTypeEventHandler -> org.ice4j.stack.EventDispatcher$MessageTypeEventHandler:
    java.lang.Object delegate -> delegate
    char messageType -> messageType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.ice4j.stack.EventDispatcher$OldIndicationEventHandler -> org.ice4j.stack.EventDispatcher$OldIndicationEventHandler:
    void handleMessageEvent(org.ice4j.StunMessageEvent) -> handleMessageEvent
org.ice4j.stack.EventDispatcher$RequestListenerMessageEventHandler -> org.ice4j.stack.EventDispatcher$RequestListenerMessageEventHandler:
    void handleMessageEvent(org.ice4j.StunMessageEvent) -> handleMessageEvent
org.ice4j.stack.MessageEventHandler -> org.ice4j.stack.MessageEventHandler:
    void handleMessageEvent(org.ice4j.StunMessageEvent) -> handleMessageEvent
org.ice4j.stack.MessageProcessor -> org.ice4j.stack.MessageProcessor:
    java.util.logging.Logger logger -> logger
    org.ice4j.stack.ErrorHandler errorHandler -> errorHandler
    org.ice4j.stack.MessageQueue messageQueue -> messageQueue
    org.ice4j.stack.MessageEventHandler messageEventHandler -> messageEventHandler
    org.ice4j.stack.NetAccessManager netAccessManager -> netAccessManager
    boolean running -> running
    java.lang.Thread runningThread -> runningThread
    void run() -> run
    void start() -> start
    void stop() -> stop
    boolean isRunning() -> isRunning
org.ice4j.stack.MessageQueue -> org.ice4j.stack.MessageQueue:
    java.util.logging.Logger logger -> logger
    java.util.Vector queue -> queue
    int size -> size
    int getSize() -> getSize
    boolean isEmpty() -> isEmpty
    void add(org.ice4j.stack.RawMessage) -> add
    org.ice4j.stack.RawMessage remove() -> remove
    void waitWhileEmpty() -> waitWhileEmpty
org.ice4j.stack.NetAccessManager -> org.ice4j.stack.NetAccessManager:
    java.util.logging.Logger logger -> logger
    java.util.Map netUDPAccessPoints -> netUDPAccessPoints
    java.util.Map netTCPAccessPoints -> netTCPAccessPoints
    org.ice4j.stack.MessageQueue messageQueue -> messageQueue
    java.util.Vector messageProcessors -> messageProcessors
    org.ice4j.stack.MessageEventHandler messageEventHandler -> messageEventHandler
    org.ice4j.stack.PeerUdpMessageEventHandler peerUdpMessageEventHandler -> peerUdpMessageEventHandler
    org.ice4j.stack.ChannelDataEventHandler channelDataEventHandler -> channelDataEventHandler
    int initialThreadPoolSize -> initialThreadPoolSize
    org.ice4j.stack.StunStack stunStack -> stunStack
    org.ice4j.stack.MessageEventHandler getMessageEventHandler() -> getMessageEventHandler
    org.ice4j.stack.PeerUdpMessageEventHandler getUdpMessageEventHandler() -> getUdpMessageEventHandler
    org.ice4j.stack.ChannelDataEventHandler getChannelDataMessageEventHandler() -> getChannelDataMessageEventHandler
    org.ice4j.stack.MessageQueue getMessageQueue() -> getMessageQueue
    org.ice4j.stack.StunStack getStunStack() -> getStunStack
    void handleError(java.lang.String,java.lang.Throwable) -> handleError
    void handleFatalError(java.lang.Runnable,java.lang.String,java.lang.Throwable) -> handleFatalError
    void addSocket(org.ice4j.socket.IceSocketWrapper) -> addSocket
    void removeSocket(org.ice4j.TransportAddress) -> removeSocket
    void stop() -> stop
    void setThreadPoolSize(int) -> setThreadPoolSize
    void initThreadPool() -> initThreadPool
    void fillUpThreadPool(int) -> fillUpThreadPool
    void shrinkThreadPool(int) -> shrinkThreadPool
    void sendMessage(org.ice4j.message.Message,org.ice4j.TransportAddress,org.ice4j.TransportAddress) -> sendMessage
    void sendMessage(org.ice4j.message.ChannelData,org.ice4j.TransportAddress,org.ice4j.TransportAddress) -> sendMessage
    void sendMessage(byte[],org.ice4j.TransportAddress,org.ice4j.TransportAddress) -> sendMessage
org.ice4j.stack.NetAccessManager$1 -> org.ice4j.stack.NetAccessManager$1:
    int[] $SwitchMap$org$ice4j$Transport -> $SwitchMap$org$ice4j$Transport
org.ice4j.stack.PacketLogger -> org.ice4j.stack.PacketLogger:
    void logPacket(byte[],int,byte[],int,byte[],boolean) -> logPacket
    boolean isEnabled() -> isEnabled
org.ice4j.stack.PeerUdpMessageEventHandler -> org.ice4j.stack.PeerUdpMessageEventHandler:
    void handleMessageEvent(org.ice4j.PeerUdpMessageEvent) -> handleMessageEvent
org.ice4j.stack.RawMessage -> org.ice4j.stack.RawMessage:
    byte[] messageBytes -> messageBytes
    int messageLength -> messageLength
    org.ice4j.TransportAddress remoteAddress -> remoteAddress
    org.ice4j.TransportAddress localAddress -> localAddress
    byte[] getBytes() -> getBytes
    int getMessageLength() -> getMessageLength
    org.ice4j.TransportAddress getRemoteAddress() -> getRemoteAddress
    org.ice4j.TransportAddress getLocalAddress() -> getLocalAddress
org.ice4j.stack.RequestListener -> org.ice4j.stack.RequestListener:
    void processRequest(org.ice4j.StunMessageEvent) -> processRequest
org.ice4j.stack.StunClientTransaction -> org.ice4j.stack.StunClientTransaction:
    java.util.logging.Logger logger -> logger
    int DEFAULT_MAX_RETRANSMISSIONS -> DEFAULT_MAX_RETRANSMISSIONS
    int DEFAULT_MAX_WAIT_INTERVAL -> DEFAULT_MAX_WAIT_INTERVAL
    int DEFAULT_ORIGINAL_WAIT_INTERVAL -> DEFAULT_ORIGINAL_WAIT_INTERVAL
    java.util.concurrent.ExecutorService retransmissionThreadPool -> retransmissionThreadPool
    int maxRetransmissions -> maxRetransmissions
    int originalWaitInterval -> originalWaitInterval
    int maxWaitInterval -> maxWaitInterval
    org.ice4j.stack.StunStack stackCallback -> stackCallback
    org.ice4j.message.Request request -> request
    org.ice4j.TransportAddress requestDestination -> requestDestination
    org.ice4j.stack.TransactionID transactionID -> transactionID
    org.ice4j.TransportAddress localAddress -> localAddress
    org.ice4j.ResponseCollector responseCollector -> responseCollector
    boolean cancelled -> cancelled
    java.util.concurrent.locks.Lock lock -> lock
    java.util.concurrent.locks.Condition lockCondition -> lockCondition
    void run() -> run
    void runLocked() -> runLocked
    void sendRequest() -> sendRequest
    void sendRequest0() -> sendRequest0
    org.ice4j.message.Request getRequest() -> getRequest
    void waitFor(long) -> waitFor
    void cancel(boolean) -> cancel
    void cancel() -> cancel
    void handleResponse(org.ice4j.StunMessageEvent) -> handleResponse
    org.ice4j.stack.TransactionID getTransactionID() -> getTransactionID
    void initTransactionConfiguration() -> initTransactionConfiguration
    org.ice4j.TransportAddress getLocalAddress() -> getLocalAddress
    org.ice4j.TransportAddress getRemoteAddress() -> getRemoteAddress
org.ice4j.stack.StunClientTransaction$1 -> org.ice4j.stack.StunClientTransaction$1:
    java.util.concurrent.ThreadFactory defaultThreadFactory -> defaultThreadFactory
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
org.ice4j.stack.StunServerTransaction -> org.ice4j.stack.StunServerTransaction:
    long LIFETIME -> LIFETIME
    org.ice4j.stack.StunStack stackCallback -> stackCallback
    org.ice4j.TransportAddress responseDestination -> responseDestination
    org.ice4j.TransportAddress requestSource -> requestSource
    org.ice4j.message.Response response -> response
    org.ice4j.TransportAddress localListeningAddress -> localListeningAddress
    org.ice4j.TransportAddress localSendingAddress -> localSendingAddress
    org.ice4j.stack.TransactionID transactionID -> transactionID
    long expirationTime -> expirationTime
    boolean expired -> expired
    boolean isRetransmitting -> isRetransmitting
    void start() -> start
    void sendResponse(org.ice4j.message.Response,org.ice4j.TransportAddress,org.ice4j.TransportAddress) -> sendResponse
    void retransmitResponse() -> retransmitResponse
    void expire() -> expire
    boolean isExpired() -> isExpired
    boolean isExpired(long) -> isExpired
    org.ice4j.stack.TransactionID getTransactionID() -> getTransactionID
    boolean isRetransmitting() -> isRetransmitting
    org.ice4j.TransportAddress getSendingAddress() -> getSendingAddress
    org.ice4j.TransportAddress getResponseDestinationAddress() -> getResponseDestinationAddress
    org.ice4j.TransportAddress getLocalListeningAddress() -> getLocalListeningAddress
    org.ice4j.TransportAddress getRequestSourceAddress() -> getRequestSourceAddress
    org.ice4j.message.Response getResponse() -> getResponse
org.ice4j.stack.StunStack -> org.ice4j.stack.StunStack:
    int DEFAULT_THREAD_POOL_SIZE -> DEFAULT_THREAD_POOL_SIZE
    java.util.logging.Logger logger -> logger
    javax.crypto.Mac mac -> mac
    org.ice4j.stack.NetAccessManager netAccessManager -> netAccessManager
    org.ice4j.security.CredentialsManager credentialsManager -> credentialsManager
    java.util.Hashtable clientTransactions -> clientTransactions
    java.lang.Thread serverTransactionExpireThread -> serverTransactionExpireThread
    java.util.Hashtable serverTransactions -> serverTransactions
    org.ice4j.stack.EventDispatcher eventDispatcher -> eventDispatcher
    org.ice4j.stack.PacketLogger packetLogger -> packetLogger
    void setThreadPoolSize(int) -> setThreadPoolSize
    void addSocket(org.ice4j.socket.IceSocketWrapper) -> addSocket
    void removeSocket(org.ice4j.TransportAddress) -> removeSocket
    org.ice4j.stack.StunClientTransaction getClientTransaction(byte[]) -> getClientTransaction
    org.ice4j.stack.StunServerTransaction getServerTransaction(byte[]) -> getServerTransaction
    org.ice4j.stack.StunServerTransaction getServerTransaction(org.ice4j.stack.TransactionID) -> getServerTransaction
    void cancelTransaction(org.ice4j.stack.TransactionID) -> cancelTransaction
    void cancelTransactionsForAddress(org.ice4j.TransportAddress) -> cancelTransactionsForAddress
    org.ice4j.stack.NetAccessManager getNetAccessManager() -> getNetAccessManager
    void sendChannelData(org.ice4j.message.ChannelData,org.ice4j.TransportAddress,org.ice4j.TransportAddress) -> sendChannelData
    void sendUdpMessage(org.ice4j.stack.RawMessage,org.ice4j.TransportAddress,org.ice4j.TransportAddress) -> sendUdpMessage
    void sendIndication(org.ice4j.message.Indication,org.ice4j.TransportAddress,org.ice4j.TransportAddress) -> sendIndication
    org.ice4j.stack.TransactionID sendRequest(org.ice4j.message.Request,org.ice4j.TransportAddress,org.ice4j.TransportAddress,org.ice4j.ResponseCollector) -> sendRequest
    org.ice4j.stack.TransactionID sendRequest(org.ice4j.message.Request,org.ice4j.TransportAddress,org.ice4j.TransportAddress,org.ice4j.ResponseCollector,org.ice4j.stack.TransactionID) -> sendRequest
    org.ice4j.stack.TransactionID sendRequest(org.ice4j.message.Request,org.ice4j.TransportAddress,org.ice4j.TransportAddress,org.ice4j.ResponseCollector,org.ice4j.stack.TransactionID,int,int,int) -> sendRequest
    org.ice4j.stack.TransactionID sendRequest(org.ice4j.message.Request,org.ice4j.TransportAddress,java.net.DatagramSocket,org.ice4j.ResponseCollector) -> sendRequest
    void sendResponse(byte[],org.ice4j.message.Response,org.ice4j.TransportAddress,org.ice4j.TransportAddress) -> sendResponse
    void addIndicationListener(org.ice4j.TransportAddress,org.ice4j.stack.MessageEventHandler) -> addIndicationListener
    void addOldIndicationListener(org.ice4j.TransportAddress,org.ice4j.stack.MessageEventHandler) -> addOldIndicationListener
    void addRequestListener(org.ice4j.stack.RequestListener) -> addRequestListener
    void removeIndicationListener(org.ice4j.TransportAddress,org.ice4j.stack.MessageEventHandler) -> removeIndicationListener
    void removeRequestListener(org.ice4j.stack.RequestListener) -> removeRequestListener
    void addRequestListener(org.ice4j.TransportAddress,org.ice4j.stack.RequestListener) -> addRequestListener
    void removeClientTransaction(org.ice4j.stack.StunClientTransaction) -> removeClientTransaction
    void removeServerTransaction(org.ice4j.stack.StunServerTransaction) -> removeServerTransaction
    void handleMessageEvent(org.ice4j.StunMessageEvent) -> handleMessageEvent
    org.ice4j.security.CredentialsManager getCredentialsManager() -> getCredentialsManager
    void shutDown() -> shutDown
    void validateRequestAttributes(org.ice4j.StunMessageEvent) -> validateRequestAttributes
    boolean validateMessageIntegrity(org.ice4j.attribute.MessageIntegrityAttribute,java.lang.String,boolean,org.ice4j.stack.RawMessage) -> validateMessageIntegrity
    java.lang.String toHexString(byte[]) -> toHexString
    boolean validateUsername(java.lang.String) -> validateUsername
    org.ice4j.stack.PacketLogger getPacketLogger() -> getPacketLogger
    void setPacketLogger(org.ice4j.stack.PacketLogger) -> setPacketLogger
    boolean isPacketLoggerEnabled() -> isPacketLoggerEnabled
    void maybeStartServerTransactionExpireThread() -> maybeStartServerTransactionExpireThread
    void runInServerTransactionExpireThread() -> runInServerTransactionExpireThread
    org.ice4j.message.Response createCorrespondingErrorResponse(char,char,java.lang.String,char[]) -> createCorrespondingErrorResponse
    void access$000(org.ice4j.stack.StunStack) -> access$000
org.ice4j.stack.StunStack$1 -> org.ice4j.stack.StunStack$1:
    org.ice4j.stack.StunStack this$0 -> this$0
    void run() -> run
org.ice4j.stack.TransactionID -> org.ice4j.stack.TransactionID:
    int RFC5389_TRANSACTION_ID_LENGTH -> RFC5389_TRANSACTION_ID_LENGTH
    int RFC3489_TRANSACTION_ID_LENGTH -> RFC3489_TRANSACTION_ID_LENGTH
    byte[] transactionID -> transactionID
    java.lang.Object applicationData -> applicationData
    java.util.Random random -> random
    int hashCode -> hashCode
    org.ice4j.stack.TransactionID createNewTransactionID() -> createNewTransactionID
    org.ice4j.stack.TransactionID createNewRFC3489TransactionID() -> createNewRFC3489TransactionID
    void generateTransactionID(org.ice4j.stack.TransactionID,int) -> generateTransactionID
    org.ice4j.stack.TransactionID createTransactionID(org.ice4j.stack.StunStack,byte[]) -> createTransactionID
    byte[] getBytes() -> getBytes
    boolean isRFC3489Compatible() -> isRFC3489Compatible
    boolean equals(java.lang.Object) -> equals
    boolean equals(byte[]) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.String toString(byte[]) -> toString
    void setApplicationData(java.lang.Object) -> setApplicationData
    java.lang.Object getApplicationData() -> getApplicationData
org.ice4j.stunclient.BlockingRequestSender -> org.ice4j.stunclient.BlockingRequestSender:
    java.util.logging.Logger logger -> logger
    org.ice4j.stack.StunStack stunStack -> stunStack
    org.ice4j.TransportAddress localAddress -> localAddress
    org.ice4j.StunMessageEvent responseEvent -> responseEvent
    boolean ended -> ended
    java.lang.Object sendLock -> sendLock
    void processFailure(org.ice4j.BaseStunMessageEvent) -> processFailure
    void processResponse(org.ice4j.StunResponseEvent) -> processResponse
    org.ice4j.StunMessageEvent sendRequestAndWaitForResponse(org.ice4j.message.Request,org.ice4j.TransportAddress) -> sendRequestAndWaitForResponse
    org.ice4j.StunMessageEvent sendRequestAndWaitForResponse(org.ice4j.message.Request,org.ice4j.TransportAddress,org.ice4j.stack.TransactionID) -> sendRequestAndWaitForResponse
org.ice4j.stunclient.NetworkConfigurationDiscoveryProcess -> org.ice4j.stunclient.NetworkConfigurationDiscoveryProcess:
    java.util.logging.Logger logger -> logger
    boolean started -> started
    org.ice4j.TransportAddress localAddress -> localAddress
    org.ice4j.TransportAddress serverAddress -> serverAddress
    org.ice4j.stunclient.BlockingRequestSender requestSender -> requestSender
    org.ice4j.socket.IceSocketWrapper sock -> sock
    org.ice4j.stack.StunStack stunStack -> stunStack
    void shutDown() -> shutDown
    void start() -> start
    org.ice4j.stunclient.StunDiscoveryReport determineAddress() -> determineAddress
    org.ice4j.StunMessageEvent doTestI(org.ice4j.TransportAddress) -> doTestI
    org.ice4j.StunMessageEvent doTestII(org.ice4j.TransportAddress) -> doTestII
    org.ice4j.StunMessageEvent doTestIII(org.ice4j.TransportAddress) -> doTestIII
    void checkStarted() -> checkStarted
org.ice4j.stunclient.SimpleAddressDetector -> org.ice4j.stunclient.SimpleAddressDetector:
    java.util.logging.Logger logger -> logger
    org.ice4j.stack.StunStack stunStack -> stunStack
    org.ice4j.TransportAddress serverAddress -> serverAddress
    org.ice4j.stunclient.BlockingRequestSender requestSender -> requestSender
    org.ice4j.TransportAddress getServerAddress() -> getServerAddress
    void shutDown() -> shutDown
    void start() -> start
    org.ice4j.TransportAddress getMappingFor(org.ice4j.socket.IceSocketWrapper) -> getMappingFor
org.ice4j.stunclient.StunDiscoveryReport -> org.ice4j.stunclient.StunDiscoveryReport:
    java.lang.String UNKNOWN -> UNKNOWN
    java.lang.String OPEN_INTERNET -> OPEN_INTERNET
    java.lang.String UDP_BLOCKING_FIREWALL -> UDP_BLOCKING_FIREWALL
    java.lang.String SYMMETRIC_UDP_FIREWALL -> SYMMETRIC_UDP_FIREWALL
    java.lang.String FULL_CONE_NAT -> FULL_CONE_NAT
    java.lang.String SYMMETRIC_NAT -> SYMMETRIC_NAT
    java.lang.String RESTRICTED_CONE_NAT -> RESTRICTED_CONE_NAT
    java.lang.String PORT_RESTRICTED_CONE_NAT -> PORT_RESTRICTED_CONE_NAT
    java.lang.String natType -> natType
    org.ice4j.TransportAddress publicAddress -> publicAddress
    java.lang.String getNatType() -> getNatType
    void setNatType(java.lang.String) -> setNatType
    org.ice4j.TransportAddress getPublicAddress() -> getPublicAddress
    void setPublicAddress(org.ice4j.TransportAddress) -> setPublicAddress
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
org.ice4j.util.Ice4jLogFormatter -> org.ice4j.util.Ice4jLogFormatter:
    long startTime -> startTime
    java.lang.String lineSeparator -> lineSeparator
    java.text.DecimalFormat twoDigFmt -> twoDigFmt
    java.text.DecimalFormat threeDigFmt -> threeDigFmt
    java.lang.String format(java.util.logging.LogRecord) -> format
    int inferCaller(java.util.logging.LogRecord) -> inferCaller
org.jivesoftware.smack.AbstractConnectionListener -> org.jivesoftware.smack.AbstractConnectionListener:
    void connectionClosed() -> connectionClosed
    void connectionClosedOnError(java.lang.Exception) -> connectionClosedOnError
    void reconnectingIn(int) -> reconnectingIn
    void reconnectionFailed(java.lang.Exception) -> reconnectionFailed
    void reconnectionSuccessful() -> reconnectionSuccessful
org.jivesoftware.smack.AccountManager -> org.jivesoftware.smack.AccountManager:
    org.jivesoftware.smack.Connection connection -> connection
    org.jivesoftware.smack.packet.Registration info -> info
    boolean accountCreationSupported -> accountCreationSupported
    void setSupportsAccountCreation(boolean) -> setSupportsAccountCreation
    boolean supportsAccountCreation() -> supportsAccountCreation
    java.util.Collection getAccountAttributes() -> getAccountAttributes
    java.lang.String getAccountAttribute(java.lang.String) -> getAccountAttribute
    java.lang.String getAccountInstructions() -> getAccountInstructions
    void createAccount(java.lang.String,java.lang.String) -> createAccount
    void createAccount(java.lang.String,java.lang.String,java.util.Map) -> createAccount
    void changePassword(java.lang.String) -> changePassword
    void deleteAccount() -> deleteAccount
    void getRegistrationInfo() -> getRegistrationInfo
org.jivesoftware.smack.AndroidConnectionConfiguration -> org.jivesoftware.smack.AndroidConnectionConfiguration:
    int DEFAULT_TIMEOUT -> DEFAULT_TIMEOUT
    void AndroidInit() -> AndroidInit
    void AndroidInit(java.lang.String,int) -> AndroidInit
org.jivesoftware.smack.AndroidConnectionConfiguration$1DnsSrvLookupRunnable -> org.jivesoftware.smack.AndroidConnectionConfiguration$1DnsSrvLookupRunnable:
    java.lang.String serviceName -> serviceName
    java.util.List addresses -> addresses
    org.jivesoftware.smack.AndroidConnectionConfiguration this$0 -> this$0
    void run() -> run
    java.util.List getHostAddresses() -> getHostAddresses
org.jivesoftware.smack.Chat -> org.jivesoftware.smack.Chat:
    org.jivesoftware.smack.ChatManager chatManager -> chatManager
    java.lang.String threadID -> threadID
    java.lang.String participant -> participant
    java.util.Set listeners -> listeners
    java.lang.String getThreadID() -> getThreadID
    java.lang.String getParticipant() -> getParticipant
    void sendMessage(java.lang.String) -> sendMessage
    void sendMessage(org.jivesoftware.smack.packet.Message) -> sendMessage
    void addMessageListener(org.jivesoftware.smack.MessageListener) -> addMessageListener
    void removeMessageListener(org.jivesoftware.smack.MessageListener) -> removeMessageListener
    java.util.Collection getListeners() -> getListeners
    org.jivesoftware.smack.PacketCollector createCollector() -> createCollector
    void deliver(org.jivesoftware.smack.packet.Message) -> deliver
    boolean equals(java.lang.Object) -> equals
org.jivesoftware.smack.ChatManager -> org.jivesoftware.smack.ChatManager:
    java.lang.String prefix -> prefix
    long id -> id
    java.util.Map threadChats -> threadChats
    java.util.Map jidChats -> jidChats
    java.util.Map baseJidChats -> baseJidChats
    java.util.Set chatManagerListeners -> chatManagerListeners
    java.util.Map interceptors -> interceptors
    org.jivesoftware.smack.Connection connection -> connection
    java.lang.String nextID() -> nextID
    org.jivesoftware.smack.Chat createChat(java.lang.String,org.jivesoftware.smack.MessageListener) -> createChat
    org.jivesoftware.smack.Chat createChat(java.lang.String,java.lang.String,org.jivesoftware.smack.MessageListener) -> createChat
    org.jivesoftware.smack.Chat createChat(java.lang.String,java.lang.String,boolean) -> createChat
    org.jivesoftware.smack.Chat createChat(org.jivesoftware.smack.packet.Message) -> createChat
    org.jivesoftware.smack.Chat getUserChat(java.lang.String) -> getUserChat
    org.jivesoftware.smack.Chat getThreadChat(java.lang.String) -> getThreadChat
    void addChatListener(org.jivesoftware.smack.ChatManagerListener) -> addChatListener
    void removeChatListener(org.jivesoftware.smack.ChatManagerListener) -> removeChatListener
    java.util.Collection getChatListeners() -> getChatListeners
    void deliverMessage(org.jivesoftware.smack.Chat,org.jivesoftware.smack.packet.Message) -> deliverMessage
    void sendMessage(org.jivesoftware.smack.Chat,org.jivesoftware.smack.packet.Message) -> sendMessage
    org.jivesoftware.smack.PacketCollector createPacketCollector(org.jivesoftware.smack.Chat) -> createPacketCollector
    void addOutgoingMessageInterceptor(org.jivesoftware.smack.PacketInterceptor) -> addOutgoingMessageInterceptor
    void addOutgoingMessageInterceptor(org.jivesoftware.smack.PacketInterceptor,org.jivesoftware.smack.filter.PacketFilter) -> addOutgoingMessageInterceptor
    org.jivesoftware.smack.Chat access$000(org.jivesoftware.smack.ChatManager,java.lang.String) -> access$000
    org.jivesoftware.smack.Chat access$100(org.jivesoftware.smack.ChatManager,org.jivesoftware.smack.packet.Message) -> access$100
    void access$200(org.jivesoftware.smack.ChatManager,org.jivesoftware.smack.Chat,org.jivesoftware.smack.packet.Message) -> access$200
org.jivesoftware.smack.ChatManager$1 -> org.jivesoftware.smack.ChatManager$1:
    org.jivesoftware.smack.ChatManager this$0 -> this$0
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
org.jivesoftware.smack.ChatManager$2 -> org.jivesoftware.smack.ChatManager$2:
    org.jivesoftware.smack.ChatManager this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smack.ChatManagerListener -> org.jivesoftware.smack.ChatManagerListener:
    void chatCreated(org.jivesoftware.smack.Chat,boolean) -> chatCreated
org.jivesoftware.smack.Connection -> org.jivesoftware.smack.Connection:
    java.util.concurrent.atomic.AtomicInteger connectionCounter -> connectionCounter
    java.util.Set connectionEstablishedListeners -> connectionEstablishedListeners
    java.util.List compressionHandlers -> compressionHandlers
    boolean DEBUG_ENABLED -> DEBUG_ENABLED
    org.jivesoftware.smack.ReconnectionManager reconnectionManager -> reconnectionManager
    java.util.Collection connectionListeners -> connectionListeners
    java.util.Collection collectors -> collectors
    java.util.Map recvListeners -> recvListeners
    java.util.Map sendListeners -> sendListeners
    java.util.Map interceptors -> interceptors
    org.jivesoftware.smack.AccountManager accountManager -> accountManager
    org.jivesoftware.smack.ChatManager chatManager -> chatManager
    org.jivesoftware.smack.debugger.SmackDebugger debugger -> debugger
    java.io.Reader reader -> reader
    java.io.Writer writer -> writer
    org.jivesoftware.smack.RosterStorage rosterStorage -> rosterStorage
    org.jivesoftware.smack.SASLAuthentication saslAuthentication -> saslAuthentication
    int connectionCounterValue -> connectionCounterValue
    org.jivesoftware.smack.ConnectionConfiguration config -> config
    java.lang.String serviceCapsNode -> serviceCapsNode
    org.jivesoftware.smack.compression.XMPPInputOutputStream compressionHandler -> compressionHandler
    boolean released -> released
    void release() -> release
    boolean isReleased() -> isReleased
    org.jivesoftware.smack.ConnectionConfiguration getConfiguration() -> getConfiguration
    java.lang.String getServiceName() -> getServiceName
    java.lang.String getHost() -> getHost
    int getPort() -> getPort
    java.lang.String getUser() -> getUser
    java.lang.String getConnectionID() -> getConnectionID
    boolean isConnected() -> isConnected
    boolean isAuthenticated() -> isAuthenticated
    boolean isAnonymous() -> isAnonymous
    boolean isSecureConnection() -> isSecureConnection
    boolean isReconnectionAllowed() -> isReconnectionAllowed
    boolean isUsingCompression() -> isUsingCompression
    void connect() -> connect
    void login(java.lang.String,java.lang.String) -> login
    void login(java.lang.String,java.lang.String,java.lang.String) -> login
    void loginAnonymously() -> loginAnonymously
    void sendPacket(org.jivesoftware.smack.packet.Packet) -> sendPacket
    org.jivesoftware.smack.AccountManager getAccountManager() -> getAccountManager
    org.jivesoftware.smack.ChatManager getChatManager() -> getChatManager
    org.jivesoftware.smack.Roster getRoster() -> getRoster
    void setRosterStorage(org.jivesoftware.smack.RosterStorage) -> setRosterStorage
    org.jivesoftware.smack.SASLAuthentication getSASLAuthentication() -> getSASLAuthentication
    void disconnect() -> disconnect
    void disconnect(org.jivesoftware.smack.packet.Presence) -> disconnect
    void addConnectionCreationListener(org.jivesoftware.smack.ConnectionCreationListener) -> addConnectionCreationListener
    void removeConnectionCreationListener(org.jivesoftware.smack.ConnectionCreationListener) -> removeConnectionCreationListener
    java.util.Collection getConnectionCreationListeners() -> getConnectionCreationListeners
    void addConnectionListener(org.jivesoftware.smack.ConnectionListener) -> addConnectionListener
    void removeConnectionListener(org.jivesoftware.smack.ConnectionListener) -> removeConnectionListener
    java.util.Collection getConnectionListeners() -> getConnectionListeners
    org.jivesoftware.smack.PacketCollector createPacketCollector(org.jivesoftware.smack.filter.PacketFilter) -> createPacketCollector
    void removePacketCollector(org.jivesoftware.smack.PacketCollector) -> removePacketCollector
    java.util.Collection getPacketCollectors() -> getPacketCollectors
    void addPacketListener(org.jivesoftware.smack.PacketListener,org.jivesoftware.smack.filter.PacketFilter) -> addPacketListener
    void removePacketListener(org.jivesoftware.smack.PacketListener) -> removePacketListener
    java.util.Map getPacketListeners() -> getPacketListeners
    void addPacketSendingListener(org.jivesoftware.smack.PacketListener,org.jivesoftware.smack.filter.PacketFilter) -> addPacketSendingListener
    void removePacketSendingListener(org.jivesoftware.smack.PacketListener) -> removePacketSendingListener
    java.util.Map getPacketSendingListeners() -> getPacketSendingListeners
    void firePacketSendingListeners(org.jivesoftware.smack.packet.Packet) -> firePacketSendingListeners
    void addPacketInterceptor(org.jivesoftware.smack.PacketInterceptor,org.jivesoftware.smack.filter.PacketFilter) -> addPacketInterceptor
    void removePacketInterceptor(org.jivesoftware.smack.PacketInterceptor) -> removePacketInterceptor
    boolean isSendPresence() -> isSendPresence
    java.util.Map getPacketInterceptors() -> getPacketInterceptors
    void firePacketInterceptors(org.jivesoftware.smack.packet.Packet) -> firePacketInterceptors
    void initDebugger() -> initDebugger
    void setServiceCapsNode(java.lang.String) -> setServiceCapsNode
    java.lang.String getServiceCapsNode() -> getServiceCapsNode
org.jivesoftware.smack.Connection$InterceptorWrapper -> org.jivesoftware.smack.Connection$InterceptorWrapper:
    org.jivesoftware.smack.PacketInterceptor packetInterceptor -> packetInterceptor
    org.jivesoftware.smack.filter.PacketFilter packetFilter -> packetFilter
    boolean equals(java.lang.Object) -> equals
    void notifyListener(org.jivesoftware.smack.packet.Packet) -> notifyListener
org.jivesoftware.smack.Connection$ListenerWrapper -> org.jivesoftware.smack.Connection$ListenerWrapper:
    org.jivesoftware.smack.PacketListener packetListener -> packetListener
    org.jivesoftware.smack.filter.PacketFilter packetFilter -> packetFilter
    void notifyListener(org.jivesoftware.smack.packet.Packet) -> notifyListener
org.jivesoftware.smack.ConnectionConfiguration -> org.jivesoftware.smack.ConnectionConfiguration:
    java.lang.String serviceName -> serviceName
    java.lang.String host -> host
    int port -> port
    java.util.List hostAddresses -> hostAddresses
    java.lang.String truststorePath -> truststorePath
    java.lang.String truststoreType -> truststoreType
    java.lang.String truststorePassword -> truststorePassword
    java.lang.String keystorePath -> keystorePath
    java.lang.String keystoreType -> keystoreType
    java.lang.String pkcs11Library -> pkcs11Library
    boolean verifyChainEnabled -> verifyChainEnabled
    boolean verifyRootCAEnabled -> verifyRootCAEnabled
    boolean selfSignedCertificateEnabled -> selfSignedCertificateEnabled
    boolean expiredCertificatesCheckEnabled -> expiredCertificatesCheckEnabled
    boolean notMatchingDomainCheckEnabled -> notMatchingDomainCheckEnabled
    boolean isRosterVersioningAvailable -> isRosterVersioningAvailable
    javax.net.ssl.SSLContext customSSLContext -> customSSLContext
    boolean compressionEnabled -> compressionEnabled
    boolean saslAuthenticationEnabled -> saslAuthenticationEnabled
    org.apache.harmony.javax.security.auth.callback.CallbackHandler callbackHandler -> callbackHandler
    boolean debuggerEnabled -> debuggerEnabled
    boolean reconnectionAllowed -> reconnectionAllowed
    javax.net.SocketFactory socketFactory -> socketFactory
    java.lang.String username -> username
    java.lang.String password -> password
    java.lang.String resource -> resource
    boolean sendPresence -> sendPresence
    boolean rosterLoadedAtLogin -> rosterLoadedAtLogin
    org.jivesoftware.smack.ConnectionConfiguration$SecurityMode securityMode -> securityMode
    org.jivesoftware.smack.proxy.ProxyInfo proxy -> proxy
    void init(java.lang.String,org.jivesoftware.smack.proxy.ProxyInfo) -> init
    void setServiceName(java.lang.String) -> setServiceName
    java.lang.String getServiceName() -> getServiceName
    java.lang.String getHost() -> getHost
    int getPort() -> getPort
    void setUsedHostAddress(org.jivesoftware.smack.util.dns.HostAddress) -> setUsedHostAddress
    org.jivesoftware.smack.ConnectionConfiguration$SecurityMode getSecurityMode() -> getSecurityMode
    void setSecurityMode(org.jivesoftware.smack.ConnectionConfiguration$SecurityMode) -> setSecurityMode
    java.lang.String getTruststorePath() -> getTruststorePath
    void setTruststorePath(java.lang.String) -> setTruststorePath
    java.lang.String getTruststoreType() -> getTruststoreType
    void setTruststoreType(java.lang.String) -> setTruststoreType
    java.lang.String getTruststorePassword() -> getTruststorePassword
    void setTruststorePassword(java.lang.String) -> setTruststorePassword
    java.lang.String getKeystorePath() -> getKeystorePath
    void setKeystorePath(java.lang.String) -> setKeystorePath
    java.lang.String getKeystoreType() -> getKeystoreType
    void setKeystoreType(java.lang.String) -> setKeystoreType
    java.lang.String getPKCS11Library() -> getPKCS11Library
    void setPKCS11Library(java.lang.String) -> setPKCS11Library
    boolean isVerifyChainEnabled() -> isVerifyChainEnabled
    void setVerifyChainEnabled(boolean) -> setVerifyChainEnabled
    boolean isVerifyRootCAEnabled() -> isVerifyRootCAEnabled
    void setVerifyRootCAEnabled(boolean) -> setVerifyRootCAEnabled
    boolean isSelfSignedCertificateEnabled() -> isSelfSignedCertificateEnabled
    void setSelfSignedCertificateEnabled(boolean) -> setSelfSignedCertificateEnabled
    boolean isExpiredCertificatesCheckEnabled() -> isExpiredCertificatesCheckEnabled
    void setExpiredCertificatesCheckEnabled(boolean) -> setExpiredCertificatesCheckEnabled
    boolean isNotMatchingDomainCheckEnabled() -> isNotMatchingDomainCheckEnabled
    void setNotMatchingDomainCheckEnabled(boolean) -> setNotMatchingDomainCheckEnabled
    javax.net.ssl.SSLContext getCustomSSLContext() -> getCustomSSLContext
    void setCustomSSLContext(javax.net.ssl.SSLContext) -> setCustomSSLContext
    boolean isCompressionEnabled() -> isCompressionEnabled
    void setCompressionEnabled(boolean) -> setCompressionEnabled
    boolean isSASLAuthenticationEnabled() -> isSASLAuthenticationEnabled
    void setSASLAuthenticationEnabled(boolean) -> setSASLAuthenticationEnabled
    boolean isDebuggerEnabled() -> isDebuggerEnabled
    void setDebuggerEnabled(boolean) -> setDebuggerEnabled
    void setReconnectionAllowed(boolean) -> setReconnectionAllowed
    boolean isReconnectionAllowed() -> isReconnectionAllowed
    void setSocketFactory(javax.net.SocketFactory) -> setSocketFactory
    void setSendPresence(boolean) -> setSendPresence
    boolean isRosterLoadedAtLogin() -> isRosterLoadedAtLogin
    void setRosterLoadedAtLogin(boolean) -> setRosterLoadedAtLogin
    org.apache.harmony.javax.security.auth.callback.CallbackHandler getCallbackHandler() -> getCallbackHandler
    void setCallbackHandler(org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> setCallbackHandler
    javax.net.SocketFactory getSocketFactory() -> getSocketFactory
    java.util.List getHostAddresses() -> getHostAddresses
    void addHostAddress(java.lang.String,int) -> addHostAddress
    java.lang.String getUsername() -> getUsername
    java.lang.String getPassword() -> getPassword
    java.lang.String getResource() -> getResource
    boolean isRosterVersioningAvailable() -> isRosterVersioningAvailable
    void setRosterVersioningAvailable(boolean) -> setRosterVersioningAvailable
    boolean isSendPresence() -> isSendPresence
    void setLoginInfo(java.lang.String,java.lang.String,java.lang.String) -> setLoginInfo
    void initHostAddresses(java.lang.String,int) -> initHostAddresses
org.jivesoftware.smack.ConnectionConfiguration$SecurityMode -> org.jivesoftware.smack.ConnectionConfiguration$SecurityMode:
    org.jivesoftware.smack.ConnectionConfiguration$SecurityMode required -> required
    org.jivesoftware.smack.ConnectionConfiguration$SecurityMode enabled -> enabled
    org.jivesoftware.smack.ConnectionConfiguration$SecurityMode disabled -> disabled
    org.jivesoftware.smack.ConnectionConfiguration$SecurityMode[] $VALUES -> $VALUES
    org.jivesoftware.smack.ConnectionConfiguration$SecurityMode[] values() -> values
    org.jivesoftware.smack.ConnectionConfiguration$SecurityMode valueOf(java.lang.String) -> valueOf
org.jivesoftware.smack.ConnectionCreationListener -> org.jivesoftware.smack.ConnectionCreationListener:
    void connectionCreated(org.jivesoftware.smack.Connection) -> connectionCreated
org.jivesoftware.smack.ConnectionListener -> org.jivesoftware.smack.ConnectionListener:
    void connectionClosed() -> connectionClosed
    void connectionClosedOnError(java.lang.Exception) -> connectionClosedOnError
    void reconnectingIn(int) -> reconnectingIn
    void reconnectionSuccessful() -> reconnectionSuccessful
    void reconnectionFailed(java.lang.Exception) -> reconnectionFailed
org.jivesoftware.smack.MessageListener -> org.jivesoftware.smack.MessageListener:
    void processMessage(org.jivesoftware.smack.Chat,org.jivesoftware.smack.packet.Message) -> processMessage
org.jivesoftware.smack.NonSASLAuthentication -> org.jivesoftware.smack.NonSASLAuthentication:
    org.jivesoftware.smack.Connection connection -> connection
    java.lang.String authenticate(java.lang.String,java.lang.String,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> authenticate
    java.lang.String authenticate(java.lang.String,java.lang.String,java.lang.String) -> authenticate
    java.lang.String authenticateAnonymously() -> authenticateAnonymously
org.jivesoftware.smack.OpenTrustManager -> org.jivesoftware.smack.OpenTrustManager:
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
org.jivesoftware.smack.PacketCollector -> org.jivesoftware.smack.PacketCollector:
    org.jivesoftware.smack.filter.PacketFilter packetFilter -> packetFilter
    java.util.concurrent.ArrayBlockingQueue resultQueue -> resultQueue
    org.jivesoftware.smack.Connection connection -> connection
    boolean cancelled -> cancelled
    void cancel() -> cancel
    org.jivesoftware.smack.filter.PacketFilter getPacketFilter() -> getPacketFilter
    org.jivesoftware.smack.packet.Packet pollResult() -> pollResult
    org.jivesoftware.smack.packet.Packet nextResult() -> nextResult
    org.jivesoftware.smack.packet.Packet nextResult(long) -> nextResult
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smack.PacketInterceptor -> org.jivesoftware.smack.PacketInterceptor:
    void interceptPacket(org.jivesoftware.smack.packet.Packet) -> interceptPacket
org.jivesoftware.smack.PacketListener -> org.jivesoftware.smack.PacketListener:
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smack.PacketReader -> org.jivesoftware.smack.PacketReader:
    java.lang.Thread readerThread -> readerThread
    java.util.concurrent.ExecutorService listenerExecutor -> listenerExecutor
    org.jivesoftware.smack.XMPPConnection connection -> connection
    org.xmlpull.v1.XmlPullParser parser -> parser
    boolean done -> done
    java.lang.String connectionID -> connectionID
    boolean featuresAreParsed -> featuresAreParsed
    void init() -> init
    void startup() -> startup
    void shutdown() -> shutdown
    void resetParser() -> resetParser
    void parsePackets(java.lang.Thread) -> parsePackets
    void releaseConnectionIDLock() -> releaseConnectionIDLock
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
    void parseFeatures(org.xmlpull.v1.XmlPullParser) -> parseFeatures
    void access$000(org.jivesoftware.smack.PacketReader,java.lang.Thread) -> access$000
    org.jivesoftware.smack.XMPPConnection access$100(org.jivesoftware.smack.PacketReader) -> access$100
org.jivesoftware.smack.PacketReader$1 -> org.jivesoftware.smack.PacketReader$1:
    org.jivesoftware.smack.PacketReader this$0 -> this$0
    void run() -> run
org.jivesoftware.smack.PacketReader$2 -> org.jivesoftware.smack.PacketReader$2:
    org.jivesoftware.smack.PacketReader this$0 -> this$0
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
org.jivesoftware.smack.PacketReader$ListenerNotification -> org.jivesoftware.smack.PacketReader$ListenerNotification:
    org.jivesoftware.smack.packet.Packet packet -> packet
    org.jivesoftware.smack.PacketReader this$0 -> this$0
    void run() -> run
org.jivesoftware.smack.PacketWriter -> org.jivesoftware.smack.PacketWriter:
    java.lang.Thread writerThread -> writerThread
    java.lang.Thread keepAliveThread -> keepAliveThread
    java.io.Writer writer -> writer
    org.jivesoftware.smack.XMPPConnection connection -> connection
    java.util.concurrent.BlockingQueue queue -> queue
    boolean done -> done
    void init() -> init
    void sendPacket(org.jivesoftware.smack.packet.Packet) -> sendPacket
    void startup() -> startup
    void setWriter(java.io.Writer) -> setWriter
    void shutdown() -> shutdown
    org.jivesoftware.smack.packet.Packet nextPacket() -> nextPacket
    void writePackets(java.lang.Thread) -> writePackets
    void openStream() -> openStream
    void access$000(org.jivesoftware.smack.PacketWriter,java.lang.Thread) -> access$000
org.jivesoftware.smack.PacketWriter$1 -> org.jivesoftware.smack.PacketWriter$1:
    org.jivesoftware.smack.PacketWriter this$0 -> this$0
    void run() -> run
org.jivesoftware.smack.PrivacyList -> org.jivesoftware.smack.PrivacyList:
    boolean isActiveList -> isActiveList
    boolean isDefaultList -> isDefaultList
    java.lang.String listName -> listName
    java.util.List items -> items
    boolean isActiveList() -> isActiveList
    boolean isDefaultList() -> isDefaultList
    java.util.List getItems() -> getItems
    java.lang.String toString() -> toString
org.jivesoftware.smack.PrivacyListListener -> org.jivesoftware.smack.PrivacyListListener:
    void setPrivacyList(java.lang.String,java.util.List) -> setPrivacyList
    void updatedPrivacyList(java.lang.String) -> updatedPrivacyList
org.jivesoftware.smack.PrivacyListManager -> org.jivesoftware.smack.PrivacyListManager:
    java.util.Map instances -> instances
    java.lang.ref.WeakReference connection -> connection
    java.util.List listeners -> listeners
    org.jivesoftware.smack.filter.PacketFilter packetFilter -> packetFilter
    java.lang.String getUser() -> getUser
    org.jivesoftware.smack.PrivacyListManager getInstanceFor(org.jivesoftware.smack.Connection) -> getInstanceFor
    org.jivesoftware.smack.packet.Privacy getRequest(org.jivesoftware.smack.packet.Privacy) -> getRequest
    org.jivesoftware.smack.packet.Packet setRequest(org.jivesoftware.smack.packet.Privacy) -> setRequest
    org.jivesoftware.smack.packet.Privacy getPrivacyWithListNames() -> getPrivacyWithListNames
    org.jivesoftware.smack.PrivacyList getActiveList() -> getActiveList
    org.jivesoftware.smack.PrivacyList getDefaultList() -> getDefaultList
    java.util.List getPrivacyListItems(java.lang.String) -> getPrivacyListItems
    org.jivesoftware.smack.PrivacyList getPrivacyList(java.lang.String) -> getPrivacyList
    org.jivesoftware.smack.PrivacyList[] getPrivacyLists() -> getPrivacyLists
    void setActiveListName(java.lang.String) -> setActiveListName
    void declineActiveList() -> declineActiveList
    void setDefaultListName(java.lang.String) -> setDefaultListName
    void declineDefaultList() -> declineDefaultList
    void createPrivacyList(java.lang.String,java.util.List) -> createPrivacyList
    void updatePrivacyList(java.lang.String,java.util.List) -> updatePrivacyList
    void deletePrivacyList(java.lang.String) -> deletePrivacyList
    void addListener(org.jivesoftware.smack.PrivacyListListener) -> addListener
    java.util.List access$000(org.jivesoftware.smack.PrivacyListManager) -> access$000
org.jivesoftware.smack.PrivacyListManager$1 -> org.jivesoftware.smack.PrivacyListManager$1:
    void connectionCreated(org.jivesoftware.smack.Connection) -> connectionCreated
org.jivesoftware.smack.PrivacyListManager$2 -> org.jivesoftware.smack.PrivacyListManager$2:
    org.jivesoftware.smack.Connection val$connection -> val$connection
    org.jivesoftware.smack.PrivacyListManager this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smack.PrivacyListManager$2$1 -> org.jivesoftware.smack.PrivacyListManager$2$1:
    org.jivesoftware.smack.PrivacyListManager$2 this$1 -> this$1
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smack.ReconnectionManager -> org.jivesoftware.smack.ReconnectionManager:
    java.lang.String TAG -> TAG
    org.jivesoftware.smack.Connection connection -> connection
    org.jivesoftware.smack.ReconnectionManager$ReconnectionThread reconnectionThread -> reconnectionThread
    int randomBase -> randomBase
    boolean done -> done
    boolean isReconnectionAllowed() -> isReconnectionAllowed
    void reconnect() -> reconnect
    void notifyReconnectionFailed(java.lang.Exception) -> notifyReconnectionFailed
    void notifyAttemptToReconnectIn(int) -> notifyAttemptToReconnectIn
    void connectionClosed() -> connectionClosed
    void connectionClosedOnError(java.lang.Exception) -> connectionClosedOnError
    void reconnectingIn(int) -> reconnectingIn
    void reconnectionFailed(java.lang.Exception) -> reconnectionFailed
    void reconnectionSuccessful() -> reconnectionSuccessful
    boolean isDone() -> isDone
    int access$100(org.jivesoftware.smack.ReconnectionManager) -> access$100
    org.jivesoftware.smack.Connection access$200(org.jivesoftware.smack.ReconnectionManager) -> access$200
org.jivesoftware.smack.ReconnectionManager$1 -> org.jivesoftware.smack.ReconnectionManager$1:
    void connectionCreated(org.jivesoftware.smack.Connection) -> connectionCreated
org.jivesoftware.smack.ReconnectionManager$ReconnectionThread -> org.jivesoftware.smack.ReconnectionManager$ReconnectionThread:
    int attempts -> attempts
    org.jivesoftware.smack.ReconnectionManager this$0 -> this$0
    void resetAttempts() -> resetAttempts
    int timeDelay() -> timeDelay
    void run() -> run
org.jivesoftware.smack.Roster -> org.jivesoftware.smack.Roster:
    org.jivesoftware.smack.Roster$SubscriptionMode defaultSubscriptionMode -> defaultSubscriptionMode
    org.jivesoftware.smack.RosterStorage persistentStorage -> persistentStorage
    org.jivesoftware.smack.Connection connection -> connection
    java.util.Map groups -> groups
    java.util.Map entries -> entries
    java.util.List unfiledEntries -> unfiledEntries
    java.util.List rosterListeners -> rosterListeners
    java.util.Map presenceMap -> presenceMap
    boolean rosterInitialized -> rosterInitialized
    org.jivesoftware.smack.Roster$PresencePacketListener presencePacketListener -> presencePacketListener
    org.jivesoftware.smack.Roster$SubscriptionMode subscriptionMode -> subscriptionMode
    java.lang.String requestPacketId -> requestPacketId
    org.jivesoftware.smack.Roster$SubscriptionMode getDefaultSubscriptionMode() -> getDefaultSubscriptionMode
    void setDefaultSubscriptionMode(org.jivesoftware.smack.Roster$SubscriptionMode) -> setDefaultSubscriptionMode
    org.jivesoftware.smack.Roster$SubscriptionMode getSubscriptionMode() -> getSubscriptionMode
    void setSubscriptionMode(org.jivesoftware.smack.Roster$SubscriptionMode) -> setSubscriptionMode
    void reload() -> reload
    void addRosterListener(org.jivesoftware.smack.RosterListener) -> addRosterListener
    void removeRosterListener(org.jivesoftware.smack.RosterListener) -> removeRosterListener
    org.jivesoftware.smack.RosterGroup createGroup(java.lang.String) -> createGroup
    void createEntry(java.lang.String,java.lang.String,java.lang.String[]) -> createEntry
    void insertRosterItems(java.util.List) -> insertRosterItems
    void insertRosterItem(org.jivesoftware.smack.packet.RosterPacket$Item,java.util.Collection,java.util.Collection,java.util.Collection) -> insertRosterItem
    void removeEntry(org.jivesoftware.smack.RosterEntry) -> removeEntry
    int getEntryCount() -> getEntryCount
    java.util.Collection getEntries() -> getEntries
    int getUnfiledEntryCount() -> getUnfiledEntryCount
    java.util.Collection getUnfiledEntries() -> getUnfiledEntries
    org.jivesoftware.smack.RosterEntry getEntry(java.lang.String) -> getEntry
    boolean contains(java.lang.String) -> contains
    org.jivesoftware.smack.RosterGroup getGroup(java.lang.String) -> getGroup
    int getGroupCount() -> getGroupCount
    java.util.Collection getGroups() -> getGroups
    org.jivesoftware.smack.packet.Presence getPresence(java.lang.String) -> getPresence
    org.jivesoftware.smack.packet.Presence getPresenceResource(java.lang.String) -> getPresenceResource
    java.util.Iterator getPresences(java.lang.String) -> getPresences
    java.lang.String getPresenceMapKey(java.lang.String) -> getPresenceMapKey
    void setOfflinePresences() -> setOfflinePresences
    void fireRosterChangedEvent(java.util.Collection,java.util.Collection,java.util.Collection) -> fireRosterChangedEvent
    void fireRosterPresenceEvent(org.jivesoftware.smack.packet.Presence) -> fireRosterPresenceEvent
    java.lang.String access$0(org.jivesoftware.smack.Roster,java.lang.String) -> access$0
    java.util.Map access$1(org.jivesoftware.smack.Roster) -> access$1
    java.util.Map access$2(org.jivesoftware.smack.Roster) -> access$2
    void access$3(org.jivesoftware.smack.Roster,org.jivesoftware.smack.packet.Presence) -> access$3
    org.jivesoftware.smack.Roster$SubscriptionMode access$4(org.jivesoftware.smack.Roster) -> access$4
    org.jivesoftware.smack.Connection access$5(org.jivesoftware.smack.Roster) -> access$5
    org.jivesoftware.smack.RosterStorage access$6(org.jivesoftware.smack.Roster) -> access$6
    void access$7(org.jivesoftware.smack.Roster,org.jivesoftware.smack.packet.RosterPacket$Item,java.util.Collection,java.util.Collection,java.util.Collection) -> access$7
    void access$8(org.jivesoftware.smack.Roster,java.util.Collection,java.util.Collection,java.util.Collection) -> access$8
    void access$9(org.jivesoftware.smack.Roster,org.jivesoftware.smack.RosterStorage) -> access$9
    void access$10(org.jivesoftware.smack.Roster) -> access$10
org.jivesoftware.smack.Roster$1 -> org.jivesoftware.smack.Roster$1:
    org.jivesoftware.smack.Roster this$0 -> this$0
    void connectionClosed() -> connectionClosed
    void connectionClosedOnError(java.lang.Exception) -> connectionClosedOnError
org.jivesoftware.smack.Roster$2 -> org.jivesoftware.smack.Roster$2:
    org.jivesoftware.smack.Roster this$0 -> this$0
    org.jivesoftware.smack.ConnectionListener val$connectionListener -> val$connectionListener
    void connectionCreated(org.jivesoftware.smack.Connection) -> connectionCreated
org.jivesoftware.smack.Roster$PresencePacketListener -> org.jivesoftware.smack.Roster$PresencePacketListener:
    org.jivesoftware.smack.Roster this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smack.Roster$RosterPacketListener -> org.jivesoftware.smack.Roster$RosterPacketListener:
    org.jivesoftware.smack.Roster this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smack.Roster$RosterResultListener -> org.jivesoftware.smack.Roster$RosterResultListener:
    org.jivesoftware.smack.Roster this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smack.Roster$SubscriptionMode -> org.jivesoftware.smack.Roster$SubscriptionMode:
    org.jivesoftware.smack.Roster$SubscriptionMode accept_all -> accept_all
    org.jivesoftware.smack.Roster$SubscriptionMode reject_all -> reject_all
    org.jivesoftware.smack.Roster$SubscriptionMode manual -> manual
    org.jivesoftware.smack.Roster$SubscriptionMode[] ENUM$VALUES -> ENUM$VALUES
    org.jivesoftware.smack.Roster$SubscriptionMode[] values() -> values
    org.jivesoftware.smack.Roster$SubscriptionMode valueOf(java.lang.String) -> valueOf
org.jivesoftware.smack.RosterEntry -> org.jivesoftware.smack.RosterEntry:
    java.lang.String user -> user
    java.lang.String name -> name
    org.jivesoftware.smack.packet.RosterPacket$ItemType type -> type
    org.jivesoftware.smack.packet.RosterPacket$ItemStatus status -> status
    org.jivesoftware.smack.Roster roster -> roster
    org.jivesoftware.smack.Connection connection -> connection
    java.lang.String getUser() -> getUser
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    void updateState(java.lang.String,org.jivesoftware.smack.packet.RosterPacket$ItemType,org.jivesoftware.smack.packet.RosterPacket$ItemStatus) -> updateState
    java.util.Collection getGroups() -> getGroups
    org.jivesoftware.smack.packet.RosterPacket$ItemType getType() -> getType
    org.jivesoftware.smack.packet.RosterPacket$ItemStatus getStatus() -> getStatus
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean equalsDeep(java.lang.Object) -> equalsDeep
    org.jivesoftware.smack.packet.RosterPacket$Item toRosterItem(org.jivesoftware.smack.RosterEntry) -> toRosterItem
org.jivesoftware.smack.RosterGroup -> org.jivesoftware.smack.RosterGroup:
    java.lang.String name -> name
    org.jivesoftware.smack.Connection connection -> connection
    java.util.List entries -> entries
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    int getEntryCount() -> getEntryCount
    java.util.Collection getEntries() -> getEntries
    org.jivesoftware.smack.RosterEntry getEntry(java.lang.String) -> getEntry
    boolean contains(org.jivesoftware.smack.RosterEntry) -> contains
    boolean contains(java.lang.String) -> contains
    void addEntry(org.jivesoftware.smack.RosterEntry) -> addEntry
    void removeEntry(org.jivesoftware.smack.RosterEntry) -> removeEntry
    void addEntryLocal(org.jivesoftware.smack.RosterEntry) -> addEntryLocal
    void removeEntryLocal(org.jivesoftware.smack.RosterEntry) -> removeEntryLocal
org.jivesoftware.smack.RosterListener -> org.jivesoftware.smack.RosterListener:
    void entriesAdded(java.util.Collection) -> entriesAdded
    void entriesUpdated(java.util.Collection) -> entriesUpdated
    void entriesDeleted(java.util.Collection) -> entriesDeleted
    void presenceChanged(org.jivesoftware.smack.packet.Presence) -> presenceChanged
org.jivesoftware.smack.RosterStorage -> org.jivesoftware.smack.RosterStorage:
    java.util.List getEntries() -> getEntries
    org.jivesoftware.smack.packet.RosterPacket$Item getEntry(java.lang.String) -> getEntry
    int getEntryCount() -> getEntryCount
    java.lang.String getRosterVersion() -> getRosterVersion
    void addEntry(org.jivesoftware.smack.packet.RosterPacket$Item,java.lang.String) -> addEntry
    void removeEntry(java.lang.String,java.lang.String) -> removeEntry
    void updateLocalEntry(org.jivesoftware.smack.packet.RosterPacket$Item) -> updateLocalEntry
org.jivesoftware.smack.SASLAuthentication -> org.jivesoftware.smack.SASLAuthentication:
    long PACKET_TIMER_OUT_TIME -> PACKET_TIMER_OUT_TIME
    java.util.Map implementedMechanisms -> implementedMechanisms
    java.util.List mechanismsPreferences -> mechanismsPreferences
    org.jivesoftware.smack.Connection connection -> connection
    java.util.Collection serverMechanisms -> serverMechanisms
    org.jivesoftware.smack.sasl.SASLMechanism currentMechanism -> currentMechanism
    boolean saslNegotiated -> saslNegotiated
    boolean saslFailed -> saslFailed
    boolean resourceBinded -> resourceBinded
    boolean sessionSupported -> sessionSupported
    java.lang.String errorCondition -> errorCondition
    void registerSASLMechanism(java.lang.String,java.lang.Class) -> registerSASLMechanism
    void unregisterSASLMechanism(java.lang.String) -> unregisterSASLMechanism
    void supportSASLMechanism(java.lang.String) -> supportSASLMechanism
    void supportSASLMechanism(java.lang.String,int) -> supportSASLMechanism
    void unsupportSASLMechanism(java.lang.String) -> unsupportSASLMechanism
    java.util.List getRegisterSASLMechanisms() -> getRegisterSASLMechanisms
    boolean hasAnonymousAuthentication() -> hasAnonymousAuthentication
    boolean hasNonAnonymousAuthentication() -> hasNonAnonymousAuthentication
    java.lang.String authenticate(java.lang.String,java.lang.String,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> authenticate
    void throwExceptionIfConnectionDisconnected() -> throwExceptionIfConnectionDisconnected
    java.lang.String authenticate(java.lang.String,java.lang.String,java.lang.String) -> authenticate
    java.lang.String authenticateAnonymously() -> authenticateAnonymously
    java.lang.String bindResourceAndEstablishSession(java.lang.String) -> bindResourceAndEstablishSession
    void setAvailableSASLMethods(java.util.Collection) -> setAvailableSASLMethods
    boolean isAuthenticated() -> isAuthenticated
    void challengeReceived(java.lang.String) -> challengeReceived
    void authenticated() -> authenticated
    void authenticationFailed() -> authenticationFailed
    void authenticationFailed(java.lang.String) -> authenticationFailed
    void bindingRequired() -> bindingRequired
    void send(org.jivesoftware.smack.packet.Packet) -> send
    void sessionsSupported() -> sessionsSupported
    void init() -> init
org.jivesoftware.smack.ServerTrustManager -> org.jivesoftware.smack.ServerTrustManager:
    java.util.regex.Pattern cnPattern -> cnPattern
    org.jivesoftware.smack.ConnectionConfiguration configuration -> configuration
    java.lang.String server -> server
    java.security.KeyStore trustStore -> trustStore
    java.util.Map stores -> stores
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.util.List getPeerIdentity(java.security.cert.X509Certificate) -> getPeerIdentity
    java.util.List getSubjectAlternativeNames(java.security.cert.X509Certificate) -> getSubjectAlternativeNames
org.jivesoftware.smack.ServerTrustManager$KeyStoreOptions -> org.jivesoftware.smack.ServerTrustManager$KeyStoreOptions:
    java.lang.String type -> type
    java.lang.String path -> path
    java.lang.String password -> password
    java.lang.String getType() -> getType
    java.lang.String getPath() -> getPath
    java.lang.String getPassword() -> getPassword
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
org.jivesoftware.smack.SmackAndroid -> org.jivesoftware.smack.SmackAndroid:
    org.jivesoftware.smack.SmackAndroid sSmackAndroid -> sSmackAndroid
    android.content.BroadcastReceiver mConnectivityChangedReceiver -> mConnectivityChangedReceiver
    android.content.Context mCtx -> mCtx
    org.jivesoftware.smack.SmackAndroid init(android.content.Context) -> init
    void onDestroy() -> onDestroy
    void maybeRegisterReceiver() -> maybeRegisterReceiver
org.jivesoftware.smack.SmackAndroid$ConnectivtyChangedReceiver -> org.jivesoftware.smack.SmackAndroid$ConnectivtyChangedReceiver:
    org.jivesoftware.smack.SmackAndroid this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
org.jivesoftware.smack.SmackConfiguration -> org.jivesoftware.smack.SmackConfiguration:
    java.lang.String SMACK_VERSION -> SMACK_VERSION
    int packetReplyTimeout -> packetReplyTimeout
    java.util.Vector defaultMechs -> defaultMechs
    boolean localSocks5ProxyEnabled -> localSocks5ProxyEnabled
    int localSocks5ProxyPort -> localSocks5ProxyPort
    int packetCollectorSize -> packetCollectorSize
    int defaultPingInterval -> defaultPingInterval
    org.jivesoftware.smack.parsing.ParsingExceptionCallback defaultCallback -> defaultCallback
    boolean autoEnableEntityCaps -> autoEnableEntityCaps
    java.lang.String getVersion() -> getVersion
    int getPacketReplyTimeout() -> getPacketReplyTimeout
    void setPacketReplyTimeout(int) -> setPacketReplyTimeout
    int getPacketCollectorSize() -> getPacketCollectorSize
    void setPacketCollectorSize(int) -> setPacketCollectorSize
    void addSaslMech(java.lang.String) -> addSaslMech
    void addSaslMechs(java.util.Collection) -> addSaslMechs
    void removeSaslMech(java.lang.String) -> removeSaslMech
    void removeSaslMechs(java.util.Collection) -> removeSaslMechs
    java.util.List getSaslMechs() -> getSaslMechs
    boolean isLocalSocks5ProxyEnabled() -> isLocalSocks5ProxyEnabled
    void setLocalSocks5ProxyEnabled(boolean) -> setLocalSocks5ProxyEnabled
    int getLocalSocks5ProxyPort() -> getLocalSocks5ProxyPort
    void setLocalSocks5ProxyPort(int) -> setLocalSocks5ProxyPort
    int getDefaultPingInterval() -> getDefaultPingInterval
    void setDefaultPingInterval(int) -> setDefaultPingInterval
    boolean autoEnableEntityCaps() -> autoEnableEntityCaps
    void setAutoEnableEntityCaps(boolean) -> setAutoEnableEntityCaps
    void setDefaultParsingExceptionCallback(org.jivesoftware.smack.parsing.ParsingExceptionCallback) -> setDefaultParsingExceptionCallback
    org.jivesoftware.smack.parsing.ParsingExceptionCallback getDefaultParsingExceptionCallback() -> getDefaultParsingExceptionCallback
    void parseClassToLoad(org.xmlpull.v1.XmlPullParser) -> parseClassToLoad
    int parseIntProperty(org.xmlpull.v1.XmlPullParser,int) -> parseIntProperty
    java.lang.ClassLoader[] getClassLoaders() -> getClassLoaders
org.jivesoftware.smack.UserAuthentication -> org.jivesoftware.smack.UserAuthentication:
    java.lang.String authenticate(java.lang.String,java.lang.String,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> authenticate
    java.lang.String authenticate(java.lang.String,java.lang.String,java.lang.String) -> authenticate
    java.lang.String authenticateAnonymously() -> authenticateAnonymously
org.jivesoftware.smack.XMPPConnection -> org.jivesoftware.smack.XMPPConnection:
    java.lang.String TAG -> TAG
    java.net.Socket socket -> socket
    java.lang.String connectionID -> connectionID
    java.lang.String user -> user
    boolean connected -> connected
    boolean socketClosed -> socketClosed
    boolean authenticated -> authenticated
    boolean wasAuthenticated -> wasAuthenticated
    boolean anonymous -> anonymous
    boolean usingTLS -> usingTLS
    org.jivesoftware.smack.parsing.ParsingExceptionCallback parsingExceptionCallback -> parsingExceptionCallback
    org.jivesoftware.smack.PacketWriter packetWriter -> packetWriter
    org.jivesoftware.smack.PacketReader packetReader -> packetReader
    org.jivesoftware.smack.Roster roster -> roster
    java.util.Collection compressionMethods -> compressionMethods
    boolean serverAckdCompression -> serverAckdCompression
    java.lang.Object mutex -> mutex
    java.lang.String getConnectionID() -> getConnectionID
    java.lang.String getUser() -> getUser
    void setParsingExceptionCallback(org.jivesoftware.smack.parsing.ParsingExceptionCallback) -> setParsingExceptionCallback
    org.jivesoftware.smack.parsing.ParsingExceptionCallback getParsingExceptionCallback() -> getParsingExceptionCallback
    void login(java.lang.String,java.lang.String,java.lang.String) -> login
    void loginAnonymously() -> loginAnonymously
    org.jivesoftware.smack.Roster getRosterWithoutLoad() -> getRosterWithoutLoad
    org.jivesoftware.smack.Roster getRoster() -> getRoster
    boolean isConnected() -> isConnected
    boolean isSecureConnection() -> isSecureConnection
    boolean isSocketClosed() -> isSocketClosed
    boolean isAuthenticated() -> isAuthenticated
    boolean isAnonymous() -> isAnonymous
    void release() -> release
    void shutdown(org.jivesoftware.smack.packet.Presence) -> shutdown
    void disconnect(org.jivesoftware.smack.packet.Presence) -> disconnect
    void sendPacket(org.jivesoftware.smack.packet.Packet) -> sendPacket
    void addPacketWriterInterceptor(org.jivesoftware.smack.PacketInterceptor,org.jivesoftware.smack.filter.PacketFilter) -> addPacketWriterInterceptor
    void removePacketWriterInterceptor(org.jivesoftware.smack.PacketInterceptor) -> removePacketWriterInterceptor
    void addPacketWriterListener(org.jivesoftware.smack.PacketListener,org.jivesoftware.smack.filter.PacketFilter) -> addPacketWriterListener
    void removePacketWriterListener(org.jivesoftware.smack.PacketListener) -> removePacketWriterListener
    void connectUsingConfiguration(org.jivesoftware.smack.ConnectionConfiguration) -> connectUsingConfiguration
    void initConnection() -> initConnection
    void initReaderAndWriter() -> initReaderAndWriter
    boolean isUsingTLS() -> isUsingTLS
    void startTLSReceived(boolean) -> startTLSReceived
    void proceedTLSReceived() -> proceedTLSReceived
    void setAvailableCompressionMethods(java.util.Collection) -> setAvailableCompressionMethods
    org.jivesoftware.smack.compression.XMPPInputOutputStream maybeGetCompressionHandler() -> maybeGetCompressionHandler
    boolean isUsingCompression() -> isUsingCompression
    boolean useCompression() -> useCompression
    void requestStreamCompression(java.lang.String) -> requestStreamCompression
    void startStreamCompression() -> startStreamCompression
    void streamCompressionDenied() -> streamCompressionDenied
    void connect() -> connect
    void setWasAuthenticated(boolean) -> setWasAuthenticated
    void setRosterStorage(org.jivesoftware.smack.RosterStorage) -> setRosterStorage
    void notifyConnectionError(java.lang.Exception) -> notifyConnectionError
    void notifyReconnection() -> notifyReconnection
    java.lang.String getIP() -> getIP
    void cancelAllWaiting() -> cancelAllWaiting
org.jivesoftware.smack.XMPPException -> org.jivesoftware.smack.XMPPException:
    org.jivesoftware.smack.packet.StreamError streamError -> streamError
    org.jivesoftware.smack.packet.XMPPError error -> error
    java.lang.Throwable wrappedThrowable -> wrappedThrowable
    org.jivesoftware.smack.packet.XMPPError getXMPPError() -> getXMPPError
    org.jivesoftware.smack.packet.StreamError getStreamError() -> getStreamError
    java.lang.Throwable getWrappedThrowable() -> getWrappedThrowable
    void printStackTrace() -> printStackTrace
    void printStackTrace(java.io.PrintStream) -> printStackTrace
    void printStackTrace(java.io.PrintWriter) -> printStackTrace
    java.lang.String getMessage() -> getMessage
    java.lang.String toString() -> toString
org.jivesoftware.smack.compression.Java7ZlibInputOutputStream -> org.jivesoftware.smack.compression.Java7ZlibInputOutputStream:
    java.lang.reflect.Method method -> method
    boolean supported -> supported
    int compressionLevel -> compressionLevel
    boolean isSupported() -> isSupported
    java.io.InputStream getInputStream(java.io.InputStream) -> getInputStream
    java.io.OutputStream getOutputStream(java.io.OutputStream) -> getOutputStream
    boolean access$000() -> access$000
    java.lang.reflect.Method access$100() -> access$100
org.jivesoftware.smack.compression.Java7ZlibInputOutputStream$1 -> org.jivesoftware.smack.compression.Java7ZlibInputOutputStream$1:
    org.jivesoftware.smack.compression.Java7ZlibInputOutputStream this$0 -> this$0
    int available() -> available
org.jivesoftware.smack.compression.Java7ZlibInputOutputStream$2 -> org.jivesoftware.smack.compression.Java7ZlibInputOutputStream$2:
    org.jivesoftware.smack.compression.Java7ZlibInputOutputStream this$0 -> this$0
    void flush() -> flush
org.jivesoftware.smack.compression.JzlibInputOutputStream -> org.jivesoftware.smack.compression.JzlibInputOutputStream:
    java.lang.Class zoClass -> zoClass
    java.lang.Class ziClass -> ziClass
    boolean isSupported() -> isSupported
    java.io.InputStream getInputStream(java.io.InputStream) -> getInputStream
    java.io.OutputStream getOutputStream(java.io.OutputStream) -> getOutputStream
org.jivesoftware.smack.compression.XMPPInputOutputStream -> org.jivesoftware.smack.compression.XMPPInputOutputStream:
    java.lang.String compressionMethod -> compressionMethod
    java.lang.String getCompressionMethod() -> getCompressionMethod
    boolean isSupported() -> isSupported
    java.io.InputStream getInputStream(java.io.InputStream) -> getInputStream
    java.io.OutputStream getOutputStream(java.io.OutputStream) -> getOutputStream
org.jivesoftware.smack.debugger.ConsoleDebugger -> org.jivesoftware.smack.debugger.ConsoleDebugger:
    boolean printInterpreted -> printInterpreted
    java.text.SimpleDateFormat dateFormatter -> dateFormatter
    org.jivesoftware.smack.Connection connection -> connection
    org.jivesoftware.smack.PacketListener listener -> listener
    org.jivesoftware.smack.ConnectionListener connListener -> connListener
    java.io.Writer writer -> writer
    java.io.Reader reader -> reader
    org.jivesoftware.smack.util.ReaderListener readerListener -> readerListener
    org.jivesoftware.smack.util.WriterListener writerListener -> writerListener
    void createDebug() -> createDebug
    java.io.Reader newConnectionReader(java.io.Reader) -> newConnectionReader
    java.io.Writer newConnectionWriter(java.io.Writer) -> newConnectionWriter
    void userHasLogged(java.lang.String) -> userHasLogged
    java.io.Reader getReader() -> getReader
    java.io.Writer getWriter() -> getWriter
    org.jivesoftware.smack.PacketListener getReaderListener() -> getReaderListener
    org.jivesoftware.smack.PacketListener getWriterListener() -> getWriterListener
    java.text.SimpleDateFormat access$000(org.jivesoftware.smack.debugger.ConsoleDebugger) -> access$000
    org.jivesoftware.smack.Connection access$100(org.jivesoftware.smack.debugger.ConsoleDebugger) -> access$100
org.jivesoftware.smack.debugger.ConsoleDebugger$1 -> org.jivesoftware.smack.debugger.ConsoleDebugger$1:
    org.jivesoftware.smack.debugger.ConsoleDebugger this$0 -> this$0
    void read(java.lang.String) -> read
org.jivesoftware.smack.debugger.ConsoleDebugger$2 -> org.jivesoftware.smack.debugger.ConsoleDebugger$2:
    org.jivesoftware.smack.debugger.ConsoleDebugger this$0 -> this$0
    void write(java.lang.String) -> write
org.jivesoftware.smack.debugger.ConsoleDebugger$3 -> org.jivesoftware.smack.debugger.ConsoleDebugger$3:
    org.jivesoftware.smack.debugger.ConsoleDebugger this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smack.debugger.ConsoleDebugger$4 -> org.jivesoftware.smack.debugger.ConsoleDebugger$4:
    org.jivesoftware.smack.debugger.ConsoleDebugger this$0 -> this$0
    void connectionClosed() -> connectionClosed
    void connectionClosedOnError(java.lang.Exception) -> connectionClosedOnError
    void reconnectionFailed(java.lang.Exception) -> reconnectionFailed
    void reconnectionSuccessful() -> reconnectionSuccessful
    void reconnectingIn(int) -> reconnectingIn
org.jivesoftware.smack.debugger.FileDebugger -> org.jivesoftware.smack.debugger.FileDebugger:
    boolean printInterpreted -> printInterpreted
    java.text.SimpleDateFormat dateFormatter -> dateFormatter
    org.jivesoftware.smack.Connection connection -> connection
    org.jivesoftware.smack.PacketListener listener -> listener
    org.jivesoftware.smack.ConnectionListener connListener -> connListener
    java.io.Writer writer -> writer
    java.io.Reader reader -> reader
    org.jivesoftware.smack.util.ReaderListener readerListener -> readerListener
    org.jivesoftware.smack.util.WriterListener writerListener -> writerListener
    java.lang.String TAG -> TAG
    void createDebug() -> createDebug
    java.io.Reader newConnectionReader(java.io.Reader) -> newConnectionReader
    java.io.Writer newConnectionWriter(java.io.Writer) -> newConnectionWriter
    void userHasLogged(java.lang.String) -> userHasLogged
    java.io.Reader getReader() -> getReader
    java.io.Writer getWriter() -> getWriter
    org.jivesoftware.smack.PacketListener getReaderListener() -> getReaderListener
    org.jivesoftware.smack.PacketListener getWriterListener() -> getWriterListener
    org.jivesoftware.smack.Connection access$000(org.jivesoftware.smack.debugger.FileDebugger) -> access$000
org.jivesoftware.smack.debugger.FileDebugger$1 -> org.jivesoftware.smack.debugger.FileDebugger$1:
    org.jivesoftware.smack.debugger.FileDebugger this$0 -> this$0
    void read(java.lang.String) -> read
org.jivesoftware.smack.debugger.FileDebugger$2 -> org.jivesoftware.smack.debugger.FileDebugger$2:
    org.jivesoftware.smack.debugger.FileDebugger this$0 -> this$0
    void write(java.lang.String) -> write
org.jivesoftware.smack.debugger.FileDebugger$3 -> org.jivesoftware.smack.debugger.FileDebugger$3:
    org.jivesoftware.smack.debugger.FileDebugger this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smack.debugger.FileDebugger$4 -> org.jivesoftware.smack.debugger.FileDebugger$4:
    org.jivesoftware.smack.debugger.FileDebugger this$0 -> this$0
    void connectionClosed() -> connectionClosed
    void connectionClosedOnError(java.lang.Exception) -> connectionClosedOnError
    void reconnectionFailed(java.lang.Exception) -> reconnectionFailed
    void reconnectionSuccessful() -> reconnectionSuccessful
    void reconnectingIn(int) -> reconnectingIn
org.jivesoftware.smack.debugger.SmackDebugger -> org.jivesoftware.smack.debugger.SmackDebugger:
    void userHasLogged(java.lang.String) -> userHasLogged
    java.io.Reader getReader() -> getReader
    java.io.Writer getWriter() -> getWriter
    java.io.Reader newConnectionReader(java.io.Reader) -> newConnectionReader
    java.io.Writer newConnectionWriter(java.io.Writer) -> newConnectionWriter
    org.jivesoftware.smack.PacketListener getReaderListener() -> getReaderListener
    org.jivesoftware.smack.PacketListener getWriterListener() -> getWriterListener
org.jivesoftware.smack.filter.AndFilter -> org.jivesoftware.smack.filter.AndFilter:
    java.util.List filters -> filters
    void addFilter(org.jivesoftware.smack.filter.PacketFilter) -> addFilter
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
    java.lang.String toString() -> toString
org.jivesoftware.smack.filter.FromContainsFilter -> org.jivesoftware.smack.filter.FromContainsFilter:
    java.lang.String from -> from
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
org.jivesoftware.smack.filter.FromMatchesFilter -> org.jivesoftware.smack.filter.FromMatchesFilter:
    java.lang.String address -> address
    boolean matchBareJID -> matchBareJID
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
    java.lang.String toString() -> toString
org.jivesoftware.smack.filter.IQTypeFilter -> org.jivesoftware.smack.filter.IQTypeFilter:
    org.jivesoftware.smack.packet.IQ$Type type -> type
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
org.jivesoftware.smack.filter.MessageTypeFilter -> org.jivesoftware.smack.filter.MessageTypeFilter:
    org.jivesoftware.smack.packet.Message$Type type -> type
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
org.jivesoftware.smack.filter.NotFilter -> org.jivesoftware.smack.filter.NotFilter:
    org.jivesoftware.smack.filter.PacketFilter filter -> filter
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
org.jivesoftware.smack.filter.OrFilter -> org.jivesoftware.smack.filter.OrFilter:
    int size -> size
    org.jivesoftware.smack.filter.PacketFilter[] filters -> filters
    void addFilter(org.jivesoftware.smack.filter.PacketFilter) -> addFilter
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
    java.lang.String toString() -> toString
org.jivesoftware.smack.filter.PacketExtensionFilter -> org.jivesoftware.smack.filter.PacketExtensionFilter:
    java.lang.String elementName -> elementName
    java.lang.String namespace -> namespace
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
org.jivesoftware.smack.filter.PacketFilter -> org.jivesoftware.smack.filter.PacketFilter:
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
org.jivesoftware.smack.filter.PacketIDFilter -> org.jivesoftware.smack.filter.PacketIDFilter:
    java.lang.String packetID -> packetID
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
    java.lang.String toString() -> toString
org.jivesoftware.smack.filter.PacketTypeFilter -> org.jivesoftware.smack.filter.PacketTypeFilter:
    java.lang.Class packetType -> packetType
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
    java.lang.String toString() -> toString
org.jivesoftware.smack.filter.ThreadFilter -> org.jivesoftware.smack.filter.ThreadFilter:
    java.lang.String thread -> thread
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
org.jivesoftware.smack.filter.ToContainsFilter -> org.jivesoftware.smack.filter.ToContainsFilter:
    java.lang.String to -> to
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
org.jivesoftware.smack.packet.Authentication -> org.jivesoftware.smack.packet.Authentication:
    java.lang.String username -> username
    java.lang.String password -> password
    java.lang.String digest -> digest
    java.lang.String resource -> resource
    java.lang.String getUsername() -> getUsername
    void setUsername(java.lang.String) -> setUsername
    java.lang.String getPassword() -> getPassword
    void setPassword(java.lang.String) -> setPassword
    java.lang.String getDigest() -> getDigest
    void setDigest(java.lang.String,java.lang.String) -> setDigest
    void setDigest(java.lang.String) -> setDigest
    java.lang.String getResource() -> getResource
    void setResource(java.lang.String) -> setResource
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smack.packet.Bind -> org.jivesoftware.smack.packet.Bind:
    java.lang.String resource -> resource
    java.lang.String jid -> jid
    java.lang.String getResource() -> getResource
    void setResource(java.lang.String) -> setResource
    java.lang.String getJid() -> getJid
    void setJid(java.lang.String) -> setJid
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smack.packet.DefaultPacketExtension -> org.jivesoftware.smack.packet.DefaultPacketExtension:
    java.lang.String elementName -> elementName
    java.lang.String namespace -> namespace
    java.util.Map map -> map
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
    java.util.Collection getNames() -> getNames
    java.lang.String getValue(java.lang.String) -> getValue
    void setValue(java.lang.String,java.lang.String) -> setValue
org.jivesoftware.smack.packet.IQ -> org.jivesoftware.smack.packet.IQ:
    org.jivesoftware.smack.packet.IQ$Type type -> type
    org.jivesoftware.smack.packet.IQ$Type getType() -> getType
    void setType(org.jivesoftware.smack.packet.IQ$Type) -> setType
    java.lang.String toXML() -> toXML
    java.lang.String getChildElementXML() -> getChildElementXML
    org.jivesoftware.smack.packet.IQ createResultIQ(org.jivesoftware.smack.packet.IQ) -> createResultIQ
    org.jivesoftware.smack.packet.IQ createErrorResponse(org.jivesoftware.smack.packet.IQ,org.jivesoftware.smack.packet.XMPPError) -> createErrorResponse
org.jivesoftware.smack.packet.IQ$1 -> org.jivesoftware.smack.packet.IQ$1:
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smack.packet.IQ$2 -> org.jivesoftware.smack.packet.IQ$2:
    org.jivesoftware.smack.packet.IQ val$request -> val$request
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smack.packet.IQ$Type -> org.jivesoftware.smack.packet.IQ$Type:
    org.jivesoftware.smack.packet.IQ$Type GET -> GET
    org.jivesoftware.smack.packet.IQ$Type SET -> SET
    org.jivesoftware.smack.packet.IQ$Type RESULT -> RESULT
    org.jivesoftware.smack.packet.IQ$Type ERROR -> ERROR
    java.lang.String value -> value
    org.jivesoftware.smack.packet.IQ$Type fromString(java.lang.String) -> fromString
    java.lang.String toString() -> toString
org.jivesoftware.smack.packet.Message -> org.jivesoftware.smack.packet.Message:
    org.jivesoftware.smack.packet.Message$Type type -> type
    java.lang.String thread -> thread
    java.lang.String language -> language
    java.util.Set subjects -> subjects
    java.util.Set bodies -> bodies
    org.jivesoftware.smack.packet.Message$Type getType() -> getType
    void setType(org.jivesoftware.smack.packet.Message$Type) -> setType
    java.lang.String getSubject() -> getSubject
    java.lang.String getSubject(java.lang.String) -> getSubject
    org.jivesoftware.smack.packet.Message$Subject getMessageSubject(java.lang.String) -> getMessageSubject
    java.util.Collection getSubjects() -> getSubjects
    void setSubject(java.lang.String) -> setSubject
    org.jivesoftware.smack.packet.Message$Subject addSubject(java.lang.String,java.lang.String) -> addSubject
    boolean removeSubject(java.lang.String) -> removeSubject
    boolean removeSubject(org.jivesoftware.smack.packet.Message$Subject) -> removeSubject
    java.util.Collection getSubjectLanguages() -> getSubjectLanguages
    java.lang.String getBody() -> getBody
    java.lang.String getBody(java.lang.String) -> getBody
    org.jivesoftware.smack.packet.Message$Body getMessageBody(java.lang.String) -> getMessageBody
    java.util.Collection getBodies() -> getBodies
    void setBody(java.lang.String) -> setBody
    org.jivesoftware.smack.packet.Message$Body addBody(java.lang.String,java.lang.String) -> addBody
    boolean removeBody(java.lang.String) -> removeBody
    boolean removeBody(org.jivesoftware.smack.packet.Message$Body) -> removeBody
    java.util.Collection getBodyLanguages() -> getBodyLanguages
    java.lang.String getThread() -> getThread
    void setThread(java.lang.String) -> setThread
    java.lang.String getLanguage() -> getLanguage
    void setLanguage(java.lang.String) -> setLanguage
    java.lang.String determineLanguage(java.lang.String) -> determineLanguage
    java.lang.String toXML() -> toXML
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.jivesoftware.smack.packet.Message$1 -> org.jivesoftware.smack.packet.Message$1:
org.jivesoftware.smack.packet.Message$Body -> org.jivesoftware.smack.packet.Message$Body:
    java.lang.String message -> message
    java.lang.String language -> language
    java.lang.String getLanguage() -> getLanguage
    java.lang.String getMessage() -> getMessage
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String access$300(org.jivesoftware.smack.packet.Message$Body) -> access$300
    java.lang.String access$400(org.jivesoftware.smack.packet.Message$Body) -> access$400
org.jivesoftware.smack.packet.Message$Subject -> org.jivesoftware.smack.packet.Message$Subject:
    java.lang.String subject -> subject
    java.lang.String language -> language
    java.lang.String getLanguage() -> getLanguage
    java.lang.String getSubject() -> getSubject
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String access$000(org.jivesoftware.smack.packet.Message$Subject) -> access$000
    java.lang.String access$100(org.jivesoftware.smack.packet.Message$Subject) -> access$100
org.jivesoftware.smack.packet.Message$Type -> org.jivesoftware.smack.packet.Message$Type:
    org.jivesoftware.smack.packet.Message$Type normal -> normal
    org.jivesoftware.smack.packet.Message$Type chat -> chat
    org.jivesoftware.smack.packet.Message$Type groupchat -> groupchat
    org.jivesoftware.smack.packet.Message$Type headline -> headline
    org.jivesoftware.smack.packet.Message$Type error -> error
    org.jivesoftware.smack.packet.Message$Type[] $VALUES -> $VALUES
    org.jivesoftware.smack.packet.Message$Type[] values() -> values
    org.jivesoftware.smack.packet.Message$Type valueOf(java.lang.String) -> valueOf
    org.jivesoftware.smack.packet.Message$Type fromString(java.lang.String) -> fromString
org.jivesoftware.smack.packet.Packet -> org.jivesoftware.smack.packet.Packet:
    java.lang.String DEFAULT_LANGUAGE -> DEFAULT_LANGUAGE
    java.lang.String DEFAULT_XML_NS -> DEFAULT_XML_NS
    java.lang.String ID_NOT_AVAILABLE -> ID_NOT_AVAILABLE
    java.text.DateFormat XEP_0082_UTC_FORMAT -> XEP_0082_UTC_FORMAT
    java.lang.String prefix -> prefix
    long id -> id
    java.lang.String xmlns -> xmlns
    java.lang.String packetID -> packetID
    java.lang.String to -> to
    java.lang.String from -> from
    java.util.List packetExtensions -> packetExtensions
    java.util.Map properties -> properties
    org.jivesoftware.smack.packet.XMPPError error -> error
    java.lang.String nextID() -> nextID
    void setDefaultXmlns(java.lang.String) -> setDefaultXmlns
    java.lang.String getPacketID() -> getPacketID
    void setPacketID(java.lang.String) -> setPacketID
    java.lang.String getTo() -> getTo
    void setTo(java.lang.String) -> setTo
    java.lang.String getFrom() -> getFrom
    void setFrom(java.lang.String) -> setFrom
    org.jivesoftware.smack.packet.XMPPError getError() -> getError
    void setError(org.jivesoftware.smack.packet.XMPPError) -> setError
    java.util.Collection getExtensions() -> getExtensions
    org.jivesoftware.smack.packet.PacketExtension getExtension(java.lang.String) -> getExtension
    org.jivesoftware.smack.packet.PacketExtension getExtension(java.lang.String,java.lang.String) -> getExtension
    void addExtension(org.jivesoftware.smack.packet.PacketExtension) -> addExtension
    void addExtensions(java.util.Collection) -> addExtensions
    void removeExtension(org.jivesoftware.smack.packet.PacketExtension) -> removeExtension
    java.lang.Object getProperty(java.lang.String) -> getProperty
    void setProperty(java.lang.String,java.lang.Object) -> setProperty
    void deleteProperty(java.lang.String) -> deleteProperty
    java.util.Collection getPropertyNames() -> getPropertyNames
    java.lang.String toXML() -> toXML
    java.lang.String getExtensionsXML() -> getExtensionsXML
    java.lang.String getXmlns() -> getXmlns
    java.lang.String getDefaultLanguage() -> getDefaultLanguage
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.jivesoftware.smack.packet.PacketExtension -> org.jivesoftware.smack.packet.PacketExtension:
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smack.packet.Presence -> org.jivesoftware.smack.packet.Presence:
    org.jivesoftware.smack.packet.Presence$Type type -> type
    java.lang.String status -> status
    int priority -> priority
    org.jivesoftware.smack.packet.Presence$Mode mode -> mode
    java.lang.String language -> language
    boolean isAvailable() -> isAvailable
    boolean isAway() -> isAway
    org.jivesoftware.smack.packet.Presence$Type getType() -> getType
    void setType(org.jivesoftware.smack.packet.Presence$Type) -> setType
    java.lang.String getStatus() -> getStatus
    void setStatus(java.lang.String) -> setStatus
    int getPriority() -> getPriority
    void setPriority(int) -> setPriority
    org.jivesoftware.smack.packet.Presence$Mode getMode() -> getMode
    void setMode(org.jivesoftware.smack.packet.Presence$Mode) -> setMode
    java.lang.String getLanguage() -> getLanguage
    void setLanguage(java.lang.String) -> setLanguage
    java.lang.String toXML() -> toXML
    java.lang.String toString() -> toString
org.jivesoftware.smack.packet.Presence$Mode -> org.jivesoftware.smack.packet.Presence$Mode:
    org.jivesoftware.smack.packet.Presence$Mode chat -> chat
    org.jivesoftware.smack.packet.Presence$Mode available -> available
    org.jivesoftware.smack.packet.Presence$Mode away -> away
    org.jivesoftware.smack.packet.Presence$Mode xa -> xa
    org.jivesoftware.smack.packet.Presence$Mode dnd -> dnd
    org.jivesoftware.smack.packet.Presence$Mode[] $VALUES -> $VALUES
    org.jivesoftware.smack.packet.Presence$Mode[] values() -> values
    org.jivesoftware.smack.packet.Presence$Mode valueOf(java.lang.String) -> valueOf
org.jivesoftware.smack.packet.Presence$Type -> org.jivesoftware.smack.packet.Presence$Type:
    org.jivesoftware.smack.packet.Presence$Type available -> available
    org.jivesoftware.smack.packet.Presence$Type unavailable -> unavailable
    org.jivesoftware.smack.packet.Presence$Type subscribe -> subscribe
    org.jivesoftware.smack.packet.Presence$Type subscribed -> subscribed
    org.jivesoftware.smack.packet.Presence$Type unsubscribe -> unsubscribe
    org.jivesoftware.smack.packet.Presence$Type unsubscribed -> unsubscribed
    org.jivesoftware.smack.packet.Presence$Type error -> error
    org.jivesoftware.smack.packet.Presence$Type[] $VALUES -> $VALUES
    org.jivesoftware.smack.packet.Presence$Type[] values() -> values
    org.jivesoftware.smack.packet.Presence$Type valueOf(java.lang.String) -> valueOf
org.jivesoftware.smack.packet.Privacy -> org.jivesoftware.smack.packet.Privacy:
    boolean declineActiveList -> declineActiveList
    java.lang.String activeName -> activeName
    boolean declineDefaultList -> declineDefaultList
    java.lang.String defaultName -> defaultName
    java.util.Map itemLists -> itemLists
    java.util.List setPrivacyList(java.lang.String,java.util.List) -> setPrivacyList
    java.util.List setActivePrivacyList() -> setActivePrivacyList
    void deletePrivacyList(java.lang.String) -> deletePrivacyList
    java.util.List getActivePrivacyList() -> getActivePrivacyList
    java.util.List getDefaultPrivacyList() -> getDefaultPrivacyList
    java.util.List getPrivacyList(java.lang.String) -> getPrivacyList
    org.jivesoftware.smack.packet.PrivacyItem getItem(java.lang.String,int) -> getItem
    boolean changeDefaultList(java.lang.String) -> changeDefaultList
    void deleteList(java.lang.String) -> deleteList
    java.lang.String getActiveName() -> getActiveName
    void setActiveName(java.lang.String) -> setActiveName
    java.lang.String getDefaultName() -> getDefaultName
    void setDefaultName(java.lang.String) -> setDefaultName
    java.util.Map getItemLists() -> getItemLists
    boolean isDeclineActiveList() -> isDeclineActiveList
    void setDeclineActiveList(boolean) -> setDeclineActiveList
    boolean isDeclineDefaultList() -> isDeclineDefaultList
    void setDeclineDefaultList(boolean) -> setDeclineDefaultList
    java.util.Set getPrivacyListNames() -> getPrivacyListNames
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smack.packet.PrivacyItem -> org.jivesoftware.smack.packet.PrivacyItem:
    boolean allow -> allow
    int order -> order
    org.jivesoftware.smack.packet.PrivacyItem$PrivacyRule rule -> rule
    boolean filterIQ -> filterIQ
    boolean filterMessage -> filterMessage
    boolean filterPresence_in -> filterPresence_in
    boolean filterPresence_out -> filterPresence_out
    boolean isAllow() -> isAllow
    void setAllow(boolean) -> setAllow
    boolean isFilterIQ() -> isFilterIQ
    void setFilterIQ(boolean) -> setFilterIQ
    boolean isFilterMessage() -> isFilterMessage
    void setFilterMessage(boolean) -> setFilterMessage
    boolean isFilterPresence_in() -> isFilterPresence_in
    void setFilterPresence_in(boolean) -> setFilterPresence_in
    boolean isFilterPresence_out() -> isFilterPresence_out
    void setFilterPresence_out(boolean) -> setFilterPresence_out
    int getOrder() -> getOrder
    void setOrder(int) -> setOrder
    void setValue(java.lang.String) -> setValue
    org.jivesoftware.smack.packet.PrivacyItem$Type getType() -> getType
    java.lang.String getValue() -> getValue
    boolean isFilterEverything() -> isFilterEverything
    org.jivesoftware.smack.packet.PrivacyItem$PrivacyRule getRule() -> getRule
    void setRule(org.jivesoftware.smack.packet.PrivacyItem$PrivacyRule) -> setRule
    java.lang.String toXML() -> toXML
org.jivesoftware.smack.packet.PrivacyItem$PrivacyRule -> org.jivesoftware.smack.packet.PrivacyItem$PrivacyRule:
    org.jivesoftware.smack.packet.PrivacyItem$Type type -> type
    java.lang.String value -> value
    java.lang.String SUBSCRIPTION_BOTH -> SUBSCRIPTION_BOTH
    java.lang.String SUBSCRIPTION_TO -> SUBSCRIPTION_TO
    java.lang.String SUBSCRIPTION_FROM -> SUBSCRIPTION_FROM
    java.lang.String SUBSCRIPTION_NONE -> SUBSCRIPTION_NONE
    org.jivesoftware.smack.packet.PrivacyItem$PrivacyRule fromString(java.lang.String) -> fromString
    org.jivesoftware.smack.packet.PrivacyItem$Type getType() -> getType
    void setType(org.jivesoftware.smack.packet.PrivacyItem$Type) -> setType
    java.lang.String getValue() -> getValue
    void setValue(java.lang.String) -> setValue
    void setSuscriptionValue(java.lang.String) -> setSuscriptionValue
    boolean isSuscription() -> isSuscription
org.jivesoftware.smack.packet.PrivacyItem$Type -> org.jivesoftware.smack.packet.PrivacyItem$Type:
    org.jivesoftware.smack.packet.PrivacyItem$Type group -> group
    org.jivesoftware.smack.packet.PrivacyItem$Type jid -> jid
    org.jivesoftware.smack.packet.PrivacyItem$Type subscription -> subscription
    org.jivesoftware.smack.packet.PrivacyItem$Type[] $VALUES -> $VALUES
    org.jivesoftware.smack.packet.PrivacyItem$Type[] values() -> values
    org.jivesoftware.smack.packet.PrivacyItem$Type valueOf(java.lang.String) -> valueOf
org.jivesoftware.smack.packet.Registration -> org.jivesoftware.smack.packet.Registration:
    java.lang.String instructions -> instructions
    java.util.Map attributes -> attributes
    java.util.List requiredFields -> requiredFields
    boolean registered -> registered
    boolean remove -> remove
    java.lang.String getInstructions() -> getInstructions
    void setInstructions(java.lang.String) -> setInstructions
    java.util.Map getAttributes() -> getAttributes
    void setAttributes(java.util.Map) -> setAttributes
    java.util.List getRequiredFields() -> getRequiredFields
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    void setRegistered(boolean) -> setRegistered
    boolean isRegistered() -> isRegistered
    java.lang.String getField(java.lang.String) -> getField
    java.util.List getFieldNames() -> getFieldNames
    void setUsername(java.lang.String) -> setUsername
    void setPassword(java.lang.String) -> setPassword
    void setRemove(boolean) -> setRemove
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smack.packet.RosterPacket -> org.jivesoftware.smack.packet.RosterPacket:
    java.util.List rosterItems -> rosterItems
    java.lang.String version -> version
    void addRosterItem(org.jivesoftware.smack.packet.RosterPacket$Item) -> addRosterItem
    java.lang.String getVersion() -> getVersion
    void setVersion(java.lang.String) -> setVersion
    int getRosterItemCount() -> getRosterItemCount
    java.util.Collection getRosterItems() -> getRosterItems
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smack.packet.RosterPacket$Item -> org.jivesoftware.smack.packet.RosterPacket$Item:
    java.lang.String user -> user
    java.lang.String name -> name
    org.jivesoftware.smack.packet.RosterPacket$ItemType itemType -> itemType
    org.jivesoftware.smack.packet.RosterPacket$ItemStatus itemStatus -> itemStatus
    java.util.Set groupNames -> groupNames
    java.lang.String getUser() -> getUser
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    org.jivesoftware.smack.packet.RosterPacket$ItemType getItemType() -> getItemType
    void setItemType(org.jivesoftware.smack.packet.RosterPacket$ItemType) -> setItemType
    org.jivesoftware.smack.packet.RosterPacket$ItemStatus getItemStatus() -> getItemStatus
    void setItemStatus(org.jivesoftware.smack.packet.RosterPacket$ItemStatus) -> setItemStatus
    java.util.Set getGroupNames() -> getGroupNames
    void addGroupName(java.lang.String) -> addGroupName
    void removeGroupName(java.lang.String) -> removeGroupName
    java.lang.String toXML() -> toXML
org.jivesoftware.smack.packet.RosterPacket$ItemStatus -> org.jivesoftware.smack.packet.RosterPacket$ItemStatus:
    org.jivesoftware.smack.packet.RosterPacket$ItemStatus SUBSCRIPTION_PENDING -> SUBSCRIPTION_PENDING
    org.jivesoftware.smack.packet.RosterPacket$ItemStatus UNSUBSCRIPTION_PENDING -> UNSUBSCRIPTION_PENDING
    java.lang.String value -> value
    org.jivesoftware.smack.packet.RosterPacket$ItemStatus fromString(java.lang.String) -> fromString
    java.lang.String toString() -> toString
org.jivesoftware.smack.packet.RosterPacket$ItemType -> org.jivesoftware.smack.packet.RosterPacket$ItemType:
    org.jivesoftware.smack.packet.RosterPacket$ItemType none -> none
    org.jivesoftware.smack.packet.RosterPacket$ItemType to -> to
    org.jivesoftware.smack.packet.RosterPacket$ItemType from -> from
    org.jivesoftware.smack.packet.RosterPacket$ItemType both -> both
    org.jivesoftware.smack.packet.RosterPacket$ItemType remove -> remove
    org.jivesoftware.smack.packet.RosterPacket$ItemType[] $VALUES -> $VALUES
    org.jivesoftware.smack.packet.RosterPacket$ItemType[] values() -> values
    org.jivesoftware.smack.packet.RosterPacket$ItemType valueOf(java.lang.String) -> valueOf
org.jivesoftware.smack.packet.Session -> org.jivesoftware.smack.packet.Session:
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smack.packet.StreamError -> org.jivesoftware.smack.packet.StreamError:
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String code -> code
    java.lang.String text -> text
    java.lang.String getCode() -> getCode
    java.lang.String getText() -> getText
    java.lang.String toString() -> toString
org.jivesoftware.smack.packet.XMPPError -> org.jivesoftware.smack.packet.XMPPError:
    int code -> code
    org.jivesoftware.smack.packet.XMPPError$Type type -> type
    java.lang.String condition -> condition
    java.lang.String message -> message
    java.util.List applicationExtensions -> applicationExtensions
    void init(org.jivesoftware.smack.packet.XMPPError$Condition) -> init
    java.lang.String getCondition() -> getCondition
    org.jivesoftware.smack.packet.XMPPError$Type getType() -> getType
    int getCode() -> getCode
    java.lang.String getMessage() -> getMessage
    java.lang.String toXML() -> toXML
    java.lang.String toString() -> toString
    java.util.List getExtensions() -> getExtensions
    org.jivesoftware.smack.packet.PacketExtension getExtension(java.lang.String,java.lang.String) -> getExtension
    void addExtension(org.jivesoftware.smack.packet.PacketExtension) -> addExtension
    void setExtension(java.util.List) -> setExtension
org.jivesoftware.smack.packet.XMPPError$Condition -> org.jivesoftware.smack.packet.XMPPError$Condition:
    org.jivesoftware.smack.packet.XMPPError$Condition interna_server_error -> interna_server_error
    org.jivesoftware.smack.packet.XMPPError$Condition forbidden -> forbidden
    org.jivesoftware.smack.packet.XMPPError$Condition bad_request -> bad_request
    org.jivesoftware.smack.packet.XMPPError$Condition conflict -> conflict
    org.jivesoftware.smack.packet.XMPPError$Condition feature_not_implemented -> feature_not_implemented
    org.jivesoftware.smack.packet.XMPPError$Condition gone -> gone
    org.jivesoftware.smack.packet.XMPPError$Condition item_not_found -> item_not_found
    org.jivesoftware.smack.packet.XMPPError$Condition jid_malformed -> jid_malformed
    org.jivesoftware.smack.packet.XMPPError$Condition no_acceptable -> no_acceptable
    org.jivesoftware.smack.packet.XMPPError$Condition not_allowed -> not_allowed
    org.jivesoftware.smack.packet.XMPPError$Condition not_authorized -> not_authorized
    org.jivesoftware.smack.packet.XMPPError$Condition payment_required -> payment_required
    org.jivesoftware.smack.packet.XMPPError$Condition recipient_unavailable -> recipient_unavailable
    org.jivesoftware.smack.packet.XMPPError$Condition redirect -> redirect
    org.jivesoftware.smack.packet.XMPPError$Condition registration_required -> registration_required
    org.jivesoftware.smack.packet.XMPPError$Condition remote_server_error -> remote_server_error
    org.jivesoftware.smack.packet.XMPPError$Condition remote_server_not_found -> remote_server_not_found
    org.jivesoftware.smack.packet.XMPPError$Condition remote_server_timeout -> remote_server_timeout
    org.jivesoftware.smack.packet.XMPPError$Condition resource_constraint -> resource_constraint
    org.jivesoftware.smack.packet.XMPPError$Condition service_unavailable -> service_unavailable
    org.jivesoftware.smack.packet.XMPPError$Condition subscription_required -> subscription_required
    org.jivesoftware.smack.packet.XMPPError$Condition undefined_condition -> undefined_condition
    org.jivesoftware.smack.packet.XMPPError$Condition unexpected_request -> unexpected_request
    org.jivesoftware.smack.packet.XMPPError$Condition request_timeout -> request_timeout
    java.lang.String value -> value
    java.lang.String toString() -> toString
    java.lang.String access$000(org.jivesoftware.smack.packet.XMPPError$Condition) -> access$000
org.jivesoftware.smack.packet.XMPPError$ErrorSpecification -> org.jivesoftware.smack.packet.XMPPError$ErrorSpecification:
    int code -> code
    org.jivesoftware.smack.packet.XMPPError$Type type -> type
    org.jivesoftware.smack.packet.XMPPError$Condition condition -> condition
    java.util.Map instances -> instances
    java.util.Map errorSpecifications() -> errorSpecifications
    org.jivesoftware.smack.packet.XMPPError$ErrorSpecification specFor(org.jivesoftware.smack.packet.XMPPError$Condition) -> specFor
    org.jivesoftware.smack.packet.XMPPError$Condition getCondition() -> getCondition
    org.jivesoftware.smack.packet.XMPPError$Type getType() -> getType
    int getCode() -> getCode
org.jivesoftware.smack.packet.XMPPError$Type -> org.jivesoftware.smack.packet.XMPPError$Type:
    org.jivesoftware.smack.packet.XMPPError$Type WAIT -> WAIT
    org.jivesoftware.smack.packet.XMPPError$Type CANCEL -> CANCEL
    org.jivesoftware.smack.packet.XMPPError$Type MODIFY -> MODIFY
    org.jivesoftware.smack.packet.XMPPError$Type AUTH -> AUTH
    org.jivesoftware.smack.packet.XMPPError$Type CONTINUE -> CONTINUE
    org.jivesoftware.smack.packet.XMPPError$Type[] $VALUES -> $VALUES
    org.jivesoftware.smack.packet.XMPPError$Type[] values() -> values
    org.jivesoftware.smack.packet.XMPPError$Type valueOf(java.lang.String) -> valueOf
org.jivesoftware.smack.parsing.ExceptionLoggingCallback -> org.jivesoftware.smack.parsing.ExceptionLoggingCallback:
    void handleUnparsablePacket(org.jivesoftware.smack.parsing.UnparsablePacket) -> handleUnparsablePacket
org.jivesoftware.smack.parsing.ExceptionThrowingCallback -> org.jivesoftware.smack.parsing.ExceptionThrowingCallback:
    void handleUnparsablePacket(org.jivesoftware.smack.parsing.UnparsablePacket) -> handleUnparsablePacket
org.jivesoftware.smack.parsing.ParsingExceptionCallback -> org.jivesoftware.smack.parsing.ParsingExceptionCallback:
    void handleUnparsablePacket(org.jivesoftware.smack.parsing.UnparsablePacket) -> handleUnparsablePacket
org.jivesoftware.smack.parsing.UnparsablePacket -> org.jivesoftware.smack.parsing.UnparsablePacket:
    java.lang.String content -> content
    java.lang.Exception e -> e
    java.lang.Exception getParsingException() -> getParsingException
    java.lang.String getContent() -> getContent
org.jivesoftware.smack.provider.EmbeddedExtensionProvider -> org.jivesoftware.smack.provider.EmbeddedExtensionProvider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
    org.jivesoftware.smack.packet.PacketExtension createReturnExtension(java.lang.String,java.lang.String,java.util.Map,java.util.List) -> createReturnExtension
org.jivesoftware.smack.provider.IQProvider -> org.jivesoftware.smack.provider.IQProvider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
org.jivesoftware.smack.provider.PacketExtensionProvider -> org.jivesoftware.smack.provider.PacketExtensionProvider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smack.provider.PrivacyProvider -> org.jivesoftware.smack.provider.PrivacyProvider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
    void parseList(org.xmlpull.v1.XmlPullParser,org.jivesoftware.smack.packet.Privacy) -> parseList
    org.jivesoftware.smack.packet.PrivacyItem parseItem(org.xmlpull.v1.XmlPullParser) -> parseItem
org.jivesoftware.smack.provider.ProviderManager -> org.jivesoftware.smack.provider.ProviderManager:
    org.jivesoftware.smack.provider.ProviderManager instance -> instance
    java.util.Map extensionProviders -> extensionProviders
    java.util.Map iqProviders -> iqProviders
    org.jivesoftware.smack.provider.ProviderManager getInstance() -> getInstance
    void setInstance(org.jivesoftware.smack.provider.ProviderManager) -> setInstance
    void initialize() -> initialize
    java.lang.Object getIQProvider(java.lang.String,java.lang.String) -> getIQProvider
    java.util.Collection getIQProviders() -> getIQProviders
    void addIQProvider(java.lang.String,java.lang.String,java.lang.Object) -> addIQProvider
    void removeIQProvider(java.lang.String,java.lang.String) -> removeIQProvider
    java.lang.Object getExtensionProvider(java.lang.String,java.lang.String) -> getExtensionProvider
    void addExtensionProvider(java.lang.String,java.lang.String,java.lang.Object) -> addExtensionProvider
    void removeExtensionProvider(java.lang.String,java.lang.String) -> removeExtensionProvider
    java.util.Collection getExtensionProviders() -> getExtensionProviders
    java.lang.String getProviderKey(java.lang.String,java.lang.String) -> getProviderKey
    java.lang.ClassLoader[] getClassLoaders() -> getClassLoaders
org.jivesoftware.smack.proxy.DirectSocketFactory -> org.jivesoftware.smack.proxy.DirectSocketFactory:
    int roundrobin -> roundrobin
    java.net.Socket createSocket(java.lang.String,int) -> createSocket
    java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int) -> createSocket
org.jivesoftware.smack.proxy.HTTPProxySocketFactory -> org.jivesoftware.smack.proxy.HTTPProxySocketFactory:
    org.jivesoftware.smack.proxy.ProxyInfo proxy -> proxy
    java.util.regex.Pattern RESPONSE_PATTERN -> RESPONSE_PATTERN
    java.net.Socket createSocket(java.lang.String,int) -> createSocket
    java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int) -> createSocket
    java.net.Socket httpProxifiedSocket(java.lang.String,int) -> httpProxifiedSocket
org.jivesoftware.smack.proxy.ProxyException -> org.jivesoftware.smack.proxy.ProxyException:
org.jivesoftware.smack.proxy.ProxyInfo -> org.jivesoftware.smack.proxy.ProxyInfo:
    java.lang.String proxyAddress -> proxyAddress
    int proxyPort -> proxyPort
    java.lang.String proxyUsername -> proxyUsername
    java.lang.String proxyPassword -> proxyPassword
    org.jivesoftware.smack.proxy.ProxyInfo$ProxyType proxyType -> proxyType
    org.jivesoftware.smack.proxy.ProxyInfo forHttpProxy(java.lang.String,int,java.lang.String,java.lang.String) -> forHttpProxy
    org.jivesoftware.smack.proxy.ProxyInfo forSocks4Proxy(java.lang.String,int,java.lang.String,java.lang.String) -> forSocks4Proxy
    org.jivesoftware.smack.proxy.ProxyInfo forSocks5Proxy(java.lang.String,int,java.lang.String,java.lang.String) -> forSocks5Proxy
    org.jivesoftware.smack.proxy.ProxyInfo forNoProxy() -> forNoProxy
    org.jivesoftware.smack.proxy.ProxyInfo forDefaultProxy() -> forDefaultProxy
    org.jivesoftware.smack.proxy.ProxyInfo$ProxyType getProxyType() -> getProxyType
    java.lang.String getProxyAddress() -> getProxyAddress
    int getProxyPort() -> getProxyPort
    java.lang.String getProxyUsername() -> getProxyUsername
    java.lang.String getProxyPassword() -> getProxyPassword
    javax.net.SocketFactory getSocketFactory() -> getSocketFactory
org.jivesoftware.smack.proxy.ProxyInfo$ProxyType -> org.jivesoftware.smack.proxy.ProxyInfo$ProxyType:
    org.jivesoftware.smack.proxy.ProxyInfo$ProxyType NONE -> NONE
    org.jivesoftware.smack.proxy.ProxyInfo$ProxyType HTTP -> HTTP
    org.jivesoftware.smack.proxy.ProxyInfo$ProxyType SOCKS4 -> SOCKS4
    org.jivesoftware.smack.proxy.ProxyInfo$ProxyType SOCKS5 -> SOCKS5
    org.jivesoftware.smack.proxy.ProxyInfo$ProxyType[] $VALUES -> $VALUES
    org.jivesoftware.smack.proxy.ProxyInfo$ProxyType[] values() -> values
    org.jivesoftware.smack.proxy.ProxyInfo$ProxyType valueOf(java.lang.String) -> valueOf
org.jivesoftware.smack.proxy.Socks4ProxySocketFactory -> org.jivesoftware.smack.proxy.Socks4ProxySocketFactory:
    org.jivesoftware.smack.proxy.ProxyInfo proxy -> proxy
    java.net.Socket createSocket(java.lang.String,int) -> createSocket
    java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int) -> createSocket
    java.net.Socket socks4ProxifiedSocket(java.lang.String,int) -> socks4ProxifiedSocket
org.jivesoftware.smack.proxy.Socks5ProxySocketFactory -> org.jivesoftware.smack.proxy.Socks5ProxySocketFactory:
    org.jivesoftware.smack.proxy.ProxyInfo proxy -> proxy
    java.net.Socket createSocket(java.lang.String,int) -> createSocket
    java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int) -> createSocket
    java.net.Socket socks5ProxifiedSocket(java.lang.String,int) -> socks5ProxifiedSocket
    void fill(java.io.InputStream,byte[],int) -> fill
org.jivesoftware.smack.sasl.SASLAnonymous -> org.jivesoftware.smack.sasl.SASLAnonymous:
    java.lang.String getName() -> getName
    void authenticate(java.lang.String,java.lang.String,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> authenticate
    void authenticate(java.lang.String,java.lang.String,java.lang.String) -> authenticate
    void authenticate() -> authenticate
    void challengeReceived(java.lang.String) -> challengeReceived
org.jivesoftware.smack.sasl.SASLCramMD5Mechanism -> org.jivesoftware.smack.sasl.SASLCramMD5Mechanism:
    java.lang.String getName() -> getName
org.jivesoftware.smack.sasl.SASLDigestMD5Mechanism -> org.jivesoftware.smack.sasl.SASLDigestMD5Mechanism:
    java.lang.String getName() -> getName
org.jivesoftware.smack.sasl.SASLExternalMechanism -> org.jivesoftware.smack.sasl.SASLExternalMechanism:
    java.lang.String getName() -> getName
org.jivesoftware.smack.sasl.SASLFacebookConnect -> org.jivesoftware.smack.sasl.SASLFacebookConnect:
    java.lang.String sessionKey -> sessionKey
    java.lang.String sessionSecret -> sessionSecret
    java.lang.String apiKey -> apiKey
    void authenticate() -> authenticate
    void authenticate(java.lang.String,java.lang.String,java.lang.String) -> authenticate
    void authenticate(java.lang.String,java.lang.String,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> authenticate
    java.lang.String getName() -> getName
    void challengeReceived(java.lang.String) -> challengeReceived
    java.util.Map getQueryMap(java.lang.String) -> getQueryMap
    java.lang.String convertToHex(byte[]) -> convertToHex
    java.lang.String MD5(java.lang.String) -> MD5
org.jivesoftware.smack.sasl.SASLFacebookConnect$1 -> org.jivesoftware.smack.sasl.SASLFacebookConnect$1:
    java.lang.StringBuilder val$stanza -> val$stanza
    org.jivesoftware.smack.sasl.SASLFacebookConnect this$0 -> this$0
    java.lang.String toXML() -> toXML
org.jivesoftware.smack.sasl.SASLFacebookConnect$2 -> org.jivesoftware.smack.sasl.SASLFacebookConnect$2:
    java.lang.StringBuilder val$stanza -> val$stanza
    org.jivesoftware.smack.sasl.SASLFacebookConnect this$0 -> this$0
    java.lang.String toXML() -> toXML
org.jivesoftware.smack.sasl.SASLGSSAPIMechanism -> org.jivesoftware.smack.sasl.SASLGSSAPIMechanism:
    java.lang.String getName() -> getName
    void authenticate(java.lang.String,java.lang.String,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> authenticate
    void authenticate(java.lang.String,java.lang.String,java.lang.String) -> authenticate
org.jivesoftware.smack.sasl.SASLMechanism -> org.jivesoftware.smack.sasl.SASLMechanism:
    org.jivesoftware.smack.SASLAuthentication saslAuthentication -> saslAuthentication
    org.apache.harmony.javax.security.sasl.SaslClient sc -> sc
    java.lang.String authenticationId -> authenticationId
    java.lang.String password -> password
    java.lang.String hostname -> hostname
    void authenticate(java.lang.String,java.lang.String,java.lang.String) -> authenticate
    void authenticate(java.lang.String,java.lang.String,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> authenticate
    void authenticate() -> authenticate
    void challengeReceived(java.lang.String) -> challengeReceived
    java.lang.String getName() -> getName
    org.jivesoftware.smack.SASLAuthentication getSASLAuthentication() -> getSASLAuthentication
    void handle(org.apache.harmony.javax.security.auth.callback.Callback[]) -> handle
org.jivesoftware.smack.sasl.SASLMechanism$AuthMechanism -> org.jivesoftware.smack.sasl.SASLMechanism$AuthMechanism:
    java.lang.String name -> name
    java.lang.String authenticationText -> authenticationText
    org.jivesoftware.smack.sasl.SASLMechanism this$0 -> this$0
    java.lang.String toXML() -> toXML
org.jivesoftware.smack.sasl.SASLMechanism$Challenge -> org.jivesoftware.smack.sasl.SASLMechanism$Challenge:
    java.lang.String data -> data
    java.lang.String toXML() -> toXML
org.jivesoftware.smack.sasl.SASLMechanism$Failure -> org.jivesoftware.smack.sasl.SASLMechanism$Failure:
    java.lang.String condition -> condition
    java.lang.String getCondition() -> getCondition
    java.lang.String toXML() -> toXML
org.jivesoftware.smack.sasl.SASLMechanism$Response -> org.jivesoftware.smack.sasl.SASLMechanism$Response:
    java.lang.String authenticationText -> authenticationText
    org.jivesoftware.smack.sasl.SASLMechanism this$0 -> this$0
    java.lang.String toXML() -> toXML
org.jivesoftware.smack.sasl.SASLMechanism$Success -> org.jivesoftware.smack.sasl.SASLMechanism$Success:
    java.lang.String data -> data
    java.lang.String toXML() -> toXML
org.jivesoftware.smack.sasl.SASLPlainMechanism -> org.jivesoftware.smack.sasl.SASLPlainMechanism:
    java.lang.String getName() -> getName
org.jivesoftware.smack.util.Base32Encoder -> org.jivesoftware.smack.util.Base32Encoder:
    org.jivesoftware.smack.util.Base32Encoder instance -> instance
    java.lang.String ALPHABET -> ALPHABET
    org.jivesoftware.smack.util.Base32Encoder getInstance() -> getInstance
    java.lang.String decode(java.lang.String) -> decode
    java.lang.String encode(java.lang.String) -> encode
    int lenToPadding(int) -> lenToPadding
    int paddingToLen(int) -> paddingToLen
org.jivesoftware.smack.util.Base64 -> org.jivesoftware.smack.util.Base64:
    int NO_OPTIONS -> NO_OPTIONS
    int ENCODE -> ENCODE
    int DECODE -> DECODE
    int GZIP -> GZIP
    int DONT_BREAK_LINES -> DONT_BREAK_LINES
    int URL_SAFE -> URL_SAFE
    int ORDERED -> ORDERED
    int MAX_LINE_LENGTH -> MAX_LINE_LENGTH
    byte EQUALS_SIGN -> EQUALS_SIGN
    byte NEW_LINE -> NEW_LINE
    java.lang.String PREFERRED_ENCODING -> PREFERRED_ENCODING
    byte WHITE_SPACE_ENC -> WHITE_SPACE_ENC
    byte EQUALS_SIGN_ENC -> EQUALS_SIGN_ENC
    byte[] _STANDARD_ALPHABET -> _STANDARD_ALPHABET
    byte[] _STANDARD_DECODABET -> _STANDARD_DECODABET
    byte[] _URL_SAFE_ALPHABET -> _URL_SAFE_ALPHABET
    byte[] _URL_SAFE_DECODABET -> _URL_SAFE_DECODABET
    byte[] _ORDERED_ALPHABET -> _ORDERED_ALPHABET
    byte[] _ORDERED_DECODABET -> _ORDERED_DECODABET
    byte[] getAlphabet(int) -> getAlphabet
    byte[] getDecodabet(int) -> getDecodabet
    void usage(java.lang.String) -> usage
    byte[] encode3to4(byte[],byte[],int,int) -> encode3to4
    byte[] encode3to4(byte[],int,int,byte[],int,int) -> encode3to4
    java.lang.String encodeObject(java.io.Serializable) -> encodeObject
    java.lang.String encodeObject(java.io.Serializable,int) -> encodeObject
    java.lang.String encodeBytes(byte[]) -> encodeBytes
    java.lang.String encodeBytes(byte[],int) -> encodeBytes
    java.lang.String encodeBytes(byte[],int,int) -> encodeBytes
    java.lang.String encodeBytes(byte[],int,int,int) -> encodeBytes
    int decode4to3(byte[],int,byte[],int,int) -> decode4to3
    byte[] decode(byte[],int,int,int) -> decode
    byte[] decode(java.lang.String) -> decode
    byte[] decode(java.lang.String,int) -> decode
    java.lang.Object decodeToObject(java.lang.String) -> decodeToObject
    boolean encodeToFile(byte[],java.lang.String) -> encodeToFile
    boolean decodeToFile(java.lang.String,java.lang.String) -> decodeToFile
    byte[] decodeFromFile(java.lang.String) -> decodeFromFile
    java.lang.String encodeFromFile(java.lang.String) -> encodeFromFile
    void encodeFileToFile(java.lang.String,java.lang.String) -> encodeFileToFile
    void decodeFileToFile(java.lang.String,java.lang.String) -> decodeFileToFile
    byte[] access$000(int) -> access$000
    byte[] access$100(int) -> access$100
    byte[] access$200(byte[],int,int,byte[],int,int) -> access$200
    int access$300(byte[],int,byte[],int,int) -> access$300
    byte[] access$400(byte[],byte[],int,int) -> access$400
org.jivesoftware.smack.util.Base64$InputStream -> org.jivesoftware.smack.util.Base64$InputStream:
    boolean encode -> encode
    int position -> position
    byte[] buffer -> buffer
    int bufferLength -> bufferLength
    int numSigBytes -> numSigBytes
    int lineLength -> lineLength
    boolean breakLines -> breakLines
    int options -> options
    byte[] alphabet -> alphabet
    byte[] decodabet -> decodabet
    int read() -> read
    int read(byte[],int,int) -> read
org.jivesoftware.smack.util.Base64$OutputStream -> org.jivesoftware.smack.util.Base64$OutputStream:
    boolean encode -> encode
    int position -> position
    byte[] buffer -> buffer
    int bufferLength -> bufferLength
    int lineLength -> lineLength
    boolean breakLines -> breakLines
    byte[] b4 -> b4
    boolean suspendEncoding -> suspendEncoding
    int options -> options
    byte[] alphabet -> alphabet
    byte[] decodabet -> decodabet
    void write(int) -> write
    void write(byte[],int,int) -> write
    void flushBase64() -> flushBase64
    void close() -> close
    void suspendEncoding() -> suspendEncoding
    void resumeEncoding() -> resumeEncoding
org.jivesoftware.smack.util.Base64Encoder -> org.jivesoftware.smack.util.Base64Encoder:
    org.jivesoftware.smack.util.Base64Encoder instance -> instance
    org.jivesoftware.smack.util.Base64Encoder getInstance() -> getInstance
    java.lang.String encode(java.lang.String) -> encode
    java.lang.String decode(java.lang.String) -> decode
org.jivesoftware.smack.util.Base64FileUrlEncoder -> org.jivesoftware.smack.util.Base64FileUrlEncoder:
    org.jivesoftware.smack.util.Base64FileUrlEncoder instance -> instance
    org.jivesoftware.smack.util.Base64FileUrlEncoder getInstance() -> getInstance
    java.lang.String encode(java.lang.String) -> encode
    java.lang.String decode(java.lang.String) -> decode
org.jivesoftware.smack.util.Cache -> org.jivesoftware.smack.util.Cache:
    java.util.Map map -> map
    org.jivesoftware.smack.util.Cache$LinkedList lastAccessedList -> lastAccessedList
    org.jivesoftware.smack.util.Cache$LinkedList ageList -> ageList
    int maxCacheSize -> maxCacheSize
    long maxLifetime -> maxLifetime
    long cacheHits -> cacheHits
    long cacheMisses -> cacheMisses
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object remove(java.lang.Object,boolean) -> remove
    void clear() -> clear
    int size() -> size
    boolean isEmpty() -> isEmpty
    java.util.Collection values() -> values
    boolean containsKey(java.lang.Object) -> containsKey
    void putAll(java.util.Map) -> putAll
    boolean containsValue(java.lang.Object) -> containsValue
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    long getCacheHits() -> getCacheHits
    long getCacheMisses() -> getCacheMisses
    int getMaxCacheSize() -> getMaxCacheSize
    void setMaxCacheSize(int) -> setMaxCacheSize
    long getMaxLifetime() -> getMaxLifetime
    void setMaxLifetime(long) -> setMaxLifetime
    void deleteExpiredEntries() -> deleteExpiredEntries
    void cullCache() -> cullCache
org.jivesoftware.smack.util.Cache$1 -> org.jivesoftware.smack.util.Cache$1:
    java.util.Collection values -> values
    org.jivesoftware.smack.util.Cache this$0 -> this$0
    java.util.Iterator iterator() -> iterator
    int size() -> size
org.jivesoftware.smack.util.Cache$1$1 -> org.jivesoftware.smack.util.Cache$1$1:
    java.util.Iterator it -> it
    org.jivesoftware.smack.util.Cache$1 this$1 -> this$1
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
org.jivesoftware.smack.util.Cache$2 -> org.jivesoftware.smack.util.Cache$2:
    java.util.Set set -> set
    org.jivesoftware.smack.util.Cache this$0 -> this$0
    java.util.Iterator iterator() -> iterator
    int size() -> size
    java.util.Set access$000(org.jivesoftware.smack.util.Cache$2) -> access$000
org.jivesoftware.smack.util.Cache$2$1 -> org.jivesoftware.smack.util.Cache$2$1:
    java.util.Iterator it -> it
    org.jivesoftware.smack.util.Cache$2 this$1 -> this$1
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
org.jivesoftware.smack.util.Cache$2$1$1 -> org.jivesoftware.smack.util.Cache$2$1$1:
    org.jivesoftware.smack.util.Cache$2$1 this$2 -> this$2
    java.lang.Object setValue(java.lang.Object) -> setValue
org.jivesoftware.smack.util.Cache$CacheObject -> org.jivesoftware.smack.util.Cache$CacheObject:
    java.lang.Object object -> object
    org.jivesoftware.smack.util.Cache$LinkedListNode lastAccessedListNode -> lastAccessedListNode
    org.jivesoftware.smack.util.Cache$LinkedListNode ageListNode -> ageListNode
    int readCount -> readCount
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.jivesoftware.smack.util.Cache$LinkedList -> org.jivesoftware.smack.util.Cache$LinkedList:
    org.jivesoftware.smack.util.Cache$LinkedListNode head -> head
    org.jivesoftware.smack.util.Cache$LinkedListNode getFirst() -> getFirst
    org.jivesoftware.smack.util.Cache$LinkedListNode getLast() -> getLast
    org.jivesoftware.smack.util.Cache$LinkedListNode addFirst(org.jivesoftware.smack.util.Cache$LinkedListNode) -> addFirst
    org.jivesoftware.smack.util.Cache$LinkedListNode addFirst(java.lang.Object) -> addFirst
    org.jivesoftware.smack.util.Cache$LinkedListNode addLast(java.lang.Object) -> addLast
    void clear() -> clear
    java.lang.String toString() -> toString
org.jivesoftware.smack.util.Cache$LinkedListNode -> org.jivesoftware.smack.util.Cache$LinkedListNode:
    org.jivesoftware.smack.util.Cache$LinkedListNode previous -> previous
    org.jivesoftware.smack.util.Cache$LinkedListNode next -> next
    java.lang.Object object -> object
    long timestamp -> timestamp
    void remove() -> remove
    java.lang.String toString() -> toString
org.jivesoftware.smack.util.DNSUtil -> org.jivesoftware.smack.util.DNSUtil:
    java.util.Map cache -> cache
    org.jivesoftware.smack.util.dns.DNSResolver dnsResolver -> dnsResolver
    void setDNSResolver(org.jivesoftware.smack.util.dns.DNSResolver) -> setDNSResolver
    org.jivesoftware.smack.util.dns.DNSResolver getDNSResolver() -> getDNSResolver
    java.util.List resolveXMPPDomain(java.lang.String) -> resolveXMPPDomain
    java.util.List resolveXMPPServerDomain(java.lang.String) -> resolveXMPPServerDomain
    java.util.List resolveDomain(java.lang.String,char) -> resolveDomain
    java.util.List sortSRVRecords(java.util.List) -> sortSRVRecords
    int bisect(int[],double) -> bisect
org.jivesoftware.smack.util.DateFormatType -> org.jivesoftware.smack.util.DateFormatType:
    org.jivesoftware.smack.util.DateFormatType XEP_0082_DATE_PROFILE -> XEP_0082_DATE_PROFILE
    org.jivesoftware.smack.util.DateFormatType XEP_0082_DATETIME_PROFILE -> XEP_0082_DATETIME_PROFILE
    org.jivesoftware.smack.util.DateFormatType XEP_0082_DATETIME_MILLIS_PROFILE -> XEP_0082_DATETIME_MILLIS_PROFILE
    org.jivesoftware.smack.util.DateFormatType XEP_0082_TIME_PROFILE -> XEP_0082_TIME_PROFILE
    org.jivesoftware.smack.util.DateFormatType XEP_0082_TIME_ZONE_PROFILE -> XEP_0082_TIME_ZONE_PROFILE
    org.jivesoftware.smack.util.DateFormatType XEP_0082_TIME_MILLIS_PROFILE -> XEP_0082_TIME_MILLIS_PROFILE
    org.jivesoftware.smack.util.DateFormatType XEP_0082_TIME_MILLIS_ZONE_PROFILE -> XEP_0082_TIME_MILLIS_ZONE_PROFILE
    org.jivesoftware.smack.util.DateFormatType XEP_0091_DATETIME -> XEP_0091_DATETIME
    java.lang.String formatString -> formatString
    org.jivesoftware.smack.util.DateFormatType[] $VALUES -> $VALUES
    org.jivesoftware.smack.util.DateFormatType[] values() -> values
    org.jivesoftware.smack.util.DateFormatType valueOf(java.lang.String) -> valueOf
    java.lang.String getFormatString() -> getFormatString
    java.text.SimpleDateFormat createFormatter() -> createFormatter
org.jivesoftware.smack.util.ObservableReader -> org.jivesoftware.smack.util.ObservableReader:
    java.io.Reader wrappedReader -> wrappedReader
    java.util.List listeners -> listeners
    int read(char[],int,int) -> read
    void close() -> close
    int read() -> read
    int read(char[]) -> read
    long skip(long) -> skip
    boolean ready() -> ready
    boolean markSupported() -> markSupported
    void mark(int) -> mark
    void reset() -> reset
    void addReaderListener(org.jivesoftware.smack.util.ReaderListener) -> addReaderListener
    void removeReaderListener(org.jivesoftware.smack.util.ReaderListener) -> removeReaderListener
org.jivesoftware.smack.util.ObservableWriter -> org.jivesoftware.smack.util.ObservableWriter:
    java.io.Writer wrappedWriter -> wrappedWriter
    java.util.List listeners -> listeners
    void write(char[],int,int) -> write
    void flush() -> flush
    void close() -> close
    void write(int) -> write
    void write(char[]) -> write
    void write(java.lang.String) -> write
    void write(java.lang.String,int,int) -> write
    void notifyListeners(java.lang.String) -> notifyListeners
    void addWriterListener(org.jivesoftware.smack.util.WriterListener) -> addWriterListener
    void removeWriterListener(org.jivesoftware.smack.util.WriterListener) -> removeWriterListener
org.jivesoftware.smack.util.PacketParserUtils -> org.jivesoftware.smack.util.PacketParserUtils:
    java.lang.String PROPERTIES_NAMESPACE -> PROPERTIES_NAMESPACE
    org.jivesoftware.smack.packet.Packet parseMessage(org.xmlpull.v1.XmlPullParser) -> parseMessage
    java.lang.String parseContent(org.xmlpull.v1.XmlPullParser) -> parseContent
    java.lang.String parseContentDepth(org.xmlpull.v1.XmlPullParser,int) -> parseContentDepth
    org.jivesoftware.smack.packet.Presence parsePresence(org.xmlpull.v1.XmlPullParser) -> parsePresence
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser,org.jivesoftware.smack.Connection) -> parseIQ
    org.jivesoftware.smack.packet.Authentication parseAuthentication(org.xmlpull.v1.XmlPullParser) -> parseAuthentication
    org.jivesoftware.smack.packet.RosterPacket parseRoster(org.xmlpull.v1.XmlPullParser) -> parseRoster
    org.jivesoftware.smack.packet.Registration parseRegistration(org.xmlpull.v1.XmlPullParser) -> parseRegistration
    org.jivesoftware.smack.packet.Bind parseResourceBinding(org.xmlpull.v1.XmlPullParser) -> parseResourceBinding
    java.util.Collection parseMechanisms(org.xmlpull.v1.XmlPullParser) -> parseMechanisms
    java.util.Collection parseCompressionMethods(org.xmlpull.v1.XmlPullParser) -> parseCompressionMethods
    java.util.Map parseProperties(org.xmlpull.v1.XmlPullParser) -> parseProperties
    org.jivesoftware.smack.sasl.SASLMechanism$Failure parseSASLFailure(org.xmlpull.v1.XmlPullParser) -> parseSASLFailure
    org.jivesoftware.smack.packet.StreamError parseStreamError(org.xmlpull.v1.XmlPullParser) -> parseStreamError
    org.jivesoftware.smack.packet.XMPPError parseError(org.xmlpull.v1.XmlPullParser) -> parseError
    org.jivesoftware.smack.packet.PacketExtension parsePacketExtension(java.lang.String,java.lang.String,org.xmlpull.v1.XmlPullParser) -> parsePacketExtension
    java.lang.String getLanguageAttribute(org.xmlpull.v1.XmlPullParser) -> getLanguageAttribute
    java.lang.Object parseWithIntrospection(java.lang.String,java.lang.Class,org.xmlpull.v1.XmlPullParser) -> parseWithIntrospection
    java.lang.Object decode(java.lang.Class,java.lang.String) -> decode
org.jivesoftware.smack.util.PacketParserUtils$1 -> org.jivesoftware.smack.util.PacketParserUtils$1:
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smack.util.PacketParserUtils$2 -> org.jivesoftware.smack.util.PacketParserUtils$2:
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smack.util.PacketParserUtils$UnparsedResultIQ -> org.jivesoftware.smack.util.PacketParserUtils$UnparsedResultIQ:
    java.lang.String str -> str
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smack.util.ReaderListener -> org.jivesoftware.smack.util.ReaderListener:
    void read(java.lang.String) -> read
org.jivesoftware.smack.util.StringEncoder -> org.jivesoftware.smack.util.StringEncoder:
    java.lang.String encode(java.lang.String) -> encode
    java.lang.String decode(java.lang.String) -> decode
org.jivesoftware.smack.util.StringUtils -> org.jivesoftware.smack.util.StringUtils:
    java.text.DateFormat XEP_0082_UTC_FORMAT -> XEP_0082_UTC_FORMAT
    java.text.DateFormat dateFormatter -> dateFormatter
    java.util.regex.Pattern datePattern -> datePattern
    java.text.DateFormat timeFormatter -> timeFormatter
    java.util.regex.Pattern timePattern -> timePattern
    java.text.DateFormat timeNoZoneFormatter -> timeNoZoneFormatter
    java.util.regex.Pattern timeNoZonePattern -> timeNoZonePattern
    java.text.DateFormat timeNoMillisFormatter -> timeNoMillisFormatter
    java.util.regex.Pattern timeNoMillisPattern -> timeNoMillisPattern
    java.text.DateFormat timeNoMillisNoZoneFormatter -> timeNoMillisNoZoneFormatter
    java.util.regex.Pattern timeNoMillisNoZonePattern -> timeNoMillisNoZonePattern
    java.text.DateFormat dateTimeFormatter -> dateTimeFormatter
    java.util.regex.Pattern dateTimePattern -> dateTimePattern
    java.text.DateFormat dateTimeNoMillisFormatter -> dateTimeNoMillisFormatter
    java.util.regex.Pattern dateTimeNoMillisPattern -> dateTimeNoMillisPattern
    java.text.DateFormat xep0091Formatter -> xep0091Formatter
    java.text.DateFormat xep0091Date6DigitFormatter -> xep0091Date6DigitFormatter
    java.text.DateFormat xep0091Date7Digit1MonthFormatter -> xep0091Date7Digit1MonthFormatter
    java.text.DateFormat xep0091Date7Digit2MonthFormatter -> xep0091Date7Digit2MonthFormatter
    java.util.regex.Pattern xep0091Pattern -> xep0091Pattern
    java.util.List couplings -> couplings
    char[] QUOTE_ENCODE -> QUOTE_ENCODE
    char[] APOS_ENCODE -> APOS_ENCODE
    char[] AMP_ENCODE -> AMP_ENCODE
    char[] LT_ENCODE -> LT_ENCODE
    char[] GT_ENCODE -> GT_ENCODE
    java.security.MessageDigest digest -> digest
    java.util.Random randGen -> randGen
    char[] numbersAndLetters -> numbersAndLetters
    java.util.Date parseXEP0082Date(java.lang.String) -> parseXEP0082Date
    java.util.Date parseDate(java.lang.String) -> parseDate
    java.util.Date handleDateWithMissingLeadingZeros(java.lang.String,int) -> handleDateWithMissingLeadingZeros
    java.util.Calendar parseXEP91Date(java.lang.String,java.text.DateFormat) -> parseXEP91Date
    java.util.List filterDatesBefore(java.util.Calendar,java.util.Calendar[]) -> filterDatesBefore
    java.util.Calendar determineNearestDate(java.util.Calendar,java.util.List) -> determineNearestDate
    java.lang.String formatXEP0082Date(java.util.Date) -> formatXEP0082Date
    java.lang.String formatDate(java.util.Date,org.jivesoftware.smack.util.DateFormatType) -> formatDate
    java.lang.String parseName(java.lang.String) -> parseName
    java.lang.String parseServer(java.lang.String) -> parseServer
    java.lang.String parseResource(java.lang.String) -> parseResource
    java.lang.String parseBareAddress(java.lang.String) -> parseBareAddress
    boolean isFullJID(java.lang.String) -> isFullJID
    java.lang.String escapeNode(java.lang.String) -> escapeNode
    java.lang.String unescapeNode(java.lang.String) -> unescapeNode
    java.lang.String escapeForXML(java.lang.String) -> escapeForXML
    java.lang.String hash(java.lang.String) -> hash
    java.lang.String encodeHex(byte[]) -> encodeHex
    java.lang.String encodeBase64(java.lang.String) -> encodeBase64
    java.lang.String encodeBase64(byte[]) -> encodeBase64
    java.lang.String encodeBase64(byte[],boolean) -> encodeBase64
    java.lang.String encodeBase64(byte[],int,int,boolean) -> encodeBase64
    byte[] decodeBase64(java.lang.String) -> decodeBase64
    java.lang.String randomString(int) -> randomString
org.jivesoftware.smack.util.StringUtils$1 -> org.jivesoftware.smack.util.StringUtils$1:
    java.util.Calendar val$now -> val$now
    int compare(java.util.Calendar,java.util.Calendar) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
org.jivesoftware.smack.util.StringUtils$PatternCouplings -> org.jivesoftware.smack.util.StringUtils$PatternCouplings:
    java.util.regex.Pattern pattern -> pattern
    java.text.DateFormat formatter -> formatter
    boolean needToConvertTimeZone -> needToConvertTimeZone
    java.lang.String convertTime(java.lang.String) -> convertTime
org.jivesoftware.smack.util.SyncPacketSend -> org.jivesoftware.smack.util.SyncPacketSend:
    org.jivesoftware.smack.packet.Packet getReply(org.jivesoftware.smack.Connection,org.jivesoftware.smack.packet.Packet,long) -> getReply
    org.jivesoftware.smack.packet.Packet getReply(org.jivesoftware.smack.Connection,org.jivesoftware.smack.packet.Packet) -> getReply
org.jivesoftware.smack.util.WriterListener -> org.jivesoftware.smack.util.WriterListener:
    void write(java.lang.String) -> write
org.jivesoftware.smack.util.collections.AbstractEmptyIterator -> org.jivesoftware.smack.util.collections.AbstractEmptyIterator:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    boolean hasPrevious() -> hasPrevious
    java.lang.Object previous() -> previous
    int nextIndex() -> nextIndex
    int previousIndex() -> previousIndex
    void add(java.lang.Object) -> add
    void set(java.lang.Object) -> set
    void remove() -> remove
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    void reset() -> reset
org.jivesoftware.smack.util.collections.AbstractHashedMap -> org.jivesoftware.smack.util.collections.AbstractHashedMap:
    java.lang.String NO_NEXT_ENTRY -> NO_NEXT_ENTRY
    java.lang.String NO_PREVIOUS_ENTRY -> NO_PREVIOUS_ENTRY
    java.lang.String REMOVE_INVALID -> REMOVE_INVALID
    java.lang.String GETKEY_INVALID -> GETKEY_INVALID
    java.lang.String GETVALUE_INVALID -> GETVALUE_INVALID
    java.lang.String SETVALUE_INVALID -> SETVALUE_INVALID
    int DEFAULT_CAPACITY -> DEFAULT_CAPACITY
    int DEFAULT_THRESHOLD -> DEFAULT_THRESHOLD
    float DEFAULT_LOAD_FACTOR -> DEFAULT_LOAD_FACTOR
    int MAXIMUM_CAPACITY -> MAXIMUM_CAPACITY
    java.lang.Object NULL -> NULL
    float loadFactor -> loadFactor
    int size -> size
    org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry[] data -> data
    int threshold -> threshold
    int modCount -> modCount
    org.jivesoftware.smack.util.collections.AbstractHashedMap$EntrySet entrySet -> entrySet
    org.jivesoftware.smack.util.collections.AbstractHashedMap$KeySet keySet -> keySet
    org.jivesoftware.smack.util.collections.AbstractHashedMap$Values values -> values
    void init() -> init
    java.lang.Object get(java.lang.Object) -> get
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void putAll(java.util.Map) -> putAll
    java.lang.Object remove(java.lang.Object) -> remove
    void clear() -> clear
    int hash(java.lang.Object) -> hash
    boolean isEqualKey(java.lang.Object,java.lang.Object) -> isEqualKey
    boolean isEqualValue(java.lang.Object,java.lang.Object) -> isEqualValue
    int hashIndex(int,int) -> hashIndex
    org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry getEntry(java.lang.Object) -> getEntry
    void updateEntry(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry,java.lang.Object) -> updateEntry
    void reuseEntry(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry,int,int,java.lang.Object,java.lang.Object) -> reuseEntry
    void addMapping(int,int,java.lang.Object,java.lang.Object) -> addMapping
    org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry createEntry(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry,int,java.lang.Object,java.lang.Object) -> createEntry
    void addEntry(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry,int) -> addEntry
    void removeMapping(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry,int,org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry) -> removeMapping
    void removeEntry(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry,int,org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry) -> removeEntry
    void destroyEntry(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry) -> destroyEntry
    void checkCapacity() -> checkCapacity
    void ensureCapacity(int) -> ensureCapacity
    int calculateNewCapacity(int) -> calculateNewCapacity
    int calculateThreshold(int,float) -> calculateThreshold
    org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry entryNext(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry) -> entryNext
    int entryHashCode(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry) -> entryHashCode
    java.lang.Object entryKey(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry) -> entryKey
    java.lang.Object entryValue(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry) -> entryValue
    org.jivesoftware.smack.util.collections.MapIterator mapIterator() -> mapIterator
    java.util.Set entrySet() -> entrySet
    java.util.Iterator createEntrySetIterator() -> createEntrySetIterator
    java.util.Set keySet() -> keySet
    java.util.Iterator createKeySetIterator() -> createKeySetIterator
    java.util.Collection values() -> values
    java.util.Iterator createValuesIterator() -> createValuesIterator
    void doWriteObject(java.io.ObjectOutputStream) -> doWriteObject
    void doReadObject(java.io.ObjectInputStream) -> doReadObject
    java.lang.Object clone() -> clone
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.jivesoftware.smack.util.collections.AbstractHashedMap$EntrySet -> org.jivesoftware.smack.util.collections.AbstractHashedMap$EntrySet:
    org.jivesoftware.smack.util.collections.AbstractHashedMap parent -> parent
    int size() -> size
    void clear() -> clear
    boolean contains(java.util.Map$Entry) -> contains
    boolean remove(java.lang.Object) -> remove
    java.util.Iterator iterator() -> iterator
org.jivesoftware.smack.util.collections.AbstractHashedMap$EntrySetIterator -> org.jivesoftware.smack.util.collections.AbstractHashedMap$EntrySetIterator:
    org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry next() -> next
    java.lang.Object next() -> next
org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry -> org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry:
    org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry next -> next
    int hashCode -> hashCode
    java.lang.Object key -> key
    java.lang.Object value -> value
    java.lang.Object getKey() -> getKey
    void setKey(java.lang.Object) -> setKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object access$000(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry) -> access$000
    java.lang.Object access$002(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry,java.lang.Object) -> access$002
    java.lang.Object access$102(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry,java.lang.Object) -> access$102
    java.lang.Object access$100(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry) -> access$100
org.jivesoftware.smack.util.collections.AbstractHashedMap$HashIterator -> org.jivesoftware.smack.util.collections.AbstractHashedMap$HashIterator:
    org.jivesoftware.smack.util.collections.AbstractHashedMap parent -> parent
    int hashIndex -> hashIndex
    org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry last -> last
    org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry next -> next
    int expectedModCount -> expectedModCount
    boolean hasNext() -> hasNext
    org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry nextEntry() -> nextEntry
    org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry currentEntry() -> currentEntry
    void remove() -> remove
    java.lang.String toString() -> toString
org.jivesoftware.smack.util.collections.AbstractHashedMap$HashMapIterator -> org.jivesoftware.smack.util.collections.AbstractHashedMap$HashMapIterator:
    java.lang.Object next() -> next
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
org.jivesoftware.smack.util.collections.AbstractHashedMap$KeySet -> org.jivesoftware.smack.util.collections.AbstractHashedMap$KeySet:
    org.jivesoftware.smack.util.collections.AbstractHashedMap parent -> parent
    int size() -> size
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    java.util.Iterator iterator() -> iterator
org.jivesoftware.smack.util.collections.AbstractHashedMap$KeySetIterator -> org.jivesoftware.smack.util.collections.AbstractHashedMap$KeySetIterator:
    java.lang.Object next() -> next
org.jivesoftware.smack.util.collections.AbstractHashedMap$Values -> org.jivesoftware.smack.util.collections.AbstractHashedMap$Values:
    org.jivesoftware.smack.util.collections.AbstractHashedMap parent -> parent
    int size() -> size
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    java.util.Iterator iterator() -> iterator
org.jivesoftware.smack.util.collections.AbstractHashedMap$ValuesIterator -> org.jivesoftware.smack.util.collections.AbstractHashedMap$ValuesIterator:
    java.lang.Object next() -> next
org.jivesoftware.smack.util.collections.AbstractKeyValue -> org.jivesoftware.smack.util.collections.AbstractKeyValue:
    java.lang.Object key -> key
    java.lang.Object value -> value
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.String toString() -> toString
org.jivesoftware.smack.util.collections.AbstractMapEntry -> org.jivesoftware.smack.util.collections.AbstractMapEntry:
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.jivesoftware.smack.util.collections.AbstractReferenceMap -> org.jivesoftware.smack.util.collections.AbstractReferenceMap:
    int HARD -> HARD
    int SOFT -> SOFT
    int WEAK -> WEAK
    int keyType -> keyType
    int valueType -> valueType
    boolean purgeValues -> purgeValues
    java.lang.ref.ReferenceQueue queue -> queue
    void init() -> init
    void verify(java.lang.String,int) -> verify
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    void clear() -> clear
    org.jivesoftware.smack.util.collections.MapIterator mapIterator() -> mapIterator
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
    void purgeBeforeRead() -> purgeBeforeRead
    void purgeBeforeWrite() -> purgeBeforeWrite
    void purge() -> purge
    void purge(java.lang.ref.Reference) -> purge
    org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry getEntry(java.lang.Object) -> getEntry
    int hashEntry(java.lang.Object,java.lang.Object) -> hashEntry
    boolean isEqualKey(java.lang.Object,java.lang.Object) -> isEqualKey
    org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry createEntry(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry,int,java.lang.Object,java.lang.Object) -> createEntry
    java.util.Iterator createEntrySetIterator() -> createEntrySetIterator
    java.util.Iterator createKeySetIterator() -> createKeySetIterator
    java.util.Iterator createValuesIterator() -> createValuesIterator
    void doWriteObject(java.io.ObjectOutputStream) -> doWriteObject
    void doReadObject(java.io.ObjectInputStream) -> doReadObject
    java.lang.ref.ReferenceQueue access$000(org.jivesoftware.smack.util.collections.AbstractReferenceMap) -> access$000
org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceEntry -> org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceEntry:
    org.jivesoftware.smack.util.collections.AbstractReferenceMap parent -> parent
    java.lang.ref.Reference refKey -> refKey
    java.lang.ref.Reference refValue -> refValue
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.ref.Reference toReference(int,java.lang.Object,int) -> toReference
    boolean purge(java.lang.ref.Reference) -> purge
    org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceEntry next() -> next
org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceEntrySet -> org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceEntrySet:
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceEntrySetIterator -> org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceEntrySetIterator:
    org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceEntry next() -> next
    java.lang.Object next() -> next
org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceIteratorBase -> org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceIteratorBase:
    org.jivesoftware.smack.util.collections.AbstractReferenceMap parent -> parent
    int index -> index
    org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceEntry entry -> entry
    org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceEntry previous -> previous
    java.lang.Object nextKey -> nextKey
    java.lang.Object nextValue -> nextValue
    java.lang.Object currentKey -> currentKey
    java.lang.Object currentValue -> currentValue
    int expectedModCount -> expectedModCount
    boolean hasNext() -> hasNext
    void checkMod() -> checkMod
    boolean nextNull() -> nextNull
    org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceEntry nextEntry() -> nextEntry
    org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceEntry currentEntry() -> currentEntry
    org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceEntry superNext() -> superNext
    void remove() -> remove
org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceKeySet -> org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceKeySet:
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceKeySetIterator -> org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceKeySetIterator:
    java.lang.Object next() -> next
org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceMapIterator -> org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceMapIterator:
    java.lang.Object next() -> next
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceValues -> org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceValues:
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceValuesIterator -> org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceValuesIterator:
    java.lang.Object next() -> next
org.jivesoftware.smack.util.collections.AbstractReferenceMap$SoftRef -> org.jivesoftware.smack.util.collections.AbstractReferenceMap$SoftRef:
    int hash -> hash
    int hashCode() -> hashCode
org.jivesoftware.smack.util.collections.AbstractReferenceMap$WeakRef -> org.jivesoftware.smack.util.collections.AbstractReferenceMap$WeakRef:
    int hash -> hash
    int hashCode() -> hashCode
org.jivesoftware.smack.util.collections.DefaultMapEntry -> org.jivesoftware.smack.util.collections.DefaultMapEntry:
org.jivesoftware.smack.util.collections.EmptyIterator -> org.jivesoftware.smack.util.collections.EmptyIterator:
    org.jivesoftware.smack.util.collections.ResettableIterator RESETTABLE_INSTANCE -> RESETTABLE_INSTANCE
    java.util.Iterator INSTANCE -> INSTANCE
    java.util.Iterator getInstance() -> getInstance
    void reset() -> reset
    java.lang.Object setValue(java.lang.Object) -> setValue
    java.lang.Object getValue() -> getValue
    java.lang.Object getKey() -> getKey
    void remove() -> remove
    void set(java.lang.Object) -> set
    void add(java.lang.Object) -> add
    int previousIndex() -> previousIndex
    int nextIndex() -> nextIndex
    java.lang.Object previous() -> previous
    boolean hasPrevious() -> hasPrevious
    java.lang.Object next() -> next
    boolean hasNext() -> hasNext
org.jivesoftware.smack.util.collections.EmptyMapIterator -> org.jivesoftware.smack.util.collections.EmptyMapIterator:
    org.jivesoftware.smack.util.collections.MapIterator INSTANCE -> INSTANCE
    void reset() -> reset
    java.lang.Object setValue(java.lang.Object) -> setValue
    java.lang.Object getValue() -> getValue
    java.lang.Object getKey() -> getKey
    void remove() -> remove
    void set(java.lang.Object) -> set
    void add(java.lang.Object) -> add
    int previousIndex() -> previousIndex
    int nextIndex() -> nextIndex
    java.lang.Object previous() -> previous
    boolean hasPrevious() -> hasPrevious
    java.lang.Object next() -> next
    boolean hasNext() -> hasNext
org.jivesoftware.smack.util.collections.IterableMap -> org.jivesoftware.smack.util.collections.IterableMap:
    org.jivesoftware.smack.util.collections.MapIterator mapIterator() -> mapIterator
org.jivesoftware.smack.util.collections.KeyValue -> org.jivesoftware.smack.util.collections.KeyValue:
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
org.jivesoftware.smack.util.collections.MapIterator -> org.jivesoftware.smack.util.collections.MapIterator:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    void remove() -> remove
    java.lang.Object setValue(java.lang.Object) -> setValue
org.jivesoftware.smack.util.collections.ReferenceMap -> org.jivesoftware.smack.util.collections.ReferenceMap:
    long serialVersionUID -> serialVersionUID
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
org.jivesoftware.smack.util.collections.ResettableIterator -> org.jivesoftware.smack.util.collections.ResettableIterator:
    void reset() -> reset
org.jivesoftware.smack.util.dns.DNSJavaResolver -> org.jivesoftware.smack.util.dns.DNSJavaResolver:
    org.jivesoftware.smack.util.dns.DNSJavaResolver instance -> instance
    org.jivesoftware.smack.util.dns.DNSResolver getInstance() -> getInstance
    java.util.List lookupSRVRecords(java.lang.String) -> lookupSRVRecords
org.jivesoftware.smack.util.dns.DNSResolver -> org.jivesoftware.smack.util.dns.DNSResolver:
    java.util.List lookupSRVRecords(java.lang.String) -> lookupSRVRecords
org.jivesoftware.smack.util.dns.HostAddress -> org.jivesoftware.smack.util.dns.HostAddress:
    java.lang.String fqdn -> fqdn
    int port -> port
    java.lang.Exception exception -> exception
    java.lang.String getFQDN() -> getFQDN
    int getPort() -> getPort
    void setException(java.lang.Exception) -> setException
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String getErrorMessage() -> getErrorMessage
org.jivesoftware.smack.util.dns.SRVRecord -> org.jivesoftware.smack.util.dns.SRVRecord:
    int weight -> weight
    int priority -> priority
    int getPriority() -> getPriority
    int getWeight() -> getWeight
    int compareTo(org.jivesoftware.smack.util.dns.SRVRecord) -> compareTo
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
org.jivesoftware.smackx.ChatState -> org.jivesoftware.smackx.ChatState:
    org.jivesoftware.smackx.ChatState active -> active
    org.jivesoftware.smackx.ChatState composing -> composing
    org.jivesoftware.smackx.ChatState paused -> paused
    org.jivesoftware.smackx.ChatState inactive -> inactive
    org.jivesoftware.smackx.ChatState gone -> gone
    org.jivesoftware.smackx.ChatState[] $VALUES -> $VALUES
    org.jivesoftware.smackx.ChatState[] values() -> values
    org.jivesoftware.smackx.ChatState valueOf(java.lang.String) -> valueOf
org.jivesoftware.smackx.ChatStateListener -> org.jivesoftware.smackx.ChatStateListener:
    void stateChanged(org.jivesoftware.smack.Chat,org.jivesoftware.smackx.ChatState) -> stateChanged
org.jivesoftware.smackx.ChatStateManager -> org.jivesoftware.smackx.ChatStateManager:
    java.util.Map managers -> managers
    org.jivesoftware.smack.filter.PacketFilter filter -> filter
    org.jivesoftware.smack.Connection connection -> connection
    org.jivesoftware.smackx.ChatStateManager$OutgoingMessageInterceptor outgoingInterceptor -> outgoingInterceptor
    org.jivesoftware.smackx.ChatStateManager$IncomingMessageInterceptor incomingInterceptor -> incomingInterceptor
    java.util.Map chatStates -> chatStates
    org.jivesoftware.smackx.ChatStateManager getInstance(org.jivesoftware.smack.Connection) -> getInstance
    void init() -> init
    void setCurrentState(org.jivesoftware.smackx.ChatState,org.jivesoftware.smack.Chat) -> setCurrentState
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean updateChatState(org.jivesoftware.smack.Chat,org.jivesoftware.smackx.ChatState) -> updateChatState
    void fireNewChatState(org.jivesoftware.smack.Chat,org.jivesoftware.smackx.ChatState) -> fireNewChatState
    org.jivesoftware.smack.Connection access$200(org.jivesoftware.smackx.ChatStateManager) -> access$200
    boolean access$300(org.jivesoftware.smackx.ChatStateManager,org.jivesoftware.smack.Chat,org.jivesoftware.smackx.ChatState) -> access$300
    void access$400(org.jivesoftware.smackx.ChatStateManager,org.jivesoftware.smack.Chat,org.jivesoftware.smackx.ChatState) -> access$400
org.jivesoftware.smackx.ChatStateManager$1 -> org.jivesoftware.smackx.ChatStateManager$1:
org.jivesoftware.smackx.ChatStateManager$IncomingMessageInterceptor -> org.jivesoftware.smackx.ChatStateManager$IncomingMessageInterceptor:
    org.jivesoftware.smackx.ChatStateManager this$0 -> this$0
    void chatCreated(org.jivesoftware.smack.Chat,boolean) -> chatCreated
    void processMessage(org.jivesoftware.smack.Chat,org.jivesoftware.smack.packet.Message) -> processMessage
org.jivesoftware.smackx.ChatStateManager$OutgoingMessageInterceptor -> org.jivesoftware.smackx.ChatStateManager$OutgoingMessageInterceptor:
    org.jivesoftware.smackx.ChatStateManager this$0 -> this$0
    void interceptPacket(org.jivesoftware.smack.packet.Packet) -> interceptPacket
org.jivesoftware.smackx.ConfigureProviderManager -> org.jivesoftware.smackx.ConfigureProviderManager:
    void configureProviderManager() -> configureProviderManager
org.jivesoftware.smackx.DefaultMessageEventRequestListener -> org.jivesoftware.smackx.DefaultMessageEventRequestListener:
    void deliveredNotificationRequested(java.lang.String,java.lang.String,org.jivesoftware.smackx.MessageEventManager) -> deliveredNotificationRequested
    void displayedNotificationRequested(java.lang.String,java.lang.String,org.jivesoftware.smackx.MessageEventManager) -> displayedNotificationRequested
    void composingNotificationRequested(java.lang.String,java.lang.String,org.jivesoftware.smackx.MessageEventManager) -> composingNotificationRequested
    void offlineNotificationRequested(java.lang.String,java.lang.String,org.jivesoftware.smackx.MessageEventManager) -> offlineNotificationRequested
org.jivesoftware.smackx.Form -> org.jivesoftware.smackx.Form:
    java.lang.String TYPE_FORM -> TYPE_FORM
    java.lang.String TYPE_SUBMIT -> TYPE_SUBMIT
    java.lang.String TYPE_CANCEL -> TYPE_CANCEL
    java.lang.String TYPE_RESULT -> TYPE_RESULT
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String ELEMENT -> ELEMENT
    org.jivesoftware.smackx.packet.DataForm dataForm -> dataForm
    org.jivesoftware.smackx.Form getFormFrom(org.jivesoftware.smack.packet.Packet) -> getFormFrom
    void addField(org.jivesoftware.smackx.FormField) -> addField
    void setAnswer(java.lang.String,java.lang.String) -> setAnswer
    void setAnswer(java.lang.String,int) -> setAnswer
    void setAnswer(java.lang.String,long) -> setAnswer
    void setAnswer(java.lang.String,float) -> setAnswer
    void setAnswer(java.lang.String,double) -> setAnswer
    void setAnswer(java.lang.String,boolean) -> setAnswer
    void setAnswer(org.jivesoftware.smackx.FormField,java.lang.Object) -> setAnswer
    void setAnswer(java.lang.String,java.util.List) -> setAnswer
    void setDefaultAnswer(java.lang.String) -> setDefaultAnswer
    java.util.Iterator getFields() -> getFields
    org.jivesoftware.smackx.FormField getField(java.lang.String) -> getField
    java.lang.String getInstructions() -> getInstructions
    java.lang.String getTitle() -> getTitle
    java.lang.String getType() -> getType
    void setInstructions(java.lang.String) -> setInstructions
    void setTitle(java.lang.String) -> setTitle
    org.jivesoftware.smackx.packet.DataForm getDataFormToSend() -> getDataFormToSend
    boolean isFormType() -> isFormType
    boolean isSubmitType() -> isSubmitType
    org.jivesoftware.smackx.Form createAnswerForm() -> createAnswerForm
org.jivesoftware.smackx.FormField -> org.jivesoftware.smackx.FormField:
    java.lang.String TYPE_BOOLEAN -> TYPE_BOOLEAN
    java.lang.String TYPE_FIXED -> TYPE_FIXED
    java.lang.String TYPE_HIDDEN -> TYPE_HIDDEN
    java.lang.String TYPE_JID_MULTI -> TYPE_JID_MULTI
    java.lang.String TYPE_JID_SINGLE -> TYPE_JID_SINGLE
    java.lang.String TYPE_LIST_MULTI -> TYPE_LIST_MULTI
    java.lang.String TYPE_LIST_SINGLE -> TYPE_LIST_SINGLE
    java.lang.String TYPE_TEXT_MULTI -> TYPE_TEXT_MULTI
    java.lang.String TYPE_TEXT_PRIVATE -> TYPE_TEXT_PRIVATE
    java.lang.String TYPE_TEXT_SINGLE -> TYPE_TEXT_SINGLE
    java.lang.String description -> description
    boolean required -> required
    java.lang.String label -> label
    java.lang.String variable -> variable
    java.lang.String type -> type
    java.util.List options -> options
    java.util.List values -> values
    java.lang.String getDescription() -> getDescription
    java.lang.String getLabel() -> getLabel
    java.util.Iterator getOptions() -> getOptions
    boolean isRequired() -> isRequired
    java.lang.String getType() -> getType
    java.util.Iterator getValues() -> getValues
    java.lang.String getVariable() -> getVariable
    void setDescription(java.lang.String) -> setDescription
    void setLabel(java.lang.String) -> setLabel
    void setRequired(boolean) -> setRequired
    void setType(java.lang.String) -> setType
    void addValue(java.lang.String) -> addValue
    void addValues(java.util.List) -> addValues
    void resetValues() -> resetValues
    void addOption(org.jivesoftware.smackx.FormField$Option) -> addOption
    java.lang.String toXML() -> toXML
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.jivesoftware.smackx.FormField$Option -> org.jivesoftware.smackx.FormField$Option:
    java.lang.String label -> label
    java.lang.String value -> value
    java.lang.String getLabel() -> getLabel
    java.lang.String getValue() -> getValue
    java.lang.String toString() -> toString
    java.lang.String toXML() -> toXML
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.jivesoftware.smackx.Gateway -> org.jivesoftware.smackx.Gateway:
    org.jivesoftware.smack.Connection connection -> connection
    org.jivesoftware.smackx.ServiceDiscoveryManager sdManager -> sdManager
    org.jivesoftware.smack.Roster roster -> roster
    java.lang.String entityJID -> entityJID
    org.jivesoftware.smack.packet.Registration registerInfo -> registerInfo
    org.jivesoftware.smackx.packet.DiscoverInfo$Identity identity -> identity
    org.jivesoftware.smackx.packet.DiscoverInfo info -> info
    void discoverInfo() -> discoverInfo
    org.jivesoftware.smackx.packet.DiscoverInfo$Identity getIdentity() -> getIdentity
    org.jivesoftware.smack.packet.Registration getRegisterInfo() -> getRegisterInfo
    void refreshRegisterInfo() -> refreshRegisterInfo
    boolean canRegister() -> canRegister
    java.util.List getRequiredFields() -> getRequiredFields
    java.lang.String getName() -> getName
    java.lang.String getType() -> getType
    boolean isRegistered() -> isRegistered
    java.lang.String getField(java.lang.String) -> getField
    java.util.List getFieldNames() -> getFieldNames
    java.lang.String getUsername() -> getUsername
    java.lang.String getPassword() -> getPassword
    java.lang.String getInstructions() -> getInstructions
    void register(java.lang.String,java.lang.String,java.util.Map) -> register
    void register(java.lang.String,java.lang.String) -> register
    void unregister() -> unregister
    void login() -> login
    void login(org.jivesoftware.smack.packet.Presence) -> login
    void logout() -> logout
    java.lang.String access$0(org.jivesoftware.smackx.Gateway) -> access$0
    org.jivesoftware.smack.Roster access$1(org.jivesoftware.smackx.Gateway) -> access$1
    org.jivesoftware.smack.Connection access$2(org.jivesoftware.smackx.Gateway) -> access$2
org.jivesoftware.smackx.Gateway$1 -> org.jivesoftware.smackx.Gateway$1:
org.jivesoftware.smackx.Gateway$GatewayPresenceListener -> org.jivesoftware.smackx.Gateway$GatewayPresenceListener:
    org.jivesoftware.smackx.Gateway this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.GatewayManager -> org.jivesoftware.smackx.GatewayManager:
    java.util.Map instances -> instances
    org.jivesoftware.smackx.ServiceDiscoveryManager sdManager -> sdManager
    java.util.Map localGateways -> localGateways
    java.util.Map nonLocalGateways -> nonLocalGateways
    java.util.Map gateways -> gateways
    org.jivesoftware.smack.Connection connection -> connection
    org.jivesoftware.smack.Roster roster -> roster
    void loadLocalGateways() -> loadLocalGateways
    void discoverGateway(java.lang.String) -> discoverGateway
    void loadNonLocalGateways() -> loadNonLocalGateways
    org.jivesoftware.smackx.GatewayManager getInstanceFor(org.jivesoftware.smack.Connection) -> getInstanceFor
    java.util.List getLocalGateways() -> getLocalGateways
    java.util.List getNonLocalGateways() -> getNonLocalGateways
    void refreshNonLocalGateways() -> refreshNonLocalGateways
    org.jivesoftware.smackx.Gateway getGateway(java.lang.String) -> getGateway
org.jivesoftware.smackx.GroupChatInvitation -> org.jivesoftware.smackx.GroupChatInvitation:
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String roomAddress -> roomAddress
    java.lang.String getRoomAddress() -> getRoomAddress
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.GroupChatInvitation$Provider -> org.jivesoftware.smackx.GroupChatInvitation$Provider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.InitStaticCode -> org.jivesoftware.smackx.InitStaticCode:
    void initStaticCode(android.content.Context) -> initStaticCode
org.jivesoftware.smackx.LastActivityManager -> org.jivesoftware.smackx.LastActivityManager:
    long lastMessageSent -> lastMessageSent
    org.jivesoftware.smack.Connection connection -> connection
    void resetIdleTime() -> resetIdleTime
    long getIdleTime() -> getIdleTime
    org.jivesoftware.smackx.packet.LastActivity getLastActivity(org.jivesoftware.smack.Connection,java.lang.String) -> getLastActivity
    boolean isLastActivitySupported(org.jivesoftware.smack.Connection,java.lang.String) -> isLastActivitySupported
    void access$100(org.jivesoftware.smackx.LastActivityManager) -> access$100
    long access$200(org.jivesoftware.smackx.LastActivityManager) -> access$200
    org.jivesoftware.smack.Connection access$300(org.jivesoftware.smackx.LastActivityManager) -> access$300
org.jivesoftware.smackx.LastActivityManager$1 -> org.jivesoftware.smackx.LastActivityManager$1:
    void connectionCreated(org.jivesoftware.smack.Connection) -> connectionCreated
org.jivesoftware.smackx.LastActivityManager$2 -> org.jivesoftware.smackx.LastActivityManager$2:
    org.jivesoftware.smackx.LastActivityManager this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.LastActivityManager$3 -> org.jivesoftware.smackx.LastActivityManager$3:
    org.jivesoftware.smackx.LastActivityManager this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.LastActivityManager$4 -> org.jivesoftware.smackx.LastActivityManager$4:
    org.jivesoftware.smackx.LastActivityManager this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.LastActivityManager$5 -> org.jivesoftware.smackx.LastActivityManager$5:
    int[] $SwitchMap$org$jivesoftware$smack$packet$Presence$Mode -> $SwitchMap$org$jivesoftware$smack$packet$Presence$Mode
org.jivesoftware.smackx.MessageEventManager -> org.jivesoftware.smackx.MessageEventManager:
    java.util.List messageEventNotificationListeners -> messageEventNotificationListeners
    java.util.List messageEventRequestListeners -> messageEventRequestListeners
    org.jivesoftware.smack.Connection con -> con
    org.jivesoftware.smack.filter.PacketFilter packetFilter -> packetFilter
    org.jivesoftware.smack.PacketListener packetListener -> packetListener
    void addNotificationsRequests(org.jivesoftware.smack.packet.Message,boolean,boolean,boolean,boolean) -> addNotificationsRequests
    void addMessageEventRequestListener(org.jivesoftware.smackx.MessageEventRequestListener) -> addMessageEventRequestListener
    void removeMessageEventRequestListener(org.jivesoftware.smackx.MessageEventRequestListener) -> removeMessageEventRequestListener
    void addMessageEventNotificationListener(org.jivesoftware.smackx.MessageEventNotificationListener) -> addMessageEventNotificationListener
    void removeMessageEventNotificationListener(org.jivesoftware.smackx.MessageEventNotificationListener) -> removeMessageEventNotificationListener
    void fireMessageEventRequestListeners(java.lang.String,java.lang.String,java.lang.String) -> fireMessageEventRequestListeners
    void fireMessageEventNotificationListeners(java.lang.String,java.lang.String,java.lang.String) -> fireMessageEventNotificationListeners
    void init() -> init
    void sendDeliveredNotification(java.lang.String,java.lang.String) -> sendDeliveredNotification
    void sendDisplayedNotification(java.lang.String,java.lang.String) -> sendDisplayedNotification
    void sendComposingNotification(java.lang.String,java.lang.String) -> sendComposingNotification
    void sendCancelledNotification(java.lang.String,java.lang.String) -> sendCancelledNotification
    void destroy() -> destroy
    void finalize() -> finalize
    void access$000(org.jivesoftware.smackx.MessageEventManager,java.lang.String,java.lang.String,java.lang.String) -> access$000
    void access$100(org.jivesoftware.smackx.MessageEventManager,java.lang.String,java.lang.String,java.lang.String) -> access$100
org.jivesoftware.smackx.MessageEventManager$1 -> org.jivesoftware.smackx.MessageEventManager$1:
    org.jivesoftware.smackx.MessageEventManager this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.MessageEventNotificationListener -> org.jivesoftware.smackx.MessageEventNotificationListener:
    void deliveredNotification(java.lang.String,java.lang.String) -> deliveredNotification
    void displayedNotification(java.lang.String,java.lang.String) -> displayedNotification
    void composingNotification(java.lang.String,java.lang.String) -> composingNotification
    void offlineNotification(java.lang.String,java.lang.String) -> offlineNotification
    void cancelledNotification(java.lang.String,java.lang.String) -> cancelledNotification
org.jivesoftware.smackx.MessageEventRequestListener -> org.jivesoftware.smackx.MessageEventRequestListener:
    void deliveredNotificationRequested(java.lang.String,java.lang.String,org.jivesoftware.smackx.MessageEventManager) -> deliveredNotificationRequested
    void displayedNotificationRequested(java.lang.String,java.lang.String,org.jivesoftware.smackx.MessageEventManager) -> displayedNotificationRequested
    void composingNotificationRequested(java.lang.String,java.lang.String,org.jivesoftware.smackx.MessageEventManager) -> composingNotificationRequested
    void offlineNotificationRequested(java.lang.String,java.lang.String,org.jivesoftware.smackx.MessageEventManager) -> offlineNotificationRequested
org.jivesoftware.smackx.MultipleRecipientInfo -> org.jivesoftware.smackx.MultipleRecipientInfo:
    org.jivesoftware.smackx.packet.MultipleAddresses extension -> extension
    java.util.List getTOAddresses() -> getTOAddresses
    java.util.List getCCAddresses() -> getCCAddresses
    java.lang.String getReplyRoom() -> getReplyRoom
    boolean shouldNotReply() -> shouldNotReply
    org.jivesoftware.smackx.packet.MultipleAddresses$Address getReplyAddress() -> getReplyAddress
org.jivesoftware.smackx.MultipleRecipientManager -> org.jivesoftware.smackx.MultipleRecipientManager:
    org.jivesoftware.smack.util.Cache services -> services
    void send(org.jivesoftware.smack.Connection,org.jivesoftware.smack.packet.Packet,java.util.List,java.util.List,java.util.List) -> send
    void send(org.jivesoftware.smack.Connection,org.jivesoftware.smack.packet.Packet,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,boolean) -> send
    void reply(org.jivesoftware.smack.Connection,org.jivesoftware.smack.packet.Message,org.jivesoftware.smack.packet.Message) -> reply
    org.jivesoftware.smackx.MultipleRecipientInfo getMultipleRecipientInfo(org.jivesoftware.smack.packet.Packet) -> getMultipleRecipientInfo
    void sendToIndividualRecipients(org.jivesoftware.smack.Connection,org.jivesoftware.smack.packet.Packet,java.util.List,java.util.List,java.util.List) -> sendToIndividualRecipients
    void sendThroughService(org.jivesoftware.smack.Connection,org.jivesoftware.smack.packet.Packet,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,boolean,java.lang.String) -> sendThroughService
    java.lang.String getMultipleRecipienServiceAddress(org.jivesoftware.smack.Connection) -> getMultipleRecipienServiceAddress
org.jivesoftware.smackx.MultipleRecipientManager$PacketCopy -> org.jivesoftware.smackx.MultipleRecipientManager$PacketCopy:
    java.lang.String text -> text
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.NodeInformationProvider -> org.jivesoftware.smackx.NodeInformationProvider:
    java.util.List getNodeItems() -> getNodeItems
    java.util.List getNodeFeatures() -> getNodeFeatures
    java.util.List getNodeIdentities() -> getNodeIdentities
    java.util.List getNodePacketExtensions() -> getNodePacketExtensions
org.jivesoftware.smackx.OfflineMessageHeader -> org.jivesoftware.smackx.OfflineMessageHeader:
    java.lang.String user -> user
    java.lang.String jid -> jid
    java.lang.String stamp -> stamp
    java.lang.String getUser() -> getUser
    java.lang.String getJid() -> getJid
    java.lang.String getStamp() -> getStamp
org.jivesoftware.smackx.OfflineMessageManager -> org.jivesoftware.smackx.OfflineMessageManager:
    java.lang.String namespace -> namespace
    org.jivesoftware.smack.Connection connection -> connection
    org.jivesoftware.smack.filter.PacketFilter packetFilter -> packetFilter
    boolean supportsFlexibleRetrieval() -> supportsFlexibleRetrieval
    int getMessageCount() -> getMessageCount
    java.util.Iterator getHeaders() -> getHeaders
    java.util.Iterator getMessages(java.util.List) -> getMessages
    java.util.Iterator getMessages() -> getMessages
    void deleteMessages(java.util.List) -> deleteMessages
    void deleteMessages() -> deleteMessages
org.jivesoftware.smackx.OfflineMessageManager$1 -> org.jivesoftware.smackx.OfflineMessageManager$1:
    java.util.List val$nodes -> val$nodes
    org.jivesoftware.smackx.OfflineMessageManager this$0 -> this$0
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
org.jivesoftware.smackx.PEPListener -> org.jivesoftware.smackx.PEPListener:
    void eventReceived(java.lang.String,org.jivesoftware.smackx.packet.PEPEvent) -> eventReceived
org.jivesoftware.smackx.PEPManager -> org.jivesoftware.smackx.PEPManager:
    java.util.List pepListeners -> pepListeners
    org.jivesoftware.smack.Connection connection -> connection
    org.jivesoftware.smack.filter.PacketFilter packetFilter -> packetFilter
    org.jivesoftware.smack.PacketListener packetListener -> packetListener
    void addPEPListener(org.jivesoftware.smackx.PEPListener) -> addPEPListener
    void removePEPListener(org.jivesoftware.smackx.PEPListener) -> removePEPListener
    void publish(org.jivesoftware.smackx.packet.PEPItem) -> publish
    void firePEPListeners(java.lang.String,org.jivesoftware.smackx.packet.PEPEvent) -> firePEPListeners
    void init() -> init
    void destroy() -> destroy
    void finalize() -> finalize
    void access$000(org.jivesoftware.smackx.PEPManager,java.lang.String,org.jivesoftware.smackx.packet.PEPEvent) -> access$000
org.jivesoftware.smackx.PEPManager$1 -> org.jivesoftware.smackx.PEPManager$1:
    org.jivesoftware.smackx.PEPManager this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.PrivateDataManager -> org.jivesoftware.smackx.PrivateDataManager:
    java.util.Map privateDataProviders -> privateDataProviders
    org.jivesoftware.smack.Connection connection -> connection
    java.lang.String user -> user
    org.jivesoftware.smackx.provider.PrivateDataProvider getPrivateDataProvider(java.lang.String,java.lang.String) -> getPrivateDataProvider
    void addPrivateDataProvider(java.lang.String,java.lang.String,org.jivesoftware.smackx.provider.PrivateDataProvider) -> addPrivateDataProvider
    void removePrivateDataProvider(java.lang.String,java.lang.String) -> removePrivateDataProvider
    org.jivesoftware.smackx.packet.PrivateData getPrivateData(java.lang.String,java.lang.String) -> getPrivateData
    void setPrivateData(org.jivesoftware.smackx.packet.PrivateData) -> setPrivateData
    java.lang.String getProviderKey(java.lang.String,java.lang.String) -> getProviderKey
org.jivesoftware.smackx.PrivateDataManager$1 -> org.jivesoftware.smackx.PrivateDataManager$1:
    java.lang.String val$elementName -> val$elementName
    java.lang.String val$namespace -> val$namespace
    org.jivesoftware.smackx.PrivateDataManager this$0 -> this$0
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.PrivateDataManager$2 -> org.jivesoftware.smackx.PrivateDataManager$2:
    org.jivesoftware.smackx.packet.PrivateData val$privateData -> val$privateData
    org.jivesoftware.smackx.PrivateDataManager this$0 -> this$0
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.PrivateDataManager$PrivateDataIQProvider -> org.jivesoftware.smackx.PrivateDataManager$PrivateDataIQProvider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
org.jivesoftware.smackx.PrivateDataManager$PrivateDataResult -> org.jivesoftware.smackx.PrivateDataManager$PrivateDataResult:
    org.jivesoftware.smackx.packet.PrivateData privateData -> privateData
    org.jivesoftware.smackx.packet.PrivateData getPrivateData() -> getPrivateData
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.RemoteRosterEntry -> org.jivesoftware.smackx.RemoteRosterEntry:
    java.lang.String user -> user
    java.lang.String name -> name
    java.util.List groupNames -> groupNames
    java.lang.String getUser() -> getUser
    java.lang.String getName() -> getName
    java.util.Iterator getGroupNames() -> getGroupNames
    java.lang.String[] getGroupArrayNames() -> getGroupArrayNames
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.ReportedData -> org.jivesoftware.smackx.ReportedData:
    java.util.List columns -> columns
    java.util.List rows -> rows
    java.lang.String title -> title
    org.jivesoftware.smackx.ReportedData getReportedDataFrom(org.jivesoftware.smack.packet.Packet) -> getReportedDataFrom
    void addRow(org.jivesoftware.smackx.ReportedData$Row) -> addRow
    void addColumn(org.jivesoftware.smackx.ReportedData$Column) -> addColumn
    java.util.Iterator getRows() -> getRows
    java.util.Iterator getColumns() -> getColumns
    java.lang.String getTitle() -> getTitle
org.jivesoftware.smackx.ReportedData$Column -> org.jivesoftware.smackx.ReportedData$Column:
    java.lang.String label -> label
    java.lang.String variable -> variable
    java.lang.String type -> type
    java.lang.String getLabel() -> getLabel
    java.lang.String getType() -> getType
    java.lang.String getVariable() -> getVariable
org.jivesoftware.smackx.ReportedData$Field -> org.jivesoftware.smackx.ReportedData$Field:
    java.lang.String variable -> variable
    java.util.List values -> values
    java.lang.String getVariable() -> getVariable
    java.util.Iterator getValues() -> getValues
org.jivesoftware.smackx.ReportedData$Row -> org.jivesoftware.smackx.ReportedData$Row:
    java.util.List fields -> fields
    java.util.Iterator getValues(java.lang.String) -> getValues
    java.util.Iterator getFields() -> getFields
org.jivesoftware.smackx.RosterExchangeListener -> org.jivesoftware.smackx.RosterExchangeListener:
    void entriesReceived(java.lang.String,java.util.Iterator) -> entriesReceived
org.jivesoftware.smackx.RosterExchangeManager -> org.jivesoftware.smackx.RosterExchangeManager:
    java.util.List rosterExchangeListeners -> rosterExchangeListeners
    org.jivesoftware.smack.Connection con -> con
    org.jivesoftware.smack.filter.PacketFilter packetFilter -> packetFilter
    org.jivesoftware.smack.PacketListener packetListener -> packetListener
    void addRosterListener(org.jivesoftware.smackx.RosterExchangeListener) -> addRosterListener
    void removeRosterListener(org.jivesoftware.smackx.RosterExchangeListener) -> removeRosterListener
    void send(org.jivesoftware.smack.Roster,java.lang.String) -> send
    void send(org.jivesoftware.smack.RosterEntry,java.lang.String) -> send
    void send(org.jivesoftware.smack.RosterGroup,java.lang.String) -> send
    void fireRosterExchangeListeners(java.lang.String,java.util.Iterator) -> fireRosterExchangeListeners
    void init() -> init
    void destroy() -> destroy
    void finalize() -> finalize
    void access$0(org.jivesoftware.smackx.RosterExchangeManager,java.lang.String,java.util.Iterator) -> access$0
org.jivesoftware.smackx.RosterExchangeManager$1 -> org.jivesoftware.smackx.RosterExchangeManager$1:
    org.jivesoftware.smackx.RosterExchangeManager this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.ServiceDiscoveryManager -> org.jivesoftware.smackx.ServiceDiscoveryManager:
    java.lang.String DEFAULT_IDENTITY_NAME -> DEFAULT_IDENTITY_NAME
    java.lang.String DEFAULT_IDENTITY_CATEGORY -> DEFAULT_IDENTITY_CATEGORY
    java.lang.String DEFAULT_IDENTITY_TYPE -> DEFAULT_IDENTITY_TYPE
    org.jivesoftware.smackx.packet.DiscoverInfo$Identity defaultIdentity -> defaultIdentity
    java.util.Set identities -> identities
    org.jivesoftware.smackx.packet.DiscoverInfo$Identity identity -> identity
    org.jivesoftware.smackx.entitycaps.EntityCapsManager capsManager -> capsManager
    java.util.Map instances -> instances
    java.lang.ref.WeakReference connection -> connection
    java.util.Set features -> features
    org.jivesoftware.smackx.packet.DataForm extendedInfo -> extendedInfo
    java.util.Map nodeInformationProviders -> nodeInformationProviders
    void setDefaultIdentity(org.jivesoftware.smackx.packet.DiscoverInfo$Identity) -> setDefaultIdentity
    java.lang.String getIdentityName() -> getIdentityName
    void setIdentityName(java.lang.String) -> setIdentityName
    java.lang.String getIdentityType() -> getIdentityType
    void setIdentityType(java.lang.String) -> setIdentityType
    void addIdentity(org.jivesoftware.smackx.packet.DiscoverInfo$Identity) -> addIdentity
    boolean removeIdentity(org.jivesoftware.smackx.packet.DiscoverInfo$Identity) -> removeIdentity
    java.util.Set getIdentities() -> getIdentities
    org.jivesoftware.smackx.ServiceDiscoveryManager getInstanceFor(org.jivesoftware.smack.Connection) -> getInstanceFor
    void addDiscoverInfoTo(org.jivesoftware.smackx.packet.DiscoverInfo) -> addDiscoverInfoTo
    org.jivesoftware.smackx.NodeInformationProvider getNodeInformationProvider(java.lang.String) -> getNodeInformationProvider
    void setNodeInformationProvider(java.lang.String,org.jivesoftware.smackx.NodeInformationProvider) -> setNodeInformationProvider
    void removeNodeInformationProvider(java.lang.String) -> removeNodeInformationProvider
    java.util.Iterator getFeatures() -> getFeatures
    java.util.List getFeaturesList() -> getFeaturesList
    void addFeature(java.lang.String) -> addFeature
    void removeFeature(java.lang.String) -> removeFeature
    boolean includesFeature(java.lang.String) -> includesFeature
    void setExtendedInfo(org.jivesoftware.smackx.packet.DataForm) -> setExtendedInfo
    org.jivesoftware.smackx.packet.DataForm getExtendedInfo() -> getExtendedInfo
    java.util.List getExtendedInfoAsList() -> getExtendedInfoAsList
    void removeExtendedInfo() -> removeExtendedInfo
    org.jivesoftware.smackx.packet.DiscoverInfo discoverInfo(java.lang.String) -> discoverInfo
    org.jivesoftware.smackx.packet.DiscoverInfo discoverInfo(java.lang.String,java.lang.String) -> discoverInfo
    org.jivesoftware.smackx.packet.DiscoverItems discoverItems(java.lang.String) -> discoverItems
    org.jivesoftware.smackx.packet.DiscoverItems discoverItems(java.lang.String,java.lang.String) -> discoverItems
    boolean canPublishItems(java.lang.String) -> canPublishItems
    boolean canPublishItems(org.jivesoftware.smackx.packet.DiscoverInfo) -> canPublishItems
    void publishItems(java.lang.String,org.jivesoftware.smackx.packet.DiscoverItems) -> publishItems
    void publishItems(java.lang.String,java.lang.String,org.jivesoftware.smackx.packet.DiscoverItems) -> publishItems
    void setEntityCapsManager(org.jivesoftware.smackx.entitycaps.EntityCapsManager) -> setEntityCapsManager
    void renewEntityCapsVersion() -> renewEntityCapsVersion
    java.lang.ref.WeakReference access$000(org.jivesoftware.smackx.ServiceDiscoveryManager) -> access$000
    org.jivesoftware.smackx.NodeInformationProvider access$100(org.jivesoftware.smackx.ServiceDiscoveryManager,java.lang.String) -> access$100
org.jivesoftware.smackx.ServiceDiscoveryManager$1 -> org.jivesoftware.smackx.ServiceDiscoveryManager$1:
    void connectionCreated(org.jivesoftware.smack.Connection) -> connectionCreated
org.jivesoftware.smackx.ServiceDiscoveryManager$2 -> org.jivesoftware.smackx.ServiceDiscoveryManager$2:
    org.jivesoftware.smackx.ServiceDiscoveryManager this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.ServiceDiscoveryManager$3 -> org.jivesoftware.smackx.ServiceDiscoveryManager$3:
    org.jivesoftware.smackx.ServiceDiscoveryManager this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.SharedGroupManager -> org.jivesoftware.smackx.SharedGroupManager:
    java.util.List getSharedGroups(org.jivesoftware.smack.Connection) -> getSharedGroups
org.jivesoftware.smackx.XHTMLManager -> org.jivesoftware.smackx.XHTMLManager:
    java.lang.String namespace -> namespace
    java.util.Iterator getBodies(org.jivesoftware.smack.packet.Message) -> getBodies
    void addBody(org.jivesoftware.smack.packet.Message,java.lang.String) -> addBody
    boolean isXHTMLMessage(org.jivesoftware.smack.packet.Message) -> isXHTMLMessage
    void setServiceEnabled(org.jivesoftware.smack.Connection,boolean) -> setServiceEnabled
    boolean isServiceEnabled(org.jivesoftware.smack.Connection) -> isServiceEnabled
    boolean isServiceEnabled(org.jivesoftware.smack.Connection,java.lang.String) -> isServiceEnabled
org.jivesoftware.smackx.XHTMLManager$1 -> org.jivesoftware.smackx.XHTMLManager$1:
    void connectionCreated(org.jivesoftware.smack.Connection) -> connectionCreated
org.jivesoftware.smackx.XHTMLText -> org.jivesoftware.smackx.XHTMLText:
    java.lang.StringBuilder text -> text
    void appendOpenAnchorTag(java.lang.String,java.lang.String) -> appendOpenAnchorTag
    void appendCloseAnchorTag() -> appendCloseAnchorTag
    void appendOpenBlockQuoteTag(java.lang.String) -> appendOpenBlockQuoteTag
    void appendCloseBlockQuoteTag() -> appendCloseBlockQuoteTag
    void appendOpenBodyTag(java.lang.String,java.lang.String) -> appendOpenBodyTag
    java.lang.String closeBodyTag() -> closeBodyTag
    void appendBrTag() -> appendBrTag
    void appendOpenCiteTag() -> appendOpenCiteTag
    void appendOpenCodeTag() -> appendOpenCodeTag
    void appendCloseCodeTag() -> appendCloseCodeTag
    void appendOpenEmTag() -> appendOpenEmTag
    void appendCloseEmTag() -> appendCloseEmTag
    void appendOpenHeaderTag(int,java.lang.String) -> appendOpenHeaderTag
    void appendCloseHeaderTag(int) -> appendCloseHeaderTag
    void appendImageTag(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> appendImageTag
    void appendLineItemTag(java.lang.String) -> appendLineItemTag
    void appendOpenOrderedListTag(java.lang.String) -> appendOpenOrderedListTag
    void appendCloseOrderedListTag() -> appendCloseOrderedListTag
    void appendOpenUnorderedListTag(java.lang.String) -> appendOpenUnorderedListTag
    void appendCloseUnorderedListTag() -> appendCloseUnorderedListTag
    void appendOpenParagraphTag(java.lang.String) -> appendOpenParagraphTag
    void appendCloseParagraphTag() -> appendCloseParagraphTag
    void appendOpenInlinedQuoteTag(java.lang.String) -> appendOpenInlinedQuoteTag
    void appendCloseInlinedQuoteTag() -> appendCloseInlinedQuoteTag
    void appendOpenSpanTag(java.lang.String) -> appendOpenSpanTag
    void appendCloseSpanTag() -> appendCloseSpanTag
    void appendOpenStrongTag() -> appendOpenStrongTag
    void appendCloseStrongTag() -> appendCloseStrongTag
    void append(java.lang.String) -> append
    java.lang.String toString() -> toString
org.jivesoftware.smackx.bookmark.BookmarkManager -> org.jivesoftware.smackx.bookmark.BookmarkManager:
    java.util.Map bookmarkManagerMap -> bookmarkManagerMap
    org.jivesoftware.smackx.PrivateDataManager privateDataManager -> privateDataManager
    org.jivesoftware.smackx.bookmark.Bookmarks bookmarks -> bookmarks
    java.lang.Object bookmarkLock -> bookmarkLock
    org.jivesoftware.smackx.bookmark.BookmarkManager getBookmarkManager(org.jivesoftware.smack.Connection) -> getBookmarkManager
    java.util.Collection getBookmarkedConferences() -> getBookmarkedConferences
    void addBookmarkedConference(java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String) -> addBookmarkedConference
    void removeBookmarkedConference(java.lang.String) -> removeBookmarkedConference
    java.util.Collection getBookmarkedURLs() -> getBookmarkedURLs
    void addBookmarkedURL(java.lang.String,java.lang.String,boolean) -> addBookmarkedURL
    void removeBookmarkedURL(java.lang.String) -> removeBookmarkedURL
    org.jivesoftware.smackx.bookmark.Bookmarks retrieveBookmarks() -> retrieveBookmarks
org.jivesoftware.smackx.bookmark.BookmarkedConference -> org.jivesoftware.smackx.bookmark.BookmarkedConference:
    java.lang.String name -> name
    boolean autoJoin -> autoJoin
    java.lang.String jid -> jid
    java.lang.String nickname -> nickname
    java.lang.String password -> password
    boolean isShared -> isShared
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    boolean isAutoJoin() -> isAutoJoin
    void setAutoJoin(boolean) -> setAutoJoin
    java.lang.String getJid() -> getJid
    java.lang.String getNickname() -> getNickname
    void setNickname(java.lang.String) -> setNickname
    java.lang.String getPassword() -> getPassword
    void setPassword(java.lang.String) -> setPassword
    boolean equals(java.lang.Object) -> equals
    void setShared(boolean) -> setShared
    boolean isShared() -> isShared
org.jivesoftware.smackx.bookmark.BookmarkedURL -> org.jivesoftware.smackx.bookmark.BookmarkedURL:
    java.lang.String name -> name
    java.lang.String URL -> URL
    boolean isRss -> isRss
    boolean isShared -> isShared
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getURL() -> getURL
    void setRss(boolean) -> setRss
    boolean isRss() -> isRss
    boolean equals(java.lang.Object) -> equals
    void setShared(boolean) -> setShared
    boolean isShared() -> isShared
org.jivesoftware.smackx.bookmark.Bookmarks -> org.jivesoftware.smackx.bookmark.Bookmarks:
    java.util.List bookmarkedURLS -> bookmarkedURLS
    java.util.List bookmarkedConferences -> bookmarkedConferences
    void addBookmarkedURL(org.jivesoftware.smackx.bookmark.BookmarkedURL) -> addBookmarkedURL
    void removeBookmarkedURL(org.jivesoftware.smackx.bookmark.BookmarkedURL) -> removeBookmarkedURL
    void clearBookmarkedURLS() -> clearBookmarkedURLS
    void addBookmarkedConference(org.jivesoftware.smackx.bookmark.BookmarkedConference) -> addBookmarkedConference
    void removeBookmarkedConference(org.jivesoftware.smackx.bookmark.BookmarkedConference) -> removeBookmarkedConference
    void clearBookmarkedConferences() -> clearBookmarkedConferences
    java.util.List getBookmarkedURLS() -> getBookmarkedURLS
    java.util.List getBookmarkedConferences() -> getBookmarkedConferences
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
    org.jivesoftware.smackx.bookmark.BookmarkedURL getURLStorage(org.xmlpull.v1.XmlPullParser) -> getURLStorage
    org.jivesoftware.smackx.bookmark.BookmarkedConference getConferenceStorage(org.xmlpull.v1.XmlPullParser) -> getConferenceStorage
    org.jivesoftware.smackx.bookmark.BookmarkedURL access$000(org.xmlpull.v1.XmlPullParser) -> access$000
    org.jivesoftware.smackx.bookmark.BookmarkedConference access$100(org.xmlpull.v1.XmlPullParser) -> access$100
org.jivesoftware.smackx.bookmark.Bookmarks$Provider -> org.jivesoftware.smackx.bookmark.Bookmarks$Provider:
    org.jivesoftware.smackx.packet.PrivateData parsePrivateData(org.xmlpull.v1.XmlPullParser) -> parsePrivateData
org.jivesoftware.smackx.bookmark.SharedBookmark -> org.jivesoftware.smackx.bookmark.SharedBookmark:
    boolean isShared() -> isShared
org.jivesoftware.smackx.bytestreams.BytestreamListener -> org.jivesoftware.smackx.bytestreams.BytestreamListener:
    void incomingBytestreamRequest(org.jivesoftware.smackx.bytestreams.BytestreamRequest) -> incomingBytestreamRequest
org.jivesoftware.smackx.bytestreams.BytestreamManager -> org.jivesoftware.smackx.bytestreams.BytestreamManager:
    void addIncomingBytestreamListener(org.jivesoftware.smackx.bytestreams.BytestreamListener) -> addIncomingBytestreamListener
    void removeIncomingBytestreamListener(org.jivesoftware.smackx.bytestreams.BytestreamListener) -> removeIncomingBytestreamListener
    void addIncomingBytestreamListener(org.jivesoftware.smackx.bytestreams.BytestreamListener,java.lang.String) -> addIncomingBytestreamListener
    void removeIncomingBytestreamListener(java.lang.String) -> removeIncomingBytestreamListener
    org.jivesoftware.smackx.bytestreams.BytestreamSession establishSession(java.lang.String) -> establishSession
    org.jivesoftware.smackx.bytestreams.BytestreamSession establishSession(java.lang.String,java.lang.String) -> establishSession
org.jivesoftware.smackx.bytestreams.BytestreamRequest -> org.jivesoftware.smackx.bytestreams.BytestreamRequest:
    java.lang.String getFrom() -> getFrom
    java.lang.String getSessionID() -> getSessionID
    org.jivesoftware.smackx.bytestreams.BytestreamSession accept() -> accept
    void reject() -> reject
org.jivesoftware.smackx.bytestreams.BytestreamSession -> org.jivesoftware.smackx.bytestreams.BytestreamSession:
    java.io.InputStream getInputStream() -> getInputStream
    java.io.OutputStream getOutputStream() -> getOutputStream
    void close() -> close
    int getReadTimeout() -> getReadTimeout
    void setReadTimeout(int) -> setReadTimeout
org.jivesoftware.smackx.bytestreams.ibb.CloseListener -> org.jivesoftware.smackx.bytestreams.ibb.CloseListener:
    org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamManager manager -> manager
    org.jivesoftware.smack.filter.PacketFilter closeFilter -> closeFilter
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
    org.jivesoftware.smack.filter.PacketFilter getFilter() -> getFilter
org.jivesoftware.smackx.bytestreams.ibb.DataListener -> org.jivesoftware.smackx.bytestreams.ibb.DataListener:
    org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamManager manager -> manager
    org.jivesoftware.smack.filter.PacketFilter dataFilter -> dataFilter
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
    org.jivesoftware.smack.filter.PacketFilter getFilter() -> getFilter
org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamListener -> org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamListener:
    void incomingBytestreamRequest(org.jivesoftware.smackx.bytestreams.BytestreamRequest) -> incomingBytestreamRequest
    void incomingBytestreamRequest(org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamRequest) -> incomingBytestreamRequest
org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamManager -> org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamManager:
    java.lang.String NAMESPACE -> NAMESPACE
    int MAXIMUM_BLOCK_SIZE -> MAXIMUM_BLOCK_SIZE
    java.lang.String SESSION_ID_PREFIX -> SESSION_ID_PREFIX
    java.util.Random randomGenerator -> randomGenerator
    java.util.Map managers -> managers
    org.jivesoftware.smack.Connection connection -> connection
    java.util.Map userListeners -> userListeners
    java.util.List allRequestListeners -> allRequestListeners
    org.jivesoftware.smackx.bytestreams.ibb.InitiationListener initiationListener -> initiationListener
    org.jivesoftware.smackx.bytestreams.ibb.DataListener dataListener -> dataListener
    org.jivesoftware.smackx.bytestreams.ibb.CloseListener closeListener -> closeListener
    java.util.Map sessions -> sessions
    int defaultBlockSize -> defaultBlockSize
    int maximumBlockSize -> maximumBlockSize
    org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamManager$StanzaType stanza -> stanza
    java.util.List ignoredBytestreamRequests -> ignoredBytestreamRequests
    org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamManager getByteStreamManager(org.jivesoftware.smack.Connection) -> getByteStreamManager
    void addIncomingBytestreamListener(org.jivesoftware.smackx.bytestreams.BytestreamListener) -> addIncomingBytestreamListener
    void removeIncomingBytestreamListener(org.jivesoftware.smackx.bytestreams.BytestreamListener) -> removeIncomingBytestreamListener
    void addIncomingBytestreamListener(org.jivesoftware.smackx.bytestreams.BytestreamListener,java.lang.String) -> addIncomingBytestreamListener
    void removeIncomingBytestreamListener(java.lang.String) -> removeIncomingBytestreamListener
    void ignoreBytestreamRequestOnce(java.lang.String) -> ignoreBytestreamRequestOnce
    int getDefaultBlockSize() -> getDefaultBlockSize
    void setDefaultBlockSize(int) -> setDefaultBlockSize
    int getMaximumBlockSize() -> getMaximumBlockSize
    void setMaximumBlockSize(int) -> setMaximumBlockSize
    org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamManager$StanzaType getStanza() -> getStanza
    void setStanza(org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamManager$StanzaType) -> setStanza
    org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession establishSession(java.lang.String) -> establishSession
    org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession establishSession(java.lang.String,java.lang.String) -> establishSession
    void replyRejectPacket(org.jivesoftware.smack.packet.IQ) -> replyRejectPacket
    void replyResourceConstraintPacket(org.jivesoftware.smack.packet.IQ) -> replyResourceConstraintPacket
    void replyItemNotFoundPacket(org.jivesoftware.smack.packet.IQ) -> replyItemNotFoundPacket
    java.lang.String getNextSessionID() -> getNextSessionID
    org.jivesoftware.smack.Connection getConnection() -> getConnection
    org.jivesoftware.smackx.bytestreams.BytestreamListener getUserListener(java.lang.String) -> getUserListener
    java.util.List getAllRequestListeners() -> getAllRequestListeners
    java.util.Map getSessions() -> getSessions
    java.util.List getIgnoredBytestreamRequests() -> getIgnoredBytestreamRequests
    void disableService() -> disableService
    org.jivesoftware.smackx.bytestreams.BytestreamSession establishSession(java.lang.String,java.lang.String) -> establishSession
    org.jivesoftware.smackx.bytestreams.BytestreamSession establishSession(java.lang.String) -> establishSession
    void access$000(org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamManager) -> access$000
org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamManager$1 -> org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamManager$1:
    void connectionCreated(org.jivesoftware.smack.Connection) -> connectionCreated
org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamManager$1$1 -> org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamManager$1$1:
    org.jivesoftware.smack.Connection val$connection -> val$connection
    org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamManager$1 this$0 -> this$0
    void connectionClosed() -> connectionClosed
    void connectionClosedOnError(java.lang.Exception) -> connectionClosedOnError
    void reconnectionSuccessful() -> reconnectionSuccessful
org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamManager$StanzaType -> org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamManager$StanzaType:
    org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamManager$StanzaType IQ -> IQ
    org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamManager$StanzaType MESSAGE -> MESSAGE
    org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamManager$StanzaType[] $VALUES -> $VALUES
    org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamManager$StanzaType[] values() -> values
    org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamManager$StanzaType valueOf(java.lang.String) -> valueOf
org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamRequest -> org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamRequest:
    org.jivesoftware.smackx.bytestreams.ibb.packet.Open byteStreamRequest -> byteStreamRequest
    org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamManager manager -> manager
    java.lang.String getFrom() -> getFrom
    java.lang.String getSessionID() -> getSessionID
    org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession accept() -> accept
    void reject() -> reject
    org.jivesoftware.smackx.bytestreams.BytestreamSession accept() -> accept
org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession -> org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession:
    org.jivesoftware.smack.Connection connection -> connection
    org.jivesoftware.smackx.bytestreams.ibb.packet.Open byteStreamRequest -> byteStreamRequest
    org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$IBBInputStream inputStream -> inputStream
    org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$IBBOutputStream outputStream -> outputStream
    java.lang.String remoteJID -> remoteJID
    boolean closeBothStreamsEnabled -> closeBothStreamsEnabled
    boolean isClosed -> isClosed
    java.io.InputStream getInputStream() -> getInputStream
    java.io.OutputStream getOutputStream() -> getOutputStream
    int getReadTimeout() -> getReadTimeout
    void setReadTimeout(int) -> setReadTimeout
    boolean isCloseBothStreamsEnabled() -> isCloseBothStreamsEnabled
    void setCloseBothStreamsEnabled(boolean) -> setCloseBothStreamsEnabled
    void close() -> close
    void closeByPeer(org.jivesoftware.smackx.bytestreams.ibb.packet.Close) -> closeByPeer
    void closeByLocal(boolean) -> closeByLocal
    org.jivesoftware.smack.Connection access$800(org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession) -> access$800
    java.lang.String access$1000(org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession) -> access$1000
    org.jivesoftware.smackx.bytestreams.ibb.packet.Open access$1100(org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession) -> access$1100
org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$1 -> org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$1:
    int[] $SwitchMap$org$jivesoftware$smackx$bytestreams$ibb$InBandBytestreamManager$StanzaType -> $SwitchMap$org$jivesoftware$smackx$bytestreams$ibb$InBandBytestreamManager$StanzaType
org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$IBBDataPacketFilter -> org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$IBBDataPacketFilter:
    org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession this$0 -> this$0
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$IBBInputStream -> org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$IBBInputStream:
    org.jivesoftware.smack.PacketListener dataPacketListener -> dataPacketListener
    java.util.concurrent.BlockingQueue dataQueue -> dataQueue
    byte[] buffer -> buffer
    int bufferPointer -> bufferPointer
    long seq -> seq
    boolean isClosed -> isClosed
    boolean closeInvoked -> closeInvoked
    int readTimeout -> readTimeout
    org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession this$0 -> this$0
    org.jivesoftware.smack.PacketListener getDataPacketListener() -> getDataPacketListener
    org.jivesoftware.smack.filter.PacketFilter getDataPacketFilter() -> getDataPacketFilter
    int read() -> read
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
    boolean loadBuffer() -> loadBuffer
    void checkClosed() -> checkClosed
    boolean markSupported() -> markSupported
    void close() -> close
    void closeInternal() -> closeInternal
    void cleanup() -> cleanup
    int access$400(org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$IBBInputStream) -> access$400
    int access$402(org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$IBBInputStream,int) -> access$402
    void access$500(org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$IBBInputStream) -> access$500
    void access$600(org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$IBBInputStream) -> access$600
    boolean access$700(org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$IBBInputStream) -> access$700
org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$IBBOutputStream -> org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$IBBOutputStream:
    byte[] buffer -> buffer
    int bufferPointer -> bufferPointer
    long seq -> seq
    boolean isClosed -> isClosed
    org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession this$0 -> this$0
    void writeToXML(org.jivesoftware.smackx.bytestreams.ibb.packet.DataPacketExtension) -> writeToXML
    void write(int) -> write
    void write(byte[],int,int) -> write
    void write(byte[]) -> write
    void writeOut(byte[],int,int) -> writeOut
    void flush() -> flush
    void flushBuffer() -> flushBuffer
    void close() -> close
    void closeInternal(boolean) -> closeInternal
org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$IQIBBInputStream -> org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$IQIBBInputStream:
    org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession this$0 -> this$0
    org.jivesoftware.smack.PacketListener getDataPacketListener() -> getDataPacketListener
    org.jivesoftware.smack.filter.PacketFilter getDataPacketFilter() -> getDataPacketFilter
org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$IQIBBInputStream$1 -> org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$IQIBBInputStream$1:
    long lastSequence -> lastSequence
    org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$IQIBBInputStream this$1 -> this$1
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$IQIBBOutputStream -> org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$IQIBBOutputStream:
    org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession this$0 -> this$0
    void writeToXML(org.jivesoftware.smackx.bytestreams.ibb.packet.DataPacketExtension) -> writeToXML
org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$MessageIBBInputStream -> org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$MessageIBBInputStream:
    org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession this$0 -> this$0
    org.jivesoftware.smack.PacketListener getDataPacketListener() -> getDataPacketListener
    org.jivesoftware.smack.filter.PacketFilter getDataPacketFilter() -> getDataPacketFilter
org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$MessageIBBInputStream$1 -> org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$MessageIBBInputStream$1:
    org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$MessageIBBInputStream this$1 -> this$1
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$MessageIBBOutputStream -> org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$MessageIBBOutputStream:
    org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession this$0 -> this$0
    void writeToXML(org.jivesoftware.smackx.bytestreams.ibb.packet.DataPacketExtension) -> writeToXML
org.jivesoftware.smackx.bytestreams.ibb.InitiationListener -> org.jivesoftware.smackx.bytestreams.ibb.InitiationListener:
    org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamManager manager -> manager
    org.jivesoftware.smack.filter.PacketFilter initFilter -> initFilter
    java.util.concurrent.ExecutorService initiationListenerExecutor -> initiationListenerExecutor
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
    void processRequest(org.jivesoftware.smack.packet.Packet) -> processRequest
    org.jivesoftware.smack.filter.PacketFilter getFilter() -> getFilter
    void shutdown() -> shutdown
    void access$000(org.jivesoftware.smackx.bytestreams.ibb.InitiationListener,org.jivesoftware.smack.packet.Packet) -> access$000
org.jivesoftware.smackx.bytestreams.ibb.InitiationListener$1 -> org.jivesoftware.smackx.bytestreams.ibb.InitiationListener$1:
    org.jivesoftware.smack.packet.Packet val$packet -> val$packet
    org.jivesoftware.smackx.bytestreams.ibb.InitiationListener this$0 -> this$0
    void run() -> run
org.jivesoftware.smackx.bytestreams.ibb.packet.Close -> org.jivesoftware.smackx.bytestreams.ibb.packet.Close:
    java.lang.String sessionID -> sessionID
    java.lang.String getSessionID() -> getSessionID
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.bytestreams.ibb.packet.Data -> org.jivesoftware.smackx.bytestreams.ibb.packet.Data:
    org.jivesoftware.smackx.bytestreams.ibb.packet.DataPacketExtension dataPacketExtension -> dataPacketExtension
    org.jivesoftware.smackx.bytestreams.ibb.packet.DataPacketExtension getDataPacketExtension() -> getDataPacketExtension
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.bytestreams.ibb.packet.DataPacketExtension -> org.jivesoftware.smackx.bytestreams.ibb.packet.DataPacketExtension:
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String sessionID -> sessionID
    long seq -> seq
    java.lang.String data -> data
    byte[] decodedData -> decodedData
    java.lang.String getSessionID() -> getSessionID
    long getSeq() -> getSeq
    java.lang.String getData() -> getData
    byte[] getDecodedData() -> getDecodedData
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.bytestreams.ibb.packet.Open -> org.jivesoftware.smackx.bytestreams.ibb.packet.Open:
    java.lang.String sessionID -> sessionID
    int blockSize -> blockSize
    org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamManager$StanzaType stanza -> stanza
    java.lang.String getSessionID() -> getSessionID
    int getBlockSize() -> getBlockSize
    org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamManager$StanzaType getStanza() -> getStanza
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.bytestreams.ibb.provider.CloseIQProvider -> org.jivesoftware.smackx.bytestreams.ibb.provider.CloseIQProvider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
org.jivesoftware.smackx.bytestreams.ibb.provider.DataPacketProvider -> org.jivesoftware.smackx.bytestreams.ibb.provider.DataPacketProvider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
org.jivesoftware.smackx.bytestreams.ibb.provider.OpenIQProvider -> org.jivesoftware.smackx.bytestreams.ibb.provider.OpenIQProvider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
org.jivesoftware.smackx.bytestreams.socks5.InitiationListener -> org.jivesoftware.smackx.bytestreams.socks5.InitiationListener:
    org.jivesoftware.smackx.bytestreams.socks5.Socks5BytestreamManager manager -> manager
    org.jivesoftware.smack.filter.PacketFilter initFilter -> initFilter
    java.util.concurrent.ExecutorService initiationListenerExecutor -> initiationListenerExecutor
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
    void processRequest(org.jivesoftware.smack.packet.Packet) -> processRequest
    org.jivesoftware.smack.filter.PacketFilter getFilter() -> getFilter
    void shutdown() -> shutdown
    void access$000(org.jivesoftware.smackx.bytestreams.socks5.InitiationListener,org.jivesoftware.smack.packet.Packet) -> access$000
org.jivesoftware.smackx.bytestreams.socks5.InitiationListener$1 -> org.jivesoftware.smackx.bytestreams.socks5.InitiationListener$1:
    org.jivesoftware.smack.packet.Packet val$packet -> val$packet
    org.jivesoftware.smackx.bytestreams.socks5.InitiationListener this$0 -> this$0
    void run() -> run
org.jivesoftware.smackx.bytestreams.socks5.Socks5BytestreamListener -> org.jivesoftware.smackx.bytestreams.socks5.Socks5BytestreamListener:
    void incomingBytestreamRequest(org.jivesoftware.smackx.bytestreams.BytestreamRequest) -> incomingBytestreamRequest
    void incomingBytestreamRequest(org.jivesoftware.smackx.bytestreams.socks5.Socks5BytestreamRequest) -> incomingBytestreamRequest
org.jivesoftware.smackx.bytestreams.socks5.Socks5BytestreamManager -> org.jivesoftware.smackx.bytestreams.socks5.Socks5BytestreamManager:
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String SESSION_ID_PREFIX -> SESSION_ID_PREFIX
    java.util.Random randomGenerator -> randomGenerator
    java.util.Map managers -> managers
    org.jivesoftware.smack.Connection connection -> connection
    java.util.Map userListeners -> userListeners
    java.util.List allRequestListeners -> allRequestListeners
    org.jivesoftware.smackx.bytestreams.socks5.InitiationListener initiationListener -> initiationListener
    int targetResponseTimeout -> targetResponseTimeout
    int proxyConnectionTimeout -> proxyConnectionTimeout
    java.util.List proxyBlacklist -> proxyBlacklist
    java.lang.String lastWorkingProxy -> lastWorkingProxy
    boolean proxyPrioritizationEnabled -> proxyPrioritizationEnabled
    java.util.List ignoredBytestreamRequests -> ignoredBytestreamRequests
    org.jivesoftware.smackx.bytestreams.socks5.Socks5BytestreamManager getBytestreamManager(org.jivesoftware.smack.Connection) -> getBytestreamManager
    void addIncomingBytestreamListener(org.jivesoftware.smackx.bytestreams.BytestreamListener) -> addIncomingBytestreamListener
    void removeIncomingBytestreamListener(org.jivesoftware.smackx.bytestreams.BytestreamListener) -> removeIncomingBytestreamListener
    void addIncomingBytestreamListener(org.jivesoftware.smackx.bytestreams.BytestreamListener,java.lang.String) -> addIncomingBytestreamListener
    void removeIncomingBytestreamListener(java.lang.String) -> removeIncomingBytestreamListener
    void ignoreBytestreamRequestOnce(java.lang.String) -> ignoreBytestreamRequestOnce
    void disableService() -> disableService
    int getTargetResponseTimeout() -> getTargetResponseTimeout
    void setTargetResponseTimeout(int) -> setTargetResponseTimeout
    int getProxyConnectionTimeout() -> getProxyConnectionTimeout
    void setProxyConnectionTimeout(int) -> setProxyConnectionTimeout
    boolean isProxyPrioritizationEnabled() -> isProxyPrioritizationEnabled
    void setProxyPrioritizationEnabled(boolean) -> setProxyPrioritizationEnabled
    org.jivesoftware.smackx.bytestreams.socks5.Socks5BytestreamSession establishSession(java.lang.String) -> establishSession
    org.jivesoftware.smackx.bytestreams.socks5.Socks5BytestreamSession establishSession(java.lang.String,java.lang.String) -> establishSession
    boolean supportsSocks5(java.lang.String) -> supportsSocks5
    java.util.List determineProxies() -> determineProxies
    java.util.List determineStreamHostInfos(java.util.List) -> determineStreamHostInfos
    org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream createStreamHostRequest(java.lang.String) -> createStreamHostRequest
    java.util.List getLocalStreamHost() -> getLocalStreamHost
    org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream createBytestreamInitiation(java.lang.String,java.lang.String,java.util.List) -> createBytestreamInitiation
    void replyRejectPacket(org.jivesoftware.smack.packet.IQ) -> replyRejectPacket
    void activate() -> activate
    void enableService() -> enableService
    java.lang.String getNextSessionID() -> getNextSessionID
    org.jivesoftware.smack.Connection getConnection() -> getConnection
    org.jivesoftware.smackx.bytestreams.BytestreamListener getUserListener(java.lang.String) -> getUserListener
    java.util.List getAllRequestListeners() -> getAllRequestListeners
    java.util.List getIgnoredBytestreamRequests() -> getIgnoredBytestreamRequests
    org.jivesoftware.smackx.bytestreams.BytestreamSession establishSession(java.lang.String,java.lang.String) -> establishSession
    org.jivesoftware.smackx.bytestreams.BytestreamSession establishSession(java.lang.String) -> establishSession
org.jivesoftware.smackx.bytestreams.socks5.Socks5BytestreamManager$1 -> org.jivesoftware.smackx.bytestreams.socks5.Socks5BytestreamManager$1:
    void connectionCreated(org.jivesoftware.smack.Connection) -> connectionCreated
org.jivesoftware.smackx.bytestreams.socks5.Socks5BytestreamManager$1$1 -> org.jivesoftware.smackx.bytestreams.socks5.Socks5BytestreamManager$1$1:
    org.jivesoftware.smack.Connection val$connection -> val$connection
    org.jivesoftware.smackx.bytestreams.socks5.Socks5BytestreamManager$1 this$0 -> this$0
    void connectionClosed() -> connectionClosed
    void connectionClosedOnError(java.lang.Exception) -> connectionClosedOnError
    void reconnectionSuccessful() -> reconnectionSuccessful
org.jivesoftware.smackx.bytestreams.socks5.Socks5BytestreamRequest -> org.jivesoftware.smackx.bytestreams.socks5.Socks5BytestreamRequest:
    long BLACKLIST_LIFETIME -> BLACKLIST_LIFETIME
    int BLACKLIST_MAX_SIZE -> BLACKLIST_MAX_SIZE
    org.jivesoftware.smack.util.Cache ADDRESS_BLACKLIST -> ADDRESS_BLACKLIST
    int CONNECTION_FAILURE_THRESHOLD -> CONNECTION_FAILURE_THRESHOLD
    org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream bytestreamRequest -> bytestreamRequest
    org.jivesoftware.smackx.bytestreams.socks5.Socks5BytestreamManager manager -> manager
    int totalConnectTimeout -> totalConnectTimeout
    int minimumConnectTimeout -> minimumConnectTimeout
    int getConnectFailureThreshold() -> getConnectFailureThreshold
    void setConnectFailureThreshold(int) -> setConnectFailureThreshold
    int getTotalConnectTimeout() -> getTotalConnectTimeout
    void setTotalConnectTimeout(int) -> setTotalConnectTimeout
    int getMinimumConnectTimeout() -> getMinimumConnectTimeout
    void setMinimumConnectTimeout(int) -> setMinimumConnectTimeout
    java.lang.String getFrom() -> getFrom
    java.lang.String getSessionID() -> getSessionID
    org.jivesoftware.smackx.bytestreams.socks5.Socks5BytestreamSession accept() -> accept
    void reject() -> reject
    void cancelRequest() -> cancelRequest
    org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream createUsedHostResponse(org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream$StreamHost) -> createUsedHostResponse
    void incrementConnectionFailures(java.lang.String) -> incrementConnectionFailures
    int getConnectionFailures(java.lang.String) -> getConnectionFailures
    org.jivesoftware.smackx.bytestreams.BytestreamSession accept() -> accept
org.jivesoftware.smackx.bytestreams.socks5.Socks5BytestreamSession -> org.jivesoftware.smackx.bytestreams.socks5.Socks5BytestreamSession:
    java.net.Socket socket -> socket
    boolean isDirect -> isDirect
    boolean isDirect() -> isDirect
    boolean isMediated() -> isMediated
    java.io.InputStream getInputStream() -> getInputStream
    java.io.OutputStream getOutputStream() -> getOutputStream
    int getReadTimeout() -> getReadTimeout
    void setReadTimeout(int) -> setReadTimeout
    void close() -> close
org.jivesoftware.smackx.bytestreams.socks5.Socks5Client -> org.jivesoftware.smackx.bytestreams.socks5.Socks5Client:
    org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream$StreamHost streamHost -> streamHost
    java.lang.String digest -> digest
    java.net.Socket getSocket(int) -> getSocket
    boolean establish(java.net.Socket) -> establish
    byte[] createSocks5ConnectRequest() -> createSocks5ConnectRequest
org.jivesoftware.smackx.bytestreams.socks5.Socks5Client$1 -> org.jivesoftware.smackx.bytestreams.socks5.Socks5Client$1:
    org.jivesoftware.smackx.bytestreams.socks5.Socks5Client this$0 -> this$0
    java.net.Socket call() -> call
    java.lang.Object call() -> call
org.jivesoftware.smackx.bytestreams.socks5.Socks5ClientForInitiator -> org.jivesoftware.smackx.bytestreams.socks5.Socks5ClientForInitiator:
    org.jivesoftware.smack.Connection connection -> connection
    java.lang.String sessionID -> sessionID
    java.lang.String target -> target
    java.net.Socket getSocket(int) -> getSocket
    void activate() -> activate
    org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream createStreamHostActivation() -> createStreamHostActivation
org.jivesoftware.smackx.bytestreams.socks5.Socks5Proxy -> org.jivesoftware.smackx.bytestreams.socks5.Socks5Proxy:
    org.jivesoftware.smackx.bytestreams.socks5.Socks5Proxy socks5Server -> socks5Server
    org.jivesoftware.smackx.bytestreams.socks5.Socks5Proxy$Socks5ServerProcess serverProcess -> serverProcess
    java.lang.Thread serverThread -> serverThread
    java.net.ServerSocket serverSocket -> serverSocket
    java.util.Map connectionMap -> connectionMap
    java.util.List allowedConnections -> allowedConnections
    java.util.Set localAddresses -> localAddresses
    org.jivesoftware.smackx.bytestreams.socks5.Socks5Proxy getSocks5Proxy() -> getSocks5Proxy
    void start() -> start
    void stop() -> stop
    void addLocalAddress(java.lang.String) -> addLocalAddress
    void removeLocalAddress(java.lang.String) -> removeLocalAddress
    java.util.List getLocalAddresses() -> getLocalAddresses
    void replaceLocalAddresses(java.util.List) -> replaceLocalAddresses
    int getPort() -> getPort
    java.net.Socket getSocket(java.lang.String) -> getSocket
    void addTransfer(java.lang.String) -> addTransfer
    void removeTransfer(java.lang.String) -> removeTransfer
    boolean isRunning() -> isRunning
    java.net.ServerSocket access$100(org.jivesoftware.smackx.bytestreams.socks5.Socks5Proxy) -> access$100
    java.util.List access$200(org.jivesoftware.smackx.bytestreams.socks5.Socks5Proxy) -> access$200
    java.util.Map access$300(org.jivesoftware.smackx.bytestreams.socks5.Socks5Proxy) -> access$300
org.jivesoftware.smackx.bytestreams.socks5.Socks5Proxy$1 -> org.jivesoftware.smackx.bytestreams.socks5.Socks5Proxy$1:
org.jivesoftware.smackx.bytestreams.socks5.Socks5Proxy$Socks5ServerProcess -> org.jivesoftware.smackx.bytestreams.socks5.Socks5Proxy$Socks5ServerProcess:
    org.jivesoftware.smackx.bytestreams.socks5.Socks5Proxy this$0 -> this$0
    void run() -> run
    void establishConnection(java.net.Socket) -> establishConnection
org.jivesoftware.smackx.bytestreams.socks5.Socks5Utils -> org.jivesoftware.smackx.bytestreams.socks5.Socks5Utils:
    java.lang.String createDigest(java.lang.String,java.lang.String,java.lang.String) -> createDigest
    byte[] receiveSocks5Message(java.io.DataInputStream) -> receiveSocks5Message
org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream -> org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream:
    java.lang.String sessionID -> sessionID
    org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream$Mode mode -> mode
    java.util.List streamHosts -> streamHosts
    org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream$StreamHostUsed usedHost -> usedHost
    org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream$Activate toActivate -> toActivate
    void setSessionID(java.lang.String) -> setSessionID
    java.lang.String getSessionID() -> getSessionID
    void setMode(org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream$Mode) -> setMode
    org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream$Mode getMode() -> getMode
    org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream$StreamHost addStreamHost(java.lang.String,java.lang.String) -> addStreamHost
    org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream$StreamHost addStreamHost(java.lang.String,java.lang.String,int) -> addStreamHost
    void addStreamHost(org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream$StreamHost) -> addStreamHost
    java.util.Collection getStreamHosts() -> getStreamHosts
    org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream$StreamHost getStreamHost(java.lang.String) -> getStreamHost
    int countStreamHosts() -> countStreamHosts
    void setUsedHost(java.lang.String) -> setUsedHost
    org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream$StreamHostUsed getUsedHost() -> getUsedHost
    org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream$Activate getToActivate() -> getToActivate
    void setToActivate(java.lang.String) -> setToActivate
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream$Activate -> org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream$Activate:
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String ELEMENTNAME -> ELEMENTNAME
    java.lang.String target -> target
    java.lang.String getTarget() -> getTarget
    java.lang.String getNamespace() -> getNamespace
    java.lang.String getElementName() -> getElementName
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream$Mode -> org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream$Mode:
    org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream$Mode tcp -> tcp
    org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream$Mode udp -> udp
    org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream$Mode[] $VALUES -> $VALUES
    org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream$Mode[] values() -> values
    org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream$Mode valueOf(java.lang.String) -> valueOf
    org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream$Mode fromName(java.lang.String) -> fromName
org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream$StreamHost -> org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream$StreamHost:
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String ELEMENTNAME -> ELEMENTNAME
    java.lang.String JID -> JID
    java.lang.String addy -> addy
    int port -> port
    java.lang.String getJID() -> getJID
    java.lang.String getAddress() -> getAddress
    void setPort(int) -> setPort
    int getPort() -> getPort
    java.lang.String getNamespace() -> getNamespace
    java.lang.String getElementName() -> getElementName
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream$StreamHostUsed -> org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream$StreamHostUsed:
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String ELEMENTNAME -> ELEMENTNAME
    java.lang.String JID -> JID
    java.lang.String getJID() -> getJID
    java.lang.String getNamespace() -> getNamespace
    java.lang.String getElementName() -> getElementName
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.bytestreams.socks5.provider.BytestreamsProvider -> org.jivesoftware.smackx.bytestreams.socks5.provider.BytestreamsProvider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
org.jivesoftware.smackx.carbons.Carbon -> org.jivesoftware.smackx.carbons.Carbon:
    java.lang.String NAMESPACE -> NAMESPACE
    org.jivesoftware.smackx.carbons.Carbon$Direction dir -> dir
    org.jivesoftware.smackx.forward.Forwarded fwd -> fwd
    org.jivesoftware.smackx.carbons.Carbon$Direction getDirection() -> getDirection
    org.jivesoftware.smackx.forward.Forwarded getForwarded() -> getForwarded
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.carbons.Carbon$Direction -> org.jivesoftware.smackx.carbons.Carbon$Direction:
    org.jivesoftware.smackx.carbons.Carbon$Direction received -> received
    org.jivesoftware.smackx.carbons.Carbon$Direction sent -> sent
    org.jivesoftware.smackx.carbons.Carbon$Direction[] $VALUES -> $VALUES
    org.jivesoftware.smackx.carbons.Carbon$Direction[] values() -> values
    org.jivesoftware.smackx.carbons.Carbon$Direction valueOf(java.lang.String) -> valueOf
org.jivesoftware.smackx.carbons.Carbon$Private -> org.jivesoftware.smackx.carbons.Carbon$Private:
    java.lang.String ELEMENT -> ELEMENT
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.carbons.Carbon$Provider -> org.jivesoftware.smackx.carbons.Carbon$Provider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.carbons.CarbonManager -> org.jivesoftware.smackx.carbons.CarbonManager:
    java.util.Map instances -> instances
    org.jivesoftware.smack.Connection connection -> connection
    boolean enabled_state -> enabled_state
    org.jivesoftware.smackx.carbons.CarbonManager getInstanceFor(org.jivesoftware.smack.Connection) -> getInstanceFor
    org.jivesoftware.smack.packet.IQ carbonsEnabledIQ(boolean) -> carbonsEnabledIQ
    boolean isSupportedByServer() -> isSupportedByServer
    void sendCarbonsEnabled(boolean) -> sendCarbonsEnabled
    boolean setCarbonsEnabled(boolean) -> setCarbonsEnabled
    boolean enableCarbons() -> enableCarbons
    boolean disableCarbons() -> disableCarbons
    boolean getCarbonsEnabled() -> getCarbonsEnabled
    org.jivesoftware.smackx.carbons.Carbon getCarbon(org.jivesoftware.smack.packet.Message) -> getCarbon
    void disableCarbons(org.jivesoftware.smack.packet.Message) -> disableCarbons
    boolean access$002(org.jivesoftware.smackx.carbons.CarbonManager,boolean) -> access$002
    org.jivesoftware.smack.Connection access$100(org.jivesoftware.smackx.carbons.CarbonManager) -> access$100
org.jivesoftware.smackx.carbons.CarbonManager$1 -> org.jivesoftware.smackx.carbons.CarbonManager$1:
    void connectionCreated(org.jivesoftware.smack.Connection) -> connectionCreated
org.jivesoftware.smackx.carbons.CarbonManager$2 -> org.jivesoftware.smackx.carbons.CarbonManager$2:
    boolean val$new_state -> val$new_state
    org.jivesoftware.smackx.carbons.CarbonManager this$0 -> this$0
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.carbons.CarbonManager$3 -> org.jivesoftware.smackx.carbons.CarbonManager$3:
    boolean val$new_state -> val$new_state
    org.jivesoftware.smackx.carbons.CarbonManager this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.commands.AdHocCommand -> org.jivesoftware.smackx.commands.AdHocCommand:
    org.jivesoftware.smackx.packet.AdHocCommandData data -> data
    org.jivesoftware.smackx.commands.AdHocCommand$SpecificErrorCondition getSpecificErrorCondition(org.jivesoftware.smack.packet.XMPPError) -> getSpecificErrorCondition
    void setName(java.lang.String) -> setName
    java.lang.String getName() -> getName
    void setNode(java.lang.String) -> setNode
    java.lang.String getNode() -> getNode
    java.lang.String getOwnerJID() -> getOwnerJID
    java.util.List getNotes() -> getNotes
    void addNote(org.jivesoftware.smackx.commands.AdHocCommandNote) -> addNote
    java.lang.String getRaw() -> getRaw
    org.jivesoftware.smackx.Form getForm() -> getForm
    void setForm(org.jivesoftware.smackx.Form) -> setForm
    void execute() -> execute
    void next(org.jivesoftware.smackx.Form) -> next
    void complete(org.jivesoftware.smackx.Form) -> complete
    void prev() -> prev
    void cancel() -> cancel
    java.util.List getActions() -> getActions
    void addActionAvailable(org.jivesoftware.smackx.commands.AdHocCommand$Action) -> addActionAvailable
    org.jivesoftware.smackx.commands.AdHocCommand$Action getExecuteAction() -> getExecuteAction
    void setExecuteAction(org.jivesoftware.smackx.commands.AdHocCommand$Action) -> setExecuteAction
    org.jivesoftware.smackx.commands.AdHocCommand$Status getStatus() -> getStatus
    void setData(org.jivesoftware.smackx.packet.AdHocCommandData) -> setData
    org.jivesoftware.smackx.packet.AdHocCommandData getData() -> getData
    boolean isValidAction(org.jivesoftware.smackx.commands.AdHocCommand$Action) -> isValidAction
org.jivesoftware.smackx.commands.AdHocCommand$Action -> org.jivesoftware.smackx.commands.AdHocCommand$Action:
    org.jivesoftware.smackx.commands.AdHocCommand$Action execute -> execute
    org.jivesoftware.smackx.commands.AdHocCommand$Action cancel -> cancel
    org.jivesoftware.smackx.commands.AdHocCommand$Action prev -> prev
    org.jivesoftware.smackx.commands.AdHocCommand$Action next -> next
    org.jivesoftware.smackx.commands.AdHocCommand$Action complete -> complete
    org.jivesoftware.smackx.commands.AdHocCommand$Action unknown -> unknown
    org.jivesoftware.smackx.commands.AdHocCommand$Action[] $VALUES -> $VALUES
    org.jivesoftware.smackx.commands.AdHocCommand$Action[] values() -> values
    org.jivesoftware.smackx.commands.AdHocCommand$Action valueOf(java.lang.String) -> valueOf
org.jivesoftware.smackx.commands.AdHocCommand$SpecificErrorCondition -> org.jivesoftware.smackx.commands.AdHocCommand$SpecificErrorCondition:
    org.jivesoftware.smackx.commands.AdHocCommand$SpecificErrorCondition badAction -> badAction
    org.jivesoftware.smackx.commands.AdHocCommand$SpecificErrorCondition malformedAction -> malformedAction
    org.jivesoftware.smackx.commands.AdHocCommand$SpecificErrorCondition badLocale -> badLocale
    org.jivesoftware.smackx.commands.AdHocCommand$SpecificErrorCondition badPayload -> badPayload
    org.jivesoftware.smackx.commands.AdHocCommand$SpecificErrorCondition badSessionid -> badSessionid
    org.jivesoftware.smackx.commands.AdHocCommand$SpecificErrorCondition sessionExpired -> sessionExpired
    java.lang.String value -> value
    org.jivesoftware.smackx.commands.AdHocCommand$SpecificErrorCondition[] $VALUES -> $VALUES
    org.jivesoftware.smackx.commands.AdHocCommand$SpecificErrorCondition[] values() -> values
    org.jivesoftware.smackx.commands.AdHocCommand$SpecificErrorCondition valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
org.jivesoftware.smackx.commands.AdHocCommand$Status -> org.jivesoftware.smackx.commands.AdHocCommand$Status:
    org.jivesoftware.smackx.commands.AdHocCommand$Status executing -> executing
    org.jivesoftware.smackx.commands.AdHocCommand$Status completed -> completed
    org.jivesoftware.smackx.commands.AdHocCommand$Status canceled -> canceled
    org.jivesoftware.smackx.commands.AdHocCommand$Status[] $VALUES -> $VALUES
    org.jivesoftware.smackx.commands.AdHocCommand$Status[] values() -> values
    org.jivesoftware.smackx.commands.AdHocCommand$Status valueOf(java.lang.String) -> valueOf
org.jivesoftware.smackx.commands.AdHocCommandManager -> org.jivesoftware.smackx.commands.AdHocCommandManager:
    java.lang.String DISCO_NAMESPACE -> DISCO_NAMESPACE
    java.lang.String discoNode -> discoNode
    int SESSION_TIMEOUT -> SESSION_TIMEOUT
    java.util.Map instances -> instances
    java.lang.ref.WeakReference connection -> connection
    java.util.Map commands -> commands
    java.util.Map executingCommands -> executingCommands
    org.jivesoftware.smackx.ServiceDiscoveryManager serviceDiscoveryManager -> serviceDiscoveryManager
    java.lang.Thread sessionsSweeper -> sessionsSweeper
    org.jivesoftware.smackx.commands.AdHocCommandManager getAddHocCommandsManager(org.jivesoftware.smack.Connection) -> getAddHocCommandsManager
    void registerCommand(java.lang.String,java.lang.String,java.lang.Class) -> registerCommand
    void registerCommand(java.lang.String,java.lang.String,org.jivesoftware.smackx.commands.LocalCommandFactory) -> registerCommand
    org.jivesoftware.smackx.packet.DiscoverItems discoverCommands(java.lang.String) -> discoverCommands
    void publishCommands(java.lang.String) -> publishCommands
    org.jivesoftware.smackx.commands.RemoteCommand getRemoteCommand(java.lang.String,java.lang.String) -> getRemoteCommand
    void processAdHocCommand(org.jivesoftware.smackx.packet.AdHocCommandData) -> processAdHocCommand
    void respondError(org.jivesoftware.smackx.packet.AdHocCommandData,org.jivesoftware.smack.packet.XMPPError$Condition) -> respondError
    void respondError(org.jivesoftware.smackx.packet.AdHocCommandData,org.jivesoftware.smack.packet.XMPPError$Condition,org.jivesoftware.smackx.commands.AdHocCommand$SpecificErrorCondition) -> respondError
    void respondError(org.jivesoftware.smackx.packet.AdHocCommandData,org.jivesoftware.smack.packet.XMPPError) -> respondError
    org.jivesoftware.smackx.commands.LocalCommand newInstanceOfCmd(java.lang.String,java.lang.String) -> newInstanceOfCmd
    java.util.Collection getRegisteredCommands() -> getRegisteredCommands
    java.util.Collection access$000(org.jivesoftware.smackx.commands.AdHocCommandManager) -> access$000
    void access$100(org.jivesoftware.smackx.commands.AdHocCommandManager,org.jivesoftware.smackx.packet.AdHocCommandData) -> access$100
    java.util.Map access$200(org.jivesoftware.smackx.commands.AdHocCommandManager) -> access$200
org.jivesoftware.smackx.commands.AdHocCommandManager$1 -> org.jivesoftware.smackx.commands.AdHocCommandManager$1:
    void connectionCreated(org.jivesoftware.smack.Connection) -> connectionCreated
org.jivesoftware.smackx.commands.AdHocCommandManager$2 -> org.jivesoftware.smackx.commands.AdHocCommandManager$2:
    org.jivesoftware.smackx.commands.AdHocCommandManager this$0 -> this$0
    java.util.List getNodeItems() -> getNodeItems
    java.util.List getNodeFeatures() -> getNodeFeatures
    java.util.List getNodeIdentities() -> getNodeIdentities
    java.util.List getNodePacketExtensions() -> getNodePacketExtensions
org.jivesoftware.smackx.commands.AdHocCommandManager$3 -> org.jivesoftware.smackx.commands.AdHocCommandManager$3:
    org.jivesoftware.smackx.commands.AdHocCommandManager this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.commands.AdHocCommandManager$4 -> org.jivesoftware.smackx.commands.AdHocCommandManager$4:
    java.lang.Class val$clazz -> val$clazz
    org.jivesoftware.smackx.commands.AdHocCommandManager this$0 -> this$0
    org.jivesoftware.smackx.commands.LocalCommand getInstance() -> getInstance
org.jivesoftware.smackx.commands.AdHocCommandManager$5 -> org.jivesoftware.smackx.commands.AdHocCommandManager$5:
    java.lang.String val$name -> val$name
    org.jivesoftware.smackx.commands.AdHocCommandManager this$0 -> this$0
    java.util.List getNodeItems() -> getNodeItems
    java.util.List getNodeFeatures() -> getNodeFeatures
    java.util.List getNodeIdentities() -> getNodeIdentities
    java.util.List getNodePacketExtensions() -> getNodePacketExtensions
org.jivesoftware.smackx.commands.AdHocCommandManager$6 -> org.jivesoftware.smackx.commands.AdHocCommandManager$6:
    org.jivesoftware.smackx.commands.AdHocCommandManager this$0 -> this$0
    void run() -> run
org.jivesoftware.smackx.commands.AdHocCommandManager$AdHocCommandInfo -> org.jivesoftware.smackx.commands.AdHocCommandManager$AdHocCommandInfo:
    java.lang.String node -> node
    java.lang.String name -> name
    java.lang.String ownerJID -> ownerJID
    org.jivesoftware.smackx.commands.LocalCommandFactory factory -> factory
    org.jivesoftware.smackx.commands.LocalCommand getCommandInstance() -> getCommandInstance
    java.lang.String getName() -> getName
    java.lang.String getNode() -> getNode
    java.lang.String getOwnerJID() -> getOwnerJID
org.jivesoftware.smackx.commands.AdHocCommandNote -> org.jivesoftware.smackx.commands.AdHocCommandNote:
    org.jivesoftware.smackx.commands.AdHocCommandNote$Type type -> type
    java.lang.String value -> value
    java.lang.String getValue() -> getValue
    org.jivesoftware.smackx.commands.AdHocCommandNote$Type getType() -> getType
org.jivesoftware.smackx.commands.AdHocCommandNote$Type -> org.jivesoftware.smackx.commands.AdHocCommandNote$Type:
    org.jivesoftware.smackx.commands.AdHocCommandNote$Type info -> info
    org.jivesoftware.smackx.commands.AdHocCommandNote$Type warn -> warn
    org.jivesoftware.smackx.commands.AdHocCommandNote$Type error -> error
    org.jivesoftware.smackx.commands.AdHocCommandNote$Type[] $VALUES -> $VALUES
    org.jivesoftware.smackx.commands.AdHocCommandNote$Type[] values() -> values
    org.jivesoftware.smackx.commands.AdHocCommandNote$Type valueOf(java.lang.String) -> valueOf
org.jivesoftware.smackx.commands.LocalCommand -> org.jivesoftware.smackx.commands.LocalCommand:
    long creationDate -> creationDate
    java.lang.String sessionID -> sessionID
    java.lang.String ownerJID -> ownerJID
    int currenStage -> currenStage
    void setSessionID(java.lang.String) -> setSessionID
    java.lang.String getSessionID() -> getSessionID
    void setOwnerJID(java.lang.String) -> setOwnerJID
    java.lang.String getOwnerJID() -> getOwnerJID
    long getCreationDate() -> getCreationDate
    boolean isLastStage() -> isLastStage
    boolean hasPermission(java.lang.String) -> hasPermission
    int getCurrentStage() -> getCurrentStage
    void setData(org.jivesoftware.smackx.packet.AdHocCommandData) -> setData
    void incrementStage() -> incrementStage
    void decrementStage() -> decrementStage
org.jivesoftware.smackx.commands.LocalCommandFactory -> org.jivesoftware.smackx.commands.LocalCommandFactory:
    org.jivesoftware.smackx.commands.LocalCommand getInstance() -> getInstance
org.jivesoftware.smackx.commands.RemoteCommand -> org.jivesoftware.smackx.commands.RemoteCommand:
    org.jivesoftware.smack.Connection connection -> connection
    java.lang.String jid -> jid
    java.lang.String sessionID -> sessionID
    long packetReplyTimeout -> packetReplyTimeout
    void cancel() -> cancel
    void complete(org.jivesoftware.smackx.Form) -> complete
    void execute() -> execute
    void execute(org.jivesoftware.smackx.Form) -> execute
    void next(org.jivesoftware.smackx.Form) -> next
    void prev() -> prev
    void executeAction(org.jivesoftware.smackx.commands.AdHocCommand$Action,long) -> executeAction
    void executeAction(org.jivesoftware.smackx.commands.AdHocCommand$Action,org.jivesoftware.smackx.Form,long) -> executeAction
    java.lang.String getOwnerJID() -> getOwnerJID
    long getPacketReplyTimeout() -> getPacketReplyTimeout
    void setPacketReplyTimeout(long) -> setPacketReplyTimeout
org.jivesoftware.smackx.entitycaps.EntityCapsManager -> org.jivesoftware.smackx.entitycaps.EntityCapsManager:
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String ELEMENT -> ELEMENT
    java.lang.String ENTITY_NODE -> ENTITY_NODE
    java.util.Map SUPPORTED_HASHES -> SUPPORTED_HASHES
    org.jivesoftware.smackx.entitycaps.cache.EntityCapsPersistentCache persistentCache -> persistentCache
    java.util.Map instances -> instances
    java.util.Map caps -> caps
    java.util.Map jidCaps -> jidCaps
    java.lang.ref.WeakReference weakRefConnection -> weakRefConnection
    org.jivesoftware.smackx.ServiceDiscoveryManager sdm -> sdm
    boolean entityCapsEnabled -> entityCapsEnabled
    java.lang.String currentCapsVersion -> currentCapsVersion
    boolean presenceSend -> presenceSend
    java.util.Queue lastLocalCapsVersions -> lastLocalCapsVersions
    void addDiscoverInfoByNode(java.lang.String,org.jivesoftware.smackx.packet.DiscoverInfo) -> addDiscoverInfoByNode
    java.lang.String getNodeVersionByJid(java.lang.String) -> getNodeVersionByJid
    org.jivesoftware.smackx.entitycaps.EntityCapsManager$NodeVerHash getNodeVerHashByJid(java.lang.String) -> getNodeVerHashByJid
    org.jivesoftware.smackx.packet.DiscoverInfo getDiscoverInfoByUser(java.lang.String) -> getDiscoverInfoByUser
    org.jivesoftware.smackx.packet.DiscoverInfo getDiscoveryInfoByNodeVer(java.lang.String) -> getDiscoveryInfoByNodeVer
    void setPersistentCache(org.jivesoftware.smackx.entitycaps.cache.EntityCapsPersistentCache) -> setPersistentCache
    void setJidCapsMaxCacheSize(int) -> setJidCapsMaxCacheSize
    void setCapsMaxCacheSize(int) -> setCapsMaxCacheSize
    org.jivesoftware.smackx.entitycaps.EntityCapsManager getInstanceFor(org.jivesoftware.smack.Connection) -> getInstanceFor
    void enableEntityCaps() -> enableEntityCaps
    void disableEntityCaps() -> disableEntityCaps
    boolean entityCapsEnabled() -> entityCapsEnabled
    void removeUserCapsNode(java.lang.String) -> removeUserCapsNode
    java.lang.String getCapsVersion() -> getCapsVersion
    java.lang.String getLocalNodeVer() -> getLocalNodeVer
    boolean areEntityCapsSupported(java.lang.String) -> areEntityCapsSupported
    boolean areEntityCapsSupportedByServer() -> areEntityCapsSupportedByServer
    void updateLocalEntityCaps() -> updateLocalEntityCaps
    boolean verifyDiscoverInfoVersion(java.lang.String,java.lang.String,org.jivesoftware.smackx.packet.DiscoverInfo) -> verifyDiscoverInfoVersion
    boolean verifyPacketExtensions(org.jivesoftware.smackx.packet.DiscoverInfo) -> verifyPacketExtensions
    java.lang.String generateVerificationString(org.jivesoftware.smackx.packet.DiscoverInfo,java.lang.String) -> generateVerificationString
    void formFieldValuesToCaps(java.util.Iterator,java.lang.StringBuilder) -> formFieldValuesToCaps
    boolean access$102(org.jivesoftware.smackx.entitycaps.EntityCapsManager,boolean) -> access$102
    java.util.Map access$200() -> access$200
    boolean access$300(org.jivesoftware.smackx.entitycaps.EntityCapsManager) -> access$300
    org.jivesoftware.smackx.ServiceDiscoveryManager access$400(org.jivesoftware.smackx.entitycaps.EntityCapsManager) -> access$400
org.jivesoftware.smackx.entitycaps.EntityCapsManager$1 -> org.jivesoftware.smackx.entitycaps.EntityCapsManager$1:
    void connectionCreated(org.jivesoftware.smack.Connection) -> connectionCreated
org.jivesoftware.smackx.entitycaps.EntityCapsManager$2 -> org.jivesoftware.smackx.entitycaps.EntityCapsManager$2:
    org.jivesoftware.smackx.entitycaps.EntityCapsManager this$0 -> this$0
    void connectionClosed() -> connectionClosed
    void connectionClosedOnError(java.lang.Exception) -> connectionClosedOnError
    void reconnectionFailed(java.lang.Exception) -> reconnectionFailed
    void reconnectingIn(int) -> reconnectingIn
    void reconnectionSuccessful() -> reconnectionSuccessful
org.jivesoftware.smackx.entitycaps.EntityCapsManager$3 -> org.jivesoftware.smackx.entitycaps.EntityCapsManager$3:
    org.jivesoftware.smackx.entitycaps.EntityCapsManager this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.entitycaps.EntityCapsManager$4 -> org.jivesoftware.smackx.entitycaps.EntityCapsManager$4:
    org.jivesoftware.smackx.entitycaps.EntityCapsManager this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.entitycaps.EntityCapsManager$5 -> org.jivesoftware.smackx.entitycaps.EntityCapsManager$5:
    org.jivesoftware.smackx.entitycaps.EntityCapsManager this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.entitycaps.EntityCapsManager$6 -> org.jivesoftware.smackx.entitycaps.EntityCapsManager$6:
    org.jivesoftware.smackx.entitycaps.EntityCapsManager this$0 -> this$0
    void interceptPacket(org.jivesoftware.smack.packet.Packet) -> interceptPacket
org.jivesoftware.smackx.entitycaps.EntityCapsManager$7 -> org.jivesoftware.smackx.entitycaps.EntityCapsManager$7:
    java.util.List features -> features
    java.util.List packetExtensions -> packetExtensions
    java.util.List val$identities -> val$identities
    org.jivesoftware.smackx.entitycaps.EntityCapsManager this$0 -> this$0
    java.util.List getNodeItems() -> getNodeItems
    java.util.List getNodeFeatures() -> getNodeFeatures
    java.util.List getNodeIdentities() -> getNodeIdentities
    java.util.List getNodePacketExtensions() -> getNodePacketExtensions
org.jivesoftware.smackx.entitycaps.EntityCapsManager$8 -> org.jivesoftware.smackx.entitycaps.EntityCapsManager$8:
    int compare(org.jivesoftware.smackx.FormField,org.jivesoftware.smackx.FormField) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
org.jivesoftware.smackx.entitycaps.EntityCapsManager$NodeVerHash -> org.jivesoftware.smackx.entitycaps.EntityCapsManager$NodeVerHash:
    java.lang.String node -> node
    java.lang.String hash -> hash
    java.lang.String ver -> ver
    java.lang.String nodeVer -> nodeVer
    java.lang.String getNodeVer() -> getNodeVer
    java.lang.String getNode() -> getNode
    java.lang.String getHash() -> getHash
    java.lang.String getVer() -> getVer
    java.lang.String access$000(org.jivesoftware.smackx.entitycaps.EntityCapsManager$NodeVerHash) -> access$000
org.jivesoftware.smackx.entitycaps.cache.EntityCapsPersistentCache -> org.jivesoftware.smackx.entitycaps.cache.EntityCapsPersistentCache:
    void addDiscoverInfoByNodePersistent(java.lang.String,org.jivesoftware.smackx.packet.DiscoverInfo) -> addDiscoverInfoByNodePersistent
    void replay() -> replay
    void emptyCache() -> emptyCache
org.jivesoftware.smackx.entitycaps.cache.SimpleDirectoryPersistentCache -> org.jivesoftware.smackx.entitycaps.cache.SimpleDirectoryPersistentCache:
    java.io.File cacheDir -> cacheDir
    org.jivesoftware.smack.util.StringEncoder filenameEncoder -> filenameEncoder
    void addDiscoverInfoByNodePersistent(java.lang.String,org.jivesoftware.smackx.packet.DiscoverInfo) -> addDiscoverInfoByNodePersistent
    void replay() -> replay
    void emptyCache() -> emptyCache
    void writeInfoToFile(java.io.File,org.jivesoftware.smackx.packet.DiscoverInfo) -> writeInfoToFile
    org.jivesoftware.smackx.packet.DiscoverInfo restoreInfoFromFile(java.io.File) -> restoreInfoFromFile
org.jivesoftware.smackx.entitycaps.packet.CapsExtension -> org.jivesoftware.smackx.entitycaps.packet.CapsExtension:
    java.lang.String node -> node
    java.lang.String ver -> ver
    java.lang.String hash -> hash
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String getNode() -> getNode
    void setNode(java.lang.String) -> setNode
    java.lang.String getVer() -> getVer
    void setVer(java.lang.String) -> setVer
    java.lang.String getHash() -> getHash
    void setHash(java.lang.String) -> setHash
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.entitycaps.provider.CapsExtensionProvider -> org.jivesoftware.smackx.entitycaps.provider.CapsExtensionProvider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.forward.Forwarded -> org.jivesoftware.smackx.forward.Forwarded:
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    org.jivesoftware.smackx.packet.DelayInfo delay -> delay
    org.jivesoftware.smack.packet.Packet forwardedPacket -> forwardedPacket
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
    org.jivesoftware.smack.packet.Packet getForwardedPacket() -> getForwardedPacket
    org.jivesoftware.smackx.packet.DelayInfo getDelayInfo() -> getDelayInfo
org.jivesoftware.smackx.forward.Forwarded$Provider -> org.jivesoftware.smackx.forward.Forwarded$Provider:
    org.jivesoftware.smackx.provider.DelayInfoProvider dip -> dip
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.muc.Affiliate -> org.jivesoftware.smackx.muc.Affiliate:
    java.lang.String jid -> jid
    java.lang.String affiliation -> affiliation
    java.lang.String role -> role
    java.lang.String nick -> nick
    java.lang.String getJid() -> getJid
    java.lang.String getAffiliation() -> getAffiliation
    java.lang.String getRole() -> getRole
    java.lang.String getNick() -> getNick
org.jivesoftware.smackx.muc.ConnectionDetachedPacketCollector -> org.jivesoftware.smackx.muc.ConnectionDetachedPacketCollector:
    int maxPackets -> maxPackets
    java.util.concurrent.ArrayBlockingQueue resultQueue -> resultQueue
    org.jivesoftware.smack.packet.Packet pollResult() -> pollResult
    org.jivesoftware.smack.packet.Packet nextResult() -> nextResult
    org.jivesoftware.smack.packet.Packet nextResult(long) -> nextResult
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.muc.DeafOccupantInterceptor -> org.jivesoftware.smackx.muc.DeafOccupantInterceptor:
    void interceptPacket(org.jivesoftware.smack.packet.Packet) -> interceptPacket
org.jivesoftware.smackx.muc.DeafOccupantInterceptor$1 -> org.jivesoftware.smackx.muc.DeafOccupantInterceptor$1:
org.jivesoftware.smackx.muc.DeafOccupantInterceptor$DeafExtension -> org.jivesoftware.smackx.muc.DeafOccupantInterceptor$DeafExtension:
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.muc.DefaultParticipantStatusListener -> org.jivesoftware.smackx.muc.DefaultParticipantStatusListener:
    void joined(java.lang.String) -> joined
    void left(java.lang.String) -> left
    void kicked(java.lang.String,java.lang.String,java.lang.String) -> kicked
    void voiceGranted(java.lang.String) -> voiceGranted
    void voiceRevoked(java.lang.String) -> voiceRevoked
    void banned(java.lang.String,java.lang.String,java.lang.String) -> banned
    void membershipGranted(java.lang.String) -> membershipGranted
    void membershipRevoked(java.lang.String) -> membershipRevoked
    void moderatorGranted(java.lang.String) -> moderatorGranted
    void moderatorRevoked(java.lang.String) -> moderatorRevoked
    void ownershipGranted(java.lang.String) -> ownershipGranted
    void ownershipRevoked(java.lang.String) -> ownershipRevoked
    void adminGranted(java.lang.String) -> adminGranted
    void adminRevoked(java.lang.String) -> adminRevoked
    void nicknameChanged(java.lang.String,java.lang.String) -> nicknameChanged
org.jivesoftware.smackx.muc.DefaultUserStatusListener -> org.jivesoftware.smackx.muc.DefaultUserStatusListener:
    void kicked(java.lang.String,java.lang.String) -> kicked
    void voiceGranted() -> voiceGranted
    void voiceRevoked() -> voiceRevoked
    void banned(java.lang.String,java.lang.String) -> banned
    void membershipGranted() -> membershipGranted
    void membershipRevoked() -> membershipRevoked
    void moderatorGranted() -> moderatorGranted
    void moderatorRevoked() -> moderatorRevoked
    void ownershipGranted() -> ownershipGranted
    void ownershipRevoked() -> ownershipRevoked
    void adminGranted() -> adminGranted
    void adminRevoked() -> adminRevoked
org.jivesoftware.smackx.muc.DiscussionHistory -> org.jivesoftware.smackx.muc.DiscussionHistory:
    int maxChars -> maxChars
    int maxStanzas -> maxStanzas
    int seconds -> seconds
    java.util.Date since -> since
    int getMaxChars() -> getMaxChars
    int getMaxStanzas() -> getMaxStanzas
    int getSeconds() -> getSeconds
    java.util.Date getSince() -> getSince
    void setMaxChars(int) -> setMaxChars
    void setMaxStanzas(int) -> setMaxStanzas
    void setSeconds(int) -> setSeconds
    void setSince(java.util.Date) -> setSince
    boolean isConfigured() -> isConfigured
    org.jivesoftware.smackx.packet.MUCInitialPresence$History getMUCHistory() -> getMUCHistory
org.jivesoftware.smackx.muc.HostedRoom -> org.jivesoftware.smackx.muc.HostedRoom:
    java.lang.String jid -> jid
    java.lang.String name -> name
    java.lang.String getJid() -> getJid
    java.lang.String getName() -> getName
org.jivesoftware.smackx.muc.InvitationListener -> org.jivesoftware.smackx.muc.InvitationListener:
    void invitationReceived(org.jivesoftware.smack.Connection,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.jivesoftware.smack.packet.Message) -> invitationReceived
org.jivesoftware.smackx.muc.InvitationRejectionListener -> org.jivesoftware.smackx.muc.InvitationRejectionListener:
    void invitationDeclined(java.lang.String,java.lang.String) -> invitationDeclined
org.jivesoftware.smackx.muc.MultiUserChat -> org.jivesoftware.smackx.muc.MultiUserChat:
    java.lang.String discoNamespace -> discoNamespace
    java.lang.String discoNode -> discoNode
    java.util.Map joinedRooms -> joinedRooms
    org.jivesoftware.smack.Connection connection -> connection
    java.lang.String room -> room
    java.lang.String subject -> subject
    java.lang.String nickname -> nickname
    boolean joined -> joined
    java.util.Map occupantsMap -> occupantsMap
    java.util.List invitationRejectionListeners -> invitationRejectionListeners
    java.util.List subjectUpdatedListeners -> subjectUpdatedListeners
    java.util.List userStatusListeners -> userStatusListeners
    java.util.List participantStatusListeners -> participantStatusListeners
    org.jivesoftware.smack.filter.PacketFilter presenceFilter -> presenceFilter
    java.util.List presenceInterceptors -> presenceInterceptors
    org.jivesoftware.smack.filter.PacketFilter messageFilter -> messageFilter
    org.jivesoftware.smackx.muc.RoomListenerMultiplexor roomListenerMultiplexor -> roomListenerMultiplexor
    org.jivesoftware.smackx.muc.ConnectionDetachedPacketCollector messageCollector -> messageCollector
    java.util.List connectionListeners -> connectionListeners
    boolean isServiceEnabled(org.jivesoftware.smack.Connection,java.lang.String) -> isServiceEnabled
    java.util.Iterator getJoinedRooms(org.jivesoftware.smack.Connection) -> getJoinedRooms
    java.util.Iterator getJoinedRooms(org.jivesoftware.smack.Connection,java.lang.String) -> getJoinedRooms
    org.jivesoftware.smackx.muc.RoomInfo getRoomInfo(org.jivesoftware.smack.Connection,java.lang.String) -> getRoomInfo
    java.util.Collection getServiceNames(org.jivesoftware.smack.Connection) -> getServiceNames
    java.util.Collection getHostedRooms(org.jivesoftware.smack.Connection,java.lang.String) -> getHostedRooms
    java.util.Collection getPublicRooms(org.jivesoftware.smack.Connection,java.lang.String,java.lang.String) -> getPublicRooms
    java.lang.String getRoom() -> getRoom
    void create(java.lang.String) -> create
    void join(java.lang.String) -> join
    void join(java.lang.String,java.lang.String) -> join
    void join(java.lang.String,java.lang.String,org.jivesoftware.smackx.muc.DiscussionHistory,long) -> join
    boolean isJoined() -> isJoined
    void leave() -> leave
    org.jivesoftware.smackx.Form getConfigurationForm() -> getConfigurationForm
    void sendConfigurationForm(org.jivesoftware.smackx.Form) -> sendConfigurationForm
    org.jivesoftware.smackx.Form getRegistrationForm() -> getRegistrationForm
    void sendRegistrationForm(org.jivesoftware.smackx.Form) -> sendRegistrationForm
    void destroy(java.lang.String,java.lang.String) -> destroy
    void invite(java.lang.String,java.lang.String) -> invite
    void invite(org.jivesoftware.smack.packet.Message,java.lang.String,java.lang.String) -> invite
    void decline(org.jivesoftware.smack.Connection,java.lang.String,java.lang.String,java.lang.String) -> decline
    void addInvitationListener(org.jivesoftware.smack.Connection,org.jivesoftware.smackx.muc.InvitationListener) -> addInvitationListener
    void removeInvitationListener(org.jivesoftware.smack.Connection,org.jivesoftware.smackx.muc.InvitationListener) -> removeInvitationListener
    void addInvitationRejectionListener(org.jivesoftware.smackx.muc.InvitationRejectionListener) -> addInvitationRejectionListener
    void removeInvitationRejectionListener(org.jivesoftware.smackx.muc.InvitationRejectionListener) -> removeInvitationRejectionListener
    void fireInvitationRejectionListeners(java.lang.String,java.lang.String) -> fireInvitationRejectionListeners
    void addSubjectUpdatedListener(org.jivesoftware.smackx.muc.SubjectUpdatedListener) -> addSubjectUpdatedListener
    void removeSubjectUpdatedListener(org.jivesoftware.smackx.muc.SubjectUpdatedListener) -> removeSubjectUpdatedListener
    void fireSubjectUpdatedListeners(java.lang.String,java.lang.String) -> fireSubjectUpdatedListeners
    void addPresenceInterceptor(org.jivesoftware.smack.PacketInterceptor) -> addPresenceInterceptor
    void removePresenceInterceptor(org.jivesoftware.smack.PacketInterceptor) -> removePresenceInterceptor
    java.lang.String getSubject() -> getSubject
    java.lang.String getReservedNickname() -> getReservedNickname
    java.lang.String getNickname() -> getNickname
    void changeNickname(java.lang.String) -> changeNickname
    void changeAvailabilityStatus(java.lang.String,org.jivesoftware.smack.packet.Presence$Mode) -> changeAvailabilityStatus
    void kickParticipant(java.lang.String,java.lang.String) -> kickParticipant
    void grantVoice(java.util.Collection) -> grantVoice
    void grantVoice(java.lang.String) -> grantVoice
    void revokeVoice(java.util.Collection) -> revokeVoice
    void revokeVoice(java.lang.String) -> revokeVoice
    void banUsers(java.util.Collection) -> banUsers
    void banUser(java.lang.String,java.lang.String) -> banUser
    void grantMembership(java.util.Collection) -> grantMembership
    void grantMembership(java.lang.String) -> grantMembership
    void revokeMembership(java.util.Collection) -> revokeMembership
    void revokeMembership(java.lang.String) -> revokeMembership
    void grantModerator(java.util.Collection) -> grantModerator
    void grantModerator(java.lang.String) -> grantModerator
    void revokeModerator(java.util.Collection) -> revokeModerator
    void revokeModerator(java.lang.String) -> revokeModerator
    void grantOwnership(java.util.Collection) -> grantOwnership
    void grantOwnership(java.lang.String) -> grantOwnership
    void revokeOwnership(java.util.Collection) -> revokeOwnership
    void revokeOwnership(java.lang.String) -> revokeOwnership
    void grantAdmin(java.util.Collection) -> grantAdmin
    void grantAdmin(java.lang.String) -> grantAdmin
    void revokeAdmin(java.util.Collection) -> revokeAdmin
    void revokeAdmin(java.lang.String) -> revokeAdmin
    void changeAffiliationByOwner(java.lang.String,java.lang.String) -> changeAffiliationByOwner
    void changeAffiliationByOwner(java.util.Collection,java.lang.String) -> changeAffiliationByOwner
    void changeAffiliationByAdmin(java.lang.String,java.lang.String,java.lang.String) -> changeAffiliationByAdmin
    void changeAffiliationByAdmin(java.util.Collection,java.lang.String) -> changeAffiliationByAdmin
    void changeRole(java.lang.String,java.lang.String,java.lang.String) -> changeRole
    void changeRole(java.util.Collection,java.lang.String) -> changeRole
    int getOccupantsCount() -> getOccupantsCount
    java.util.Iterator getOccupants() -> getOccupants
    org.jivesoftware.smack.packet.Presence getOccupantPresence(java.lang.String) -> getOccupantPresence
    org.jivesoftware.smackx.muc.Occupant getOccupant(java.lang.String) -> getOccupant
    void addParticipantListener(org.jivesoftware.smack.PacketListener) -> addParticipantListener
    void removeParticipantListener(org.jivesoftware.smack.PacketListener) -> removeParticipantListener
    java.util.Collection getOwners() -> getOwners
    java.util.Collection getAdmins() -> getAdmins
    java.util.Collection getMembers() -> getMembers
    java.util.Collection getOutcasts() -> getOutcasts
    java.util.Collection getAffiliatesByOwner(java.lang.String) -> getAffiliatesByOwner
    java.util.Collection getAffiliatesByAdmin(java.lang.String) -> getAffiliatesByAdmin
    java.util.Collection getModerators() -> getModerators
    java.util.Collection getParticipants() -> getParticipants
    java.util.Collection getOccupants(java.lang.String) -> getOccupants
    void sendMessage(java.lang.String) -> sendMessage
    org.jivesoftware.smack.Chat createPrivateChat(java.lang.String,org.jivesoftware.smack.MessageListener) -> createPrivateChat
    org.jivesoftware.smack.packet.Message createMessage() -> createMessage
    void sendMessage(org.jivesoftware.smack.packet.Message) -> sendMessage
    org.jivesoftware.smack.packet.Message pollMessage() -> pollMessage
    org.jivesoftware.smack.packet.Message nextMessage() -> nextMessage
    org.jivesoftware.smack.packet.Message nextMessage(long) -> nextMessage
    void addMessageListener(org.jivesoftware.smack.PacketListener) -> addMessageListener
    void removeMessageListener(org.jivesoftware.smack.PacketListener) -> removeMessageListener
    void changeSubject(java.lang.String) -> changeSubject
    void userHasJoined() -> userHasJoined
    void userHasLeft() -> userHasLeft
    org.jivesoftware.smackx.packet.MUCUser getMUCUserExtension(org.jivesoftware.smack.packet.Packet) -> getMUCUserExtension
    void addUserStatusListener(org.jivesoftware.smackx.muc.UserStatusListener) -> addUserStatusListener
    void removeUserStatusListener(org.jivesoftware.smackx.muc.UserStatusListener) -> removeUserStatusListener
    void fireUserStatusListeners(java.lang.String,java.lang.Object[]) -> fireUserStatusListeners
    void addParticipantStatusListener(org.jivesoftware.smackx.muc.ParticipantStatusListener) -> addParticipantStatusListener
    void removeParticipantStatusListener(org.jivesoftware.smackx.muc.ParticipantStatusListener) -> removeParticipantStatusListener
    void fireParticipantStatusListeners(java.lang.String,java.util.List) -> fireParticipantStatusListeners
    void init() -> init
    void checkRoleModifications(java.lang.String,java.lang.String,boolean,java.lang.String) -> checkRoleModifications
    void checkAffiliationModifications(java.lang.String,java.lang.String,boolean,java.lang.String) -> checkAffiliationModifications
    void checkPresenceCode(java.lang.String,boolean,org.jivesoftware.smackx.packet.MUCUser,java.lang.String) -> checkPresenceCode
    void cleanup() -> cleanup
    void finalize() -> finalize
    java.util.Iterator access$000(org.jivesoftware.smack.Connection) -> access$000
    java.lang.String access$102(org.jivesoftware.smackx.muc.MultiUserChat,java.lang.String) -> access$102
    void access$200(org.jivesoftware.smackx.muc.MultiUserChat,java.lang.String,java.lang.String) -> access$200
    java.lang.String access$300(org.jivesoftware.smackx.muc.MultiUserChat) -> access$300
    java.lang.String access$400(org.jivesoftware.smackx.muc.MultiUserChat) -> access$400
    java.util.Map access$500(org.jivesoftware.smackx.muc.MultiUserChat) -> access$500
    org.jivesoftware.smackx.packet.MUCUser access$600(org.jivesoftware.smackx.muc.MultiUserChat,org.jivesoftware.smack.packet.Packet) -> access$600
    void access$700(org.jivesoftware.smackx.muc.MultiUserChat,java.lang.String,java.lang.String,boolean,java.lang.String) -> access$700
    void access$800(org.jivesoftware.smackx.muc.MultiUserChat,java.lang.String,java.lang.String,boolean,java.lang.String) -> access$800
    void access$900(org.jivesoftware.smackx.muc.MultiUserChat,java.lang.String,java.util.List) -> access$900
    void access$1000(org.jivesoftware.smackx.muc.MultiUserChat,java.lang.String,boolean,org.jivesoftware.smackx.packet.MUCUser,java.lang.String) -> access$1000
    void access$1100(org.jivesoftware.smackx.muc.MultiUserChat,java.lang.String,java.lang.String) -> access$1100
org.jivesoftware.smackx.muc.MultiUserChat$1 -> org.jivesoftware.smackx.muc.MultiUserChat$1:
    void connectionCreated(org.jivesoftware.smack.Connection) -> connectionCreated
org.jivesoftware.smackx.muc.MultiUserChat$1$1 -> org.jivesoftware.smackx.muc.MultiUserChat$1$1:
    org.jivesoftware.smack.Connection val$connection -> val$connection
    org.jivesoftware.smackx.muc.MultiUserChat$1 this$0 -> this$0
    java.util.List getNodeItems() -> getNodeItems
    java.util.List getNodeFeatures() -> getNodeFeatures
    java.util.List getNodeIdentities() -> getNodeIdentities
    java.util.List getNodePacketExtensions() -> getNodePacketExtensions
org.jivesoftware.smackx.muc.MultiUserChat$2 -> org.jivesoftware.smackx.muc.MultiUserChat$2:
    java.lang.String val$subject -> val$subject
    org.jivesoftware.smackx.muc.MultiUserChat this$0 -> this$0
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
org.jivesoftware.smackx.muc.MultiUserChat$3 -> org.jivesoftware.smackx.muc.MultiUserChat$3:
    org.jivesoftware.smackx.muc.MultiUserChat this$0 -> this$0
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
org.jivesoftware.smackx.muc.MultiUserChat$4 -> org.jivesoftware.smackx.muc.MultiUserChat$4:
    org.jivesoftware.smackx.muc.MultiUserChat this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.muc.MultiUserChat$5 -> org.jivesoftware.smackx.muc.MultiUserChat$5:
    org.jivesoftware.smackx.muc.MultiUserChat this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.muc.MultiUserChat$6 -> org.jivesoftware.smackx.muc.MultiUserChat$6:
    org.jivesoftware.smackx.muc.MultiUserChat this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.muc.MultiUserChat$InvitationsMonitor -> org.jivesoftware.smackx.muc.MultiUserChat$InvitationsMonitor:
    java.util.Map monitors -> monitors
    java.util.List invitationsListeners -> invitationsListeners
    org.jivesoftware.smack.Connection connection -> connection
    org.jivesoftware.smack.filter.PacketFilter invitationFilter -> invitationFilter
    org.jivesoftware.smack.PacketListener invitationPacketListener -> invitationPacketListener
    org.jivesoftware.smackx.muc.MultiUserChat$InvitationsMonitor getInvitationsMonitor(org.jivesoftware.smack.Connection) -> getInvitationsMonitor
    void addInvitationListener(org.jivesoftware.smackx.muc.InvitationListener) -> addInvitationListener
    void removeInvitationListener(org.jivesoftware.smackx.muc.InvitationListener) -> removeInvitationListener
    void fireInvitationListeners(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.jivesoftware.smack.packet.Message) -> fireInvitationListeners
    void connectionClosed() -> connectionClosed
    void connectionClosedOnError(java.lang.Exception) -> connectionClosedOnError
    void reconnectingIn(int) -> reconnectingIn
    void reconnectionSuccessful() -> reconnectionSuccessful
    void reconnectionFailed(java.lang.Exception) -> reconnectionFailed
    void init() -> init
    void cancel() -> cancel
    void access$1200(org.jivesoftware.smackx.muc.MultiUserChat$InvitationsMonitor,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.jivesoftware.smack.packet.Message) -> access$1200
org.jivesoftware.smackx.muc.MultiUserChat$InvitationsMonitor$1 -> org.jivesoftware.smackx.muc.MultiUserChat$InvitationsMonitor$1:
    org.jivesoftware.smackx.muc.MultiUserChat$InvitationsMonitor this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.muc.Occupant -> org.jivesoftware.smackx.muc.Occupant:
    java.lang.String affiliation -> affiliation
    java.lang.String role -> role
    java.lang.String jid -> jid
    java.lang.String nick -> nick
    java.lang.String getJid() -> getJid
    java.lang.String getAffiliation() -> getAffiliation
    java.lang.String getRole() -> getRole
    java.lang.String getNick() -> getNick
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.jivesoftware.smackx.muc.PacketMultiplexListener -> org.jivesoftware.smackx.muc.PacketMultiplexListener:
    org.jivesoftware.smack.filter.PacketFilter MESSAGE_FILTER -> MESSAGE_FILTER
    org.jivesoftware.smack.filter.PacketFilter PRESENCE_FILTER -> PRESENCE_FILTER
    org.jivesoftware.smack.filter.PacketFilter SUBJECT_FILTER -> SUBJECT_FILTER
    org.jivesoftware.smack.filter.PacketFilter DECLINES_FILTER -> DECLINES_FILTER
    org.jivesoftware.smackx.muc.ConnectionDetachedPacketCollector messageCollector -> messageCollector
    org.jivesoftware.smack.PacketListener presenceListener -> presenceListener
    org.jivesoftware.smack.PacketListener subjectListener -> subjectListener
    org.jivesoftware.smack.PacketListener declinesListener -> declinesListener
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.muc.PacketMultiplexListener$1 -> org.jivesoftware.smackx.muc.PacketMultiplexListener$1:
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
org.jivesoftware.smackx.muc.ParticipantStatusListener -> org.jivesoftware.smackx.muc.ParticipantStatusListener:
    void joined(java.lang.String) -> joined
    void left(java.lang.String) -> left
    void kicked(java.lang.String,java.lang.String,java.lang.String) -> kicked
    void voiceGranted(java.lang.String) -> voiceGranted
    void voiceRevoked(java.lang.String) -> voiceRevoked
    void banned(java.lang.String,java.lang.String,java.lang.String) -> banned
    void membershipGranted(java.lang.String) -> membershipGranted
    void membershipRevoked(java.lang.String) -> membershipRevoked
    void moderatorGranted(java.lang.String) -> moderatorGranted
    void moderatorRevoked(java.lang.String) -> moderatorRevoked
    void ownershipGranted(java.lang.String) -> ownershipGranted
    void ownershipRevoked(java.lang.String) -> ownershipRevoked
    void adminGranted(java.lang.String) -> adminGranted
    void adminRevoked(java.lang.String) -> adminRevoked
    void nicknameChanged(java.lang.String,java.lang.String) -> nicknameChanged
org.jivesoftware.smackx.muc.RoomInfo -> org.jivesoftware.smackx.muc.RoomInfo:
    java.lang.String room -> room
    java.lang.String description -> description
    java.lang.String subject -> subject
    int occupantsCount -> occupantsCount
    int affiliationsCount -> affiliationsCount
    boolean membersOnly -> membersOnly
    boolean moderated -> moderated
    boolean nonanonymous -> nonanonymous
    boolean passwordProtected -> passwordProtected
    boolean persistent -> persistent
    boolean allowInvites -> allowInvites
    boolean publicRoom -> publicRoom
    java.lang.String roomName -> roomName
    int maxUsers -> maxUsers
    java.lang.String getRoom() -> getRoom
    java.lang.String getRoomName() -> getRoomName
    java.lang.String getDescription() -> getDescription
    java.lang.String getSubject() -> getSubject
    int getOccupantsCount() -> getOccupantsCount
    int getAffiliationsCount() -> getAffiliationsCount
    boolean isMembersOnly() -> isMembersOnly
    boolean isModerated() -> isModerated
    boolean isNonanonymous() -> isNonanonymous
    boolean isPasswordProtected() -> isPasswordProtected
    boolean isPersistent() -> isPersistent
    boolean isPublic() -> isPublic
    boolean isAllowInvites() -> isAllowInvites
    int getMaxUsers() -> getMaxUsers
org.jivesoftware.smackx.muc.RoomListenerMultiplexor -> org.jivesoftware.smackx.muc.RoomListenerMultiplexor:
    java.util.Map monitors -> monitors
    org.jivesoftware.smack.Connection connection -> connection
    org.jivesoftware.smackx.muc.RoomListenerMultiplexor$RoomMultiplexFilter filter -> filter
    org.jivesoftware.smackx.muc.RoomListenerMultiplexor$RoomMultiplexListener listener -> listener
    org.jivesoftware.smackx.muc.RoomListenerMultiplexor getRoomMultiplexor(org.jivesoftware.smack.Connection) -> getRoomMultiplexor
    void addRoom(java.lang.String,org.jivesoftware.smackx.muc.PacketMultiplexListener) -> addRoom
    void connectionClosed() -> connectionClosed
    void connectionClosedOnError(java.lang.Exception) -> connectionClosedOnError
    void reconnectingIn(int) -> reconnectingIn
    void reconnectionSuccessful() -> reconnectionSuccessful
    void reconnectionFailed(java.lang.Exception) -> reconnectionFailed
    void init() -> init
    void removeRoom(java.lang.String) -> removeRoom
    void cancel() -> cancel
org.jivesoftware.smackx.muc.RoomListenerMultiplexor$1 -> org.jivesoftware.smackx.muc.RoomListenerMultiplexor$1:
org.jivesoftware.smackx.muc.RoomListenerMultiplexor$RoomMultiplexFilter -> org.jivesoftware.smackx.muc.RoomListenerMultiplexor$RoomMultiplexFilter:
    java.util.Map roomAddressTable -> roomAddressTable
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
    void addRoom(java.lang.String) -> addRoom
    void removeRoom(java.lang.String) -> removeRoom
org.jivesoftware.smackx.muc.RoomListenerMultiplexor$RoomMultiplexListener -> org.jivesoftware.smackx.muc.RoomListenerMultiplexor$RoomMultiplexListener:
    java.util.Map roomListenersByAddress -> roomListenersByAddress
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
    void addRoom(java.lang.String,org.jivesoftware.smackx.muc.PacketMultiplexListener) -> addRoom
    void removeRoom(java.lang.String) -> removeRoom
org.jivesoftware.smackx.muc.SubjectUpdatedListener -> org.jivesoftware.smackx.muc.SubjectUpdatedListener:
    void subjectUpdated(java.lang.String,java.lang.String) -> subjectUpdated
org.jivesoftware.smackx.muc.UserStatusListener -> org.jivesoftware.smackx.muc.UserStatusListener:
    void kicked(java.lang.String,java.lang.String) -> kicked
    void voiceGranted() -> voiceGranted
    void voiceRevoked() -> voiceRevoked
    void banned(java.lang.String,java.lang.String) -> banned
    void membershipGranted() -> membershipGranted
    void membershipRevoked() -> membershipRevoked
    void moderatorGranted() -> moderatorGranted
    void moderatorRevoked() -> moderatorRevoked
    void ownershipGranted() -> ownershipGranted
    void ownershipRevoked() -> ownershipRevoked
    void adminGranted() -> adminGranted
    void adminRevoked() -> adminRevoked
org.jivesoftware.smackx.packet.AdHocCommandData -> org.jivesoftware.smackx.packet.AdHocCommandData:
    java.lang.String id -> id
    java.lang.String name -> name
    java.lang.String node -> node
    java.lang.String sessionID -> sessionID
    java.util.List notes -> notes
    org.jivesoftware.smackx.packet.DataForm form -> form
    org.jivesoftware.smackx.commands.AdHocCommand$Action action -> action
    org.jivesoftware.smackx.commands.AdHocCommand$Status status -> status
    java.util.ArrayList actions -> actions
    org.jivesoftware.smackx.commands.AdHocCommand$Action executeAction -> executeAction
    java.lang.String lang -> lang
    java.lang.String getChildElementXML() -> getChildElementXML
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getNode() -> getNode
    void setNode(java.lang.String) -> setNode
    java.util.List getNotes() -> getNotes
    void addNote(org.jivesoftware.smackx.commands.AdHocCommandNote) -> addNote
    void remveNote(org.jivesoftware.smackx.commands.AdHocCommandNote) -> remveNote
    org.jivesoftware.smackx.packet.DataForm getForm() -> getForm
    void setForm(org.jivesoftware.smackx.packet.DataForm) -> setForm
    org.jivesoftware.smackx.commands.AdHocCommand$Action getAction() -> getAction
    void setAction(org.jivesoftware.smackx.commands.AdHocCommand$Action) -> setAction
    org.jivesoftware.smackx.commands.AdHocCommand$Status getStatus() -> getStatus
    void setStatus(org.jivesoftware.smackx.commands.AdHocCommand$Status) -> setStatus
    java.util.List getActions() -> getActions
    void addAction(org.jivesoftware.smackx.commands.AdHocCommand$Action) -> addAction
    void setExecuteAction(org.jivesoftware.smackx.commands.AdHocCommand$Action) -> setExecuteAction
    org.jivesoftware.smackx.commands.AdHocCommand$Action getExecuteAction() -> getExecuteAction
    void setSessionID(java.lang.String) -> setSessionID
    java.lang.String getSessionID() -> getSessionID
org.jivesoftware.smackx.packet.AdHocCommandData$SpecificError -> org.jivesoftware.smackx.packet.AdHocCommandData$SpecificError:
    java.lang.String namespace -> namespace
    org.jivesoftware.smackx.commands.AdHocCommand$SpecificErrorCondition condition -> condition
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    org.jivesoftware.smackx.commands.AdHocCommand$SpecificErrorCondition getCondition() -> getCondition
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.AttentionExtension -> org.jivesoftware.smackx.packet.AttentionExtension:
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.AttentionExtension$Provider -> org.jivesoftware.smackx.packet.AttentionExtension$Provider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.packet.ChatStateExtension -> org.jivesoftware.smackx.packet.ChatStateExtension:
    org.jivesoftware.smackx.ChatState state -> state
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.ChatStateExtension$Provider -> org.jivesoftware.smackx.packet.ChatStateExtension$Provider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.packet.DataForm -> org.jivesoftware.smackx.packet.DataForm:
    java.lang.String type -> type
    java.lang.String title -> title
    java.util.List instructions -> instructions
    org.jivesoftware.smackx.packet.DataForm$ReportedData reportedData -> reportedData
    java.util.List items -> items
    java.util.List fields -> fields
    java.lang.String getType() -> getType
    java.lang.String getTitle() -> getTitle
    java.util.Iterator getInstructions() -> getInstructions
    org.jivesoftware.smackx.packet.DataForm$ReportedData getReportedData() -> getReportedData
    java.util.Iterator getItems() -> getItems
    java.util.Iterator getFields() -> getFields
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    void setTitle(java.lang.String) -> setTitle
    void setInstructions(java.util.List) -> setInstructions
    void setReportedData(org.jivesoftware.smackx.packet.DataForm$ReportedData) -> setReportedData
    void addField(org.jivesoftware.smackx.FormField) -> addField
    void addInstruction(java.lang.String) -> addInstruction
    void addItem(org.jivesoftware.smackx.packet.DataForm$Item) -> addItem
    boolean hasHiddenFormTypeField() -> hasHiddenFormTypeField
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.DataForm$Item -> org.jivesoftware.smackx.packet.DataForm$Item:
    java.util.List fields -> fields
    java.util.Iterator getFields() -> getFields
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.DataForm$ReportedData -> org.jivesoftware.smackx.packet.DataForm$ReportedData:
    java.util.List fields -> fields
    java.util.Iterator getFields() -> getFields
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.DefaultPrivateData -> org.jivesoftware.smackx.packet.DefaultPrivateData:
    java.lang.String elementName -> elementName
    java.lang.String namespace -> namespace
    java.util.Map map -> map
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
    java.util.Iterator getNames() -> getNames
    java.lang.String getValue(java.lang.String) -> getValue
    void setValue(java.lang.String,java.lang.String) -> setValue
org.jivesoftware.smackx.packet.DelayInfo -> org.jivesoftware.smackx.packet.DelayInfo:
    org.jivesoftware.smackx.packet.DelayInformation wrappedInfo -> wrappedInfo
    java.lang.String getFrom() -> getFrom
    java.lang.String getReason() -> getReason
    java.util.Date getStamp() -> getStamp
    void setFrom(java.lang.String) -> setFrom
    void setReason(java.lang.String) -> setReason
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.DelayInformation -> org.jivesoftware.smackx.packet.DelayInformation:
    java.text.DateFormat XEP_0091_UTC_FORMAT -> XEP_0091_UTC_FORMAT
    java.util.Date stamp -> stamp
    java.lang.String from -> from
    java.lang.String reason -> reason
    java.lang.String getFrom() -> getFrom
    void setFrom(java.lang.String) -> setFrom
    java.util.Date getStamp() -> getStamp
    java.lang.String getReason() -> getReason
    void setReason(java.lang.String) -> setReason
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.DiscoverInfo -> org.jivesoftware.smackx.packet.DiscoverInfo:
    java.lang.String NAMESPACE -> NAMESPACE
    java.util.List features -> features
    java.util.List identities -> identities
    java.lang.String node -> node
    void addFeature(java.lang.String) -> addFeature
    void addFeatures(java.util.Collection) -> addFeatures
    void addFeature(org.jivesoftware.smackx.packet.DiscoverInfo$Feature) -> addFeature
    java.util.Iterator getFeatures() -> getFeatures
    void addIdentity(org.jivesoftware.smackx.packet.DiscoverInfo$Identity) -> addIdentity
    void addIdentities(java.util.Collection) -> addIdentities
    java.util.Iterator getIdentities() -> getIdentities
    java.lang.String getNode() -> getNode
    void setNode(java.lang.String) -> setNode
    boolean containsFeature(java.lang.String) -> containsFeature
    java.lang.String getChildElementXML() -> getChildElementXML
    boolean containsDuplicateIdentities() -> containsDuplicateIdentities
    boolean containsDuplicateFeatures() -> containsDuplicateFeatures
org.jivesoftware.smackx.packet.DiscoverInfo$Feature -> org.jivesoftware.smackx.packet.DiscoverInfo$Feature:
    java.lang.String variable -> variable
    java.lang.String getVar() -> getVar
    java.lang.String toXML() -> toXML
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.jivesoftware.smackx.packet.DiscoverInfo$Identity -> org.jivesoftware.smackx.packet.DiscoverInfo$Identity:
    java.lang.String category -> category
    java.lang.String name -> name
    java.lang.String type -> type
    java.lang.String lang -> lang
    java.lang.String getCategory() -> getCategory
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getType() -> getType
    void setType(java.lang.String) -> setType
    void setLanguage(java.lang.String) -> setLanguage
    java.lang.String getLanguage() -> getLanguage
    java.lang.String toXML() -> toXML
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int compareTo(org.jivesoftware.smackx.packet.DiscoverInfo$Identity) -> compareTo
    int compareTo(java.lang.Object) -> compareTo
org.jivesoftware.smackx.packet.DiscoverItems -> org.jivesoftware.smackx.packet.DiscoverItems:
    java.lang.String NAMESPACE -> NAMESPACE
    java.util.List items -> items
    java.lang.String node -> node
    void addItem(org.jivesoftware.smackx.packet.DiscoverItems$Item) -> addItem
    void addItems(java.util.Collection) -> addItems
    java.util.Iterator getItems() -> getItems
    java.lang.String getNode() -> getNode
    void setNode(java.lang.String) -> setNode
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.packet.DiscoverItems$Item -> org.jivesoftware.smackx.packet.DiscoverItems$Item:
    java.lang.String UPDATE_ACTION -> UPDATE_ACTION
    java.lang.String REMOVE_ACTION -> REMOVE_ACTION
    java.lang.String entityID -> entityID
    java.lang.String name -> name
    java.lang.String node -> node
    java.lang.String action -> action
    java.lang.String getEntityID() -> getEntityID
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getNode() -> getNode
    void setNode(java.lang.String) -> setNode
    java.lang.String getAction() -> getAction
    void setAction(java.lang.String) -> setAction
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.Header -> org.jivesoftware.smackx.packet.Header:
    java.lang.String name -> name
    java.lang.String value -> value
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.HeadersExtension -> org.jivesoftware.smackx.packet.HeadersExtension:
    java.lang.String NAMESPACE -> NAMESPACE
    java.util.Collection headers -> headers
    java.util.Collection getHeaders() -> getHeaders
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.LastActivity -> org.jivesoftware.smackx.packet.LastActivity:
    java.lang.String NAMESPACE -> NAMESPACE
    long lastActivity -> lastActivity
    java.lang.String message -> message
    java.lang.String getChildElementXML() -> getChildElementXML
    void setLastActivity(long) -> setLastActivity
    void setMessage(java.lang.String) -> setMessage
    long getIdleTime() -> getIdleTime
    java.lang.String getStatusMessage() -> getStatusMessage
    org.jivesoftware.smackx.packet.LastActivity getLastActivity(org.jivesoftware.smack.Connection,java.lang.String) -> getLastActivity
    void access$000(org.jivesoftware.smackx.packet.LastActivity,java.lang.String) -> access$000
org.jivesoftware.smackx.packet.LastActivity$Provider -> org.jivesoftware.smackx.packet.LastActivity$Provider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
org.jivesoftware.smackx.packet.MUCAdmin -> org.jivesoftware.smackx.packet.MUCAdmin:
    java.util.List items -> items
    java.util.Iterator getItems() -> getItems
    void addItem(org.jivesoftware.smackx.packet.MUCAdmin$Item) -> addItem
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.packet.MUCAdmin$Item -> org.jivesoftware.smackx.packet.MUCAdmin$Item:
    java.lang.String actor -> actor
    java.lang.String reason -> reason
    java.lang.String affiliation -> affiliation
    java.lang.String jid -> jid
    java.lang.String nick -> nick
    java.lang.String role -> role
    java.lang.String getActor() -> getActor
    java.lang.String getReason() -> getReason
    java.lang.String getAffiliation() -> getAffiliation
    java.lang.String getJid() -> getJid
    java.lang.String getNick() -> getNick
    java.lang.String getRole() -> getRole
    void setActor(java.lang.String) -> setActor
    void setReason(java.lang.String) -> setReason
    void setJid(java.lang.String) -> setJid
    void setNick(java.lang.String) -> setNick
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.MUCCreatePresence -> org.jivesoftware.smackx.packet.MUCCreatePresence:
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.MUCInitialPresence -> org.jivesoftware.smackx.packet.MUCInitialPresence:
    java.lang.String password -> password
    org.jivesoftware.smackx.packet.MUCInitialPresence$History history -> history
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
    org.jivesoftware.smackx.packet.MUCInitialPresence$History getHistory() -> getHistory
    java.lang.String getPassword() -> getPassword
    void setHistory(org.jivesoftware.smackx.packet.MUCInitialPresence$History) -> setHistory
    void setPassword(java.lang.String) -> setPassword
org.jivesoftware.smackx.packet.MUCInitialPresence$History -> org.jivesoftware.smackx.packet.MUCInitialPresence$History:
    int maxChars -> maxChars
    int maxStanzas -> maxStanzas
    int seconds -> seconds
    java.util.Date since -> since
    int getMaxChars() -> getMaxChars
    int getMaxStanzas() -> getMaxStanzas
    int getSeconds() -> getSeconds
    java.util.Date getSince() -> getSince
    void setMaxChars(int) -> setMaxChars
    void setMaxStanzas(int) -> setMaxStanzas
    void setSeconds(int) -> setSeconds
    void setSince(java.util.Date) -> setSince
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.MUCJoinPresence -> org.jivesoftware.smackx.packet.MUCJoinPresence:
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.MUCOwner -> org.jivesoftware.smackx.packet.MUCOwner:
    java.util.List items -> items
    org.jivesoftware.smackx.packet.MUCOwner$Destroy destroy -> destroy
    java.util.Iterator getItems() -> getItems
    org.jivesoftware.smackx.packet.MUCOwner$Destroy getDestroy() -> getDestroy
    void setDestroy(org.jivesoftware.smackx.packet.MUCOwner$Destroy) -> setDestroy
    void addItem(org.jivesoftware.smackx.packet.MUCOwner$Item) -> addItem
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.packet.MUCOwner$Destroy -> org.jivesoftware.smackx.packet.MUCOwner$Destroy:
    java.lang.String reason -> reason
    java.lang.String jid -> jid
    java.lang.String getJid() -> getJid
    java.lang.String getReason() -> getReason
    void setJid(java.lang.String) -> setJid
    void setReason(java.lang.String) -> setReason
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.MUCOwner$Item -> org.jivesoftware.smackx.packet.MUCOwner$Item:
    java.lang.String actor -> actor
    java.lang.String reason -> reason
    java.lang.String affiliation -> affiliation
    java.lang.String jid -> jid
    java.lang.String nick -> nick
    java.lang.String role -> role
    java.lang.String getActor() -> getActor
    java.lang.String getReason() -> getReason
    java.lang.String getAffiliation() -> getAffiliation
    java.lang.String getJid() -> getJid
    java.lang.String getNick() -> getNick
    java.lang.String getRole() -> getRole
    void setActor(java.lang.String) -> setActor
    void setReason(java.lang.String) -> setReason
    void setJid(java.lang.String) -> setJid
    void setNick(java.lang.String) -> setNick
    void setRole(java.lang.String) -> setRole
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.MUCUser -> org.jivesoftware.smackx.packet.MUCUser:
    org.jivesoftware.smackx.packet.MUCUser$Invite invite -> invite
    org.jivesoftware.smackx.packet.MUCUser$Decline decline -> decline
    org.jivesoftware.smackx.packet.MUCUser$Apply apply -> apply
    org.jivesoftware.smackx.packet.MUCUser$Accept accept -> accept
    org.jivesoftware.smackx.packet.MUCUser$Item item -> item
    java.lang.String password -> password
    org.jivesoftware.smackx.packet.MUCUser$Status status -> status
    org.jivesoftware.smackx.packet.MUCUser$Destroy destroy -> destroy
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
    org.jivesoftware.smackx.packet.MUCUser$Invite getInvite() -> getInvite
    org.jivesoftware.smackx.packet.MUCUser$Apply getApply() -> getApply
    org.jivesoftware.smackx.packet.MUCUser$Decline getDecline() -> getDecline
    org.jivesoftware.smackx.packet.MUCUser$Item getItem() -> getItem
    java.lang.String getPassword() -> getPassword
    org.jivesoftware.smackx.packet.MUCUser$Status getStatus() -> getStatus
    org.jivesoftware.smackx.packet.MUCUser$Destroy getDestroy() -> getDestroy
    void setInvite(org.jivesoftware.smackx.packet.MUCUser$Invite) -> setInvite
    void setApply(org.jivesoftware.smackx.packet.MUCUser$Apply) -> setApply
    org.jivesoftware.smackx.packet.MUCUser$Accept getAccept() -> getAccept
    void setAccept(org.jivesoftware.smackx.packet.MUCUser$Accept) -> setAccept
    void setDecline(org.jivesoftware.smackx.packet.MUCUser$Decline) -> setDecline
    void setItem(org.jivesoftware.smackx.packet.MUCUser$Item) -> setItem
    void setPassword(java.lang.String) -> setPassword
    void setStatus(org.jivesoftware.smackx.packet.MUCUser$Status) -> setStatus
    void setDestroy(org.jivesoftware.smackx.packet.MUCUser$Destroy) -> setDestroy
org.jivesoftware.smackx.packet.MUCUser$Accept -> org.jivesoftware.smackx.packet.MUCUser$Accept:
    java.lang.String reason -> reason
    java.lang.String from -> from
    java.lang.String to -> to
    java.lang.String fromNick -> fromNick
    java.lang.String getFrom() -> getFrom
    java.lang.String getReason() -> getReason
    java.lang.String getTo() -> getTo
    void setFrom(java.lang.String) -> setFrom
    void setReason(java.lang.String) -> setReason
    void setTo(java.lang.String) -> setTo
    java.lang.String getFromNick() -> getFromNick
    void setFromNick(java.lang.String) -> setFromNick
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.MUCUser$Apply -> org.jivesoftware.smackx.packet.MUCUser$Apply:
    java.lang.String reason -> reason
    java.lang.String from -> from
    java.lang.String to -> to
    java.lang.String toNick -> toNick
    java.lang.String getFrom() -> getFrom
    java.lang.String getReason() -> getReason
    java.lang.String getTo() -> getTo
    void setFrom(java.lang.String) -> setFrom
    void setReason(java.lang.String) -> setReason
    void setTo(java.lang.String) -> setTo
    java.lang.String getToNick() -> getToNick
    void setToNick(java.lang.String) -> setToNick
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.MUCUser$Decline -> org.jivesoftware.smackx.packet.MUCUser$Decline:
    java.lang.String reason -> reason
    java.lang.String from -> from
    java.lang.String to -> to
    java.lang.String fromNick -> fromNick
    org.jivesoftware.smackx.packet.MUCUser$MucType type -> type
    java.lang.String getFrom() -> getFrom
    java.lang.String getReason() -> getReason
    java.lang.String getTo() -> getTo
    void setFrom(java.lang.String) -> setFrom
    void setReason(java.lang.String) -> setReason
    void setTo(java.lang.String) -> setTo
    java.lang.String getFromNick() -> getFromNick
    void setFromNick(java.lang.String) -> setFromNick
    org.jivesoftware.smackx.packet.MUCUser$MucType getType() -> getType
    void setType(org.jivesoftware.smackx.packet.MUCUser$MucType) -> setType
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.MUCUser$Destroy -> org.jivesoftware.smackx.packet.MUCUser$Destroy:
    java.lang.String reason -> reason
    java.lang.String jid -> jid
    java.lang.String getJid() -> getJid
    java.lang.String getReason() -> getReason
    void setJid(java.lang.String) -> setJid
    void setReason(java.lang.String) -> setReason
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.MUCUser$Invite -> org.jivesoftware.smackx.packet.MUCUser$Invite:
    java.lang.String reason -> reason
    java.lang.String from -> from
    java.lang.String to -> to
    java.lang.String getFrom() -> getFrom
    java.lang.String getReason() -> getReason
    java.lang.String getTo() -> getTo
    void setFrom(java.lang.String) -> setFrom
    void setReason(java.lang.String) -> setReason
    void setTo(java.lang.String) -> setTo
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.MUCUser$Item -> org.jivesoftware.smackx.packet.MUCUser$Item:
    java.lang.String actor -> actor
    java.lang.String reason -> reason
    java.lang.String affiliation -> affiliation
    java.lang.String jid -> jid
    java.lang.String nick -> nick
    java.lang.String role -> role
    java.lang.String getActor() -> getActor
    java.lang.String getReason() -> getReason
    java.lang.String getAffiliation() -> getAffiliation
    java.lang.String getJid() -> getJid
    java.lang.String getNick() -> getNick
    java.lang.String getRole() -> getRole
    void setActor(java.lang.String) -> setActor
    void setReason(java.lang.String) -> setReason
    void setJid(java.lang.String) -> setJid
    void setNick(java.lang.String) -> setNick
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.MUCUser$MucType -> org.jivesoftware.smackx.packet.MUCUser$MucType:
    org.jivesoftware.smackx.packet.MUCUser$MucType Invite -> Invite
    org.jivesoftware.smackx.packet.MUCUser$MucType Apply -> Apply
    org.jivesoftware.smackx.packet.MUCUser$MucType[] $VALUES -> $VALUES
    org.jivesoftware.smackx.packet.MUCUser$MucType[] values() -> values
    org.jivesoftware.smackx.packet.MUCUser$MucType valueOf(java.lang.String) -> valueOf
org.jivesoftware.smackx.packet.MUCUser$Status -> org.jivesoftware.smackx.packet.MUCUser$Status:
    java.lang.String code -> code
    java.lang.String getCode() -> getCode
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.MessageEvent -> org.jivesoftware.smackx.packet.MessageEvent:
    java.lang.String OFFLINE -> OFFLINE
    java.lang.String COMPOSING -> COMPOSING
    java.lang.String DISPLAYED -> DISPLAYED
    java.lang.String DELIVERED -> DELIVERED
    java.lang.String CANCELLED -> CANCELLED
    boolean offline -> offline
    boolean delivered -> delivered
    boolean displayed -> displayed
    boolean composing -> composing
    boolean cancelled -> cancelled
    java.lang.String packetID -> packetID
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    boolean isComposing() -> isComposing
    boolean isDelivered() -> isDelivered
    boolean isDisplayed() -> isDisplayed
    boolean isOffline() -> isOffline
    boolean isCancelled() -> isCancelled
    java.lang.String getPacketID() -> getPacketID
    java.util.Iterator getEventTypes() -> getEventTypes
    void setComposing(boolean) -> setComposing
    void setDelivered(boolean) -> setDelivered
    void setDisplayed(boolean) -> setDisplayed
    void setOffline(boolean) -> setOffline
    void setCancelled(boolean) -> setCancelled
    void setPacketID(java.lang.String) -> setPacketID
    boolean isMessageEventRequest() -> isMessageEventRequest
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.MultipleAddresses -> org.jivesoftware.smackx.packet.MultipleAddresses:
    java.lang.String BCC -> BCC
    java.lang.String CC -> CC
    java.lang.String NO_REPLY -> NO_REPLY
    java.lang.String REPLY_ROOM -> REPLY_ROOM
    java.lang.String REPLY_TO -> REPLY_TO
    java.lang.String TO -> TO
    java.util.List addresses -> addresses
    void addAddress(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String) -> addAddress
    void setNoReply() -> setNoReply
    java.util.List getAddressesOfType(java.lang.String) -> getAddressesOfType
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.MultipleAddresses$1 -> org.jivesoftware.smackx.packet.MultipleAddresses$1:
org.jivesoftware.smackx.packet.MultipleAddresses$Address -> org.jivesoftware.smackx.packet.MultipleAddresses$Address:
    java.lang.String type -> type
    java.lang.String jid -> jid
    java.lang.String node -> node
    java.lang.String description -> description
    boolean delivered -> delivered
    java.lang.String uri -> uri
    java.lang.String getType() -> getType
    java.lang.String getJid() -> getJid
    void setJid(java.lang.String) -> setJid
    java.lang.String getNode() -> getNode
    void setNode(java.lang.String) -> setNode
    java.lang.String getDescription() -> getDescription
    void setDescription(java.lang.String) -> setDescription
    boolean isDelivered() -> isDelivered
    void setDelivered(boolean) -> setDelivered
    java.lang.String getUri() -> getUri
    void setUri(java.lang.String) -> setUri
    java.lang.String toXML() -> toXML
    void access$100(org.jivesoftware.smackx.packet.MultipleAddresses$Address,java.lang.String) -> access$100
    void access$200(org.jivesoftware.smackx.packet.MultipleAddresses$Address,java.lang.String) -> access$200
    void access$300(org.jivesoftware.smackx.packet.MultipleAddresses$Address,java.lang.String) -> access$300
    void access$400(org.jivesoftware.smackx.packet.MultipleAddresses$Address,boolean) -> access$400
    void access$500(org.jivesoftware.smackx.packet.MultipleAddresses$Address,java.lang.String) -> access$500
    java.lang.String access$600(org.jivesoftware.smackx.packet.MultipleAddresses$Address) -> access$600
org.jivesoftware.smackx.packet.Nick -> org.jivesoftware.smackx.packet.Nick:
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String name -> name
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.Nick$Provider -> org.jivesoftware.smackx.packet.Nick$Provider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.packet.OfflineMessageInfo -> org.jivesoftware.smackx.packet.OfflineMessageInfo:
    java.lang.String node -> node
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String getNode() -> getNode
    void setNode(java.lang.String) -> setNode
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.OfflineMessageInfo$Provider -> org.jivesoftware.smackx.packet.OfflineMessageInfo$Provider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.packet.OfflineMessageRequest -> org.jivesoftware.smackx.packet.OfflineMessageRequest:
    java.util.List items -> items
    boolean purge -> purge
    boolean fetch -> fetch
    java.util.Iterator getItems() -> getItems
    void addItem(org.jivesoftware.smackx.packet.OfflineMessageRequest$Item) -> addItem
    boolean isPurge() -> isPurge
    void setPurge(boolean) -> setPurge
    boolean isFetch() -> isFetch
    void setFetch(boolean) -> setFetch
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.packet.OfflineMessageRequest$Item -> org.jivesoftware.smackx.packet.OfflineMessageRequest$Item:
    java.lang.String action -> action
    java.lang.String jid -> jid
    java.lang.String node -> node
    java.lang.String getNode() -> getNode
    java.lang.String getAction() -> getAction
    void setAction(java.lang.String) -> setAction
    java.lang.String getJid() -> getJid
    void setJid(java.lang.String) -> setJid
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.OfflineMessageRequest$Provider -> org.jivesoftware.smackx.packet.OfflineMessageRequest$Provider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
    org.jivesoftware.smackx.packet.OfflineMessageRequest$Item parseItem(org.xmlpull.v1.XmlPullParser) -> parseItem
org.jivesoftware.smackx.packet.PEPEvent -> org.jivesoftware.smackx.packet.PEPEvent:
    org.jivesoftware.smackx.packet.PEPItem item -> item
    void addPEPItem(org.jivesoftware.smackx.packet.PEPItem) -> addPEPItem
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.PEPItem -> org.jivesoftware.smackx.packet.PEPItem:
    java.lang.String id -> id
    java.lang.String getNode() -> getNode
    java.lang.String getItemDetailsXML() -> getItemDetailsXML
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.PEPPubSub -> org.jivesoftware.smackx.packet.PEPPubSub:
    org.jivesoftware.smackx.packet.PEPItem item -> item
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.packet.PrivateData -> org.jivesoftware.smackx.packet.PrivateData:
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.RosterExchange -> org.jivesoftware.smackx.packet.RosterExchange:
    java.util.List remoteRosterEntries -> remoteRosterEntries
    void addRosterEntry(org.jivesoftware.smack.RosterEntry) -> addRosterEntry
    void addRosterEntry(org.jivesoftware.smackx.RemoteRosterEntry) -> addRosterEntry
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.util.Iterator getRosterEntries() -> getRosterEntries
    int getEntryCount() -> getEntryCount
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.SharedGroupsInfo -> org.jivesoftware.smackx.packet.SharedGroupsInfo:
    java.util.List groups -> groups
    java.util.List getGroups() -> getGroups
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.packet.SharedGroupsInfo$Provider -> org.jivesoftware.smackx.packet.SharedGroupsInfo$Provider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
org.jivesoftware.smackx.packet.StreamInitiation -> org.jivesoftware.smackx.packet.StreamInitiation:
    java.lang.String id -> id
    java.lang.String mimeType -> mimeType
    org.jivesoftware.smackx.packet.StreamInitiation$File file -> file
    org.jivesoftware.smackx.packet.StreamInitiation$Feature featureNegotiation -> featureNegotiation
    void setSesssionID(java.lang.String) -> setSesssionID
    java.lang.String getSessionID() -> getSessionID
    void setMimeType(java.lang.String) -> setMimeType
    java.lang.String getMimeType() -> getMimeType
    void setFile(org.jivesoftware.smackx.packet.StreamInitiation$File) -> setFile
    org.jivesoftware.smackx.packet.StreamInitiation$File getFile() -> getFile
    void setFeatureNegotiationForm(org.jivesoftware.smackx.packet.DataForm) -> setFeatureNegotiationForm
    org.jivesoftware.smackx.packet.DataForm getFeatureNegotiationForm() -> getFeatureNegotiationForm
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.packet.StreamInitiation$Feature -> org.jivesoftware.smackx.packet.StreamInitiation$Feature:
    org.jivesoftware.smackx.packet.DataForm data -> data
    org.jivesoftware.smackx.packet.StreamInitiation this$0 -> this$0
    org.jivesoftware.smackx.packet.DataForm getData() -> getData
    java.lang.String getNamespace() -> getNamespace
    java.lang.String getElementName() -> getElementName
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.StreamInitiation$File -> org.jivesoftware.smackx.packet.StreamInitiation$File:
    java.lang.String name -> name
    long size -> size
    java.lang.String hash -> hash
    java.util.Date date -> date
    java.lang.String desc -> desc
    boolean isRanged -> isRanged
    java.lang.String getName() -> getName
    long getSize() -> getSize
    void setHash(java.lang.String) -> setHash
    java.lang.String getHash() -> getHash
    void setDate(java.util.Date) -> setDate
    java.util.Date getDate() -> getDate
    void setDesc(java.lang.String) -> setDesc
    java.lang.String getDesc() -> getDesc
    void setRanged(boolean) -> setRanged
    boolean isRanged() -> isRanged
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.Time -> org.jivesoftware.smackx.packet.Time:
    java.text.SimpleDateFormat utcFormat -> utcFormat
    java.text.DateFormat displayFormat -> displayFormat
    java.lang.String utc -> utc
    java.lang.String tz -> tz
    java.lang.String display -> display
    java.util.Date getTime() -> getTime
    void setTime(java.util.Date) -> setTime
    java.lang.String getUtc() -> getUtc
    void setUtc(java.lang.String) -> setUtc
    java.lang.String getTz() -> getTz
    void setTz(java.lang.String) -> setTz
    java.lang.String getDisplay() -> getDisplay
    void setDisplay(java.lang.String) -> setDisplay
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.packet.VCard -> org.jivesoftware.smackx.packet.VCard:
    java.util.Map homePhones -> homePhones
    java.util.Map workPhones -> workPhones
    java.util.Map homeAddr -> homeAddr
    java.util.Map workAddr -> workAddr
    java.lang.String firstName -> firstName
    java.lang.String lastName -> lastName
    java.lang.String middleName -> middleName
    java.lang.String emailHome -> emailHome
    java.lang.String emailWork -> emailWork
    java.lang.String organization -> organization
    java.lang.String organizationUnit -> organizationUnit
    java.lang.String photoMimeType -> photoMimeType
    java.lang.String photoBinval -> photoBinval
    java.util.Map otherSimpleFields -> otherSimpleFields
    java.util.Map otherUnescapableFields -> otherUnescapableFields
    java.lang.String getField(java.lang.String) -> getField
    void setField(java.lang.String,java.lang.String) -> setField
    void setField(java.lang.String,java.lang.String,boolean) -> setField
    java.lang.String getFirstName() -> getFirstName
    void setFirstName(java.lang.String) -> setFirstName
    java.lang.String getLastName() -> getLastName
    void setLastName(java.lang.String) -> setLastName
    java.lang.String getMiddleName() -> getMiddleName
    void setMiddleName(java.lang.String) -> setMiddleName
    java.lang.String getNickName() -> getNickName
    void setNickName(java.lang.String) -> setNickName
    java.lang.String getEmailHome() -> getEmailHome
    void setEmailHome(java.lang.String) -> setEmailHome
    java.lang.String getEmailWork() -> getEmailWork
    void setEmailWork(java.lang.String) -> setEmailWork
    java.lang.String getJabberId() -> getJabberId
    void setJabberId(java.lang.String) -> setJabberId
    java.lang.String getOrganization() -> getOrganization
    void setOrganization(java.lang.String) -> setOrganization
    java.lang.String getOrganizationUnit() -> getOrganizationUnit
    void setOrganizationUnit(java.lang.String) -> setOrganizationUnit
    java.lang.String getAddressFieldHome(java.lang.String) -> getAddressFieldHome
    void setAddressFieldHome(java.lang.String,java.lang.String) -> setAddressFieldHome
    java.lang.String getAddressFieldWork(java.lang.String) -> getAddressFieldWork
    void setAddressFieldWork(java.lang.String,java.lang.String) -> setAddressFieldWork
    void setPhoneHome(java.lang.String,java.lang.String) -> setPhoneHome
    java.lang.String getPhoneHome(java.lang.String) -> getPhoneHome
    void setPhoneWork(java.lang.String,java.lang.String) -> setPhoneWork
    java.lang.String getPhoneWork(java.lang.String) -> getPhoneWork
    void setAvatar(java.net.URL) -> setAvatar
    void removeAvatar() -> removeAvatar
    void setAvatar(byte[]) -> setAvatar
    void setAvatar(byte[],java.lang.String) -> setAvatar
    void setAvatar(java.lang.String,java.lang.String) -> setAvatar
    byte[] getAvatar() -> getAvatar
    java.lang.String getAvatarMimeType() -> getAvatarMimeType
    byte[] getBytes(java.net.URL) -> getBytes
    byte[] getFileBytes(java.io.File) -> getFileBytes
    java.lang.String getAvatarHash() -> getAvatarHash
    void updateFN() -> updateFN
    void save(org.jivesoftware.smack.Connection) -> save
    void load(org.jivesoftware.smack.Connection) -> load
    void load(org.jivesoftware.smack.Connection,java.lang.String) -> load
    void doLoad(org.jivesoftware.smack.Connection,java.lang.String) -> doLoad
    java.lang.String getChildElementXML() -> getChildElementXML
    void copyFieldsFrom(org.jivesoftware.smackx.packet.VCard) -> copyFieldsFrom
    void checkAuthenticated(org.jivesoftware.smack.Connection,boolean) -> checkAuthenticated
    boolean hasContent() -> hasContent
    boolean hasNameField() -> hasNameField
    boolean hasOrganizationFields() -> hasOrganizationFields
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    boolean access$000(org.jivesoftware.smackx.packet.VCard) -> access$000
    boolean access$200(org.jivesoftware.smackx.packet.VCard) -> access$200
    java.lang.String access$300(org.jivesoftware.smackx.packet.VCard) -> access$300
    java.lang.String access$400(org.jivesoftware.smackx.packet.VCard) -> access$400
    java.util.Map access$500(org.jivesoftware.smackx.packet.VCard) -> access$500
    java.util.Map access$600(org.jivesoftware.smackx.packet.VCard) -> access$600
    java.util.Map access$700(org.jivesoftware.smackx.packet.VCard) -> access$700
    java.util.Map access$800(org.jivesoftware.smackx.packet.VCard) -> access$800
    java.lang.String access$900(org.jivesoftware.smackx.packet.VCard) -> access$900
    java.lang.String access$1100(org.jivesoftware.smackx.packet.VCard) -> access$1100
    java.util.Map access$1300(org.jivesoftware.smackx.packet.VCard) -> access$1300
    java.util.Map access$1400(org.jivesoftware.smackx.packet.VCard) -> access$1400
    boolean access$1500(org.jivesoftware.smackx.packet.VCard) -> access$1500
    java.lang.String access$1600(org.jivesoftware.smackx.packet.VCard) -> access$1600
    java.lang.String access$1700(org.jivesoftware.smackx.packet.VCard) -> access$1700
    java.lang.String access$1800(org.jivesoftware.smackx.packet.VCard) -> access$1800
    java.lang.String access$1900(org.jivesoftware.smackx.packet.VCard) -> access$1900
    java.lang.String access$2000(org.jivesoftware.smackx.packet.VCard) -> access$2000
org.jivesoftware.smackx.packet.VCard$ContentBuilder -> org.jivesoftware.smackx.packet.VCard$ContentBuilder:
    void addTagContent() -> addTagContent
org.jivesoftware.smackx.packet.VCard$VCardWriter -> org.jivesoftware.smackx.packet.VCard$VCardWriter:
    java.lang.StringBuilder sb -> sb
    org.jivesoftware.smackx.packet.VCard this$0 -> this$0
    void write() -> write
    void buildActualContent() -> buildActualContent
    void appendPhoto() -> appendPhoto
    void appendEmail(java.lang.String,java.lang.String) -> appendEmail
    void appendPhones(java.util.Map,java.lang.String) -> appendPhones
    void appendAddress(java.util.Map,java.lang.String) -> appendAddress
    void appendEmptyTag(java.lang.Object) -> appendEmptyTag
    void appendGenericFields() -> appendGenericFields
    void appendOrganization() -> appendOrganization
    void appendN() -> appendN
    void appendTag(java.lang.String,java.lang.String,java.lang.String,boolean,org.jivesoftware.smackx.packet.VCard$ContentBuilder) -> appendTag
    void appendTag(java.lang.String,boolean,org.jivesoftware.smackx.packet.VCard$ContentBuilder) -> appendTag
    void appendTag(java.lang.String,java.lang.String) -> appendTag
    void access$100(org.jivesoftware.smackx.packet.VCard$VCardWriter) -> access$100
    void access$1000(org.jivesoftware.smackx.packet.VCard$VCardWriter,java.lang.String,java.lang.String) -> access$1000
    void access$1200(org.jivesoftware.smackx.packet.VCard$VCardWriter,java.lang.Object) -> access$1200
    java.lang.StringBuilder access$2100(org.jivesoftware.smackx.packet.VCard$VCardWriter) -> access$2100
org.jivesoftware.smackx.packet.VCard$VCardWriter$1 -> org.jivesoftware.smackx.packet.VCard$VCardWriter$1:
    org.jivesoftware.smackx.packet.VCard$VCardWriter this$1 -> this$1
    void addTagContent() -> addTagContent
org.jivesoftware.smackx.packet.VCard$VCardWriter$2 -> org.jivesoftware.smackx.packet.VCard$VCardWriter$2:
    org.jivesoftware.smackx.packet.VCard$VCardWriter this$1 -> this$1
    void addTagContent() -> addTagContent
org.jivesoftware.smackx.packet.VCard$VCardWriter$3 -> org.jivesoftware.smackx.packet.VCard$VCardWriter$3:
    java.lang.String val$type -> val$type
    java.lang.String val$email -> val$email
    org.jivesoftware.smackx.packet.VCard$VCardWriter this$1 -> this$1
    void addTagContent() -> addTagContent
org.jivesoftware.smackx.packet.VCard$VCardWriter$4 -> org.jivesoftware.smackx.packet.VCard$VCardWriter$4:
    java.util.Map$Entry val$entry -> val$entry
    java.lang.String val$code -> val$code
    org.jivesoftware.smackx.packet.VCard$VCardWriter this$1 -> this$1
    void addTagContent() -> addTagContent
org.jivesoftware.smackx.packet.VCard$VCardWriter$5 -> org.jivesoftware.smackx.packet.VCard$VCardWriter$5:
    java.lang.String val$code -> val$code
    java.util.Map val$addr -> val$addr
    org.jivesoftware.smackx.packet.VCard$VCardWriter this$1 -> this$1
    void addTagContent() -> addTagContent
org.jivesoftware.smackx.packet.VCard$VCardWriter$6 -> org.jivesoftware.smackx.packet.VCard$VCardWriter$6:
    org.jivesoftware.smackx.packet.VCard$VCardWriter this$1 -> this$1
    void addTagContent() -> addTagContent
org.jivesoftware.smackx.packet.VCard$VCardWriter$7 -> org.jivesoftware.smackx.packet.VCard$VCardWriter$7:
    org.jivesoftware.smackx.packet.VCard$VCardWriter this$1 -> this$1
    void addTagContent() -> addTagContent
org.jivesoftware.smackx.packet.VCard$VCardWriter$8 -> org.jivesoftware.smackx.packet.VCard$VCardWriter$8:
    java.lang.String val$tagText -> val$tagText
    org.jivesoftware.smackx.packet.VCard$VCardWriter this$1 -> this$1
    void addTagContent() -> addTagContent
org.jivesoftware.smackx.packet.Version -> org.jivesoftware.smackx.packet.Version:
    java.lang.String name -> name
    java.lang.String version -> version
    java.lang.String os -> os
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getVersion() -> getVersion
    void setVersion(java.lang.String) -> setVersion
    java.lang.String getOs() -> getOs
    void setOs(java.lang.String) -> setOs
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.packet.XHTMLExtension -> org.jivesoftware.smackx.packet.XHTMLExtension:
    java.util.List bodies -> bodies
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
    java.util.Iterator getBodies() -> getBodies
    void addBody(java.lang.String) -> addBody
    int getBodiesCount() -> getBodiesCount
org.jivesoftware.smackx.ping.PingFailedListener -> org.jivesoftware.smackx.ping.PingFailedListener:
    void pingFailed() -> pingFailed
org.jivesoftware.smackx.ping.PingManager -> org.jivesoftware.smackx.ping.PingManager:
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String ELEMENT -> ELEMENT
    java.util.Map instances -> instances
    java.util.concurrent.ScheduledExecutorService periodicPingExecutorService -> periodicPingExecutorService
    org.jivesoftware.smack.Connection connection -> connection
    int pingInterval -> pingInterval
    java.util.Set pingFailedListeners -> pingFailedListeners
    java.util.concurrent.ScheduledFuture periodicPingTask -> periodicPingTask
    long lastSuccessfulPingByTask -> lastSuccessfulPingByTask
    long pingMinDelta -> pingMinDelta
    long lastPingStamp -> lastPingStamp
    long lastSuccessfulManualPing -> lastSuccessfulManualPing
    org.jivesoftware.smackx.ping.PingManager getInstanceFor(org.jivesoftware.smack.Connection) -> getInstanceFor
    void setPingIntervall(int) -> setPingIntervall
    int getPingIntervall() -> getPingIntervall
    void registerPingFailedListener(org.jivesoftware.smackx.ping.PingFailedListener) -> registerPingFailedListener
    void unregisterPingFailedListener(org.jivesoftware.smackx.ping.PingFailedListener) -> unregisterPingFailedListener
    void disablePingFloodProtection() -> disablePingFloodProtection
    void setPingMinimumInterval(long) -> setPingMinimumInterval
    long getPingMinimumInterval() -> getPingMinimumInterval
    org.jivesoftware.smack.packet.IQ ping(java.lang.String,long) -> ping
    org.jivesoftware.smack.packet.IQ ping(java.lang.String) -> ping
    boolean pingEntity(java.lang.String,long) -> pingEntity
    boolean pingEntity(java.lang.String) -> pingEntity
    boolean pingMyServer(long) -> pingMyServer
    boolean pingMyServer() -> pingMyServer
    boolean isPingSupported(java.lang.String) -> isPingSupported
    long getLastSuccessfulPing() -> getLastSuccessfulPing
    java.util.Set getPingFailedListeners() -> getPingFailedListeners
    void maybeSchedulePingServerTask() -> maybeSchedulePingServerTask
    void maybeStopPingServerTask() -> maybeStopPingServerTask
    void pongReceived() -> pongReceived
    long access$000(org.jivesoftware.smackx.ping.PingManager) -> access$000
    long access$100(org.jivesoftware.smackx.ping.PingManager) -> access$100
    long access$102(org.jivesoftware.smackx.ping.PingManager,long) -> access$102
    void access$200(org.jivesoftware.smackx.ping.PingManager) -> access$200
org.jivesoftware.smackx.ping.PingManager$1 -> org.jivesoftware.smackx.ping.PingManager$1:
    void connectionCreated(org.jivesoftware.smack.Connection) -> connectionCreated
org.jivesoftware.smackx.ping.PingManager$2 -> org.jivesoftware.smackx.ping.PingManager$2:
    org.jivesoftware.smack.Connection val$connection -> val$connection
    org.jivesoftware.smackx.ping.PingManager this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.ping.PingManager$3 -> org.jivesoftware.smackx.ping.PingManager$3:
    org.jivesoftware.smackx.ping.PingManager this$0 -> this$0
    void connectionClosed() -> connectionClosed
    void connectionClosedOnError(java.lang.Exception) -> connectionClosedOnError
    void reconnectionSuccessful() -> reconnectionSuccessful
    void reconnectingIn(int) -> reconnectingIn
    void reconnectionFailed(java.lang.Exception) -> reconnectionFailed
org.jivesoftware.smackx.ping.ServerPingTask -> org.jivesoftware.smackx.ping.ServerPingTask:
    java.lang.ref.WeakReference weakConnection -> weakConnection
    int delta -> delta
    int tries -> tries
    void run() -> run
org.jivesoftware.smackx.ping.packet.Ping -> org.jivesoftware.smackx.ping.packet.Ping:
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.ping.packet.Pong -> org.jivesoftware.smackx.ping.packet.Pong:
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.ping.provider.PingProvider -> org.jivesoftware.smackx.ping.provider.PingProvider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
org.jivesoftware.smackx.provider.AdHocCommandDataProvider -> org.jivesoftware.smackx.provider.AdHocCommandDataProvider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
org.jivesoftware.smackx.provider.AdHocCommandDataProvider$BadActionError -> org.jivesoftware.smackx.provider.AdHocCommandDataProvider$BadActionError:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.provider.AdHocCommandDataProvider$BadLocaleError -> org.jivesoftware.smackx.provider.AdHocCommandDataProvider$BadLocaleError:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.provider.AdHocCommandDataProvider$BadPayloadError -> org.jivesoftware.smackx.provider.AdHocCommandDataProvider$BadPayloadError:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.provider.AdHocCommandDataProvider$BadSessionIDError -> org.jivesoftware.smackx.provider.AdHocCommandDataProvider$BadSessionIDError:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.provider.AdHocCommandDataProvider$MalformedActionError -> org.jivesoftware.smackx.provider.AdHocCommandDataProvider$MalformedActionError:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.provider.AdHocCommandDataProvider$SessionExpiredError -> org.jivesoftware.smackx.provider.AdHocCommandDataProvider$SessionExpiredError:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.provider.CapsExtensionProvider -> org.jivesoftware.smackx.provider.CapsExtensionProvider:
    int MAX_DEPTH -> MAX_DEPTH
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.provider.DataFormProvider -> org.jivesoftware.smackx.provider.DataFormProvider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
    org.jivesoftware.smackx.FormField parseField(org.xmlpull.v1.XmlPullParser) -> parseField
    org.jivesoftware.smackx.packet.DataForm$Item parseItem(org.xmlpull.v1.XmlPullParser) -> parseItem
    org.jivesoftware.smackx.packet.DataForm$ReportedData parseReported(org.xmlpull.v1.XmlPullParser) -> parseReported
    org.jivesoftware.smackx.FormField$Option parseOption(org.xmlpull.v1.XmlPullParser) -> parseOption
org.jivesoftware.smackx.provider.DelayInfoProvider -> org.jivesoftware.smackx.provider.DelayInfoProvider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.provider.DelayInformationProvider -> org.jivesoftware.smackx.provider.DelayInformationProvider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.provider.DiscoverInfoProvider -> org.jivesoftware.smackx.provider.DiscoverInfoProvider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
org.jivesoftware.smackx.provider.DiscoverItemsProvider -> org.jivesoftware.smackx.provider.DiscoverItemsProvider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
org.jivesoftware.smackx.provider.EmbeddedExtensionProvider -> org.jivesoftware.smackx.provider.EmbeddedExtensionProvider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
    org.jivesoftware.smack.packet.PacketExtension createReturnExtension(java.lang.String,java.lang.String,java.util.Map,java.util.List) -> createReturnExtension
org.jivesoftware.smackx.provider.HeaderProvider -> org.jivesoftware.smackx.provider.HeaderProvider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.provider.HeadersProvider -> org.jivesoftware.smackx.provider.HeadersProvider:
    org.jivesoftware.smack.packet.PacketExtension createReturnExtension(java.lang.String,java.lang.String,java.util.Map,java.util.List) -> createReturnExtension
org.jivesoftware.smackx.provider.MUCAdminProvider -> org.jivesoftware.smackx.provider.MUCAdminProvider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
    org.jivesoftware.smackx.packet.MUCAdmin$Item parseItem(org.xmlpull.v1.XmlPullParser) -> parseItem
org.jivesoftware.smackx.provider.MUCOwnerProvider -> org.jivesoftware.smackx.provider.MUCOwnerProvider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
    org.jivesoftware.smackx.packet.MUCOwner$Item parseItem(org.xmlpull.v1.XmlPullParser) -> parseItem
    org.jivesoftware.smackx.packet.MUCOwner$Destroy parseDestroy(org.xmlpull.v1.XmlPullParser) -> parseDestroy
org.jivesoftware.smackx.provider.MUCUserProvider -> org.jivesoftware.smackx.provider.MUCUserProvider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
    org.jivesoftware.smackx.packet.MUCUser$Item parseItem(org.xmlpull.v1.XmlPullParser) -> parseItem
    org.jivesoftware.smackx.packet.MUCUser$Invite parseInvite(org.xmlpull.v1.XmlPullParser) -> parseInvite
    org.jivesoftware.smackx.packet.MUCUser$Apply parseApply(org.xmlpull.v1.XmlPullParser) -> parseApply
    org.jivesoftware.smackx.packet.MUCUser$Accept parseAccept(org.xmlpull.v1.XmlPullParser) -> parseAccept
    org.jivesoftware.smackx.packet.MUCUser$Decline parseDecline(org.xmlpull.v1.XmlPullParser) -> parseDecline
    org.jivesoftware.smackx.packet.MUCUser$Destroy parseDestroy(org.xmlpull.v1.XmlPullParser) -> parseDestroy
org.jivesoftware.smackx.provider.MessageEventProvider -> org.jivesoftware.smackx.provider.MessageEventProvider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.provider.MultipleAddressesProvider -> org.jivesoftware.smackx.provider.MultipleAddressesProvider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.provider.PEPProvider -> org.jivesoftware.smackx.provider.PEPProvider:
    java.util.Map nodeParsers -> nodeParsers
    org.jivesoftware.smack.packet.PacketExtension pepItem -> pepItem
    void registerPEPParserExtension(java.lang.String,org.jivesoftware.smack.provider.PacketExtensionProvider) -> registerPEPParserExtension
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.provider.PrivateDataProvider -> org.jivesoftware.smackx.provider.PrivateDataProvider:
    org.jivesoftware.smackx.packet.PrivateData parsePrivateData(org.xmlpull.v1.XmlPullParser) -> parsePrivateData
org.jivesoftware.smackx.provider.RosterExchangeProvider -> org.jivesoftware.smackx.provider.RosterExchangeProvider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.provider.StreamInitiationProvider -> org.jivesoftware.smackx.provider.StreamInitiationProvider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
org.jivesoftware.smackx.provider.VCardProvider -> org.jivesoftware.smackx.provider.VCardProvider:
    java.lang.String PREFERRED_ENCODING -> PREFERRED_ENCODING
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
    org.jivesoftware.smackx.packet.VCard createVCardFromXML(java.lang.String) -> createVCardFromXML
org.jivesoftware.smackx.provider.VCardProvider$VCardReader -> org.jivesoftware.smackx.provider.VCardProvider$VCardReader:
    org.jivesoftware.smackx.packet.VCard vCard -> vCard
    org.w3c.dom.Document document -> document
    void initializeFields() -> initializeFields
    void setupPhoto() -> setupPhoto
    void setupEmails() -> setupEmails
    void setupPhones() -> setupPhones
    boolean isWorkHome(java.lang.String) -> isWorkHome
    void setupAddresses() -> setupAddresses
    java.lang.String getTagContents(java.lang.String) -> getTagContents
    void setupSimpleFields() -> setupSimpleFields
    java.lang.String getTextContent(org.w3c.dom.Node) -> getTextContent
    void appendText(java.lang.StringBuilder,org.w3c.dom.Node) -> appendText
org.jivesoftware.smackx.provider.XHTMLExtensionProvider -> org.jivesoftware.smackx.provider.XHTMLExtensionProvider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.receipts.DeliveryReceipt -> org.jivesoftware.smackx.receipts.DeliveryReceipt:
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String ELEMENT -> ELEMENT
    java.lang.String id -> id
    java.lang.String getId() -> getId
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.receipts.DeliveryReceipt$Provider -> org.jivesoftware.smackx.receipts.DeliveryReceipt$Provider:
    org.jivesoftware.smack.packet.PacketExtension createReturnExtension(java.lang.String,java.lang.String,java.util.Map,java.util.List) -> createReturnExtension
org.jivesoftware.smackx.receipts.DeliveryReceiptManager -> org.jivesoftware.smackx.receipts.DeliveryReceiptManager:
    java.util.Map instances -> instances
    org.jivesoftware.smack.Connection connection -> connection
    boolean auto_receipts_enabled -> auto_receipts_enabled
    java.util.Set receiptReceivedListeners -> receiptReceivedListeners
    org.jivesoftware.smackx.receipts.DeliveryReceiptManager getInstanceFor(org.jivesoftware.smack.Connection) -> getInstanceFor
    boolean isSupported(java.lang.String) -> isSupported
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
    void setAutoReceiptsEnabled(boolean) -> setAutoReceiptsEnabled
    void enableAutoReceipts() -> enableAutoReceipts
    void disableAutoReceipts() -> disableAutoReceipts
    boolean getAutoReceiptsEnabled() -> getAutoReceiptsEnabled
    void addReceiptReceivedListener(org.jivesoftware.smackx.receipts.ReceiptReceivedListener) -> addReceiptReceivedListener
    void removeReceiptReceivedListener(org.jivesoftware.smackx.receipts.ReceiptReceivedListener) -> removeReceiptReceivedListener
    boolean hasDeliveryReceiptRequest(org.jivesoftware.smack.packet.Packet) -> hasDeliveryReceiptRequest
    void addDeliveryReceiptRequest(org.jivesoftware.smack.packet.Message) -> addDeliveryReceiptRequest
org.jivesoftware.smackx.receipts.DeliveryReceiptManager$1 -> org.jivesoftware.smackx.receipts.DeliveryReceiptManager$1:
    void connectionCreated(org.jivesoftware.smack.Connection) -> connectionCreated
org.jivesoftware.smackx.receipts.DeliveryReceiptRequest -> org.jivesoftware.smackx.receipts.DeliveryReceiptRequest:
    java.lang.String ELEMENT -> ELEMENT
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.receipts.DeliveryReceiptRequest$Provider -> org.jivesoftware.smackx.receipts.DeliveryReceiptRequest$Provider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.receipts.ReceiptReceivedListener -> org.jivesoftware.smackx.receipts.ReceiptReceivedListener:
    void onReceiptReceived(java.lang.String,java.lang.String,java.lang.String) -> onReceiptReceived
org.jivesoftware.smackx.search.SimpleUserSearch -> org.jivesoftware.smackx.search.SimpleUserSearch:
    org.jivesoftware.smackx.Form form -> form
    org.jivesoftware.smackx.ReportedData data -> data
    void setForm(org.jivesoftware.smackx.Form) -> setForm
    org.jivesoftware.smackx.ReportedData getReportedData() -> getReportedData
    java.lang.String getChildElementXML() -> getChildElementXML
    java.lang.String getItemsToSearch() -> getItemsToSearch
    java.lang.String getSingleValue(org.jivesoftware.smackx.FormField) -> getSingleValue
    void parseItems(org.xmlpull.v1.XmlPullParser) -> parseItems
org.jivesoftware.smackx.search.UserSearch -> org.jivesoftware.smackx.search.UserSearch:
    java.lang.String getChildElementXML() -> getChildElementXML
    org.jivesoftware.smackx.Form getSearchForm(org.jivesoftware.smack.Connection,java.lang.String) -> getSearchForm
    org.jivesoftware.smackx.ReportedData sendSearchForm(org.jivesoftware.smack.Connection,org.jivesoftware.smackx.Form,java.lang.String) -> sendSearchForm
    org.jivesoftware.smackx.ReportedData sendSimpleSearchForm(org.jivesoftware.smack.Connection,org.jivesoftware.smackx.Form,java.lang.String) -> sendSimpleSearchForm
    void buildDataForm(org.jivesoftware.smackx.search.SimpleUserSearch,java.lang.String,org.xmlpull.v1.XmlPullParser) -> buildDataForm
    void access$000(org.jivesoftware.smackx.search.SimpleUserSearch,java.lang.String,org.xmlpull.v1.XmlPullParser) -> access$000
org.jivesoftware.smackx.search.UserSearch$Provider -> org.jivesoftware.smackx.search.UserSearch$Provider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
org.jivesoftware.smackx.search.UserSearchManager -> org.jivesoftware.smackx.search.UserSearchManager:
    org.jivesoftware.smack.Connection con -> con
    org.jivesoftware.smackx.search.UserSearch userSearch -> userSearch
    org.jivesoftware.smackx.Form getSearchForm(java.lang.String) -> getSearchForm
    org.jivesoftware.smackx.ReportedData getSearchResults(org.jivesoftware.smackx.Form,java.lang.String) -> getSearchResults
    java.util.Collection getSearchServices() -> getSearchServices
org.slf4j.ILoggerFactory -> org.slf4j.ILoggerFactory:
    org.slf4j.Logger getLogger(java.lang.String) -> getLogger
org.slf4j.IMarkerFactory -> org.slf4j.IMarkerFactory:
    org.slf4j.Marker getMarker(java.lang.String) -> getMarker
    boolean exists(java.lang.String) -> exists
    boolean detachMarker(java.lang.String) -> detachMarker
    org.slf4j.Marker getDetachedMarker(java.lang.String) -> getDetachedMarker
org.slf4j.Logger -> org.slf4j.Logger:
    java.lang.String ROOT_LOGGER_NAME -> ROOT_LOGGER_NAME
    java.lang.String getName() -> getName
    boolean isTraceEnabled() -> isTraceEnabled
    void trace(java.lang.String) -> trace
    void trace(java.lang.String,java.lang.Object) -> trace
    void trace(java.lang.String,java.lang.Object,java.lang.Object) -> trace
    void trace(java.lang.String,java.lang.Object[]) -> trace
    void trace(java.lang.String,java.lang.Throwable) -> trace
    boolean isTraceEnabled(org.slf4j.Marker) -> isTraceEnabled
    void trace(org.slf4j.Marker,java.lang.String) -> trace
    void trace(org.slf4j.Marker,java.lang.String,java.lang.Object) -> trace
    void trace(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object) -> trace
    void trace(org.slf4j.Marker,java.lang.String,java.lang.Object[]) -> trace
    void trace(org.slf4j.Marker,java.lang.String,java.lang.Throwable) -> trace
    boolean isDebugEnabled() -> isDebugEnabled
    void debug(java.lang.String) -> debug
    void debug(java.lang.String,java.lang.Object) -> debug
    void debug(java.lang.String,java.lang.Object,java.lang.Object) -> debug
    void debug(java.lang.String,java.lang.Object[]) -> debug
    void debug(java.lang.String,java.lang.Throwable) -> debug
    boolean isDebugEnabled(org.slf4j.Marker) -> isDebugEnabled
    void debug(org.slf4j.Marker,java.lang.String) -> debug
    void debug(org.slf4j.Marker,java.lang.String,java.lang.Object) -> debug
    void debug(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object) -> debug
    void debug(org.slf4j.Marker,java.lang.String,java.lang.Object[]) -> debug
    void debug(org.slf4j.Marker,java.lang.String,java.lang.Throwable) -> debug
    boolean isInfoEnabled() -> isInfoEnabled
    void info(java.lang.String) -> info
    void info(java.lang.String,java.lang.Object) -> info
    void info(java.lang.String,java.lang.Object,java.lang.Object) -> info
    void info(java.lang.String,java.lang.Object[]) -> info
    void info(java.lang.String,java.lang.Throwable) -> info
    boolean isInfoEnabled(org.slf4j.Marker) -> isInfoEnabled
    void info(org.slf4j.Marker,java.lang.String) -> info
    void info(org.slf4j.Marker,java.lang.String,java.lang.Object) -> info
    void info(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object) -> info
    void info(org.slf4j.Marker,java.lang.String,java.lang.Object[]) -> info
    void info(org.slf4j.Marker,java.lang.String,java.lang.Throwable) -> info
    boolean isWarnEnabled() -> isWarnEnabled
    void warn(java.lang.String) -> warn
    void warn(java.lang.String,java.lang.Object) -> warn
    void warn(java.lang.String,java.lang.Object[]) -> warn
    void warn(java.lang.String,java.lang.Object,java.lang.Object) -> warn
    void warn(java.lang.String,java.lang.Throwable) -> warn
    boolean isWarnEnabled(org.slf4j.Marker) -> isWarnEnabled
    void warn(org.slf4j.Marker,java.lang.String) -> warn
    void warn(org.slf4j.Marker,java.lang.String,java.lang.Object) -> warn
    void warn(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object) -> warn
    void warn(org.slf4j.Marker,java.lang.String,java.lang.Object[]) -> warn
    void warn(org.slf4j.Marker,java.lang.String,java.lang.Throwable) -> warn
    boolean isErrorEnabled() -> isErrorEnabled
    void error(java.lang.String) -> error
    void error(java.lang.String,java.lang.Object) -> error
    void error(java.lang.String,java.lang.Object,java.lang.Object) -> error
    void error(java.lang.String,java.lang.Object[]) -> error
    void error(java.lang.String,java.lang.Throwable) -> error
    boolean isErrorEnabled(org.slf4j.Marker) -> isErrorEnabled
    void error(org.slf4j.Marker,java.lang.String) -> error
    void error(org.slf4j.Marker,java.lang.String,java.lang.Object) -> error
    void error(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object) -> error
    void error(org.slf4j.Marker,java.lang.String,java.lang.Object[]) -> error
    void error(org.slf4j.Marker,java.lang.String,java.lang.Throwable) -> error
org.slf4j.LoggerFactory -> org.slf4j.LoggerFactory:
    java.lang.String CODES_PREFIX -> CODES_PREFIX
    java.lang.String NO_STATICLOGGERBINDER_URL -> NO_STATICLOGGERBINDER_URL
    java.lang.String MULTIPLE_BINDINGS_URL -> MULTIPLE_BINDINGS_URL
    java.lang.String NULL_LF_URL -> NULL_LF_URL
    java.lang.String VERSION_MISMATCH -> VERSION_MISMATCH
    java.lang.String SUBSTITUTE_LOGGER_URL -> SUBSTITUTE_LOGGER_URL
    java.lang.String UNSUCCESSFUL_INIT_URL -> UNSUCCESSFUL_INIT_URL
    java.lang.String UNSUCCESSFUL_INIT_MSG -> UNSUCCESSFUL_INIT_MSG
    int UNINITIALIZED -> UNINITIALIZED
    int ONGOING_INITIALIZATION -> ONGOING_INITIALIZATION
    int FAILED_INITIALIZATION -> FAILED_INITIALIZATION
    int SUCCESSFUL_INITIALIZATION -> SUCCESSFUL_INITIALIZATION
    int NOP_FALLBACK_INITIALIZATION -> NOP_FALLBACK_INITIALIZATION
    int INITIALIZATION_STATE -> INITIALIZATION_STATE
    org.slf4j.helpers.SubstituteLoggerFactory TEMP_FACTORY -> TEMP_FACTORY
    org.slf4j.helpers.NOPLoggerFactory NOP_FALLBACK_FACTORY -> NOP_FALLBACK_FACTORY
    java.lang.String[] API_COMPATIBILITY_LIST -> API_COMPATIBILITY_LIST
    java.lang.String STATIC_LOGGER_BINDER_PATH -> STATIC_LOGGER_BINDER_PATH
    void reset() -> reset
    void performInitialization() -> performInitialization
    boolean messageContainsOrgSlf4jImplStaticLoggerBinder(java.lang.String) -> messageContainsOrgSlf4jImplStaticLoggerBinder
    void bind() -> bind
    void failedBinding(java.lang.Throwable) -> failedBinding
    void emitSubstituteLoggerWarning() -> emitSubstituteLoggerWarning
    void versionSanityCheck() -> versionSanityCheck
    java.util.Set findPossibleStaticLoggerBinderPathSet() -> findPossibleStaticLoggerBinderPathSet
    boolean isAmbiguousStaticLoggerBinderPathSet(java.util.Set) -> isAmbiguousStaticLoggerBinderPathSet
    void reportMultipleBindingAmbiguity(java.util.Set) -> reportMultipleBindingAmbiguity
    void reportActualBinding(java.util.Set) -> reportActualBinding
    org.slf4j.Logger getLogger(java.lang.String) -> getLogger
    org.slf4j.Logger getLogger(java.lang.Class) -> getLogger
    org.slf4j.ILoggerFactory getILoggerFactory() -> getILoggerFactory
org.slf4j.MDC -> org.slf4j.MDC:
    java.lang.String NULL_MDCA_URL -> NULL_MDCA_URL
    java.lang.String NO_STATIC_MDC_BINDER_URL -> NO_STATIC_MDC_BINDER_URL
    org.slf4j.spi.MDCAdapter mdcAdapter -> mdcAdapter
    void put(java.lang.String,java.lang.String) -> put
    java.lang.String get(java.lang.String) -> get
    void remove(java.lang.String) -> remove
    void clear() -> clear
    java.util.Map getCopyOfContextMap() -> getCopyOfContextMap
    void setContextMap(java.util.Map) -> setContextMap
    org.slf4j.spi.MDCAdapter getMDCAdapter() -> getMDCAdapter
org.slf4j.Marker -> org.slf4j.Marker:
    java.lang.String ANY_MARKER -> ANY_MARKER
    java.lang.String ANY_NON_NULL_MARKER -> ANY_NON_NULL_MARKER
    java.lang.String getName() -> getName
    void add(org.slf4j.Marker) -> add
    boolean remove(org.slf4j.Marker) -> remove
    boolean hasChildren() -> hasChildren
    boolean hasReferences() -> hasReferences
    java.util.Iterator iterator() -> iterator
    boolean contains(org.slf4j.Marker) -> contains
    boolean contains(java.lang.String) -> contains
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.slf4j.MarkerFactory -> org.slf4j.MarkerFactory:
    org.slf4j.IMarkerFactory markerFactory -> markerFactory
    org.slf4j.Marker getMarker(java.lang.String) -> getMarker
    org.slf4j.Marker getDetachedMarker(java.lang.String) -> getDetachedMarker
    org.slf4j.IMarkerFactory getIMarkerFactory() -> getIMarkerFactory
org.slf4j.helpers.BasicMDCAdapter -> org.slf4j.helpers.BasicMDCAdapter:
    java.lang.InheritableThreadLocal inheritableThreadLocal -> inheritableThreadLocal
    boolean IS_JDK14 -> IS_JDK14
    boolean isJDK14() -> isJDK14
    void put(java.lang.String,java.lang.String) -> put
    java.lang.String get(java.lang.String) -> get
    void remove(java.lang.String) -> remove
    void clear() -> clear
    java.util.Set getKeys() -> getKeys
    java.util.Map getCopyOfContextMap() -> getCopyOfContextMap
    void setContextMap(java.util.Map) -> setContextMap
org.slf4j.helpers.BasicMarker -> org.slf4j.helpers.BasicMarker:
    long serialVersionUID -> serialVersionUID
    java.lang.String name -> name
    java.util.List refereceList -> refereceList
    java.lang.String OPEN -> OPEN
    java.lang.String CLOSE -> CLOSE
    java.lang.String SEP -> SEP
    java.lang.String getName() -> getName
    void add(org.slf4j.Marker) -> add
    boolean hasReferences() -> hasReferences
    boolean hasChildren() -> hasChildren
    java.util.Iterator iterator() -> iterator
    boolean remove(org.slf4j.Marker) -> remove
    boolean contains(org.slf4j.Marker) -> contains
    boolean contains(java.lang.String) -> contains
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.slf4j.helpers.BasicMarkerFactory -> org.slf4j.helpers.BasicMarkerFactory:
    java.util.Map markerMap -> markerMap
    org.slf4j.Marker getMarker(java.lang.String) -> getMarker
    boolean exists(java.lang.String) -> exists
    boolean detachMarker(java.lang.String) -> detachMarker
    org.slf4j.Marker getDetachedMarker(java.lang.String) -> getDetachedMarker
org.slf4j.helpers.FormattingTuple -> org.slf4j.helpers.FormattingTuple:
    org.slf4j.helpers.FormattingTuple NULL -> NULL
    java.lang.String message -> message
    java.lang.Throwable throwable -> throwable
    java.lang.Object[] argArray -> argArray
    java.lang.Object[] trimmedCopy(java.lang.Object[]) -> trimmedCopy
    java.lang.String getMessage() -> getMessage
    java.lang.Object[] getArgArray() -> getArgArray
    java.lang.Throwable getThrowable() -> getThrowable
org.slf4j.helpers.MarkerIgnoringBase -> org.slf4j.helpers.MarkerIgnoringBase:
    long serialVersionUID -> serialVersionUID
    boolean isTraceEnabled(org.slf4j.Marker) -> isTraceEnabled
    void trace(org.slf4j.Marker,java.lang.String) -> trace
    void trace(org.slf4j.Marker,java.lang.String,java.lang.Object) -> trace
    void trace(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object) -> trace
    void trace(org.slf4j.Marker,java.lang.String,java.lang.Object[]) -> trace
    void trace(org.slf4j.Marker,java.lang.String,java.lang.Throwable) -> trace
    boolean isDebugEnabled(org.slf4j.Marker) -> isDebugEnabled
    void debug(org.slf4j.Marker,java.lang.String) -> debug
    void debug(org.slf4j.Marker,java.lang.String,java.lang.Object) -> debug
    void debug(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object) -> debug
    void debug(org.slf4j.Marker,java.lang.String,java.lang.Object[]) -> debug
    void debug(org.slf4j.Marker,java.lang.String,java.lang.Throwable) -> debug
    boolean isInfoEnabled(org.slf4j.Marker) -> isInfoEnabled
    void info(org.slf4j.Marker,java.lang.String) -> info
    void info(org.slf4j.Marker,java.lang.String,java.lang.Object) -> info
    void info(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object) -> info
    void info(org.slf4j.Marker,java.lang.String,java.lang.Object[]) -> info
    void info(org.slf4j.Marker,java.lang.String,java.lang.Throwable) -> info
    boolean isWarnEnabled(org.slf4j.Marker) -> isWarnEnabled
    void warn(org.slf4j.Marker,java.lang.String) -> warn
    void warn(org.slf4j.Marker,java.lang.String,java.lang.Object) -> warn
    void warn(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object) -> warn
    void warn(org.slf4j.Marker,java.lang.String,java.lang.Object[]) -> warn
    void warn(org.slf4j.Marker,java.lang.String,java.lang.Throwable) -> warn
    boolean isErrorEnabled(org.slf4j.Marker) -> isErrorEnabled
    void error(org.slf4j.Marker,java.lang.String) -> error
    void error(org.slf4j.Marker,java.lang.String,java.lang.Object) -> error
    void error(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object) -> error
    void error(org.slf4j.Marker,java.lang.String,java.lang.Object[]) -> error
    void error(org.slf4j.Marker,java.lang.String,java.lang.Throwable) -> error
    java.lang.String toString() -> toString
    java.lang.String getName() -> getName
org.slf4j.helpers.MessageFormatter -> org.slf4j.helpers.MessageFormatter:
    char DELIM_START -> DELIM_START
    char DELIM_STOP -> DELIM_STOP
    java.lang.String DELIM_STR -> DELIM_STR
    char ESCAPE_CHAR -> ESCAPE_CHAR
    org.slf4j.helpers.FormattingTuple format(java.lang.String,java.lang.Object) -> format
    org.slf4j.helpers.FormattingTuple format(java.lang.String,java.lang.Object,java.lang.Object) -> format
    java.lang.Throwable getThrowableCandidate(java.lang.Object[]) -> getThrowableCandidate
    org.slf4j.helpers.FormattingTuple arrayFormat(java.lang.String,java.lang.Object[]) -> arrayFormat
    boolean isEscapedDelimeter(java.lang.String,int) -> isEscapedDelimeter
    boolean isDoubleEscaped(java.lang.String,int) -> isDoubleEscaped
    void deeplyAppendParameter(java.lang.StringBuffer,java.lang.Object,java.util.Map) -> deeplyAppendParameter
    void safeObjectAppend(java.lang.StringBuffer,java.lang.Object) -> safeObjectAppend
    void objectArrayAppend(java.lang.StringBuffer,java.lang.Object[],java.util.Map) -> objectArrayAppend
    void booleanArrayAppend(java.lang.StringBuffer,boolean[]) -> booleanArrayAppend
    void byteArrayAppend(java.lang.StringBuffer,byte[]) -> byteArrayAppend
    void charArrayAppend(java.lang.StringBuffer,char[]) -> charArrayAppend
    void shortArrayAppend(java.lang.StringBuffer,short[]) -> shortArrayAppend
    void intArrayAppend(java.lang.StringBuffer,int[]) -> intArrayAppend
    void longArrayAppend(java.lang.StringBuffer,long[]) -> longArrayAppend
    void floatArrayAppend(java.lang.StringBuffer,float[]) -> floatArrayAppend
    void doubleArrayAppend(java.lang.StringBuffer,double[]) -> doubleArrayAppend
org.slf4j.helpers.NOPLogger -> org.slf4j.helpers.NOPLogger:
    long serialVersionUID -> serialVersionUID
    org.slf4j.helpers.NOPLogger NOP_LOGGER -> NOP_LOGGER
    java.lang.String getName() -> getName
    boolean isTraceEnabled() -> isTraceEnabled
    void trace(java.lang.String) -> trace
    void trace(java.lang.String,java.lang.Object) -> trace
    void trace(java.lang.String,java.lang.Object,java.lang.Object) -> trace
    void trace(java.lang.String,java.lang.Object[]) -> trace
    void trace(java.lang.String,java.lang.Throwable) -> trace
    boolean isDebugEnabled() -> isDebugEnabled
    void debug(java.lang.String) -> debug
    void debug(java.lang.String,java.lang.Object) -> debug
    void debug(java.lang.String,java.lang.Object,java.lang.Object) -> debug
    void debug(java.lang.String,java.lang.Object[]) -> debug
    void debug(java.lang.String,java.lang.Throwable) -> debug
    boolean isInfoEnabled() -> isInfoEnabled
    void info(java.lang.String) -> info
    void info(java.lang.String,java.lang.Object) -> info
    void info(java.lang.String,java.lang.Object,java.lang.Object) -> info
    void info(java.lang.String,java.lang.Object[]) -> info
    void info(java.lang.String,java.lang.Throwable) -> info
    boolean isWarnEnabled() -> isWarnEnabled
    void warn(java.lang.String) -> warn
    void warn(java.lang.String,java.lang.Object) -> warn
    void warn(java.lang.String,java.lang.Object,java.lang.Object) -> warn
    void warn(java.lang.String,java.lang.Object[]) -> warn
    void warn(java.lang.String,java.lang.Throwable) -> warn
    boolean isErrorEnabled() -> isErrorEnabled
    void error(java.lang.String) -> error
    void error(java.lang.String,java.lang.Object) -> error
    void error(java.lang.String,java.lang.Object,java.lang.Object) -> error
    void error(java.lang.String,java.lang.Object[]) -> error
    void error(java.lang.String,java.lang.Throwable) -> error
org.slf4j.helpers.NOPLoggerFactory -> org.slf4j.helpers.NOPLoggerFactory:
    org.slf4j.Logger getLogger(java.lang.String) -> getLogger
org.slf4j.helpers.NOPMDCAdapter -> org.slf4j.helpers.NOPMDCAdapter:
    void clear() -> clear
    java.lang.String get(java.lang.String) -> get
    void put(java.lang.String,java.lang.String) -> put
    void remove(java.lang.String) -> remove
    java.util.Map getCopyOfContextMap() -> getCopyOfContextMap
    void setContextMap(java.util.Map) -> setContextMap
org.slf4j.helpers.NamedLoggerBase -> org.slf4j.helpers.NamedLoggerBase:
    long serialVersionUID -> serialVersionUID
    java.lang.String name -> name
    java.lang.String getName() -> getName
    java.lang.Object readResolve() -> readResolve
org.slf4j.helpers.SubstituteLoggerFactory -> org.slf4j.helpers.SubstituteLoggerFactory:
    java.util.List loggerNameList -> loggerNameList
    org.slf4j.Logger getLogger(java.lang.String) -> getLogger
    java.util.List getLoggerNameList() -> getLoggerNameList
org.slf4j.helpers.Util -> org.slf4j.helpers.Util:
    void report(java.lang.String,java.lang.Throwable) -> report
    void report(java.lang.String) -> report
org.slf4j.spi.LocationAwareLogger -> org.slf4j.spi.LocationAwareLogger:
    int TRACE_INT -> TRACE_INT
    int DEBUG_INT -> DEBUG_INT
    int INFO_INT -> INFO_INT
    int WARN_INT -> WARN_INT
    int ERROR_INT -> ERROR_INT
    void log(org.slf4j.Marker,java.lang.String,int,java.lang.String,java.lang.Object[],java.lang.Throwable) -> log
org.slf4j.spi.LoggerFactoryBinder -> org.slf4j.spi.LoggerFactoryBinder:
    org.slf4j.ILoggerFactory getLoggerFactory() -> getLoggerFactory
    java.lang.String getLoggerFactoryClassStr() -> getLoggerFactoryClassStr
org.slf4j.spi.MDCAdapter -> org.slf4j.spi.MDCAdapter:
    void put(java.lang.String,java.lang.String) -> put
    java.lang.String get(java.lang.String) -> get
    void remove(java.lang.String) -> remove
    void clear() -> clear
    java.util.Map getCopyOfContextMap() -> getCopyOfContextMap
    void setContextMap(java.util.Map) -> setContextMap
org.slf4j.spi.MarkerFactoryBinder -> org.slf4j.spi.MarkerFactoryBinder:
    org.slf4j.IMarkerFactory getMarkerFactory() -> getMarkerFactory
    java.lang.String getMarkerFactoryClassStr() -> getMarkerFactoryClassStr
org.webrtc.voiceengine.AudioManagerAndroid -> org.webrtc.voiceengine.AudioManagerAndroid:
    int DEFAULT_SAMPLING_RATE -> DEFAULT_SAMPLING_RATE
    int DEFAULT_FRAMES_PER_BUFFER -> DEFAULT_FRAMES_PER_BUFFER
    int mNativeOutputSampleRate -> mNativeOutputSampleRate
    boolean mAudioLowLatencySupported -> mAudioLowLatencySupported
    int mAudioLowLatencyOutputFrameSize -> mAudioLowLatencyOutputFrameSize
    int getNativeOutputSampleRate() -> getNativeOutputSampleRate
    boolean isAudioLowLatencySupported() -> isAudioLowLatencySupported
    int getAudioLowLatencyOutputFrameSize() -> getAudioLowLatencyOutputFrameSize
org.webrtc.voiceengine.WebRtcAudioRecord -> org.webrtc.voiceengine.WebRtcAudioRecord:
    android.media.AudioRecord _audioRecord -> _audioRecord
    android.content.Context _context -> _context
    java.nio.ByteBuffer _recBuffer -> _recBuffer
    byte[] _tempBufRec -> _tempBufRec
    java.util.concurrent.locks.ReentrantLock _recLock -> _recLock
    boolean _doRecInit -> _doRecInit
    boolean _isRecording -> _isRecording
    int _bufferedRecSamples -> _bufferedRecSamples
    java.lang.String logTag -> logTag
    int InitRecording(int,int) -> InitRecording
    int StartRecording() -> StartRecording
    int StopRecording() -> StopRecording
    int RecordAudio(int) -> RecordAudio
    void DoLog(java.lang.String) -> DoLog
    void DoLogErr(java.lang.String) -> DoLogErr
org.webrtc.voiceengine.WebRtcAudioTrack -> org.webrtc.voiceengine.WebRtcAudioTrack:
    android.media.AudioTrack _audioTrack -> _audioTrack
    android.content.Context _context -> _context
    android.media.AudioManager _audioManager -> _audioManager
    java.nio.ByteBuffer _playBuffer -> _playBuffer
    byte[] _tempBufPlay -> _tempBufPlay
    java.util.concurrent.locks.ReentrantLock _playLock -> _playLock
    boolean _doPlayInit -> _doPlayInit
    boolean _doRecInit -> _doRecInit
    boolean _isRecording -> _isRecording
    boolean _isPlaying -> _isPlaying
    int _bufferedPlaySamples -> _bufferedPlaySamples
    int _playPosition -> _playPosition
    java.lang.String logTag -> logTag
    int InitPlayback(int) -> InitPlayback
    int StartPlayback() -> StartPlayback
    int StopPlayback() -> StopPlayback
    int PlayAudio(int) -> PlayAudio
    int SetPlayoutSpeaker(boolean) -> SetPlayoutSpeaker
    int SetPlayoutVolume(int) -> SetPlayoutVolume
    int GetPlayoutVolume() -> GetPlayoutVolume
    void DoLog(java.lang.String) -> DoLog
    void DoLogErr(java.lang.String) -> DoLogErr
p.I -> t.a:
    boolean connected -> a
    boolean gJ -> b
    p.thing gK -> c
    p.This gL -> f
    java.lang.String gM -> d
    void Code(java.lang.String,org.json.JSONArray) -> a
    void Code(r.This$This,p.thing,android.os.Handler) -> a
    boolean isConnected() -> a
    void Code(java.lang.String,p.thing) -> a
p.I$1 -> t.b:
    r.This$This gN -> a
    android.os.Handler bC -> b
    p.thing gO -> c
    p.This gP -> d
    void Code(java.lang.Exception,p.I) -> Code
p.I$1$1 -> t.c:
    p.thing gO -> a
    void Code(java.lang.Exception,p.I) -> Code
p.This -> t.d:
    android.os.Handler mHandler -> h
    r.This gQ -> i
    int gR -> a
    java.util.ArrayList gS -> b
    r.of gT -> c
    r.This$This gU -> d
    java.util.Hashtable gV -> e
    int gW -> f
    long gX -> g
    boolean isConnected() -> a
    void reconnect() -> b
    void Code(java.lang.String,p.This$thing) -> a
    void Code(p.This,java.lang.Exception) -> a
    void Code(p.This,java.lang.String) -> a
    p.This$This V(p.This,java.lang.String) -> b
    void Code(p.This,java.lang.String,java.lang.String,p.This$This) -> a
    void Code(p.This,java.lang.String,org.json.JSONObject,p.This$This) -> a
    void Code(p.This,java.lang.String,java.lang.String,org.json.JSONArray,p.This$This) -> a
    void Code(p.This,java.lang.String,java.lang.String) -> a
    android.os.Handler Code(p.This) -> a
p.This$1 -> t.e:
    p.This gG -> a
    void Code(java.lang.Exception,java.lang.String) -> a
p.This$1$1 -> t.f:
    p.This$1 gY -> a
    void s(java.lang.String) -> a
    void Code(java.lang.Exception) -> a
    void V(int,java.lang.String) -> a
    void aB() -> a
p.This$2 -> t.g:
    p.This gG -> a
    r.of gZ -> b
    void run() -> run
p.This$3 -> t.h:
    p.This gG -> a
    void run() -> run
p.This$4 -> t.i:
    p.This gG -> a
    java.lang.Exception ha -> b
    void Code(p.I) -> a
p.This$4$1 -> t.j:
    i.mine$This hb -> a
    java.lang.Exception ha -> b
    void run() -> run
p.This$4$2 -> t.k:
    p.thing gO -> a
    java.lang.Exception ha -> b
    p.I z -> c
    void run() -> run
p.This$5 -> t.l:
    void Code(p.I) -> a
p.This$6 -> t.m:
    p.This gG -> a
    org.json.JSONObject hc -> b
    p.This$This hd -> c
    void Code(p.I) -> a
p.This$7 -> t.n:
    p.This gG -> a
    java.lang.String he -> b
    p.This$This hd -> c
    void Code(p.I) -> a
p.This$8 -> t.o:
    p.This gG -> a
    java.lang.String hf -> b
    org.json.JSONArray hg -> c
    p.This$This hd -> d
    void Code(p.I) -> a
p.This$8$1 -> t.p:
    p.I z -> a
    java.lang.String hf -> b
    org.json.JSONArray hg -> c
    p.This$This hd -> d
    void run() -> run
p.This$9 -> t.q:
    p.This gG -> a
    java.lang.String hh -> b
    void Code(p.I) -> a
p.This$This -> t.r:
    p.This gG -> a
    java.lang.String gH -> b
    void V(org.json.JSONArray) -> a
p.This$thing -> t.s:
    void Code(p.I) -> a
p.darkness -> t.t:
    q.This gI -> e
    void Code(java.lang.String,p.of) -> a
p.darkness$This -> t.u:
p.of -> t.v:
    void Code(org.json.JSONArray) -> Code
p.thing -> t.w:
    void Code(java.lang.Exception,p.I) -> Code
q.This -> u.a:
    void add(java.lang.String,java.lang.Object) -> a
r.This -> v.a:
    void Code(r.This$This,r.This$thing) -> a
    byte[] C(java.io.InputStream) -> a
    java.lang.String Code(r.This,java.io.InputStream) -> a
r.This$1 -> v.b:
    r.This hi -> a
    r.This$This hj -> b
    r.This$thing hk -> c
    java.lang.Void aC() -> a
    void Code(org.apache.http.HttpRequest,java.util.List) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
r.This$This -> v.c:
    java.lang.String hl -> a
    java.lang.String hm -> b
    java.util.List hn -> c
    java.lang.String getUri() -> a
    java.lang.String aD() -> b
    java.util.List aE() -> c
r.This$thing -> v.d:
    void Code(java.lang.Exception,java.lang.String) -> a
r.of -> v.e:
    java.net.URI hB -> a
    r.of$This hC -> b
    java.net.Socket hD -> c
    java.lang.Thread hE -> d
    android.os.HandlerThread hF -> e
    android.os.Handler mHandler -> f
    java.util.List hG -> g
    r.thing hH -> h
    boolean hI -> i
    java.lang.Object hJ -> j
    r.of$This aF() -> a
    void connect() -> b
    void disconnect() -> c
    void u(java.lang.String) -> a
    boolean isConnected() -> d
    java.lang.String v(java.lang.String) -> b
    void B(byte[]) -> a
    java.net.URI Code(r.of) -> a
    javax.net.ssl.SSLSocketFactory V(r.of) -> b
    void Code(r.of,java.net.Socket) -> a
    java.net.Socket I(r.of) -> c
    java.lang.String Z(r.of) -> d
    java.util.List B(r.of) -> e
    java.lang.String Code(r.of,r.thing$This) -> a
    org.apache.http.StatusLine Code(r.of,java.lang.String) -> a
    org.apache.http.Header V(r.of,java.lang.String) -> b
    java.lang.String I(r.of,java.lang.String) -> c
    r.of$This C(r.of) -> f
    void Code(r.of,boolean) -> a
    r.thing S(r.of) -> g
    java.lang.Object F(r.of) -> h
r.of$1 -> v.f:
    r.of hK -> a
    void run() -> run
r.of$2 -> v.g:
    r.of hK -> a
    void run() -> run
r.of$3 -> v.h:
    r.of hK -> a
    byte[] hL -> b
    void run() -> run
r.of$This -> v.i:
    void aB() -> a
    void s(java.lang.String) -> a
    void V(int,java.lang.String) -> a
    void Code(java.lang.Exception) -> a
r.thing -> v.j:
    r.of ho -> a
    boolean hp -> b
    int hq -> c
    boolean hr -> d
    boolean hs -> e
    int ht -> f
    int hu -> g
    int mLength -> h
    int hv -> i
    byte[] hw -> j
    byte[] hx -> k
    boolean mClosed -> l
    java.io.ByteArrayOutputStream hy -> m
    java.util.List hz -> n
    java.util.List hA -> o
    byte[] Code(byte[],byte[],int) -> a
    void Code(r.thing$This) -> a
    byte[] t(java.lang.String) -> a
    byte[] Code(java.lang.Object,int,int) -> a
    java.lang.String encode(byte[]) -> a
    byte[] decode(java.lang.String) -> b
r.thing$This -> v.k:
    byte[] C(int) -> a
r.thing$thing -> v.l:
u.aly.a -> w.a.a:
    int a -> a
    int b -> b
    java.lang.String c -> c
    java.util.List d -> d
    u.aly.ar e -> e
    boolean a() -> a
    java.lang.String b() -> b
    boolean c() -> c
    boolean g() -> g
    u.aly.ar d() -> d
    java.util.List e() -> e
    void a(java.util.List) -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String f() -> f
    void a(u.aly.as) -> a
u.aly.ab -> w.a.b:
    java.util.HashMap b(java.util.Map) -> b
    void a(u.aly.bf,java.lang.String) -> a
u.aly.ac -> w.a.c:
    java.lang.String a(java.lang.Throwable) -> a
    void a(u.aly.bf,java.lang.String) -> a
u.aly.ae -> w.a.d:
    void a(org.json.JSONArray) -> a
u.aly.af -> w.a.e:
    void a(u.aly.bf,java.lang.String) -> a
u.aly.ag -> w.a.f:
    u.aly.ag a -> a
    u.aly.ag b -> b
    u.aly.ag c -> c
    u.aly.ag d -> d
    int e -> e
    u.aly.ag[] f -> f
    u.aly.ag[] values() -> values
    u.aly.ag valueOf(java.lang.String) -> valueOf
    int a() -> a
    u.aly.ag a(int) -> a
u.aly.ah -> w.a.g:
    u.aly.dd c -> c
    u.aly.ct d -> d
    java.util.Map e -> e
    long a -> a
    byte g -> f
    java.util.Map b -> b
    boolean e() -> a
    void a(boolean) -> a
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void f() -> b
    u.aly.dd h() -> c
    u.aly.ct i() -> d
u.aly.ah$1 -> w.a.h:
u.aly.ah$a -> w.a.i:
    void a(u.aly.cy,u.aly.ah) -> a
    void b(u.aly.cy,u.aly.ah) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ah$b -> w.a.j:
    u.aly.ah$a a() -> a
    u.aly.dg b() -> b
u.aly.ah$c -> w.a.k:
    void a(u.aly.cy,u.aly.ah) -> a
    void b(u.aly.cy,u.aly.ah) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ah$d -> w.a.l:
    u.aly.ah$c a() -> a
    u.aly.dg b() -> b
u.aly.ah$e -> w.a.m:
    u.aly.ah$e a -> a
    java.util.Map b -> b
    short c -> c
    java.lang.String d -> d
    u.aly.ah$e[] e -> e
    u.aly.ah$e[] values() -> values
    u.aly.ah$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.ai -> w.a.n:
    u.aly.dd l -> l
    u.aly.ct m -> m
    u.aly.ct n -> n
    u.aly.ct o -> o
    u.aly.ct p -> p
    u.aly.ct q -> q
    u.aly.ct r -> r
    u.aly.ct s -> s
    u.aly.ct t -> t
    u.aly.ct u -> u
    u.aly.ct v -> v
    java.util.Map w -> w
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    java.lang.String d -> d
    u.aly.bc e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    int j -> j
    byte z -> x
    u.aly.ai$e[] A -> y
    java.util.Map k -> k
    u.aly.ai a(java.lang.String) -> a
    void a(boolean) -> a
    u.aly.ai b(java.lang.String) -> b
    boolean i() -> a
    void b(boolean) -> b
    u.aly.ai a(int) -> a
    boolean l() -> b
    void c(boolean) -> c
    u.aly.ai c(java.lang.String) -> c
    boolean o() -> c
    void d(boolean) -> d
    u.aly.ai a(u.aly.bc) -> a
    void e(boolean) -> e
    u.aly.ai d(java.lang.String) -> d
    void f(boolean) -> f
    u.aly.ai e(java.lang.String) -> e
    void g(boolean) -> g
    u.aly.ai f(java.lang.String) -> f
    boolean A() -> d
    void h(boolean) -> h
    u.aly.ai g(java.lang.String) -> g
    boolean D() -> e
    void i(boolean) -> i
    u.aly.ai c(int) -> b
    boolean G() -> f
    void j(boolean) -> j
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void H() -> g
    u.aly.dd I() -> h
    u.aly.ct J() -> i
    u.aly.ct K() -> j
    u.aly.ct L() -> k
    u.aly.ct M() -> l
    u.aly.ct N() -> m
    u.aly.ct O() -> n
    u.aly.ct P() -> o
    u.aly.ct Q() -> p
    u.aly.ct R() -> q
    u.aly.ct S() -> r
u.aly.ai$1 -> w.a.o:
u.aly.ai$a -> w.a.p:
    void a(u.aly.cy,u.aly.ai) -> a
    void b(u.aly.cy,u.aly.ai) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ai$b -> w.a.q:
    u.aly.ai$a a() -> a
    u.aly.dg b() -> b
u.aly.ai$c -> w.a.r:
    void a(u.aly.cy,u.aly.ai) -> a
    void b(u.aly.cy,u.aly.ai) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ai$d -> w.a.s:
    u.aly.ai$c a() -> a
    u.aly.dg b() -> b
u.aly.ai$e -> w.a.t:
    u.aly.ai$e a -> a
    u.aly.ai$e b -> b
    u.aly.ai$e c -> c
    u.aly.ai$e d -> d
    u.aly.ai$e e -> e
    u.aly.ai$e f -> f
    u.aly.ai$e g -> g
    u.aly.ai$e h -> h
    u.aly.ai$e i -> i
    u.aly.ai$e j -> j
    java.util.Map k -> k
    short l -> l
    java.lang.String m -> m
    u.aly.ai$e[] n -> n
    u.aly.ai$e[] values() -> values
    u.aly.ai$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.aj -> w.a.u:
    u.aly.dd e -> e
    u.aly.ct f -> f
    u.aly.ct g -> g
    u.aly.ct h -> h
    java.util.Map i -> i
    int a -> a
    int b -> b
    int c -> c
    byte m -> j
    u.aly.aj$e[] n -> k
    java.util.Map d -> d
    u.aly.aj a(int) -> a
    boolean e() -> a
    void a(boolean) -> a
    u.aly.aj c(int) -> b
    boolean i() -> b
    void b(boolean) -> b
    u.aly.aj d(int) -> c
    boolean l() -> c
    void c(boolean) -> c
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void m() -> d
    u.aly.dd n() -> e
    u.aly.ct o() -> f
    u.aly.ct p() -> g
    u.aly.ct q() -> h
u.aly.aj$1 -> w.a.v:
u.aly.aj$a -> w.a.w:
    void a(u.aly.cy,u.aly.aj) -> a
    void b(u.aly.cy,u.aly.aj) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.aj$b -> w.a.x:
    u.aly.aj$a a() -> a
    u.aly.dg b() -> b
u.aly.aj$c -> w.a.y:
    void a(u.aly.cy,u.aly.aj) -> a
    void b(u.aly.cy,u.aly.aj) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.aj$d -> w.a.z:
    u.aly.aj$c a() -> a
    u.aly.dg b() -> b
u.aly.aj$e -> w.a.aa:
    u.aly.aj$e a -> a
    u.aly.aj$e b -> b
    u.aly.aj$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.aj$e[] g -> g
    u.aly.aj$e[] values() -> values
    u.aly.aj$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.ak -> w.a.ab:
    u.aly.dd s -> s
    u.aly.ct t -> t
    u.aly.ct u -> u
    u.aly.ct v -> v
    u.aly.ct w -> w
    u.aly.ct x -> x
    u.aly.ct y -> y
    u.aly.ct z -> z
    u.aly.ct A -> A
    u.aly.ct B -> B
    u.aly.ct C -> C
    u.aly.ct D -> D
    u.aly.ct E -> E
    u.aly.ct F -> F
    u.aly.ct G -> G
    u.aly.ct H -> H
    u.aly.ct I -> I
    u.aly.ct J -> J
    java.util.Map K -> K
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    u.aly.ba i -> i
    boolean j -> j
    boolean k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    long n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    byte O -> L
    u.aly.ak$e[] P -> M
    java.util.Map r -> r
    u.aly.ak a(java.lang.String) -> a
    boolean e() -> a
    void a(boolean) -> a
    u.aly.ak b(java.lang.String) -> b
    boolean i() -> b
    void b(boolean) -> b
    u.aly.ak c(java.lang.String) -> c
    boolean l() -> c
    void c(boolean) -> c
    boolean o() -> d
    void d(boolean) -> d
    u.aly.ak e(java.lang.String) -> d
    boolean r() -> e
    void e(boolean) -> e
    u.aly.ak f(java.lang.String) -> e
    boolean u() -> f
    void f(boolean) -> f
    u.aly.ak g(java.lang.String) -> f
    boolean x() -> g
    void g(boolean) -> g
    u.aly.ak h(java.lang.String) -> g
    boolean A() -> h
    void h(boolean) -> h
    u.aly.ak a(u.aly.ba) -> a
    boolean D() -> i
    void i(boolean) -> i
    boolean G() -> j
    void k(boolean) -> j
    boolean J() -> k
    void m(boolean) -> k
    u.aly.ak i(java.lang.String) -> h
    boolean M() -> l
    void n(boolean) -> l
    u.aly.ak j(java.lang.String) -> i
    boolean P() -> m
    void o(boolean) -> m
    u.aly.ak a(long) -> a
    boolean S() -> n
    void p(boolean) -> n
    u.aly.ak k(java.lang.String) -> j
    boolean V() -> o
    void q(boolean) -> o
    u.aly.ak l(java.lang.String) -> k
    boolean Y() -> p
    void r(boolean) -> p
    u.aly.ak m(java.lang.String) -> l
    boolean ab() -> q
    void s(boolean) -> q
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void ac() -> r
    u.aly.dd ad() -> s
    u.aly.ct ae() -> t
    u.aly.ct af() -> u
    u.aly.ct ag() -> v
    u.aly.ct ah() -> w
    u.aly.ct ai() -> x
    u.aly.ct aj() -> y
    u.aly.ct ak() -> z
    u.aly.ct al() -> A
    u.aly.ct am() -> B
    u.aly.ct an() -> C
    u.aly.ct ao() -> D
    u.aly.ct ap() -> E
    u.aly.ct aq() -> F
    u.aly.ct ar() -> G
    u.aly.ct as() -> H
    u.aly.ct at() -> I
    u.aly.ct au() -> J
u.aly.ak$1 -> w.a.ac:
u.aly.ak$a -> w.a.ad:
    void a(u.aly.cy,u.aly.ak) -> a
    void b(u.aly.cy,u.aly.ak) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ak$b -> w.a.ae:
    u.aly.ak$a a() -> a
    u.aly.dg b() -> b
u.aly.ak$c -> w.a.af:
    void a(u.aly.cy,u.aly.ak) -> a
    void b(u.aly.cy,u.aly.ak) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ak$d -> w.a.ag:
    u.aly.ak$c a() -> a
    u.aly.dg b() -> b
u.aly.ak$e -> w.a.ah:
    u.aly.ak$e a -> a
    u.aly.ak$e b -> b
    u.aly.ak$e c -> c
    u.aly.ak$e d -> d
    u.aly.ak$e e -> e
    u.aly.ak$e f -> f
    u.aly.ak$e g -> g
    u.aly.ak$e h -> h
    u.aly.ak$e i -> i
    u.aly.ak$e j -> j
    u.aly.ak$e k -> k
    u.aly.ak$e l -> l
    u.aly.ak$e m -> m
    u.aly.ak$e n -> n
    u.aly.ak$e o -> o
    u.aly.ak$e p -> p
    u.aly.ak$e q -> q
    java.util.Map r -> r
    short s -> s
    java.lang.String t -> t
    u.aly.ak$e[] u -> u
    u.aly.ak$e[] values() -> values
    u.aly.ak$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.am -> w.a.ai:
    u.aly.dd e -> e
    u.aly.ct f -> f
    u.aly.ct g -> g
    u.aly.ct h -> h
    java.util.Map i -> i
    long a -> a
    java.lang.String b -> b
    u.aly.an c -> c
    byte k -> j
    u.aly.am$e[] l -> k
    java.util.Map d -> d
    u.aly.am a(long) -> a
    boolean e() -> a
    void b(boolean) -> a
    u.aly.am a(java.lang.String) -> a
    void c(boolean) -> b
    u.aly.am a(u.aly.an) -> a
    boolean l() -> b
    void d(boolean) -> c
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void m() -> c
    u.aly.dd n() -> d
    u.aly.ct o() -> e
    u.aly.ct p() -> f
    u.aly.ct q() -> g
u.aly.am$1 -> w.a.aj:
u.aly.am$a -> w.a.ak:
    void a(u.aly.cy,u.aly.am) -> a
    void b(u.aly.cy,u.aly.am) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.am$b -> w.a.al:
    u.aly.am$a a() -> a
    u.aly.dg b() -> b
u.aly.am$c -> w.a.am:
    void a(u.aly.cy,u.aly.am) -> a
    void b(u.aly.cy,u.aly.am) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.am$d -> w.a.an:
    u.aly.am$c a() -> a
    u.aly.dg b() -> b
u.aly.am$e -> w.a.ao:
    u.aly.am$e a -> a
    u.aly.am$e b -> b
    u.aly.am$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.am$e[] g -> g
    u.aly.am$e[] values() -> values
    u.aly.am$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.an -> w.a.ap:
    u.aly.an a -> a
    u.aly.an b -> b
    int c -> c
    u.aly.an[] d -> d
    u.aly.an[] values() -> values
    u.aly.an valueOf(java.lang.String) -> valueOf
    int a() -> a
    u.aly.an a(int) -> a
u.aly.ao -> w.a.aq:
    u.aly.dd g -> g
    u.aly.ct h -> h
    u.aly.ct i -> i
    u.aly.ct j -> j
    u.aly.ct k -> k
    u.aly.ct l -> l
    java.util.Map m -> m
    java.lang.String a -> a
    java.util.Map b -> b
    long c -> c
    int d -> d
    long e -> e
    byte q -> n
    u.aly.ao$e[] r -> o
    java.util.Map f -> f
    u.aly.ao a(java.lang.String) -> a
    void a(boolean) -> a
    u.aly.ao a(java.util.Map) -> a
    void b(boolean) -> b
    u.aly.ao a(long) -> a
    boolean m() -> a
    void c(boolean) -> c
    u.aly.ao a(int) -> a
    boolean p() -> b
    void d(boolean) -> d
    u.aly.ao b(long) -> b
    boolean s() -> c
    void e(boolean) -> e
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void t() -> d
    u.aly.dd u() -> e
    u.aly.ct v() -> f
    u.aly.ct w() -> g
    u.aly.ct x() -> h
    u.aly.ct y() -> i
    u.aly.ct z() -> j
u.aly.ao$1 -> w.a.ar:
u.aly.ao$a -> w.a.as:
    void a(u.aly.cy,u.aly.ao) -> a
    void b(u.aly.cy,u.aly.ao) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ao$b -> w.a.at:
    u.aly.ao$a a() -> a
    u.aly.dg b() -> b
u.aly.ao$c -> w.a.au:
    void a(u.aly.cy,u.aly.ao) -> a
    void b(u.aly.cy,u.aly.ao) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ao$d -> w.a.av:
    u.aly.ao$c a() -> a
    u.aly.dg b() -> b
u.aly.ao$e -> w.a.aw:
    u.aly.ao$e a -> a
    u.aly.ao$e b -> b
    u.aly.ao$e c -> c
    u.aly.ao$e d -> d
    u.aly.ao$e e -> e
    java.util.Map f -> f
    short g -> g
    java.lang.String h -> h
    u.aly.ao$e[] i -> i
    u.aly.ao$e[] values() -> values
    u.aly.ao$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.ap -> w.a.ax:
    u.aly.ap a -> a
    u.aly.ap b -> b
    u.aly.ap c -> c
    int d -> d
    u.aly.ap[] e -> e
    u.aly.ap[] values() -> values
    u.aly.ap valueOf(java.lang.String) -> valueOf
    int a() -> a
    u.aly.ap a(int) -> a
u.aly.aq -> w.a.ay:
    u.aly.dd f -> f
    u.aly.ct g -> g
    u.aly.ct h -> h
    u.aly.ct i -> i
    u.aly.ct j -> j
    java.util.Map k -> k
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    long d -> d
    byte m -> l
    u.aly.aq$e[] n -> m
    java.util.Map e -> e
    u.aly.aq a(java.lang.String) -> a
    void a(boolean) -> a
    u.aly.aq b(java.lang.String) -> b
    boolean i() -> a
    void b(boolean) -> b
    u.aly.aq c(java.lang.String) -> c
    void c(boolean) -> c
    u.aly.aq a(long) -> a
    boolean o() -> b
    void d(boolean) -> d
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void p() -> c
    u.aly.dd q() -> d
    u.aly.ct r() -> e
    u.aly.ct s() -> f
    u.aly.ct t() -> g
    u.aly.ct u() -> h
u.aly.aq$1 -> w.a.az:
u.aly.aq$a -> w.a.ba:
    void a(u.aly.cy,u.aly.aq) -> a
    void b(u.aly.cy,u.aly.aq) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.aq$b -> w.a.bb:
    u.aly.aq$a a() -> a
    u.aly.dg b() -> b
u.aly.aq$c -> w.a.bc:
    void a(u.aly.cy,u.aly.aq) -> a
    void b(u.aly.cy,u.aly.aq) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.aq$d -> w.a.bd:
    u.aly.aq$c a() -> a
    u.aly.dg b() -> b
u.aly.aq$e -> w.a.be:
    u.aly.aq$e a -> a
    u.aly.aq$e b -> b
    u.aly.aq$e c -> c
    u.aly.aq$e d -> d
    java.util.Map e -> e
    short f -> f
    java.lang.String g -> g
    u.aly.aq$e[] h -> h
    u.aly.aq$e[] values() -> values
    u.aly.aq$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.ar -> w.a.bf:
    u.aly.dd e -> e
    u.aly.ct f -> f
    u.aly.ct g -> g
    u.aly.ct h -> h
    java.util.Map i -> i
    java.lang.String a -> a
    long b -> b
    int c -> c
    byte l -> j
    java.util.Map d -> d
    java.lang.String c() -> a
    u.aly.ar a(java.lang.String) -> a
    void a(boolean) -> a
    long f() -> b
    u.aly.ar a(long) -> a
    boolean i() -> c
    void b(boolean) -> b
    int j() -> d
    u.aly.ar a(int) -> a
    boolean l() -> e
    void c(boolean) -> c
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void m() -> f
    u.aly.dd n() -> g
    u.aly.ct o() -> h
    u.aly.ct p() -> i
    u.aly.ct q() -> j
u.aly.ar$1 -> w.a.bg:
u.aly.ar$a -> w.a.bh:
    void a(u.aly.cy,u.aly.ar) -> a
    void b(u.aly.cy,u.aly.ar) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ar$b -> w.a.bi:
    u.aly.ar$a a() -> a
    u.aly.dg b() -> b
u.aly.ar$c -> w.a.bj:
    void a(u.aly.cy,u.aly.ar) -> a
    void b(u.aly.cy,u.aly.ar) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ar$d -> w.a.bk:
    u.aly.ar$c a() -> a
    u.aly.dg b() -> b
u.aly.ar$e -> w.a.bl:
    u.aly.ar$e a -> a
    u.aly.ar$e b -> b
    u.aly.ar$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.ar$e[] g -> g
    u.aly.ar$e[] values() -> values
    u.aly.ar$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.as -> w.a.bm:
    u.aly.dd e -> e
    u.aly.ct f -> f
    u.aly.ct g -> g
    u.aly.ct h -> h
    java.util.Map i -> i
    java.util.Map a -> a
    java.util.List b -> b
    java.lang.String c -> c
    u.aly.as$e[] j -> j
    java.util.Map d -> d
    java.util.Map d() -> a
    u.aly.as a(java.util.Map) -> a
    void a(boolean) -> a
    java.util.List j() -> b
    u.aly.as a(java.util.List) -> a
    boolean l() -> c
    void b(boolean) -> b
    boolean o() -> d
    void c(boolean) -> c
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void p() -> e
    u.aly.dd q() -> f
    u.aly.ct r() -> g
    u.aly.ct s() -> h
    u.aly.ct t() -> i
u.aly.as$1 -> w.a.bn:
u.aly.as$a -> w.a.bo:
    void a(u.aly.cy,u.aly.as) -> a
    void b(u.aly.cy,u.aly.as) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.as$b -> w.a.bp:
    u.aly.as$a a() -> a
    u.aly.dg b() -> b
u.aly.as$c -> w.a.bq:
    void a(u.aly.cy,u.aly.as) -> a
    void b(u.aly.cy,u.aly.as) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.as$d -> w.a.br:
    u.aly.as$c a() -> a
    u.aly.dg b() -> b
u.aly.as$e -> w.a.bs:
    u.aly.as$e a -> a
    u.aly.as$e b -> b
    u.aly.as$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.as$e[] g -> g
    u.aly.as$e[] values() -> values
    u.aly.as$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.at -> w.a.bt:
    u.aly.dd e -> e
    u.aly.ct f -> f
    u.aly.ct g -> g
    u.aly.ct h -> h
    java.util.Map i -> i
    java.util.Map a -> a
    int b -> b
    java.lang.String c -> c
    byte k -> j
    java.util.Map d -> d
    java.util.Map d() -> a
    void a(boolean) -> a
    int h() -> b
    u.aly.at a(int) -> a
    boolean j() -> c
    void b(boolean) -> b
    java.lang.String k() -> d
    u.aly.at a(java.lang.String) -> a
    void c(boolean) -> c
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void n() -> e
    u.aly.dd o() -> f
    u.aly.ct p() -> g
    u.aly.ct q() -> h
    u.aly.ct r() -> i
u.aly.at$1 -> w.a.bu:
u.aly.at$a -> w.a.bv:
    void a(u.aly.cy,u.aly.at) -> a
    void b(u.aly.cy,u.aly.at) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.at$b -> w.a.bw:
    u.aly.at$a a() -> a
    u.aly.dg b() -> b
u.aly.at$c -> w.a.bx:
    void a(u.aly.cy,u.aly.at) -> a
    void b(u.aly.cy,u.aly.at) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.at$d -> w.a.by:
    u.aly.at$c a() -> a
    u.aly.dg b() -> b
u.aly.at$e -> w.a.bz:
    u.aly.at$e a -> a
    u.aly.at$e b -> b
    u.aly.at$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.at$e[] g -> g
    u.aly.at$e[] values() -> values
    u.aly.at$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.au -> w.a.ca:
    u.aly.dd e -> e
    u.aly.ct f -> f
    u.aly.ct g -> g
    u.aly.ct h -> h
    java.util.Map i -> i
    java.lang.String a -> a
    long b -> b
    java.lang.String c -> c
    byte k -> j
    u.aly.au$e[] l -> k
    java.util.Map d -> d
    java.lang.String c() -> a
    boolean e() -> b
    void a(boolean) -> a
    long f() -> c
    boolean i() -> d
    void b(boolean) -> b
    java.lang.String j() -> e
    void c(boolean) -> c
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void m() -> f
    u.aly.dd n() -> g
    u.aly.ct o() -> h
    u.aly.ct p() -> i
    u.aly.ct q() -> j
u.aly.au$1 -> w.a.cb:
u.aly.au$a -> w.a.cc:
    void a(u.aly.cy,u.aly.au) -> a
    void b(u.aly.cy,u.aly.au) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.au$b -> w.a.cd:
    u.aly.au$a a() -> a
    u.aly.dg b() -> b
u.aly.au$c -> w.a.ce:
    void a(u.aly.cy,u.aly.au) -> a
    void b(u.aly.cy,u.aly.au) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.au$d -> w.a.cf:
    u.aly.au$c a() -> a
    u.aly.dg b() -> b
u.aly.au$e -> w.a.cg:
    u.aly.au$e a -> a
    u.aly.au$e b -> b
    u.aly.au$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.au$e[] g -> g
    u.aly.au$e[] values() -> values
    u.aly.au$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.av -> w.a.ch:
    u.aly.dd f -> f
    u.aly.ct g -> g
    u.aly.ct h -> h
    u.aly.ct i -> i
    u.aly.ct j -> j
    java.util.Map k -> k
    java.lang.String a -> a
    java.util.List b -> b
    java.util.List c -> c
    java.util.List d -> d
    u.aly.av$e[] l -> l
    java.util.Map e -> e
    java.lang.String c() -> a
    u.aly.av a(java.lang.String) -> a
    void a(boolean) -> a
    void a(u.aly.am) -> a
    boolean k() -> b
    void b(boolean) -> b
    void a(u.aly.ao) -> a
    boolean p() -> c
    void c(boolean) -> c
    boolean u() -> d
    void d(boolean) -> d
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void v() -> e
    u.aly.dd w() -> f
    u.aly.ct x() -> g
    u.aly.ct y() -> h
    u.aly.ct z() -> i
    u.aly.ct A() -> j
u.aly.av$1 -> w.a.ci:
u.aly.av$a -> w.a.cj:
    void a(u.aly.cy,u.aly.av) -> a
    void b(u.aly.cy,u.aly.av) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.av$b -> w.a.ck:
    u.aly.av$a a() -> a
    u.aly.dg b() -> b
u.aly.av$c -> w.a.cl:
    void a(u.aly.cy,u.aly.av) -> a
    void b(u.aly.cy,u.aly.av) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.av$d -> w.a.cm:
    u.aly.av$c a() -> a
    u.aly.dg b() -> b
u.aly.av$e -> w.a.cn:
    u.aly.av$e a -> a
    u.aly.av$e b -> b
    u.aly.av$e c -> c
    u.aly.av$e d -> d
    java.util.Map e -> e
    short f -> f
    java.lang.String g -> g
    u.aly.av$e[] h -> h
    u.aly.av$e[] values() -> values
    u.aly.av$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.aw -> w.a.co:
    u.aly.dd e -> e
    u.aly.ct f -> f
    u.aly.ct g -> g
    u.aly.ct h -> h
    java.util.Map i -> i
    double a -> a
    double b -> b
    long c -> c
    byte m -> j
    java.util.Map d -> d
    boolean e() -> a
    void a(boolean) -> a
    boolean i() -> b
    void b(boolean) -> b
    boolean l() -> c
    void c(boolean) -> c
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void m() -> d
    u.aly.dd n() -> e
    u.aly.ct o() -> f
    u.aly.ct p() -> g
    u.aly.ct q() -> h
u.aly.aw$1 -> w.a.cp:
u.aly.aw$a -> w.a.cq:
    void a(u.aly.cy,u.aly.aw) -> a
    void b(u.aly.cy,u.aly.aw) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.aw$b -> w.a.cr:
    u.aly.aw$a a() -> a
    u.aly.dg b() -> b
u.aly.aw$c -> w.a.cs:
    void a(u.aly.cy,u.aly.aw) -> a
    void b(u.aly.cy,u.aly.aw) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.aw$d -> w.a.ct:
    u.aly.aw$c a() -> a
    u.aly.dg b() -> b
u.aly.aw$e -> w.a.cu:
    u.aly.aw$e a -> a
    u.aly.aw$e b -> b
    u.aly.aw$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.aw$e[] g -> g
    u.aly.aw$e[] values() -> values
    u.aly.aw$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.ax -> w.a.cv:
    u.aly.dd m -> m
    u.aly.ct n -> n
    u.aly.ct o -> o
    u.aly.ct p -> p
    u.aly.ct q -> q
    u.aly.ct r -> r
    u.aly.ct s -> s
    u.aly.ct t -> t
    u.aly.ct u -> u
    u.aly.ct v -> v
    u.aly.ct w -> w
    u.aly.ct x -> x
    java.util.Map y -> y
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    double d -> d
    double e -> e
    java.lang.String f -> f
    int g -> g
    java.lang.String h -> h
    u.aly.ag i -> i
    java.lang.String j -> j
    u.aly.bg k -> k
    byte D -> z
    u.aly.ax$e[] E -> A
    java.util.Map l -> l
    u.aly.ax a(int) -> a
    boolean e() -> a
    void a(boolean) -> a
    u.aly.ax a(java.lang.String) -> a
    boolean i() -> b
    void b(boolean) -> b
    u.aly.ax b(java.lang.String) -> b
    boolean l() -> c
    void c(boolean) -> c
    boolean o() -> d
    void d(boolean) -> d
    boolean r() -> e
    void e(boolean) -> e
    u.aly.ax c(java.lang.String) -> c
    boolean u() -> f
    void f(boolean) -> f
    boolean x() -> g
    void g(boolean) -> g
    boolean A() -> h
    void h(boolean) -> h
    u.aly.ax a(u.aly.ag) -> a
    boolean D() -> i
    void i(boolean) -> i
    u.aly.ax e(java.lang.String) -> d
    boolean G() -> j
    void j(boolean) -> j
    u.aly.ax a(u.aly.bg) -> a
    boolean J() -> k
    void k(boolean) -> k
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void K() -> l
    u.aly.dd L() -> m
    u.aly.ct M() -> n
    u.aly.ct N() -> o
    u.aly.ct O() -> p
    u.aly.ct P() -> q
    u.aly.ct Q() -> r
    u.aly.ct R() -> s
    u.aly.ct S() -> t
    u.aly.ct T() -> u
    u.aly.ct U() -> v
    u.aly.ct V() -> w
    u.aly.ct W() -> x
u.aly.ax$1 -> w.a.cw:
u.aly.ax$a -> w.a.cx:
    void a(u.aly.cy,u.aly.ax) -> a
    void b(u.aly.cy,u.aly.ax) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ax$b -> w.a.cy:
    u.aly.ax$a a() -> a
    u.aly.dg b() -> b
u.aly.ax$c -> w.a.cz:
    void a(u.aly.cy,u.aly.ax) -> a
    void b(u.aly.cy,u.aly.ax) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ax$d -> w.a.da:
    u.aly.ax$c a() -> a
    u.aly.dg b() -> b
u.aly.ax$e -> w.a.db:
    u.aly.ax$e a -> a
    u.aly.ax$e b -> b
    u.aly.ax$e c -> c
    u.aly.ax$e d -> d
    u.aly.ax$e e -> e
    u.aly.ax$e f -> f
    u.aly.ax$e g -> g
    u.aly.ax$e h -> h
    u.aly.ax$e i -> i
    u.aly.ax$e j -> j
    u.aly.ax$e k -> k
    java.util.Map l -> l
    short m -> m
    java.lang.String n -> n
    u.aly.ax$e[] o -> o
    u.aly.ax$e[] values() -> values
    u.aly.ax$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.ay -> w.a.dc:
    u.aly.dd d -> d
    u.aly.ct e -> e
    u.aly.ct f -> f
    java.util.Map g -> g
    java.lang.String a -> a
    long b -> b
    byte i -> h
    java.util.Map c -> c
    u.aly.ay a(java.lang.String) -> a
    void a(boolean) -> a
    u.aly.ay a(long) -> a
    boolean i() -> a
    void b(boolean) -> b
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void j() -> b
    u.aly.dd k() -> c
    u.aly.ct l() -> d
    u.aly.ct m() -> e
u.aly.ay$1 -> w.a.dd:
u.aly.ay$a -> w.a.de:
    void a(u.aly.cy,u.aly.ay) -> a
    void b(u.aly.cy,u.aly.ay) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ay$b -> w.a.df:
    u.aly.ay$a a() -> a
    u.aly.dg b() -> b
u.aly.ay$c -> w.a.dg:
    void a(u.aly.cy,u.aly.ay) -> a
    void b(u.aly.cy,u.aly.ay) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ay$d -> w.a.dh:
    u.aly.ay$c a() -> a
    u.aly.dg b() -> b
u.aly.ay$e -> w.a.di:
    u.aly.ay$e a -> a
    u.aly.ay$e b -> b
    java.util.Map c -> c
    short d -> d
    java.lang.String e -> e
    u.aly.ay$e[] f -> f
    u.aly.ay$e[] values() -> values
    u.aly.ay$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.az -> w.a.dj:
    u.aly.dd d -> d
    u.aly.ct e -> e
    u.aly.ct f -> f
    java.util.Map a -> a
    java.lang.Object a(u.aly.cy,u.aly.ct) -> a
    void c(u.aly.cy) -> c
    java.lang.Object a(u.aly.cy,short) -> a
    void d(u.aly.cy) -> d
    u.aly.ct a(u.aly.az$a) -> a
    u.aly.dd c() -> a
    u.aly.az$a a(short) -> a
    void b(java.lang.String) -> a
    void b(long) -> a
    boolean equals(java.lang.Object) -> equals
    boolean a(u.aly.az) -> a
    int hashCode() -> hashCode
    u.aly.cg b(short) -> b
    u.aly.ct a(u.aly.cg) -> a
u.aly.az$1 -> w.a.dk:
    int[] a -> a
u.aly.az$a -> w.a.dl:
    u.aly.az$a a -> a
    u.aly.az$a b -> b
    java.util.Map c -> c
    short d -> d
    java.lang.String e -> e
    u.aly.az$a[] f -> f
    u.aly.az$a[] values() -> values
    u.aly.az$a valueOf(java.lang.String) -> valueOf
    u.aly.az$a a(int) -> a
    u.aly.az$a b(int) -> b
    short a() -> a
    java.lang.String b() -> b
u.aly.b -> w.a.dm:
    android.content.Context b -> a
    java.lang.String f() -> f
u.aly.ba -> w.a.dn:
    u.aly.dd d -> d
    u.aly.ct e -> e
    u.aly.ct f -> f
    java.util.Map g -> g
    int a -> a
    int b -> b
    byte j -> h
    java.util.Map c -> c
    boolean e() -> a
    void a(boolean) -> a
    boolean i() -> b
    void b(boolean) -> b
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void j() -> c
    u.aly.dd k() -> d
    u.aly.ct l() -> e
    u.aly.ct m() -> f
u.aly.ba$1 -> w.a.do:
u.aly.ba$a -> w.a.dp:
    void a(u.aly.cy,u.aly.ba) -> a
    void b(u.aly.cy,u.aly.ba) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ba$b -> w.a.dq:
    u.aly.ba$a a() -> a
    u.aly.dg b() -> b
u.aly.ba$c -> w.a.dr:
    void a(u.aly.cy,u.aly.ba) -> a
    void b(u.aly.cy,u.aly.ba) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ba$d -> w.a.ds:
    u.aly.ba$c a() -> a
    u.aly.dg b() -> b
u.aly.ba$e -> w.a.dt:
    u.aly.ba$e a -> a
    u.aly.ba$e b -> b
    java.util.Map c -> c
    short d -> d
    java.lang.String e -> e
    u.aly.ba$e[] f -> f
    u.aly.ba$e[] values() -> values
    u.aly.ba$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.bb -> w.a.du:
    u.aly.dd e -> e
    u.aly.ct f -> f
    u.aly.ct g -> g
    u.aly.ct h -> h
    java.util.Map i -> i
    int a -> a
    java.lang.String b -> b
    u.aly.at c -> c
    byte k -> j
    u.aly.bb$e[] l -> k
    java.util.Map d -> d
    boolean e() -> a
    void a(boolean) -> a
    java.lang.String f() -> b
    boolean i() -> c
    void b(boolean) -> b
    u.aly.at j() -> d
    boolean l() -> e
    void c(boolean) -> c
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void m() -> f
    u.aly.dd n() -> g
    u.aly.ct o() -> h
    u.aly.ct p() -> i
    u.aly.ct q() -> j
u.aly.bb$1 -> w.a.dv:
u.aly.bb$a -> w.a.dw:
    void a(u.aly.cy,u.aly.bb) -> a
    void b(u.aly.cy,u.aly.bb) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bb$b -> w.a.dx:
    u.aly.bb$a a() -> a
    u.aly.dg b() -> b
u.aly.bb$c -> w.a.dy:
    void a(u.aly.cy,u.aly.bb) -> a
    void b(u.aly.cy,u.aly.bb) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bb$d -> w.a.dz:
    u.aly.bb$c a() -> a
    u.aly.dg b() -> b
u.aly.bb$e -> w.a.ea:
    u.aly.bb$e a -> a
    u.aly.bb$e b -> b
    u.aly.bb$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.bb$e[] g -> g
    u.aly.bb$e[] values() -> values
    u.aly.bb$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.bc -> w.a.eb:
    u.aly.bc a -> a
    u.aly.bc b -> b
    u.aly.bc c -> c
    u.aly.bc d -> d
    int e -> e
    u.aly.bc[] f -> f
    u.aly.bc[] values() -> values
    u.aly.bc valueOf(java.lang.String) -> valueOf
    int a() -> a
    u.aly.bc a(int) -> a
u.aly.bd -> w.a.ec:
    u.aly.dd i -> i
    u.aly.ct j -> j
    u.aly.ct k -> k
    u.aly.ct l -> l
    u.aly.ct m -> m
    u.aly.ct n -> n
    u.aly.ct o -> o
    u.aly.ct p -> p
    java.util.Map q -> q
    java.lang.String a -> a
    long b -> b
    long c -> c
    long d -> d
    java.util.List e -> e
    java.util.List f -> f
    u.aly.be g -> g
    byte u -> r
    u.aly.bd$e[] v -> s
    java.util.Map h -> h
    u.aly.bd a(java.lang.String) -> a
    void a(boolean) -> a
    u.aly.bd a(long) -> a
    boolean i() -> a
    void b(boolean) -> b
    u.aly.bd b(long) -> b
    boolean l() -> b
    void c(boolean) -> c
    u.aly.bd c(long) -> c
    boolean o() -> c
    void d(boolean) -> d
    int p() -> d
    u.aly.bd a(java.util.List) -> a
    boolean t() -> e
    void e(boolean) -> e
    void a(u.aly.aw) -> a
    u.aly.bd b(java.util.List) -> b
    boolean y() -> f
    void f(boolean) -> f
    u.aly.bd a(u.aly.be) -> a
    boolean B() -> g
    void g(boolean) -> g
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void C() -> h
    u.aly.dd D() -> i
    u.aly.ct E() -> j
    u.aly.ct F() -> k
    u.aly.ct G() -> l
    u.aly.ct H() -> m
    u.aly.ct I() -> n
    u.aly.ct J() -> o
    u.aly.ct K() -> p
u.aly.bd$1 -> w.a.ed:
u.aly.bd$a -> w.a.ee:
    void a(u.aly.cy,u.aly.bd) -> a
    void b(u.aly.cy,u.aly.bd) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bd$b -> w.a.ef:
    u.aly.bd$a a() -> a
    u.aly.dg b() -> b
u.aly.bd$c -> w.a.eg:
    void a(u.aly.cy,u.aly.bd) -> a
    void b(u.aly.cy,u.aly.bd) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bd$d -> w.a.eh:
    u.aly.bd$c a() -> a
    u.aly.dg b() -> b
u.aly.bd$e -> w.a.ei:
    u.aly.bd$e a -> a
    u.aly.bd$e b -> b
    u.aly.bd$e c -> c
    u.aly.bd$e d -> d
    u.aly.bd$e e -> e
    u.aly.bd$e f -> f
    u.aly.bd$e g -> g
    java.util.Map h -> h
    short i -> i
    java.lang.String j -> j
    u.aly.bd$e[] k -> k
    u.aly.bd$e[] values() -> values
    u.aly.bd$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.be -> w.a.ej:
    u.aly.dd d -> d
    u.aly.ct e -> e
    u.aly.ct f -> f
    java.util.Map g -> g
    int a -> a
    int b -> b
    byte j -> h
    java.util.Map c -> c
    u.aly.be a(int) -> a
    boolean e() -> a
    void a(boolean) -> a
    u.aly.be c(int) -> b
    boolean i() -> b
    void b(boolean) -> b
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void j() -> c
    u.aly.dd k() -> d
    u.aly.ct l() -> e
    u.aly.ct m() -> f
u.aly.be$1 -> w.a.ek:
u.aly.be$a -> w.a.el:
    void a(u.aly.cy,u.aly.be) -> a
    void b(u.aly.cy,u.aly.be) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.be$b -> w.a.em:
    u.aly.be$a a() -> a
    u.aly.dg b() -> b
u.aly.be$c -> w.a.en:
    void a(u.aly.cy,u.aly.be) -> a
    void b(u.aly.cy,u.aly.be) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.be$d -> w.a.eo:
    u.aly.be$c a() -> a
    u.aly.dg b() -> b
u.aly.be$e -> w.a.ep:
    u.aly.be$e a -> a
    u.aly.be$e b -> b
    java.util.Map c -> c
    short d -> d
    java.lang.String e -> e
    u.aly.be$e[] f -> f
    u.aly.be$e[] values() -> values
    u.aly.be$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.bf -> w.a.eq:
    u.aly.dd k -> k
    u.aly.ct l -> l
    u.aly.ct m -> m
    u.aly.ct n -> n
    u.aly.ct o -> o
    u.aly.ct p -> p
    u.aly.ct q -> q
    u.aly.ct r -> r
    u.aly.ct s -> s
    u.aly.ct t -> t
    java.util.Map u -> u
    u.aly.aj a -> a
    u.aly.ai b -> b
    u.aly.ak c -> c
    u.aly.ax d -> d
    u.aly.ah e -> e
    java.util.List f -> f
    java.util.List g -> g
    u.aly.at h -> h
    u.aly.as i -> i
    u.aly.bf$e[] v -> v
    java.util.Map j -> j
    u.aly.bf a(u.aly.aj) -> a
    void a(boolean) -> a
    u.aly.bf a(u.aly.ai) -> a
    void b(boolean) -> b
    u.aly.bf a(u.aly.ak) -> a
    void c(boolean) -> c
    u.aly.bf a(u.aly.ax) -> a
    void d(boolean) -> d
    u.aly.bf a(u.aly.ah) -> a
    boolean r() -> a
    void e(boolean) -> e
    int s() -> b
    void a(u.aly.av) -> a
    java.util.List u() -> c
    boolean w() -> d
    void f(boolean) -> f
    void a(u.aly.bd) -> a
    java.util.List z() -> e
    boolean B() -> f
    void g(boolean) -> g
    u.aly.bf a(u.aly.at) -> a
    boolean E() -> g
    void h(boolean) -> h
    u.aly.bf a(u.aly.as) -> a
    boolean H() -> h
    void i(boolean) -> i
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void I() -> i
    u.aly.dd J() -> j
    u.aly.ct K() -> k
    u.aly.ct L() -> l
    u.aly.ct M() -> m
    u.aly.ct N() -> n
    u.aly.ct O() -> o
    u.aly.ct P() -> p
    u.aly.ct Q() -> q
    u.aly.ct R() -> r
    u.aly.ct S() -> s
u.aly.bf$1 -> w.a.er:
u.aly.bf$a -> w.a.es:
    void a(u.aly.cy,u.aly.bf) -> a
    void b(u.aly.cy,u.aly.bf) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bf$b -> w.a.et:
    u.aly.bf$a a() -> a
    u.aly.dg b() -> b
u.aly.bf$c -> w.a.eu:
    void a(u.aly.cy,u.aly.bf) -> a
    void b(u.aly.cy,u.aly.bf) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bf$d -> w.a.ev:
    u.aly.bf$c a() -> a
    u.aly.dg b() -> b
u.aly.bf$e -> w.a.ew:
    u.aly.bf$e a -> a
    u.aly.bf$e b -> b
    u.aly.bf$e c -> c
    u.aly.bf$e d -> d
    u.aly.bf$e e -> e
    u.aly.bf$e f -> f
    u.aly.bf$e g -> g
    u.aly.bf$e h -> h
    u.aly.bf$e i -> i
    java.util.Map j -> j
    short k -> k
    java.lang.String l -> l
    u.aly.bf$e[] m -> m
    u.aly.bf$e[] values() -> values
    u.aly.bf$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.bg -> w.a.ex:
    u.aly.dd f -> f
    u.aly.ct g -> g
    u.aly.ct h -> h
    u.aly.ct i -> i
    u.aly.ct j -> j
    java.util.Map k -> k
    u.aly.ap a -> a
    int b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    byte m -> l
    u.aly.bg$e[] n -> m
    java.util.Map e -> e
    u.aly.bg a(u.aly.ap) -> a
    boolean e() -> a
    void a(boolean) -> a
    u.aly.bg a(int) -> a
    boolean i() -> b
    void b(boolean) -> b
    u.aly.bg a(java.lang.String) -> a
    boolean l() -> c
    void c(boolean) -> c
    u.aly.bg b(java.lang.String) -> b
    boolean o() -> d
    void d(boolean) -> d
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void p() -> e
    u.aly.dd q() -> f
    u.aly.ct r() -> g
    u.aly.ct s() -> h
    u.aly.ct t() -> i
    u.aly.ct u() -> j
u.aly.bg$1 -> w.a.ey:
u.aly.bg$a -> w.a.ez:
    void a(u.aly.cy,u.aly.bg) -> a
    void b(u.aly.cy,u.aly.bg) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bg$b -> w.a.fa:
    u.aly.bg$a a() -> a
    u.aly.dg b() -> b
u.aly.bg$c -> w.a.fb:
    void a(u.aly.cy,u.aly.bg) -> a
    void b(u.aly.cy,u.aly.bg) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bg$d -> w.a.fc:
    u.aly.bg$c a() -> a
    u.aly.dg b() -> b
u.aly.bg$e -> w.a.fd:
    u.aly.bg$e a -> a
    u.aly.bg$e b -> b
    u.aly.bg$e c -> c
    u.aly.bg$e d -> d
    java.util.Map e -> e
    short f -> f
    java.lang.String g -> g
    u.aly.bg$e[] h -> h
    u.aly.bg$e[] values() -> values
    u.aly.bg$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.bh -> w.a.fe:
    u.aly.dd k -> k
    u.aly.ct l -> l
    u.aly.ct m -> m
    u.aly.ct n -> n
    u.aly.ct o -> o
    u.aly.ct p -> p
    u.aly.ct q -> q
    u.aly.ct r -> r
    u.aly.ct s -> s
    u.aly.ct t -> t
    java.util.Map u -> u
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    int d -> d
    int e -> e
    int f -> f
    java.nio.ByteBuffer g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    byte y -> v
    java.util.Map j -> j
    u.aly.bh a(java.lang.String) -> a
    void a(boolean) -> a
    u.aly.bh b(java.lang.String) -> b
    void b(boolean) -> b
    u.aly.bh c(java.lang.String) -> c
    void c(boolean) -> c
    u.aly.bh a(int) -> a
    boolean o() -> a
    void d(boolean) -> d
    u.aly.bh c(int) -> b
    boolean r() -> b
    void e(boolean) -> e
    u.aly.bh d(int) -> c
    boolean u() -> c
    void f(boolean) -> f
    u.aly.bh a(byte[]) -> a
    u.aly.bh a(java.nio.ByteBuffer) -> a
    void g(boolean) -> g
    u.aly.bh d(java.lang.String) -> d
    void h(boolean) -> h
    u.aly.bh e(java.lang.String) -> e
    void i(boolean) -> i
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void F() -> d
    u.aly.dd G() -> e
    u.aly.ct H() -> f
    u.aly.ct I() -> g
    u.aly.ct J() -> h
    u.aly.ct K() -> i
    u.aly.ct L() -> j
    u.aly.ct M() -> k
    u.aly.ct N() -> l
    u.aly.ct O() -> m
    u.aly.ct P() -> n
u.aly.bh$1 -> w.a.ff:
u.aly.bh$a -> w.a.fg:
    void a(u.aly.cy,u.aly.bh) -> a
    void b(u.aly.cy,u.aly.bh) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bh$b -> w.a.fh:
    u.aly.bh$a a() -> a
    u.aly.dg b() -> b
u.aly.bh$c -> w.a.fi:
    void a(u.aly.cy,u.aly.bh) -> a
    void b(u.aly.cy,u.aly.bh) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bh$d -> w.a.fj:
    u.aly.bh$c a() -> a
    u.aly.dg b() -> b
u.aly.bh$e -> w.a.fk:
    u.aly.bh$e a -> a
    u.aly.bh$e b -> b
    u.aly.bh$e c -> c
    u.aly.bh$e d -> d
    u.aly.bh$e e -> e
    u.aly.bh$e f -> f
    u.aly.bh$e g -> g
    u.aly.bh$e h -> h
    u.aly.bh$e i -> i
    java.util.Map j -> j
    short k -> k
    java.lang.String l -> l
    u.aly.bh$e[] m -> m
    u.aly.bh$e[] values() -> values
    u.aly.bh$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.bi -> w.a.fl:
    java.lang.String a -> a
    java.lang.String c(android.content.Context) -> a
    java.lang.String d(android.content.Context) -> b
    boolean a(android.content.Context,java.lang.String) -> a
    java.lang.String a() -> a
    java.lang.String f(android.content.Context) -> c
    java.lang.String g(android.content.Context) -> d
    java.lang.String[] j(android.content.Context) -> e
    boolean k(android.content.Context) -> f
    boolean l(android.content.Context) -> g
    int m(android.content.Context) -> h
    java.lang.String[] n(android.content.Context) -> i
    java.util.Locale x(android.content.Context) -> r
    java.lang.String o(android.content.Context) -> j
    java.lang.String p(android.content.Context) -> k
    int[] r(android.content.Context) -> l
    int a(java.lang.Object,java.lang.String) -> a
    java.lang.String s(android.content.Context) -> m
    java.lang.String t(android.content.Context) -> n
    java.lang.String u(android.content.Context) -> o
    java.lang.String v(android.content.Context) -> p
    boolean w(android.content.Context) -> q
u.aly.bj -> w.a.fm:
    boolean a -> a
    void a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,java.lang.Exception) -> a
    void b(java.lang.String,java.lang.String) -> b
    void b(java.lang.String,java.lang.String,java.lang.Exception) -> b
    void c(java.lang.String,java.lang.String) -> c
    void c(java.lang.String,java.lang.String,java.lang.Exception) -> c
    void e(java.lang.String,java.lang.String) -> d
    void e(java.lang.String,java.lang.String,java.lang.Exception) -> d
u.aly.bo -> w.a.fn:
    java.lang.String a -> a
    java.util.Map b -> b
    u.aly.bq a(u.aly.bp,java.lang.Class) -> a
    org.json.JSONObject a(java.lang.String,org.json.JSONObject) -> a
    boolean a() -> a
    java.lang.String a(java.io.InputStream) -> a
    org.json.JSONObject a(java.lang.String) -> a
    org.apache.http.params.HttpParams b() -> b
    void b(java.lang.String) -> b
u.aly.bp -> w.a.fo:
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    org.json.JSONObject a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    void a(java.lang.String) -> a
u.aly.bq -> w.a.fp:
u.aly.bu -> w.a.fq:
    int a -> a
    byte[] a(java.lang.String,java.lang.String) -> a
    byte[] a(byte[]) -> a
u.aly.bv -> w.a.fr:
    java.lang.String a -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    boolean d(java.lang.String) -> c
    java.lang.String a(java.io.InputStream) -> a
    byte[] b(java.io.InputStream) -> b
    void a(java.io.File,byte[]) -> a
    void c(java.io.InputStream) -> c
    void a(java.io.OutputStream) -> a
u.aly.bw -> w.a.fs:
    boolean a(byte,int) -> a
    boolean a(int,int) -> a
    int b(int,int) -> b
    byte a(byte,int,boolean) -> a
    int a(int,int,boolean) -> a
u.aly.bx -> w.a.ft:
    short[] a -> a
    int b -> b
    short a() -> a
    void a(short) -> a
    void d() -> c
    void c() -> b
    java.lang.String toString() -> toString
u.aly.bz -> w.a.fu:
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
u.aly.c -> w.a.fv:
    byte[] a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    byte[] d -> d
    byte[] e -> e
    byte[] f -> f
    int g -> g
    int h -> h
    int i -> i
    byte[] j -> j
    byte[] k -> k
    void a(java.lang.String) -> a
    java.lang.String a() -> a
    void a(int) -> a
    u.aly.c a(android.content.Context,java.lang.String,byte[]) -> a
    void b() -> b
    byte[] a(byte[],int) -> a
    byte[] d() -> d
    byte[] e() -> e
    byte[] c() -> c
    java.lang.String toString() -> toString
    byte[] a(byte[]) -> a
    java.lang.String b(byte[]) -> b
    byte[] b(java.lang.String) -> b
u.aly.ca -> w.a.fw:
    java.util.Comparator a -> a
    int a(byte,byte) -> a
    int a(int,int) -> a
    int a(byte[],byte[]) -> a
    int a(java.lang.Comparable,java.lang.Comparable) -> a
    int a(java.util.List,java.util.List) -> a
    int a(java.util.Set,java.util.Set) -> a
    int a(java.util.Map,java.util.Map) -> a
    void a(java.nio.ByteBuffer,java.lang.StringBuilder) -> a
    java.lang.String a(byte) -> a
u.aly.ca$1 -> w.a.fx:
u.aly.ca$a -> w.a.fy:
    int compare(java.lang.Object,java.lang.Object) -> compare
u.aly.cc -> w.a.fz:
    u.aly.cy a -> a
    u.aly.dl b -> b
    void a(u.aly.bz,byte[]) -> a
u.aly.cf -> w.a.ga:
u.aly.cg -> w.a.gb:
    short a() -> a
u.aly.ci -> w.a.gc:
    java.io.ByteArrayOutputStream a -> a
    u.aly.dk b -> b
    u.aly.cy c -> c
    byte[] a(u.aly.bz) -> a
u.aly.cj -> w.a.gd:
    java.lang.Object b -> b
    u.aly.cg c -> c
    java.util.Map a -> a
    u.aly.cg i() -> b
    java.lang.Object j() -> c
    boolean k() -> d
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.Object a(u.aly.cy,u.aly.ct) -> a
    void c(u.aly.cy) -> c
    java.lang.Object a(u.aly.cy,short) -> a
    void d(u.aly.cy) -> d
    u.aly.dd c() -> a
    u.aly.ct a(u.aly.cg) -> a
    u.aly.cg b(short) -> b
    java.lang.String toString() -> toString
u.aly.cj$1 -> w.a.ge:
u.aly.cj$a -> w.a.gf:
    void a(u.aly.cy,u.aly.cj) -> a
    void b(u.aly.cy,u.aly.cj) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.cj$b -> w.a.gg:
    u.aly.cj$a a() -> a
    u.aly.dg b() -> b
u.aly.cj$c -> w.a.gh:
    void a(u.aly.cy,u.aly.cj) -> a
    void b(u.aly.cy,u.aly.cj) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.cj$d -> w.a.gi:
    u.aly.cj$c a() -> a
    u.aly.dg b() -> b
u.aly.ck -> w.a.gj:
    java.lang.Class a -> a
u.aly.cl -> w.a.gk:
    java.lang.String a -> a
    byte b -> b
    u.aly.cm c -> c
    java.util.Map d -> d
    void a(java.lang.Class,java.util.Map) -> a
u.aly.cm -> w.a.gl:
    byte b -> b
    boolean a -> a
    java.lang.String c -> c
    boolean d -> d
u.aly.cn -> w.a.gm:
    u.aly.cm a -> a
u.aly.co -> w.a.gn:
    u.aly.cm a -> a
    u.aly.cm c -> c
u.aly.cq -> w.a.go:
    java.lang.Class a -> a
u.aly.cr -> w.a.gp:
    u.aly.dd h -> f
    boolean c -> a
    boolean d -> b
    int e -> c
    boolean f -> d
    byte[] i -> g
    byte[] j -> h
    byte[] k -> i
    byte[] l -> j
    byte[] m -> k
    byte[] n -> l
    byte[] o -> m
    byte[] p -> n
    void a(u.aly.dd) -> a
    void b() -> a
    void a(u.aly.ct) -> a
    void c() -> b
    void d() -> c
    void a(u.aly.cv) -> a
    void e() -> d
    void a(u.aly.cu) -> a
    void f() -> e
    void a(boolean) -> a
    void a(byte) -> a
    void a(short) -> a
    void a(int) -> a
    void a(long) -> a
    void a(double) -> a
    void a(java.lang.String) -> a
    void a(java.nio.ByteBuffer) -> a
    u.aly.dd j() -> f
    void k() -> g
    u.aly.ct l() -> h
    void m() -> i
    u.aly.cv n() -> j
    void o() -> k
    u.aly.cu p() -> l
    void q() -> m
    u.aly.dc r() -> n
    void s() -> o
    boolean t() -> p
    byte u() -> q
    short v() -> r
    int w() -> s
    long x() -> t
    double y() -> u
    java.lang.String z() -> v
    java.lang.String b(int) -> b
    java.nio.ByteBuffer A() -> w
    int a(byte[],int,int) -> a
    void c(int) -> c
    void d(int) -> d
u.aly.cr$a -> w.a.gq:
    boolean a -> a
    boolean b -> b
    int c -> c
    u.aly.cy a(u.aly.dm) -> a
u.aly.cs -> w.a.gr:
    u.aly.dd d -> d
    u.aly.ct e -> f
    byte[] f -> g
    u.aly.bx m -> h
    short n -> i
    u.aly.ct o -> j
    java.lang.Boolean p -> k
    long q -> l
    byte[] a -> a
    byte[] b -> b
    byte[] r -> m
    byte[] c -> c
    void B() -> x
    void a(u.aly.dd) -> a
    void b() -> a
    void a(u.aly.ct) -> a
    void a(u.aly.ct,byte) -> a
    void d() -> c
    void a(u.aly.cv) -> a
    void a(u.aly.cu) -> a
    void a(boolean) -> a
    void a(byte) -> a
    void a(short) -> a
    void a(int) -> a
    void a(long) -> a
    void a(double) -> a
    void a(java.lang.String) -> a
    void a(java.nio.ByteBuffer) -> a
    void a(byte[],int,int) -> a
    void e() -> d
    void f() -> e
    void c() -> b
    void a(byte,int) -> a
    void b(int) -> b
    void b(long) -> b
    long c(long) -> c
    int c(int) -> c
    void a(long,byte[],int) -> a
    void b(byte) -> b
    void d(int) -> d
    u.aly.dd j() -> f
    void k() -> g
    u.aly.ct l() -> h
    u.aly.cv n() -> j
    u.aly.cu p() -> l
    u.aly.dc r() -> n
    boolean t() -> p
    byte u() -> q
    short v() -> r
    int w() -> s
    long x() -> t
    double y() -> u
    java.lang.String z() -> v
    java.nio.ByteBuffer A() -> w
    byte[] e(int) -> e
    void f(int) -> f
    void m() -> i
    void o() -> k
    void q() -> m
    void s() -> o
    int E() -> z
    long F() -> A
    int g(int) -> g
    long d(long) -> d
    long a(byte[]) -> a
    boolean c(byte) -> c
    byte d(byte) -> d
    byte e(byte) -> e
u.aly.cs$a -> w.a.gs:
    long a -> a
    u.aly.cy a(u.aly.dm) -> a
u.aly.ct -> w.a.gt:
    java.lang.String a -> a
    byte b -> b
    short c -> c
    java.lang.String toString() -> toString
u.aly.cu -> w.a.gu:
    byte a -> a
    int b -> b
u.aly.cv -> w.a.gv:
    byte a -> a
    byte b -> b
    int c -> c
u.aly.cy -> w.a.gw:
    u.aly.dm g -> e
    void a(u.aly.dd) -> a
    void b() -> a
    void a(u.aly.ct) -> a
    void c() -> b
    void d() -> c
    void a(u.aly.cv) -> a
    void e() -> d
    void a(u.aly.cu) -> a
    void f() -> e
    void a(boolean) -> a
    void a(short) -> a
    void a(int) -> a
    void a(long) -> a
    void a(double) -> a
    void a(java.lang.String) -> a
    void a(java.nio.ByteBuffer) -> a
    u.aly.dd j() -> f
    void k() -> g
    u.aly.ct l() -> h
    void m() -> i
    u.aly.cv n() -> j
    void o() -> k
    u.aly.cu p() -> l
    void q() -> m
    u.aly.dc r() -> n
    void s() -> o
    boolean t() -> p
    byte u() -> q
    short v() -> r
    int w() -> s
    long x() -> t
    double y() -> u
    java.lang.String z() -> v
    java.nio.ByteBuffer A() -> w
    void B() -> x
    java.lang.Class D() -> y
u.aly.cz -> w.a.gx:
    int g -> a
u.aly.d -> w.a.gy:
    java.lang.String a -> a
    java.io.File b -> b
    u.aly.as c -> c
    long d -> d
    long e -> e
    java.util.Set f -> f
    void a(u.aly.a) -> a
    void a() -> a
    u.aly.as b() -> b
    void g() -> f
    void d() -> c
    void e() -> d
    void f() -> e
    u.aly.as h() -> g
    void a(u.aly.as) -> a
u.aly.da -> w.a.gz:
    u.aly.cy a(u.aly.dm) -> a
u.aly.db -> w.a.ha:
    int a -> a
    void a(u.aly.cy,byte) -> a
    void a(u.aly.cy,byte,int) -> a
u.aly.dc -> w.a.hb:
    byte a -> a
    int b -> b
u.aly.dd -> w.a.hc:
    java.lang.String a -> a
u.aly.de -> w.a.hd:
    java.lang.Class D() -> y
    void a(java.util.BitSet,int) -> a
    java.util.BitSet b(int) -> b
    java.util.BitSet a(byte[]) -> a
    byte[] b(java.util.BitSet,int) -> b
u.aly.dg -> w.a.he:
    void b(u.aly.cy,u.aly.bz) -> b
    void a(u.aly.cy,u.aly.bz) -> a
u.aly.dh -> w.a.hf:
    u.aly.dg b() -> b
u.aly.di -> w.a.hg:
u.aly.dj -> w.a.hh:
u.aly.dk -> w.a.hi:
    java.io.InputStream a -> a
    java.io.OutputStream b -> b
    int a(byte[],int,int) -> a
    void b(byte[],int,int) -> b
u.aly.dl -> w.a.hj:
    byte[] a -> a
    int b -> b
    int c -> c
    void a(byte[]) -> a
    void c(byte[],int,int) -> c
    void e() -> a
    int a(byte[],int,int) -> a
    void b(byte[],int,int) -> b
    byte[] f() -> b
    int g() -> c
    int h() -> d
    void a(int) -> a
u.aly.dm -> w.a.hk:
    int a(byte[],int,int) -> a
    int d(byte[],int,int) -> d
    void b(byte[]) -> b
    void b(byte[],int,int) -> b
    byte[] f() -> b
    int g() -> c
    int h() -> d
    void a(int) -> a
u.aly.dn -> w.a.hl:
    int f -> a
u.aly.e -> w.a.hm:
    android.content.Context b -> a
    java.lang.String f() -> f
u.aly.f -> w.a.hn:
    byte[] b -> a
    u.aly.at c -> b
    android.content.Context d -> c
    java.lang.String a(u.aly.at) -> a
    boolean c(u.aly.at) -> c
    byte[] a(u.aly.au) -> a
    void b(u.aly.at) -> b
    u.aly.at a(u.aly.at,u.aly.at) -> a
    u.aly.at a() -> a
    void b() -> b
    void c() -> c
u.aly.g -> w.a.ho:
    android.content.Context b -> a
    java.lang.String f() -> f
u.aly.h -> w.a.hp:
    u.aly.d a -> a
    u.aly.f b -> b
    u.aly.d a(android.content.Context) -> a
    u.aly.f b(android.content.Context) -> b
u.aly.i -> w.a.hq:
    java.util.regex.Pattern c -> a
    android.content.Context d -> b
    java.lang.String f() -> f
    java.lang.String g() -> g
    java.lang.String b(java.lang.String) -> b
    java.io.File h() -> h
u.aly.j -> w.a.hr:
    u.aly.q a -> a
    u.aly.r b -> b
    com.umeng.analytics.ReportPolicy$e c -> c
    com.umeng.analytics.f d -> d
    u.aly.w e -> e
    u.aly.d f -> f
    int g -> g
    android.content.Context h -> h
    void a(u.aly.p) -> a
    void b(u.aly.p) -> b
    void b() -> a
    byte[] c() -> b
    u.aly.bf a(byte[]) -> a
    byte[] a(u.aly.bf) -> a
    boolean a(boolean) -> a
    boolean d() -> c
    void e() -> d
    void f() -> e
    void a(int,int) -> a
    void a(int,long) -> a
u.aly.k -> w.a.hs:
    u.aly.o a -> a
    android.content.Context b -> b
    u.aly.k c -> c
    u.aly.k a(android.content.Context) -> a
    void a(com.umeng.analytics.onlineconfig.a) -> a
    void a(u.aly.p) -> a
    void b(u.aly.p) -> b
    void b() -> a
    u.aly.o a(u.aly.k) -> a
u.aly.k$1 -> w.a.ht:
    u.aly.p a -> a
    u.aly.k b -> b
    void a() -> a
u.aly.k$3 -> w.a.hu:
    u.aly.k a -> a
    void a() -> a
u.aly.l -> w.a.hv:
    java.lang.String a -> a
    boolean b -> b
    android.content.SharedPreferences c -> c
    java.util.Map d -> d
    void a(boolean) -> a
u.aly.m -> w.a.hw:
    java.lang.Thread$UncaughtExceptionHandler a -> a
    u.aly.t b -> b
    void a(u.aly.t) -> a
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    void a(java.lang.Throwable) -> a
u.aly.n -> w.a.hx:
    int a -> a
    int b -> b
    u.aly.l c -> c
    android.content.Context d -> d
    u.aly.k e -> e
    void a(java.lang.String,java.util.Map,long) -> a
    boolean a(java.lang.String) -> a
    boolean b(java.lang.String) -> b
    boolean a(java.util.Map) -> a
u.aly.o -> w.a.hy:
    void b(u.aly.p) -> b
    void a(u.aly.p) -> a
    void b() -> a
u.aly.p -> w.a.hz:
    void a(u.aly.bf,java.lang.String) -> a
u.aly.q -> w.a.ia:
    java.util.List a -> a
    u.aly.ah b -> b
    u.aly.ai c -> c
    u.aly.ak d -> d
    u.aly.ax e -> e
    android.content.Context f -> f
    int b() -> a
    void a(u.aly.p) -> a
    void a(u.aly.bf) -> a
    java.lang.String i() -> h
    void a(u.aly.ah) -> a
    u.aly.ai c() -> b
    u.aly.ak d() -> c
    u.aly.ax e() -> d
    u.aly.at f() -> e
    u.aly.as g() -> f
    u.aly.aj h() -> g
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
u.aly.r -> w.a.ib:
    int d -> a
    java.lang.String e -> b
    java.lang.String f -> c
    int g -> d
    android.content.Context h -> e
    u.aly.w i -> f
    u.aly.f j -> g
    void a(u.aly.w) -> a
    int a(byte[]) -> a
    boolean a() -> a
    byte[] a(byte[],java.lang.String) -> a
    java.lang.String a(android.content.Context) -> a
    int b(byte[]) -> b
u.aly.t -> w.a.ic:
    void a(java.lang.Throwable) -> a
u.aly.u -> w.a.id:
    android.content.SharedPreferences a(android.content.Context,java.lang.String) -> a
    android.content.SharedPreferences a(android.content.Context) -> a
u.aly.v -> w.a.ie:
    java.lang.String d -> a
    java.lang.String e -> b
    u.aly.af a(android.content.Context) -> a
    void a(android.content.SharedPreferences) -> a
    java.lang.String b(android.content.Context) -> b
    void c(android.content.Context) -> c
    void d(android.content.Context) -> d
    boolean b(android.content.SharedPreferences) -> b
    java.lang.String a(android.content.Context,android.content.SharedPreferences) -> a
u.aly.w -> w.a.if:
    int d -> d
    int a -> a
    int b -> b
    int e -> e
    long c -> c
    long f -> f
    long g -> g
    android.content.Context m -> h
    void b(android.content.Context) -> b
    boolean b() -> a
    void c() -> b
    void d() -> c
    void e() -> d
    void f() -> e
    void g() -> f
    void h() -> g
    boolean i() -> h
    long j() -> i
    u.aly.aj a(android.content.Context) -> a
u.aly.x -> w.a.ig:
    java.lang.String a -> a
    long b -> b
u.aly.y -> w.a.ih:
    u.aly.be a(android.content.Context) -> a
    long[] b(android.content.Context) -> b
u.aly.z -> w.a.ii:
    java.util.Map b -> a
    java.util.ArrayList c -> b
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void a() -> a
    void a(android.content.Context) -> a
    java.util.List a(android.content.SharedPreferences) -> a
vi.com.gdi.bgl.android.java.EnvDrawText -> vi.com.gdi.bgl.android.java.EnvDrawText:
    android.graphics.Paint pt -> pt
    int iWordWidthMax -> iWordWidthMax
    int iWordHightMax -> iWordHightMax
    boolean bBmpChange -> bBmpChange
    android.graphics.Bitmap bmp -> bmp
    android.graphics.Canvas canvasTemp -> canvasTemp
    int[] buffer -> buffer
    int[] drawText(java.lang.String,int,int,int[],int,int,int,int) -> drawText
    short[] getTextSize(java.lang.String,int) -> getTextSize
zrc.util.APIUtil -> zrc.a.a:
    boolean isSupport(int) -> a
zrc.widget.Footable -> zrc.widget.a:
    boolean draw(android.graphics.Canvas,int,int,int,int) -> a
    int getHeight() -> a
zrc.widget.Headable -> zrc.widget.b:
    void stateChange(int,java.lang.String) -> a
    int getState() -> a
    boolean draw(android.graphics.Canvas,int,int,int,int) -> a
    void toastResultInOtherWay(android.content.Context,int) -> a
    int getHeight() -> b
zrc.widget.HeaderViewListAdapter -> zrc.widget.c:
    android.widget.ListAdapter mAdapter -> e
    java.util.ArrayList mHeaderViewInfos -> a
    java.util.ArrayList mFooterViewInfos -> b
    java.util.ArrayList EMPTY_INFO_LIST -> c
    boolean mAreAllFixedViewsSelectable -> d
    int getHeadersCount() -> a
    int getFootersCount() -> b
    boolean isEmpty() -> isEmpty
    boolean areAllListInfosSelectable(java.util.ArrayList) -> a
    int getCount() -> getCount
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean isEnabled(int) -> isEnabled
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    android.widget.ListAdapter getWrappedAdapter() -> getWrappedAdapter
zrc.widget.ZrcAbsListView -> zrc.widget.ZrcAbsListView:
    int mLayoutMode -> a
    zrc.widget.ZrcAbsListView$AdapterDataSetObserver mDataSetObserver -> b
    android.widget.ListAdapter mAdapter -> c
    boolean mAdapterHasStableIds -> d
    boolean mDrawSelectorOnTop -> e
    android.graphics.drawable.Drawable mSelector -> f
    int mSelectorPosition -> g
    android.graphics.Rect mSelectorRect -> h
    zrc.widget.ZrcAbsListView$RecycleBin mRecycler -> i
    android.graphics.Rect mListPadding -> j
    int mWidthMeasureSpec -> k
    android.view.View mScrollUp -> l
    android.view.View mScrollDown -> m
    boolean mCachingStarted -> n
    boolean mCachingActive -> o
    int mMotionPosition -> p
    int mMotionX -> q
    int mMotionY -> r
    int mTouchMode -> s
    int mLastY -> t
    int mMotionCorrection -> u
    android.view.VelocityTracker mVelocityTracker -> N
    zrc.widget.ZrcAbsListView$FlingRunnable mFlingRunnable -> O
    boolean mScrollingCacheEnabled -> v
    zrc.widget.ZrcListView$OnScrollListener mOnScrollListener -> P
    boolean mSmoothScrollbarEnabled -> Q
    android.graphics.Rect mTouchFrame -> R
    int mLastTouchMode -> S
    zrc.widget.ZrcAbsListView$PerformClick mPerformClick -> T
    java.lang.Runnable mPendingCheckForTap -> U
    java.lang.Runnable mTouchModeReset -> V
    int mTranscriptMode -> W
    int mCacheColorHint -> Z
    boolean mIsChildViewEnabled -> aa
    int mLastScrollState -> ab
    int mTouchSlop -> ac
    java.lang.Runnable mClearScrollingCache -> ad
    java.lang.Runnable mPositionScrollAfterLayout -> w
    int mMinimumVelocity -> ae
    int mMaximumVelocity -> af
    float mVelocityScale -> ag
    boolean[] mIsScrap -> x
    int mActivePointerId -> ah
    boolean mIsAttached -> y
    zrc.widget.Headable mZrcHeader -> ai
    zrc.widget.Footable mZrcFooter -> aj
    zrc.widget.ZrcListView$OnStartListener onRefreshStart -> ak
    zrc.widget.ZrcListView$OnStartListener onLoadMoreStart -> al
    zrc.widget.ZrcListView$OnScrollStateListener onScrollStateListener -> am
    int mScrollState -> an
    boolean showHeader -> z
    boolean isLoadingMore -> ao
    boolean isLoadMoreOn -> ap
    boolean isRefreshing -> aq
    int mFirstTopOffset -> A
    int mLastBottomOffset -> B
    float mDensity -> C
    java.lang.Runnable mResetRunnable -> ar
    int[] NOTHING -> D
    float mVerticalScrollFactor -> as
    void initAbsListView() -> l
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    boolean performItemClick(android.view.View,int,long) -> a
    void setSmoothScrollbarEnabled(boolean) -> setSmoothScrollbarEnabled
    void setOnScrollListener(zrc.widget.ZrcListView$OnScrollListener) -> setOnScrollListener
    void invokeOnItemScrollListener() -> a
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    void getFocusedRect(android.graphics.Rect) -> getFocusedRect
    void useDefaultSelector() -> m
    void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    void requestLayout() -> requestLayout
    void resetList() -> b
    int computeVerticalScrollExtent() -> computeVerticalScrollExtent
    int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    int computeVerticalScrollRange() -> computeVerticalScrollRange
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void layoutChildren() -> c
    void updateScrollIndicators() -> d
    int getListPaddingTop() -> getListPaddingTop
    int getListPaddingBottom() -> getListPaddingBottom
    int getListPaddingLeft() -> getListPaddingLeft
    int getListPaddingRight() -> getListPaddingRight
    android.view.View obtainView(int,boolean[]) -> a
    void positionSelector(int,android.view.View) -> a
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    int getLeftPaddingOffset() -> getLeftPaddingOffset
    int getTopPaddingOffset() -> getTopPaddingOffset
    int getRightPaddingOffset() -> getRightPaddingOffset
    int getBottomPaddingOffset() -> getBottomPaddingOffset
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    boolean touchModeDrawsInPressedState() -> e
    boolean shouldShowSelector() -> f
    void drawSelector(android.graphics.Canvas) -> a
    void setDrawSelectorOnTop(boolean) -> setDrawSelectorOnTop
    void setSelector(int) -> setSelector
    void setSelector(android.graphics.drawable.Drawable) -> setSelector
    android.graphics.drawable.Drawable getSelector() -> getSelector
    void updateSelectorState() -> g
    void drawableStateChanged() -> drawableStateChanged
    int[] onCreateDrawableState(int) -> onCreateDrawableState
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onCancelPendingInputEvents() -> onCancelPendingInputEvents
    void dispatchSetPressed(boolean) -> dispatchSetPressed
    int pointToPosition(int,int) -> a
    boolean startScrollIfNeeded(int,int) -> c
    void scrollIfNeeded(int,int) -> d
    void onTouchModeChanged(boolean) -> onTouchModeChanged
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onTouchDown(android.view.MotionEvent) -> a
    void onTouchMove(android.view.MotionEvent) -> b
    void onTouchUp(android.view.MotionEvent) -> c
    void onTouchCancel() -> n
    boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    float getVerticalScrollFactor() -> getVerticalScrollFactor
    void setScrollY(int) -> setScrollY
    void initOrResetVelocityTracker() -> o
    void initVelocityTrackerIfNotExists() -> p
    void recycleVelocityTracker() -> q
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void onSecondaryPointerUp(android.view.MotionEvent) -> d
    void addTouchables(java.util.ArrayList) -> addTouchables
    void reportScrollStateChange(int) -> a
    void scrollToAdjustViewsUpOrDown() -> h
    void setFriction(float) -> setFriction
    void setVelocityScale(float) -> setVelocityScale
    void createScrollingCache() -> r
    void clearScrollingCache() -> s
    boolean trackMotionScroll(int,int) -> b
    void offsetChildrenTopAndBottom(int) -> b
    int getHeaderViewsCount() -> getHeaderViewsCount
    int getFooterViewsCount() -> getFooterViewsCount
    void fillGap(boolean) -> a
    int findMotionRow(int) -> c
    void handleDataChanged() -> i
    int getDistance(android.graphics.Rect,android.graphics.Rect,int) -> a
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    zrc.widget.ZrcAbsListView$LayoutParams generateLayoutParams(android.util.AttributeSet) -> a
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    void setTranscriptMode(int) -> setTranscriptMode
    int getTranscriptMode() -> getTranscriptMode
    int getSolidColor() -> getSolidColor
    void setCacheColorHint(int) -> setCacheColorHint
    int getCacheColorHint() -> getCacheColorHint
    void setRecyclerListener(zrc.widget.ZrcAbsListView$RecyclerListener) -> setRecyclerListener
    void setOnRefreshStartListener(zrc.widget.ZrcListView$OnStartListener) -> setOnRefreshStartListener
    void setOnLoadMoreStartListener(zrc.widget.ZrcListView$OnStartListener) -> setOnLoadMoreStartListener
    void setOnScrollStateListener(zrc.widget.ZrcListView$OnScrollStateListener) -> setOnScrollStateListener
    void setRefreshSuccess(java.lang.String) -> setRefreshSuccess
    void setRefreshFail(java.lang.String) -> setRefreshFail
    void setRefreshDone(java.lang.String,int) -> a
    void setHeadable(zrc.widget.Headable) -> setHeadable
    void setFootable(zrc.widget.Footable) -> setFootable
    zrc.widget.Headable getHeadable() -> getHeadable
    zrc.widget.Footable getFootable() -> getFootable
    void setFirstTopOffset(int) -> setFirstTopOffset
    void setLastBottomOffset(int) -> setLastBottomOffset
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.view.View retrieveFromScrap(java.util.ArrayList,int) -> a
    void setAdapter(android.widget.Adapter) -> setAdapter
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    zrc.widget.Headable access$2(zrc.widget.ZrcAbsListView) -> a
    int access$3(zrc.widget.ZrcAbsListView) -> b
    void access$4(zrc.widget.ZrcAbsListView) -> c
    boolean access$5(zrc.widget.ZrcAbsListView) -> d
    boolean access$6(zrc.widget.ZrcAbsListView) -> e
    boolean access$7(zrc.widget.ZrcAbsListView) -> f
    zrc.widget.ZrcListView$OnStartListener access$8(zrc.widget.ZrcAbsListView) -> g
    void access$9(zrc.widget.ZrcAbsListView,boolean) -> a
    zrc.widget.Footable access$10(zrc.widget.ZrcAbsListView) -> h
    zrc.widget.ZrcListView$OnStartListener access$11(zrc.widget.ZrcAbsListView) -> i
    void access$12(zrc.widget.ZrcAbsListView,boolean) -> b
    void access$13(zrc.widget.ZrcAbsListView,android.view.View,boolean) -> a
    void access$14(zrc.widget.ZrcAbsListView,java.lang.Runnable) -> a
    void access$15(zrc.widget.ZrcAbsListView,boolean) -> c
    void access$16(zrc.widget.ZrcAbsListView,boolean) -> d
    zrc.widget.ZrcAbsListView$FlingRunnable access$17(zrc.widget.ZrcAbsListView) -> j
    java.lang.Runnable access$19(zrc.widget.ZrcAbsListView) -> k
zrc.widget.ZrcAbsListView$1 -> zrc.widget.d:
    zrc.widget.ZrcAbsListView this$0 -> a
    void run() -> run
zrc.widget.ZrcAbsListView$2 -> zrc.widget.e:
    zrc.widget.ZrcAbsListView this$0 -> a
    android.view.View val$child -> b
    zrc.widget.ZrcAbsListView$PerformClick val$performClick -> c
    void run() -> run
zrc.widget.ZrcAbsListView$3 -> zrc.widget.f:
    zrc.widget.ZrcAbsListView this$0 -> a
    void run() -> run
zrc.widget.ZrcAbsListView$5 -> zrc.widget.g:
    zrc.widget.ZrcAbsListView this$0 -> a
    zrc.widget.Headable val$zrcHeader -> b
    void run() -> run
zrc.widget.ZrcAbsListView$AdapterDataSetObserver -> zrc.widget.h:
    zrc.widget.ZrcAbsListView this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
zrc.widget.ZrcAbsListView$CheckForTap -> zrc.widget.i:
    zrc.widget.ZrcAbsListView this$0 -> a
    void run() -> run
zrc.widget.ZrcAbsListView$FlingRunnable -> zrc.widget.j:
    android.widget.Scroller mScroller -> b
    int mLastFlingY -> c
    zrc.widget.ZrcAbsListView this$0 -> a
    void start(int) -> a
    void startScroll(int,int,boolean) -> a
    void endFling() -> a
    boolean scrollToAdjustViewsUpOrDown() -> b
    void run() -> run
    android.widget.Scroller access$0(zrc.widget.ZrcAbsListView$FlingRunnable) -> a
zrc.widget.ZrcAbsListView$FlingRunnable$1 -> zrc.widget.k:
    zrc.widget.ZrcAbsListView$FlingRunnable this$1 -> a
    float getInterpolation(float) -> getInterpolation
zrc.widget.ZrcAbsListView$LayoutParams -> zrc.widget.ZrcAbsListView$LayoutParams:
    int viewType -> a
    boolean recycledHeaderFooter -> b
    boolean forceAdd -> c
    int scrappedFromPosition -> d
    long itemId -> e
zrc.widget.ZrcAbsListView$PerformClick -> zrc.widget.l:
    int mClickMotionPosition -> a
    zrc.widget.ZrcAbsListView this$0 -> b
    void run() -> run
zrc.widget.ZrcAbsListView$RecycleBin -> zrc.widget.m:
    zrc.widget.ZrcAbsListView$RecyclerListener mRecyclerListener -> b
    int mFirstActivePosition -> c
    android.view.View[] mActiveViews -> d
    java.util.ArrayList[] mScrapViews -> e
    int mViewTypeCount -> f
    java.util.ArrayList mCurrentScrap -> g
    java.util.ArrayList mSkippedScrap -> h
    android.support.v4.util.SparseArrayCompat mTransientStateViews -> i
    android.support.v4.util.LongSparseArray mTransientStateViewsById -> j
    zrc.widget.ZrcAbsListView this$0 -> a
    void setViewTypeCount(int) -> a
    void markChildrenDirty() -> a
    boolean shouldRecycleViewType(int) -> b
    void clear() -> b
    void fillActiveViews(int,int) -> a
    android.view.View getActiveView(int) -> c
    android.view.View getTransientStateView(int) -> d
    void clearTransientStateViews() -> c
    android.view.View getScrapView(int) -> e
    void addScrapView(android.view.View,int) -> a
    void removeSkippedScrap() -> d
    void scrapActiveViews() -> e
    void pruneScrapViews() -> f
    void setCacheColorHint(int) -> f
    void access$1(zrc.widget.ZrcAbsListView$RecycleBin,zrc.widget.ZrcAbsListView$RecyclerListener) -> a
zrc.widget.ZrcAbsListView$RecyclerListener -> zrc.widget.n:
    void onMovedToScrapHeap(android.view.View) -> a
zrc.widget.ZrcAbsListView$SavedState -> zrc.widget.ZrcAbsListView$SavedState:
    int mFirstPosition -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
    void access$1(zrc.widget.ZrcAbsListView$SavedState,int) -> a
    int access$2(zrc.widget.ZrcAbsListView$SavedState) -> a
zrc.widget.ZrcAbsListView$SavedState$1 -> zrc.widget.o:
    zrc.widget.ZrcAbsListView$SavedState createFromParcel(android.os.Parcel) -> a
    zrc.widget.ZrcAbsListView$SavedState[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
zrc.widget.ZrcAbsListView$WindowRunnnable -> zrc.widget.p:
    int mOriginalAttachCount -> a
    zrc.widget.ZrcAbsListView this$0 -> c
    void rememberWindowAttachCount() -> a
    boolean sameWindow() -> b
zrc.widget.ZrcAdapterView -> zrc.widget.ZrcAdapterView:
    int mFirstPosition -> E
    int mFirstTop -> F
    boolean mInLayout -> G
    zrc.widget.ZrcListView$OnItemClickListener mOnItemClickListener -> H
    zrc.widget.ZrcListView$OnItemLongClickListener mOnItemLongClickListener -> I
    boolean mDataChanged -> J
    android.view.View mEmptyView -> a
    int mItemCount -> K
    int mOldItemCount -> L
    boolean mDesiredFocusableState -> b
    boolean mDesiredFocusableInTouchModeState -> c
    boolean mBlockLayoutRequests -> M
    void setOnItemClickListener(zrc.widget.ZrcListView$OnItemClickListener) -> setOnItemClickListener
    zrc.widget.ZrcListView$OnItemClickListener getOnItemClickListener() -> getOnItemClickListener
    boolean performItemClick(android.view.View,int,long) -> a
    void setOnItemLongClickListener(zrc.widget.ZrcListView$OnItemLongClickListener) -> setOnItemLongClickListener
    zrc.widget.ZrcListView$OnItemLongClickListener getOnItemLongClickListener() -> getOnItemLongClickListener
    android.widget.Adapter getAdapter() -> getAdapter
    void setAdapter(android.widget.Adapter) -> setAdapter
    void addView(android.view.View) -> addView
    void addView(android.view.View,int) -> addView
    void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    void removeViewAt(int) -> removeViewAt
    void removeAllViews() -> removeAllViews
    int getCount() -> getCount
    int getFirstVisiblePosition() -> getFirstVisiblePosition
    int getLastVisiblePosition() -> getLastVisiblePosition
    void setEmptyView(android.view.View) -> setEmptyView
    android.view.View getEmptyView() -> getEmptyView
    void setFocusable(boolean) -> setFocusable
    void setFocusableInTouchMode(boolean) -> setFocusableInTouchMode
    void checkFocus() -> j
    void updateEmptyStatus(boolean) -> a
    void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean canAnimate() -> canAnimate
    boolean isSupportHardwareAccelerated() -> k
zrc.widget.ZrcAdapterView$AdapterDataSetObserver -> zrc.widget.q:
    zrc.widget.ZrcAdapterView this$0 -> b
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
zrc.widget.ZrcListView -> zrc.widget.ZrcListView:
    java.util.ArrayList mHeaderViewInfos -> P
    java.util.ArrayList mFooterViewInfos -> Q
    android.graphics.drawable.Drawable mDivider -> N
    int mDividerHeight -> O
    boolean mIsCacheColorOpaque -> R
    boolean mDividerIsOpaque -> S
    boolean mHeaderDividersEnabled -> T
    boolean mFooterDividersEnabled -> U
    boolean mAreAllItemsSelectable -> V
    boolean mItemsCanFocus -> W
    android.graphics.Rect mTempRect -> Z
    android.graphics.Paint mDividerPaint -> aa
    int mItemAnimForTopIn -> ab
    int mItemAnimForBottomIn -> ac
    int getMaxScrollAmount() -> getMaxScrollAmount
    void adjustViewsUp() -> m
    void addHeaderView(android.view.View,java.lang.Object,boolean) -> a
    void addHeaderView(android.view.View) -> a
    int getHeaderViewsCount() -> getHeaderViewsCount
    int getFooterViewsCount() -> getFooterViewsCount
    android.widget.ListAdapter getAdapter() -> getAdapter
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void resetList() -> b
    void clearRecycledState(java.util.ArrayList) -> a
    boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    void fillGap(boolean) -> a
    void fillDown(int,int,boolean) -> a
    void fillUp(int,int,boolean) -> b
    void fillFromTop(int) -> d
    void onMeasure(int,int) -> onMeasure
    void measureScrapChild(android.view.View,int,int) -> a
    boolean recycleOnMeasure() -> l
    int measureHeightOfChildren(int,int,int,int,int) -> a
    int findMotionRow(int) -> c
    void layoutChildren() -> c
    android.view.View makeAndAddView(int,int,boolean,int,boolean) -> a
    void setupChild(android.view.View,int,int,boolean,int,boolean,boolean) -> a
    boolean canAnimate() -> canAnimate
    void scrollListItemsBy(int) -> e
    android.view.View addViewAbove(android.view.View,int) -> a
    android.view.View addViewBelow(android.view.View,int) -> b
    void setItemsCanFocus(boolean) -> setItemsCanFocus
    boolean getItemsCanFocus() -> getItemsCanFocus
    boolean isOpaque() -> isOpaque
    void setCacheColorHint(int) -> setCacheColorHint
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void drawDivider(android.graphics.Canvas,android.graphics.Rect,int) -> a
    android.graphics.drawable.Drawable getDivider() -> getDivider
    void setDivider(android.graphics.drawable.Drawable) -> setDivider
    int getDividerHeight() -> getDividerHeight
    void setDividerHeight(int) -> setDividerHeight
    void setHeaderDividersEnabled(boolean) -> setHeaderDividersEnabled
    void setFooterDividersEnabled(boolean) -> setFooterDividersEnabled
    void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    void onFinishInflate() -> onFinishInflate
    void setItemAnimForTopIn(int) -> setItemAnimForTopIn
    void setItemAnimForBottomIn(int) -> setItemAnimForBottomIn
    void setSelection(int) -> setSelection
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void setRefreshFail(java.lang.String) -> setRefreshFail
    void removeAllViews() -> removeAllViews
    void onTouchModeChanged(boolean) -> onTouchModeChanged
    void setOnItemLongClickListener(zrc.widget.ZrcListView$OnItemLongClickListener) -> setOnItemLongClickListener
    void setFocusableInTouchMode(boolean) -> setFocusableInTouchMode
    void setOnItemClickListener(zrc.widget.ZrcListView$OnItemClickListener) -> setOnItemClickListener
    android.view.View getEmptyView() -> getEmptyView
    void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    void setHeadable(zrc.widget.Headable) -> setHeadable
    void setScrollY(int) -> setScrollY
    void setSelector(android.graphics.drawable.Drawable) -> setSelector
    void setSelector(int) -> setSelector
    boolean performItemClick(android.view.View,int,long) -> a
    void removeViewAt(int) -> removeViewAt
    int getTranscriptMode() -> getTranscriptMode
    int getFirstVisiblePosition() -> getFirstVisiblePosition
    int getLastVisiblePosition() -> getLastVisiblePosition
    int getListPaddingBottom() -> getListPaddingBottom
    int getListPaddingRight() -> getListPaddingRight
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void addTouchables(java.util.ArrayList) -> addTouchables
    int pointToPosition(int,int) -> a
    void setSmoothScrollbarEnabled(boolean) -> setSmoothScrollbarEnabled
    void setOnScrollListener(zrc.widget.ZrcListView$OnScrollListener) -> setOnScrollListener
    zrc.widget.Headable getHeadable() -> getHeadable
    void removeView(android.view.View) -> removeView
    void getFocusedRect(android.graphics.Rect) -> getFocusedRect
    android.graphics.drawable.Drawable getSelector() -> getSelector
    void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    int getListPaddingTop() -> getListPaddingTop
    boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    int getCount() -> getCount
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void onCancelPendingInputEvents() -> onCancelPendingInputEvents
    void offsetChildrenTopAndBottom(int) -> b
    void setDrawSelectorOnTop(boolean) -> setDrawSelectorOnTop
    void setFootable(zrc.widget.Footable) -> setFootable
    void setFirstTopOffset(int) -> setFirstTopOffset
    void setFriction(float) -> setFriction
    void setVelocityScale(float) -> setVelocityScale
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setEmptyView(android.view.View) -> setEmptyView
    void requestLayout() -> requestLayout
    void setOnScrollStateListener(zrc.widget.ZrcListView$OnScrollStateListener) -> setOnScrollStateListener
    void setFocusable(boolean) -> setFocusable
    void setTranscriptMode(int) -> setTranscriptMode
    void setRefreshSuccess(java.lang.String) -> setRefreshSuccess
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    void setOnRefreshStartListener(zrc.widget.ZrcListView$OnStartListener) -> setOnRefreshStartListener
    void setOnLoadMoreStartListener(zrc.widget.ZrcListView$OnStartListener) -> setOnLoadMoreStartListener
    int getListPaddingLeft() -> getListPaddingLeft
    android.widget.Adapter getAdapter() -> getAdapter
    zrc.widget.Footable getFootable() -> getFootable
    void setLastBottomOffset(int) -> setLastBottomOffset
    int getSolidColor() -> getSolidColor
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    void addView(android.view.View,int) -> addView
    void addView(android.view.View) -> addView
    int getCacheColorHint() -> getCacheColorHint
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    zrc.widget.ZrcAbsListView$LayoutParams generateLayoutParams(android.util.AttributeSet) -> a
zrc.widget.ZrcListView$FixedViewInfo -> zrc.widget.r:
    android.view.View view -> a
    java.lang.Object data -> b
    boolean isSelectable -> c
    zrc.widget.ZrcListView this$0 -> d
zrc.widget.ZrcListView$OnItemClickListener -> zrc.widget.s:
    void onItemClick(zrc.widget.ZrcListView,android.view.View,int,long) -> a
zrc.widget.ZrcListView$OnItemLongClickListener -> zrc.widget.t:
zrc.widget.ZrcListView$OnScrollListener -> zrc.widget.u:
    void onScrollStateChanged(zrc.widget.ZrcAbsListView,int) -> a
    void onScroll(zrc.widget.ZrcAbsListView,int,int,int) -> a
zrc.widget.ZrcListView$OnScrollStateListener -> zrc.widget.v:
    void onChange(int) -> a
zrc.widget.ZrcListView$OnStartListener -> zrc.widget.w:
    void onStart() -> a
